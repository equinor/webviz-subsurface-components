{"dash-components/src/components/ColorLegends/WebVizColorLegend.tsx":{"displayName":"WebVizColorLegend","description":"","props":{"colorTables":{"description":"","required":false,"defaultValue":{"value":"PropTypes.array","computed":false},"type":{"name":"arrayOf","value":{"name":"shape","value":{"name":{"description":"","required":true,"name":"string","raw":"string"},"discrete":{"description":"","required":true,"name":"bool","raw":"boolean"},"colors":{"description":"","required":true,"name":"arrayOf","value":{"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number, number, number]"},"raw":"[number, number, number, number][]"},"description":{"description":"","required":false,"name":"string","raw":"string"},"colorNaN":{"description":"","required":false,"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number, number]"},"colorBelow":{"description":"","required":false,"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number, number]"},"colorAbove":{"description":"","required":false,"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number, number]"}},"raw":"colorTablesObj"},"raw":"colorTablesArray"}},"min":{"description":"","required":false,"defaultValue":{"value":"PropTypes.number","computed":false},"type":{"name":"number","raw":"number"}},"max":{"description":"","required":false,"defaultValue":{"value":"PropTypes.number","computed":false},"type":{"name":"number","raw":"number"}},"title":{"description":"","required":false,"defaultValue":{"value":"PropTypes.string","computed":false},"type":{"name":"string","raw":"string"}},"colorName":{"description":"","required":false,"defaultValue":{"value":"PropTypes.string","computed":false},"type":{"name":"string","raw":"string"}},"horizontal":{"description":"","required":false,"defaultValue":{"value":"PropTypes.bool","computed":false},"type":{"name":"bool","raw":"boolean"}},"discreteData":{"description":"","required":false,"defaultValue":{"value":"PropTypes.any","computed":false},"type":{"name":"shape","value":{"objects":{"description":"","required":true,"name":"shape","value":{},"raw":"Record<string, [number[], number]>"}},"raw":"{ objects: Record<string, [number[], number]>; }"}},"reverseRange":{"description":"","required":false,"defaultValue":{"value":"PropTypes.bool","computed":false},"type":{"name":"bool","raw":"boolean"}},"isModal":{"description":"","required":false,"defaultValue":{"value":"PropTypes.bool","computed":false},"type":{"name":"bool","raw":"boolean"}},"isRangeShown":{"description":"","required":false,"defaultValue":{"value":"PropTypes.bool","computed":false},"type":{"name":"bool","raw":"boolean"}},"legendFontSize":{"description":"","required":false,"defaultValue":{"value":"PropTypes.number","computed":false},"type":{"name":"number","raw":"number"}},"tickFontSize":{"description":"","required":false,"defaultValue":{"value":"PropTypes.number","computed":false},"type":{"name":"number","raw":"number"}},"numberOfTicks":{"description":"","required":false,"defaultValue":{"value":"PropTypes.number","computed":false},"type":{"name":"number","raw":"number"}},"legendScaleSize":{"description":"","required":false,"defaultValue":{"value":"PropTypes.number","computed":false},"type":{"name":"number","raw":"number"}},"cssLegendStyles":{"description":"","required":false,"defaultValue":{"value":"PropTypes.objectOf(PropTypes.string)","computed":false},"type":{"name":"shape","value":{},"raw":"Record<string, unknown>"}},"openColorSelector":{"description":"","required":false,"defaultValue":{"value":"PropTypes.bool","computed":false},"type":{"name":"bool","raw":"boolean"}}},"isContext":false},"dash-components/src/components/ColorLegends/WebVizContinuousLegend.tsx":{"displayName":"WebVizContinuousLegend","description":"","props":{"min":{"description":"","required":false,"defaultValue":{"value":"PropTypes.number.isRequired","computed":false},"type":{"name":"number","raw":"number"}},"max":{"description":"","required":false,"defaultValue":{"value":"PropTypes.number.isRequired","computed":false},"type":{"name":"number","raw":"number"}},"title":{"description":"","required":false,"defaultValue":{"value":"PropTypes.string","computed":false},"type":{"name":"string","raw":"string"}},"cssLegendStyles":{"description":"","required":false,"defaultValue":{"value":"PropTypes.objectOf(PropTypes.string)","computed":false},"type":{"name":"objectOf","value":{"name":"shape","value":{},"raw":"unknown"},"raw":"Record<string, unknown>"}},"colorName":{"description":"","required":false,"defaultValue":{"value":"PropTypes.string.isRequired","computed":false},"type":{"name":"string","raw":"string"}},"horizontal":{"description":"","required":false,"defaultValue":{"value":"PropTypes.bool","computed":false},"type":{"name":"bool","raw":"boolean"}},"colorTables":{"description":"","required":false,"defaultValue":{"value":"PropTypes.array","computed":false},"type":{"name":"arrayOf","value":{"name":"shape","value":{"name":{"description":"","required":true,"name":"string","raw":"string"},"discrete":{"description":"","required":true,"name":"bool","raw":"boolean"},"colors":{"description":"","required":true,"name":"arrayOf","value":{"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number, number, number]"},"raw":"[number, number, number, number][]"},"description":{"description":"","required":false,"name":"string","raw":"string"},"colorNaN":{"description":"","required":false,"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number, number]"},"colorBelow":{"description":"","required":false,"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number, number]"},"colorAbove":{"description":"","required":false,"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number, number]"}},"raw":"colorTablesObj"},"raw":"colorTablesArray"}},"id":{"description":"","required":false,"defaultValue":{"value":"PropTypes.string","computed":false},"type":{"name":"string","raw":"string"}},"isRangeShown":{"description":"","required":false,"defaultValue":{"value":"PropTypes.bool","computed":false},"type":{"name":"bool","raw":"boolean"}},"legendFontSize":{"description":"","required":false,"defaultValue":{"value":"PropTypes.number","computed":false},"type":{"name":"number","raw":"number"}},"tickFontSize":{"description":"","required":false,"defaultValue":{"value":"PropTypes.number","computed":false},"type":{"name":"number","raw":"number"}},"numberOfTicks":{"description":"","required":false,"defaultValue":{"value":"PropTypes.number","computed":false},"type":{"name":"number","raw":"number"}},"legendScaleSize":{"description":"","required":false,"defaultValue":{"value":"PropTypes.number","computed":false},"type":{"name":"number","raw":"number"}}},"isContext":false},"dash-components/src/components/ColorLegends/WebVizDiscreteLegend.tsx":{"displayName":"WebVizDiscreteLegend","description":"","props":{"discreteData":{"description":"","required":false,"defaultValue":{"value":"PropTypes.any.isRequired","computed":false},"type":{"name":"shape","value":{"objects":{"description":"","required":true,"name":"objectOf","value":{"name":"arrayOf","value":{"name":"arrayOf","value":{"name":"number","raw":"number"},"raw":"number[]"},"raw":"[number[], number]"},"raw":"Record<string, [number[], number]>"}},"raw":"{ objects: Record<string, [number[], number]>; }"}},"title":{"description":"","required":false,"defaultValue":{"value":"PropTypes.string","computed":false},"type":{"name":"string","raw":"string"}},"cssLegendStyles":{"description":"","required":false,"defaultValue":{"value":"PropTypes.objectOf(PropTypes.string)","computed":false},"type":{"name":"objectOf","value":{"name":"shape","value":{},"raw":"unknown"},"raw":"Record<string, unknown>"}},"colorName":{"description":"","required":false,"defaultValue":{"value":"PropTypes.string.isRequired","computed":false},"type":{"name":"string","raw":"string"}},"colorTables":{"description":"","required":false,"defaultValue":{"value":"PropTypes.oneOfType([PropTypes.string, PropTypes.array])","computed":false},"type":{"name":"union","value":[{"name":"string","raw":"string"}],"raw":"string | colorTablesArray"}},"horizontal":{"description":"","required":false,"defaultValue":{"value":"PropTypes.bool","computed":false},"type":{"name":"bool","raw":"boolean"}}},"isContext":false},"dash-components/src/components/GroupTree/GroupTree.jsx":{"description":"","displayName":"GroupTree","methods":[],"props":{"id":{"type":{"name":"string"},"required":true,"description":"The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app."},"data":{"type":{"name":"arrayOf","value":{"name":"custom","raw":"DatedTreePropTypes"}},"required":false,"description":"Array of JSON objects describing group tree data."},"edge_metadata_list":{"type":{"name":"custom","raw":"EdgeMetadataPropTypes"},"required":false,"description":"Arrays of metadata. Used in drop down selectors and tree visualization."},"node_metadata_list":{"type":{"name":"custom","raw":"NodeMetadataPropTypes"},"required":false,"description":""}}},"dash-components/src/components/HistoryMatch/HistoryMatch.jsx":{"description":"","displayName":"HistoryMatch","methods":[],"props":{"id":{"type":{"name":"string"},"required":true,"description":""},"height":{"type":{"name":"number"},"required":false,"description":"","defaultValue":{"value":"800","computed":false}},"data":{"type":{"name":"object"},"required":false,"description":""}}},"dash-components/src/components/LeafletMap/LeafletMap.jsx":{"description":"","displayName":"LeafletMap","methods":[{"name":"setEvents","docblock":null,"modifiers":[],"params":[{"name":"map","type":null}],"returns":null},{"name":"getMap","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"setPropsExist","docblock":null,"modifiers":[],"params":[{"name":"value","type":null}],"returns":null},{"name":"drawLayerAdd","docblock":null,"modifiers":[],"params":[{"name":"newLayers","type":null}],"returns":null},{"name":"drawLayerDelete","docblock":null,"modifiers":[],"params":[{"name":"layerTypes","type":null}],"returns":null},{"name":"syncedDrawLayerAdd","docblock":null,"modifiers":[],"params":[{"name":"newLayers","type":null}],"returns":null},{"name":"syncedDrawLayerDelete","docblock":null,"modifiers":[],"params":[{"name":"layerTypes","type":null},{"name":"shouldRedraw","type":null}],"returns":null},{"name":"redrawAllSyncedMaps","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"setFocucedImageLayer","docblock":"@param {HTMLCanvasElement} onScreenCanvas","modifiers":[],"params":[{"name":"layer"}],"returns":null,"description":null},{"name":"setMode","docblock":"@param {String} mode\ncan be \"editing\" or null","modifiers":[],"params":[{"name":"newMode"}],"returns":null,"description":null}],"props":{"id":{"type":{"name":"string"},"required":true,"description":"The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app."},"layers":{"type":{"name":"array"},"required":false,"description":"The layers","defaultValue":{"value":"[]","computed":false}},"setProps":{"type":{"name":"func"},"required":false,"description":"For reacting to changes in controls"},"mouseCoords":{"type":{"name":"shape","value":{"position":{"name":"string","required":false}}},"required":false,"description":"Mouse properties configuration"},"scaleY":{"type":{"name":"shape","value":{"scaleY":{"name":"number","required":false},"maxScaleY":{"name":"number","required":false},"minScaleY":{"name":"number","required":false},"position":{"name":"string","required":false}}},"required":false,"description":"ScaleY is a configuration for creating a slider for scaling the Y-axis."},"switch":{"type":{"name":"shape","value":{"value":{"name":"bool","required":false},"disabled":{"name":"bool","required":false},"position":{"name":"string","required":false},"label":{"name":"string","required":false}}},"required":false,"description":"Switch is a configuration for creating a switch-toggle."},"drawTools":{"type":{"name":"shape","value":{"drawMarker":{"name":"bool","required":false},"drawPolygon":{"name":"bool","required":false},"drawPolyline":{"name":"bool","required":false},"position":{"name":"string","required":false}}},"required":false,"description":"DrawTools is a configuration for enabling drawing of polylines and areas."},"colorBar":{"type":{"name":"shape","value":{"position":{"name":"string","required":false}}},"required":false,"description":"ColorBar is a box that displays the colorScale."},"unitScale":{"type":{"name":"shape","value":{"position":{"name":"string","required":false}}},"required":false,"description":"UnitScale is a box that displays the the current unit scale on the map."},"center":{"type":{"name":"array"},"required":false,"description":""},"defaultBounds":{"type":{"name":"array"},"required":false,"description":""},"zoom":{"type":{"name":"number"},"required":false,"description":""},"minZoom":{"type":{"name":"number"},"required":false,"description":""},"maxZoom":{"type":{"name":"number"},"required":false,"description":""},"crs":{"type":{"name":"string"},"required":false,"description":""},"syncedMaps":{"type":{"name":"array"},"required":false,"description":"Ids of other LayeredMap instances that should be synced with this instance","defaultValue":{"value":"[]","computed":false}},"syncDrawings":{"type":{"name":"bool"},"required":false,"description":"Boolean deciding whether or not to sync drawings between maps"},"updateMode":{"type":{"name":"string"},"required":false,"description":"Allows to choose between replacing the layers or updating them"},"autoScaleMap":{"type":{"name":"bool"},"required":false,"description":"autoScaleMap makes the map listen for changes in width and height and automatically recalculates\nthe map dimensions when changes occur."},"polyline_points":{"type":{"name":"array"},"required":false,"description":"Dash provided prop that returns the coordinates of the edited or clicked polyline"},"polygon_points":{"type":{"name":"array"},"required":false,"description":"Dash provided prop that returns the coordinates of the edited or clicked polygon"},"marker_point":{"type":{"name":"array"},"required":false,"description":"Dash provided prop that returns the coordinates of the edited or clicked marker"},"click_position":{"type":{"name":"array"},"required":false,"description":"Map coordinates of a mouse click"},"clicked_shape":{"type":{"name":"object"},"required":false,"description":"Shape clicked on JSON format"}}},"dash-components/src/components/Map/Map.jsx":{"description":"","displayName":"Map","methods":[],"props":{"id":{"type":{"name":"string"},"required":true,"description":"The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app."},"data":{"type":{"name":"object"},"required":true,"description":"The data the Map component should render (JSON format)."},"height":{"type":{"name":"number"},"required":false,"description":"The height of the Map component","defaultValue":{"value":"800","computed":false}},"layerNames":{"type":{"name":"arrayOf","value":{"name":"string"}},"required":false,"description":"The name of individual layers","defaultValue":{"value":"[]","computed":false}}}},"dash-components/src/components/Morris/Morris.jsx":{"description":"","displayName":"Morris","methods":[],"props":{"id":{"type":{"name":"string"},"required":true,"description":""},"parameter":{"type":{"name":"string"},"required":false,"description":""},"output":{"type":{"name":"arrayOf","value":{"name":"object"}},"required":false,"description":""},"parameters":{"type":{"name":"arrayOf","value":{"name":"object"}},"required":false,"description":""},"height":{"type":{"name":"number"},"required":false,"description":"","defaultValue":{"value":"800","computed":false}}}},"dash-components/src/components/PriorPosteriorDistribution/PriorPosteriorDistribution.jsx":{"description":"","displayName":"PriorPosteriorDistribution","methods":[],"props":{"id":{"type":{"name":"string"},"required":true,"description":""},"height":{"type":{"name":"number"},"required":false,"description":"","defaultValue":{"value":"700","computed":false}},"data":{"type":{"name":"object"},"required":false,"description":"","defaultValue":{"value":"{ iterations: [], labels: [], values: [] }","computed":false}}}},"dash-components/src/components/ReadoutComponent/ReadoutComponent.tsx":{"displayName":"ReadoutComponent","description":"","props":{"viewId":{"description":"","required":true,"type":{"name":"string","raw":"string"}},"pickingInfoPerView":{"description":"","required":true,"type":{"name":"shape","value":{},"raw":"PickingInfoPerView"}}},"isContext":false},"dash-components/src/components/SubsurfaceViewer/SubsurfaceViewer.tsx":{"displayName":"SubsurfaceViewer","description":"","props":{"layers":{"description":"Array of externally created layers or layer definition records or JSON strings.\nAdd '@@typedArraySupport' : true in a layer definition in order to\nuse typed arrays as inputs.","required":false,"type":{"name":"arrayOf","value":{"name":"any","raw":"TLayerDefinition"},"raw":"TLayerDefinition[]"}},"setProps":{"description":"","required":false,"type":{"name":"func","raw":"(data: Record<string, unknown>) => void"}},"id":{"description":"The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.","required":true,"type":{"name":"string","raw":"string"}},"resources":{"description":"Resource dictionary made available in the DeckGL specification as an enum.\nThe values can be accessed like this: `\"@@#resources.resourceId\"`, where\n`resourceId` is the key in the `resources` dict. For more information,\nsee the DeckGL documentation on enums in the json spec:\nhttps://deck.gl/docs/api-reference/json/conversion-reference#enumerations-and-using-the--prefix","required":false,"type":{"name":"shape","value":{},"raw":"Record<string, unknown>"}},"bounds":{"description":"Coordinate boundary for the view defined as [left, bottom, right, top].\nShould be used for 2D view only.","required":false,"type":{"name":"any","raw":"BoundingBox2D | BoundsAccessor"}},"cameraPosition":{"description":"Camera state for the view defined as a ViewStateType.\nShould be used for 3D view only.\nIf the zoom is given as a 3D bounding box, the camera state is computed to\ndisplay the full box.","required":false,"type":{"name":"shape","value":{"target":{"description":"","required":true,"name":"any","raw":"Point2D | Point3D"},"zoom":{"description":"","required":true,"name":"union","value":[{"name":"number","raw":"number"}],"raw":"number | Point2D | BoundingBox3D"},"rotationX":{"description":"","required":true,"name":"number","raw":"number"},"rotationOrbit":{"description":"","required":true,"name":"number","raw":"number"},"minZoom":{"description":"","required":false,"name":"number","raw":"number"},"maxZoom":{"description":"","required":false,"name":"number","raw":"number"},"transitionDuration":{"description":"","required":false,"name":"number","raw":"number"}},"raw":"ViewStateType"}},"triggerHome":{"description":"If changed will reset view settings (bounds or camera) to default position.","required":false,"type":{"name":"number","raw":"number"}},"views":{"description":"Views configuration for map. If not specified, all the layers will be\ndisplayed in a single 2D viewport","required":false,"type":{"name":"shape","value":{"layout":{"description":"Layout for viewport in specified as [row, column].","required":true,"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number]"},"marginPixels":{"description":"Number of pixels used for the margin in matrix mode.\nDefaults to 0.","required":false,"name":"number","raw":"number"},"showLabel":{"description":"Show views label.","required":false,"name":"bool","raw":"boolean"},"viewports":{"description":"Layers configuration for multiple viewports.","required":true,"name":"arrayOf","value":{"name":"shape","value":{"id":{"description":"Viewport id","required":true,"name":"string","raw":"string"},"name":{"description":"Viewport name","required":false,"name":"string","raw":"string"},"show3D":{"description":"If true, displays map in 3D view, default is 2D view (false)","required":false,"name":"bool","raw":"boolean"},"layerIds":{"description":"Layers to be displayed on viewport","required":false,"name":"arrayOf","value":{"name":"string","raw":"string"},"raw":"string[]"},"target":{"description":"","required":false,"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number]"},"zoom":{"description":"","required":false,"name":"number","raw":"number"},"rotationX":{"description":"","required":false,"name":"number","raw":"number"},"rotationOrbit":{"description":"","required":false,"name":"number","raw":"number"},"verticalScale":{"description":"","required":false,"name":"number","raw":"number"},"isSync":{"description":"","required":false,"name":"bool","raw":"boolean"}},"raw":"ViewportType"},"raw":"ViewportType[]"}},"raw":"ViewsType"}},"coords":{"description":"Parameters for the InfoCard component","required":false,"type":{"name":"shape","value":{"visible":{"description":"","required":false,"name":"bool","raw":"boolean"},"multiPicking":{"description":"","required":false,"name":"bool","raw":"boolean"},"pickDepth":{"description":"","required":false,"name":"number","raw":"number"}},"raw":"{ visible?: boolean; multiPicking?: boolean; pickDepth?: number; }"}},"scale":{"description":"Parameters for the Distance Scale component","required":false,"type":{"name":"shape","value":{"visible":{"description":"","required":false,"name":"bool","raw":"boolean"},"incrementValue":{"description":"","required":false,"name":"number","raw":"number"},"widthPerUnit":{"description":"","required":false,"name":"number","raw":"number"},"cssStyle":{"description":"","required":false,"name":"objectOf","value":{"name":"shape","value":{},"raw":"unknown"},"raw":"Record<string, unknown>"}},"raw":"{ visible?: boolean; incrementValue?: number; widthPerUnit?: number; cssStyle?: Record<string, unknown>; }"}},"coordinateUnit":{"description":"","required":false,"type":{"name":"enum","value":[{"value":"'mm'","computed":false},{"value":"'cm'","computed":false},{"value":"'m'","computed":false},{"value":"'km'","computed":false},{"value":"'in'","computed":false},{"value":"'ft-us'","computed":false},{"value":"'ft'","computed":false},{"value":"'yd'","computed":false},{"value":"'mi'","computed":false},{"value":"'mm2'","computed":false},{"value":"'cm2'","computed":false},{"value":"'m2'","computed":false},{"value":"'ha'","computed":false},{"value":"'km2'","computed":false},{"value":"'in2'","computed":false},{"value":"'ft2'","computed":false},{"value":"'ac'","computed":false},{"value":"'mi2'","computed":false},{"value":"'mcg'","computed":false},{"value":"'mg'","computed":false},{"value":"'g'","computed":false},{"value":"'kg'","computed":false},{"value":"'oz'","computed":false},{"value":"'lb'","computed":false},{"value":"'mt'","computed":false},{"value":"'t'","computed":false},{"value":"'mm3'","computed":false},{"value":"'cm3'","computed":false},{"value":"'ml'","computed":false},{"value":"'l'","computed":false},{"value":"'kl'","computed":false},{"value":"'m3'","computed":false},{"value":"'km3'","computed":false},{"value":"'tsp'","computed":false},{"value":"'Tbs'","computed":false},{"value":"'in3'","computed":false},{"value":"'fl-oz'","computed":false},{"value":"'cup'","computed":false},{"value":"'pnt'","computed":false},{"value":"'qt'","computed":false},{"value":"'gal'","computed":false},{"value":"'ft3'","computed":false},{"value":"'yd3'","computed":false},{"value":"'mm3/s'","computed":false},{"value":"'cm3/s'","computed":false},{"value":"'ml/s'","computed":false},{"value":"'cl/s'","computed":false},{"value":"'dl/s'","computed":false},{"value":"'l/s'","computed":false},{"value":"'l/min'","computed":false},{"value":"'l/h'","computed":false},{"value":"'kl/s'","computed":false},{"value":"'kl/min'","computed":false},{"value":"'kl/h'","computed":false},{"value":"'m3/s'","computed":false},{"value":"'m3/min'","computed":false},{"value":"'m3/h'","computed":false},{"value":"'km3/s'","computed":false},{"value":"'tsp/s'","computed":false},{"value":"'Tbs/s'","computed":false},{"value":"'in3/s'","computed":false},{"value":"'in3/min'","computed":false},{"value":"'in3/h'","computed":false},{"value":"'fl-oz/s'","computed":false},{"value":"'fl-oz/min'","computed":false},{"value":"'fl-oz/h'","computed":false},{"value":"'cup/s'","computed":false},{"value":"'pnt/s'","computed":false},{"value":"'pnt/min'","computed":false},{"value":"'pnt/h'","computed":false},{"value":"'qt/s'","computed":false},{"value":"'gal/s'","computed":false},{"value":"'gal/min'","computed":false},{"value":"'gal/h'","computed":false},{"value":"'ft3/s'","computed":false},{"value":"'ft3/min'","computed":false},{"value":"'ft3/h'","computed":false},{"value":"'yd3/s'","computed":false},{"value":"'yd3/min'","computed":false},{"value":"'yd3/h'","computed":false},{"value":"'C'","computed":false},{"value":"'F'","computed":false},{"value":"'K'","computed":false},{"value":"'R'","computed":false},{"value":"'ns'","computed":false},{"value":"'mu'","computed":false},{"value":"'ms'","computed":false},{"value":"'s'","computed":false},{"value":"'min'","computed":false},{"value":"'h'","computed":false},{"value":"'d'","computed":false},{"value":"'week'","computed":false},{"value":"'month'","computed":false},{"value":"'year'","computed":false},{"value":"'Hz'","computed":false},{"value":"'mHz'","computed":false},{"value":"'kHz'","computed":false},{"value":"'MHz'","computed":false},{"value":"'GHz'","computed":false},{"value":"'THz'","computed":false},{"value":"'rpm'","computed":false},{"value":"'deg/s'","computed":false},{"value":"'rad/s'","computed":false},{"value":"'m/s'","computed":false},{"value":"'km/h'","computed":false},{"value":"'m/h'","computed":false},{"value":"'knot'","computed":false},{"value":"'ft/s'","computed":false},{"value":"'s/m'","computed":false},{"value":"'min/km'","computed":false},{"value":"'s/ft'","computed":false},{"value":"'min/mi'","computed":false},{"value":"'Pa'","computed":false},{"value":"'hPa'","computed":false},{"value":"'kPa'","computed":false},{"value":"'MPa'","computed":false},{"value":"'bar'","computed":false},{"value":"'torr'","computed":false},{"value":"'psi'","computed":false},{"value":"'ksi'","computed":false},{"value":"'b'","computed":false},{"value":"'Kb'","computed":false},{"value":"'Mb'","computed":false},{"value":"'Gb'","computed":false},{"value":"'Tb'","computed":false},{"value":"'B'","computed":false},{"value":"'KB'","computed":false},{"value":"'MB'","computed":false},{"value":"'GB'","computed":false},{"value":"'TB'","computed":false},{"value":"'lx'","computed":false},{"value":"'ft-cd'","computed":false},{"value":"'ppm'","computed":false},{"value":"'ppb'","computed":false},{"value":"'ppt'","computed":false},{"value":"'ppq'","computed":false},{"value":"'V'","computed":false},{"value":"'mV'","computed":false},{"value":"'kV'","computed":false},{"value":"'A'","computed":false},{"value":"'mA'","computed":false},{"value":"'kA'","computed":false},{"value":"'W'","computed":false},{"value":"'mW'","computed":false},{"value":"'kW'","computed":false},{"value":"'MW'","computed":false},{"value":"'GW'","computed":false},{"value":"'VA'","computed":false},{"value":"'mVA'","computed":false},{"value":"'kVA'","computed":false},{"value":"'MVA'","computed":false},{"value":"'GVA'","computed":false},{"value":"'VAR'","computed":false},{"value":"'mVAR'","computed":false},{"value":"'kVAR'","computed":false},{"value":"'MVAR'","computed":false},{"value":"'GVAR'","computed":false},{"value":"'Wh'","computed":false},{"value":"'mWh'","computed":false},{"value":"'kWh'","computed":false},{"value":"'MWh'","computed":false},{"value":"'GWh'","computed":false},{"value":"'J'","computed":false},{"value":"'kJ'","computed":false},{"value":"'VARh'","computed":false},{"value":"'mVARh'","computed":false},{"value":"'kVARh'","computed":false},{"value":"'MVARh'","computed":false},{"value":"'GVARH'","computed":false},{"value":"'deg'","computed":false},{"value":"'rad'","computed":false},{"value":"'grad'","computed":false},{"value":"'arcmin'","computed":false},{"value":"'arcsec'","computed":false}],"raw":"Unit"}},"colorTables":{"description":"Prop containing color table data","required":false,"type":{"name":"arrayOf","value":{"name":"shape","value":{"name":{"description":"","required":true,"name":"string","raw":"string"},"discrete":{"description":"","required":true,"name":"bool","raw":"boolean"},"colors":{"description":"","required":true,"name":"arrayOf","value":{"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number, number, number]"},"raw":"[number, number, number, number][]"},"description":{"description":"","required":false,"name":"string","raw":"string"},"colorNaN":{"description":"","required":false,"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number, number]"},"colorBelow":{"description":"","required":false,"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number, number]"},"colorAbove":{"description":"","required":false,"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number, number]"}},"raw":"colorTablesObj"},"raw":"colorTablesArray"}},"editedData":{"description":"","required":false,"type":{"name":"objectOf","value":{"name":"shape","value":{},"raw":"unknown"},"raw":"Record<string, unknown>"}},"checkDatafileSchema":{"description":"Validate JSON datafile against schema","required":false,"type":{"name":"bool","raw":"boolean"}},"onMouseEvent":{"description":"For get mouse events","required":false,"type":{"name":"shape","value":{},"raw":"EventCallback"}},"getCameraPosition":{"description":"","required":false,"type":{"name":"func","raw":"(input: ViewStateType) => void"}},"onRenderingProgress":{"description":"Will be called while layers have rendered data.\n@,param,progress, ,value between 0 and 100.","required":false,"type":{"name":"func","raw":"(progress: number) => void"}},"onDragStart":{"description":"","required":false,"type":{"name":"func","raw":"(info: { color: Uint8Array; layer: Layer<{}>; sourceLayer?: Layer<{}>; viewport?: Viewport; index: number; picked: boolean; object?: any; x: number; y: number; pixel?: [...]; coordinate?: number[]; devicePixel?: [...]; pixelRatio: number; }, event: MjolnirGestureEvent) => void"}},"onDragEnd":{"description":"","required":false,"type":{"name":"func","raw":"(info: { color: Uint8Array; layer: Layer<{}>; sourceLayer?: Layer<{}>; viewport?: Viewport; index: number; picked: boolean; object?: any; x: number; y: number; pixel?: [...]; coordinate?: number[]; devicePixel?: [...]; pixelRatio: number; }, event: MjolnirGestureEvent) => void"}},"onDrag":{"description":"","required":false,"type":{"name":"func","raw":"(info: { color: Uint8Array; layer: Layer<{}>; sourceLayer?: Layer<{}>; viewport?: Viewport; index: number; picked: boolean; object?: any; x: number; y: number; pixel?: [...]; coordinate?: number[]; devicePixel?: [...]; pixelRatio: number; }, event: MjolnirGestureEvent) => void"}},"getCursor":{"description":"Override default cursor with a callback.\n@,param,cursorState\n@,returns,cursor string\n@,default,\"grabbing\" when dragging, \"default\" otherwise\n@,see,https,://developer.mozilla.org/en-US/docs/Web/CSS/cursor","required":false,"type":{"name":"func","raw":"(state: CursorState) => string"}},"triggerResetMultipleWells":{"description":"","required":false,"type":{"name":"number","raw":"number"}},"selection":{"description":"Range selection of the current well","required":false,"type":{"name":"shape","value":{"well":{"description":"","required":true,"name":"string","raw":"string"},"selection":{"description":"","required":true,"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number]"}},"raw":"{ well: string; selection: [number, number]; }"}},"lights":{"description":"","required":false,"type":{"name":"shape","value":{"headLight":{"description":"","required":false,"name":"shape","value":{"intensity":{"description":"","required":true,"name":"number","raw":"number"},"color":{"description":"","required":false,"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number, number]"}},"raw":"{ intensity: number; color?: [number, number, number]; }"},"ambientLight":{"description":"","required":false,"name":"shape","value":{"intensity":{"description":"","required":true,"name":"number","raw":"number"},"color":{"description":"","required":false,"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number, number]"}},"raw":"{ intensity: number; color?: [number, number, number]; }"},"pointLights":{"description":"","required":false,"name":"tuple","elements":[{"name":"shape","value":{"intensity":{"description":"","required":true,"name":"number","raw":"number"},"position":{"description":"","required":true,"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number, number]"},"color":{"description":"","required":false,"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number, number]"}},"raw":"{ intensity: number; position: [number, number, number]; color?: [number, number, number]; }"}],"raw":"[{ intensity: number; position: [number, number, number]; color?: [number, number, number]; }]"},"directionalLights":{"description":"","required":false,"name":"tuple","elements":[{"name":"shape","value":{"intensity":{"description":"","required":true,"name":"number","raw":"number"},"direction":{"description":"","required":true,"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number, number]"},"color":{"description":"","required":false,"name":"tuple","elements":[{"name":"number","raw":"number"},{"name":"number","raw":"number"},{"name":"number","raw":"number"}],"raw":"[number, number, number]"}},"raw":"{ intensity: number; direction: [number, number, number]; color?: [number, number, number]; }"}],"raw":"[{ intensity: number; direction: [number, number, number]; color?: [number, number, number]; }]"}},"raw":"LightsType"}},"children":{"description":"","required":false,"type":{"name":"node","raw":"ReactNode"}},"getTooltip":{"description":"Override default tooltip with a callback.","required":false,"type":{"name":"shape","value":{},"raw":"TooltipCallback"}},"verticalScale":{"description":"A vertical scale factor, used to scale items in the view vertically","required":false,"type":{"name":"number","raw":"number"}},"innerRef":{"description":"A reference to a wrapped div element, which can be used to attach\nan event listener.","required":false,"type":{"name":"any","raw":"Ref<HTMLElement>"}},"pickingRadius":{"description":"Extra pixels around the pointer to include while picking.","required":false,"type":{"name":"number","raw":"number"}},"deckGlRef":{"description":"The reference to the deck.gl instance.","required":false,"type":{"name":"any","raw":"ForwardedRef<DeckGLRef<null>>"}}},"isContext":false},"dash-components/src/components/VectorCalculator/VectorCalculator.jsx":{"description":"VectorCalculator is a component that allows to calculate new vectors by creating a mathematical expression\nbased existing vectors.\n\nNew calculated vectors are created by writing a mathematical equation with single character variables,\nwhere each variable is assigned a vector from the set of existing vectors.\n\nThe component provides a list of valid expressions which can be used externally to calculate the wanted\nvector data.\n\nThe component can handle validation of the mathematical equations internally or externally. External\nvalidation can be utilized to obtain coherent parsing in the component and the user.","displayName":"VectorCalculator","methods":[],"props":{"id":{"type":{"name":"string"},"required":true,"description":"The ID used to identify this component in Dash callbacks."},"vectors":{"type":{"name":"array"},"required":true,"description":"Existing vectors for vector selector"},"expressions":{"type":{"name":"arrayOf","value":{"name":"shape","value":{"name":{"name":"string","required":true},"expression":{"name":"string","required":true},"id":{"name":"string","required":true},"variableVectorMap":{"name":"arrayOf","value":{"name":"shape","value":{"variableName":{"name":"string","required":true},"vectorName":{"name":"arrayOf","value":{"name":"string"},"required":true}}},"required":true},"description":{"name":"string","required":false},"isValid":{"name":"bool","required":true},"isDeletable":{"name":"bool","required":true}}}},"required":true,"description":"Pre-defined vector calculator expressions.\nEach expression consist of an expression name, mathematical expression string with variables\nand a map of character variables and the corresponding vector name."},"isDashControlled":{"type":{"name":"bool"},"required":false,"description":"Set True when component is utilized by Dash plugin.\nWhen controlled in Dash, the user must provide an external expression parser responsible for\nvalidation of the active mathematical expression and provide the parsing data for the\nexternalParseData prop.\nIf set to false, an internal JS-parser library is utilized for validation of the mathematical\nexpressions.","defaultValue":{"value":"false","computed":false}},"maxExpressionDescriptionLength":{"type":{"name":"number"},"required":false,"description":"Set maximal number of characters for expression description text","defaultValue":{"value":"50","computed":false}},"externalParseData":{"type":{"name":"shape","value":{"expression":{"name":"string","required":true},"id":{"name":"string","required":true},"variables":{"name":"arrayOf","value":{"name":"string"},"required":true},"isValid":{"name":"bool","required":true},"message":{"name":"string","required":true}}},"required":false,"description":"Data for external parsing of mathematical expression"},"setProps":{"type":{"name":"func"},"required":false,"description":"Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."}}},"dash-components/src/components/VectorSelector/VectorSelector.jsx":{"description":"","displayName":"VectorSelector","methods":[],"props":{"id":{"type":{"name":"string"},"required":true,"description":"The ID used to identify this component in Dash callbacks."},"maxNumSelectedNodes":{"type":{"name":"number"},"required":false,"description":"The max number of tags that can be selected.","defaultValue":{"value":"-1","computed":false}},"delimiter":{"type":{"name":"string"},"required":false,"description":"The delimiter used to separate input levels.","defaultValue":{"value":"\":\"","computed":false}},"numMetaNodes":{"type":{"name":"number"},"required":false,"description":"The number of meta data used. Meta data is not shown as text in the final tag but used\nto set properties like border color or icons.","defaultValue":{"value":"0","computed":false}},"data":{"type":{"name":"array"},"required":true,"description":"A JSON object holding all tags."},"label":{"type":{"name":"string"},"required":false,"description":"A label that will be printed when this component is rendered."},"showSuggestions":{"type":{"name":"bool"},"required":false,"description":"Stating of suggestions should be shown or not.","defaultValue":{"value":"true","computed":false}},"setProps":{"type":{"name":"func"},"required":false,"description":"Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."},"selectedTags":{"type":{"name":"arrayOf","value":{"name":"string"}},"required":false,"description":"Selected tags.","defaultValue":{"value":"[]","computed":false}},"placeholder":{"type":{"name":"string"},"required":false,"description":"Placeholder text for input field.","defaultValue":{"value":"\"Add new tag...\"","computed":false}},"numSecondsUntilSuggestionsAreShown":{"type":{"name":"number"},"required":false,"description":"Number of seconds until suggestions are shown.","defaultValue":{"value":"0.5","computed":false}},"lineBreakAfterTag":{"type":{"name":"bool"},"required":false,"description":"If set to true, tags will be separated by a line break.","defaultValue":{"value":"false","computed":false}},"caseInsensitiveMatching":{"type":{"name":"bool"},"required":false,"description":"Set to true if case-wise incorrect values should be accepted anyways."},"useBetaFeatures":{"type":{"name":"bool"},"required":false,"description":"Set to true to enable beta features."},"customVectorDefinitions":{"type":{"name":"objectOf","value":{"name":"shape","value":{"type":{"name":"string","required":true},"description":{"name":"string","required":true}}}},"required":false,"description":"An object containing custom vector type definitions.","defaultValue":{"value":"{}","computed":false}},"persistence":{"type":{"name":"union","value":[{"name":"bool"},{"name":"string"},{"name":"number"}]},"required":false,"description":"Used to allow user interactions in this component to be persisted when\nthe component - or the page - is refreshed. If `persisted` is truthy and\nhasn't changed from its previous value, a `value` that the user has\nchanged while using the app will keep that change, as long as\nthe new `value` also matches what was given originally.\nUsed in conjunction with `persistence_type`."},"persisted_props":{"type":{"name":"arrayOf","value":{"name":"enum","value":[{"value":"\"selectedNodes\"","computed":false},{"value":"\"selectedTags\"","computed":false},{"value":"\"selectedIds\"","computed":false}]}},"required":false,"description":"Properties whose user interactions will persist after refreshing the\ncomponent or the page. Since only `value` is allowed this prop can\nnormally be ignored.","defaultValue":{"value":"[\"selectedNodes\", \"selectedTags\", \"selectedIds\"]","computed":false}},"persistence_type":{"type":{"name":"enum","value":[{"value":"\"local\"","computed":false},{"value":"\"session\"","computed":false},{"value":"\"memory\"","computed":false}]},"required":false,"description":"Where persisted user changes will be stored:\nmemory: only kept in memory, reset on page refresh.\nlocal: window.localStorage, data is kept after the browser quit.\nsession: window.sessionStorage, data is cleared once the browser quit.","defaultValue":{"value":"\"local\"","computed":false}}}},"dash-components/src/components/ViewAnnotation/ViewAnnotation.tsx":{"displayName":"ViewAnnotation","description":"","props":{"id":{"description":"","required":true,"type":{"name":"string","raw":"string"}},"children":{"description":"","required":false,"type":{"name":"node","raw":"ReactNode"}}},"isContext":false},"dash-components/src/components/ViewFooter/ViewFooter.tsx":{"displayName":"ViewFooter","description":"","props":{"children":{"description":"","required":false,"type":{"name":"node","raw":"ReactNode"}}},"isContext":false},"dash-components/src/components/WellCompletions/WellCompletions.tsx":{"displayName":"WellCompletions","description":"","props":{"id":{"description":"","required":true,"type":{"name":"string","raw":"string"}},"data":{"description":"","required":true,"type":{"name":"shape","value":{},"raw":"Data"}}},"isContext":false},"dash-components/src/components/WellLogViewer/WellLogViewer.tsx":{"displayName":"WellLogViewer","description":"","props":{"id":{"description":"The ID of this component, used to identify dash components in callbacks. The ID needs to be unique across all of the components in an app.","required":true,"type":{"name":"string","raw":"string"}},"welllog":{"description":"An object from JSON file describing well log data","required":true,"type":{"name":"object","raw":"object"}},"template":{"description":"Prop containing track template data","required":true,"type":{"name":"object","raw":"object"}},"colorMapFunctions":{"description":"Prop containing color function/table array","required":true,"type":{"name":"shape","value":{},"raw":"unknown"}},"horizontal":{"description":"Orientation of the track plots on the screen. Default is false","required":false,"type":{"name":"bool","raw":"boolean"}},"domain":{"description":"Initial visible interval of the log data","required":false,"type":{"name":"arrayOf","value":{"name":"number","raw":"number"},"raw":"number[]"}},"selection":{"description":"Initial selected interval of the log data","required":false,"type":{"name":"arrayOf","value":{"name":"number","raw":"number"},"raw":"number[]"}},"wellpick":{"description":"Well picks data","required":false,"type":{"name":"shape","value":{},"raw":"unknown"}},"primaryAxis":{"description":"Primary axis id: \" md\", \"tvd\", \"time\"...","required":false,"type":{"name":"string","raw":"string"}},"axisTitles":{"description":"Log mnemonics for axes","required":false,"type":{"name":"shape","value":{},"raw":"Record<string, string>"}},"axisMnemos":{"description":"Names for axes","required":false,"type":{"name":"shape","value":{},"raw":"Record<string, string[]>"}},"viewTitle":{"description":"Set to true for default titles or to array of individual well log titles","required":false,"type":{"name":"union","value":[{"name":"string","raw":"string"},{"name":"object","raw":"object"}],"raw":"string | boolean | object"}},"options":{"description":"","required":false,"type":{"name":"shape","value":{"maxContentZoom":{"description":"The maximum zoom value","required":false,"name":"number","raw":"number"},"maxVisibleTrackNum":{"description":"The maximum number of visible tracks","required":false,"name":"number","raw":"number"},"checkDatafileSchema":{"description":"Validate JSON datafile against schema","required":false,"name":"bool","raw":"boolean"},"hideTrackTitle":{"description":"Hide titles of the track. Default is false","required":false,"name":"bool","raw":"boolean"},"hideTrackLegend":{"description":"Hide legends of the track. Default is false","required":false,"name":"bool","raw":"boolean"}},"raw":"WellLogViewOptions"}},"readoutOptions":{"description":"","required":false,"type":{"name":"shape","value":{"allTracks":{"description":"Show not only visible tracks","required":false,"name":"bool","raw":"boolean"},"grouping":{"description":"How group values. \"\" | \"track\"","required":false,"name":"string","raw":"string"}},"raw":"InfoOptions"}}},"isContext":false}}