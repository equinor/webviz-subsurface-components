"use strict";(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[540],{"./packages/subsurface-viewer/src/SubsurfaceViewer.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AutoZoomToBoxStory:function(){return AutoZoomToBoxStory},DepthTest:function(){return DepthTest},IsRenderedCallback:function(){return IsRenderedCallback},LightsStory:function(){return LightsStory},MouseEvent:function(){return MouseEvent},MultiViewAnnotation:function(){return MultiViewAnnotation},TooltipApi:function(){return TooltipApi},TooltipStyle:function(){return TooltipStyle},ViewObjectInitializedAsEmpty:function(){return ViewObjectInitializedAsEmpty},ViewStateSynchronization:function(){return ViewStateSynchronization},__namedExportsOrder:function(){return __namedExportsOrder},customizedCameraPosition:function(){return customizedCameraPosition}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),d3_format__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/d3-format/src/defaultLocale.js"),_deck_gl_core_typed__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@deck.gl/core/dist/esm/views/view.js"),_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@emerson-eps/color-tables/dist/index.js"),_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/subsurface-viewer/src/SubsurfaceViewer.tsx"),_layers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/subsurface-viewer/src/layers/index.ts"),_components_InfoCard__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/subsurface-viewer/src/components/InfoCard.tsx"),_components_ViewFooter__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/subsurface-viewer/src/components/ViewFooter.tsx"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),_mui_material_Switch__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/@mui/material/Switch/Switch.js"),_mui_material_Stack__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),_mui_material_Slider__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./node_modules/@mui/material/Slider/Slider.js"),_luma_gl_engine__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./node_modules/@luma.gl/engine/dist/esm/geometries/sphere-geometry.js"),_layers_grid3d_test_data_TruncatedSnubCube__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./packages/subsurface-viewer/src/layers/grid3d/test_data/TruncatedSnubCube.ts"),_deck_gl_mesh_layers_typed__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./node_modules/@deck.gl/mesh-layers/dist/esm/simple-mesh-layer/simple-mesh-layer.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}__webpack_exports__.default={parameters:{storySource:{source:'function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React, { useCallback, useMemo, useState } from "react";\nimport { format } from "d3-format";\nimport { View } from "@deck.gl/core/typed";\nimport { ContinuousLegend } from "@emerson-eps/color-tables";\nimport SubsurfaceViewer from "./SubsurfaceViewer";\nimport { WellsLayer, MapLayer, AxesLayer, Grid3DLayer } from "./layers";\nimport InfoCard from "./components/InfoCard";\nimport { ViewFooter } from "./components/ViewFooter";\nimport { styled } from "@mui/material/styles";\nimport Switch from "@mui/material/Switch";\nimport Stack from "@mui/material/Stack";\nimport Slider from "@mui/material/Slider";\nimport { SphereGeometry } from "@luma.gl/engine";\nimport { Points as SnubCubePoints, Faces as SnubCubeFaces, VertexCount as SnubCubeVertexCount } from "./layers/grid3d/test_data/TruncatedSnubCube";\nimport { SimpleMeshLayer } from "@deck.gl/mesh-layers/typed";\nexport default {\n  component: SubsurfaceViewer,\n  title: "SubsurfaceViewer"\n};\nconst classes = {\n  main: "default-main"\n};\nconst Root = styled("div")({\n  [`& .${classes.main}`]: {\n    width: 750,\n    height: 500,\n    top: "50%",\n    left: "50%",\n    transform: "translate(-50%, -50%)",\n    border: "1px solid black",\n    background: "azure",\n    position: "absolute"\n  }\n});\nconst defaultWellsProps = {\n  id: "volve-wells",\n  data: "./volve_wells.json"\n};\nconst defaultWellsLayer = new WellsLayer({\n  ...defaultWellsProps\n});\nconst defaultProps = {\n  id: "volve-wells",\n  bounds: [432150, 6475800, 439400, 6481500],\n  layers: [defaultWellsLayer]\n};\nconst wellsLayerWithlogs = new WellsLayer({\n  ...defaultWellsProps,\n  logData: "./volve_logs.json",\n  logrunName: "BLOCKING",\n  logName: "PORO",\n  logColor: "Physics"\n});\nconst meshMapLayerBig = new MapLayer({\n  id: "mesh-layer",\n  meshData: "hugin_depth_5_m.float32",\n  frame: {\n    origin: [432150, 6475800],\n    count: [1451, 1141],\n    increment: [5, 5],\n    rotDeg: 0\n  },\n  propertiesData: "kh_netmap_5_m.float32",\n  contours: [0, 100],\n  isContoursDepth: true,\n  gridLines: false,\n  material: true,\n  colorMapName: "Physics"\n});\nconst Template = args => /*#__PURE__*/React.createElement(SubsurfaceViewer, args);\nfunction mdTooltip(info) {\n  if (!info.picked) return null;\n  const value = info?.properties?.[0].value;\n  if (!value) return null;\n  const f = format(".2f");\n  const niceValue = f(+value);\n  return "MD: " + niceValue;\n}\nexport const TooltipApi = Template.bind({});\nTooltipApi.args = {\n  ...defaultProps,\n  layers: [new WellsLayer({\n    ...defaultWellsProps,\n    lineStyle: {\n      width: 7\n    }\n  })],\n  getTooltip: mdTooltip,\n  bounds: [433000, 6476000, 439000, 6480000]\n};\nTooltipApi.parameters = {\n  docs: {\n    description: {\n      story: "Example of overriding the default tooltip, showing measured depth (MD) instead of the default bahaviour, which is to show the well name."\n    },\n    inlineStories: false,\n    iframeHeight: 500\n  }\n};\nexport const TooltipStyle = Template.bind({});\nconst processPropInfo = (properties, filter) => {\n  if (!properties) {\n    return "";\n  }\n  let outputString = "";\n  if (typeof filter == "boolean") {\n    if (filter) {\n      properties.forEach(ppobj => {\n        outputString += `\\n${ppobj["name"]} : ${ppobj["value"]}`;\n      });\n    }\n  } else {\n    // filter is not boolean - thus it is a string array and we should check each property\n    properties.forEach(ppobj => {\n      if (filter.includes(ppobj["name"])) {\n        outputString += `\\n${ppobj["name"]} : ${ppobj["value"]}`;\n      }\n    });\n  }\n  return outputString;\n};\nconst tooltipImpFunc = info => {\n  if (!info.picked || !info.layer) {\n    return null;\n  }\n  const outputObject = {};\n  const layerName = info.layer.constructor.name;\n  let outputString = "";\n  if (layerName === "Map3DLayer") {\n    const layerProps = info.layer.props;\n    const layerName = layerProps.name;\n    const properties = info.properties;\n    outputString += `Property: ${layerName}`;\n    outputString += processPropInfo(properties, true);\n  } else if (layerName === "WellsLayer") {\n    const wellsPickInfo = info;\n    const wellsPickInfoObject = info.object;\n    const wellProperties = wellsPickInfoObject.properties;\n    const name = wellProperties.name;\n    outputString += `Well: ${name || ""}`;\n    if (wellsPickInfo.featureType !== "points") {\n      outputString += processPropInfo(wellsPickInfo.properties, true);\n    }\n  }\n  outputObject["text"] = outputString;\n  outputObject["style"] = {\n    color: "yellow"\n  };\n  return outputObject;\n};\nTooltipStyle.args = {\n  ...defaultProps,\n  layers: [new WellsLayer({\n    ...defaultWellsProps,\n    lineStyle: {\n      width: 7\n    }\n  })],\n  getTooltip: tooltipImpFunc,\n  bounds: [433000, 6476000, 439000, 6480000]\n};\nTooltipStyle.parameters = {\n  docs: {\n    description: {\n      story: "Example of overriding tooltip style."\n    },\n    inlineStories: false,\n    iframeHeight: 500\n  }\n};\nconst CustomTemplate = args => {\n  const [state, setState] = React.useState(args.cameraPosition);\n  const getCameraPosition = React.useCallback(input => {\n    setState(input);\n    return input;\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SubsurfaceViewer, _extends({}, args, {\n    cameraPosition: args.cameraPosition,\n    getCameraPosition: getCameraPosition\n  })), /*#__PURE__*/React.createElement("div", {\n    style: {\n      position: "absolute",\n      marginLeft: 200\n    }\n  }, /*#__PURE__*/React.createElement("div", null, "zoom: ", state?.zoom), /*#__PURE__*/React.createElement("div", null, "rotationX: ", state?.rotationX), /*#__PURE__*/React.createElement("div", null, "rotationOrbit: ", state?.rotationOrbit), /*#__PURE__*/React.createElement("div", null, "targetX: ", state?.target[0]), /*#__PURE__*/React.createElement("div", null, "targetY: ", state?.target[1])));\n};\nexport const customizedCameraPosition = CustomTemplate.bind({});\nconst cameraPosition = {\n  target: [437500, 6475000],\n  zoom: -5.0,\n  rotationX: 90,\n  rotationOrbit: 0\n};\ncustomizedCameraPosition.args = {\n  ...defaultProps,\n  cameraPosition\n};\nconst mapProps = {\n  id: "kh_netmap",\n  meshData: "hugin_depth_25_m.float32",\n  frame: {\n    origin: [432150, 6475800],\n    count: [291, 229],\n    increment: [25, 25],\n    rotDeg: 0\n  },\n  propertiesData: "kh_netmap_25_m.float32",\n  contours: [0, 100],\n  material: false\n};\nconst netmapLayer = new MapLayer({\n  ...mapProps\n});\nconst huginLayer = new MapLayer({\n  ...mapProps,\n  id: "hugin",\n  propertiesData: "hugin_depth_25_m.float32"\n});\nconst MultiViewAnnotationTemplate = args => /*#__PURE__*/React.createElement(SubsurfaceViewer, args,\n/*#__PURE__*/\n\n/* @ts-expect-error */\nReact.createElement(View, {\n  id: "view_1"\n}, /*#__PURE__*/React.createElement(ContinuousLegend, {\n  min: -3071,\n  max: 41048\n}), /*#__PURE__*/React.createElement(ViewFooter, null, "kH netmap")),\n/*#__PURE__*/\n\n/* @ts-expect-error */\nReact.createElement(View, {\n  id: "view_2"\n}, /*#__PURE__*/React.createElement(ContinuousLegend, {\n  min: 2725,\n  max: 3396\n}), /*#__PURE__*/React.createElement(ViewFooter, null, "Hugin")));\nexport const MultiViewAnnotation = MultiViewAnnotationTemplate.bind({});\nMultiViewAnnotation.args = {\n  id: "multi_view_annotation",\n  layers: [netmapLayer, huginLayer],\n  views: {\n    layout: [1, 2],\n    showLabel: true,\n    viewports: [{\n      id: "view_1",\n      layerIds: ["hugin"]\n    }, {\n      id: "view_2",\n      layerIds: ["kh_netmap"]\n    }]\n  }\n};\nexport const ViewObjectInitializedAsEmpty = MultiViewAnnotationTemplate.bind({});\nViewObjectInitializedAsEmpty.args = {\n  id: "view_initialized_as_empty",\n  layers: [netmapLayer, huginLayer],\n  views: {}\n};\nconst wellsLayerNoDepthTest = new WellsLayer({\n  ...defaultWellsProps,\n  id: "wells-layer-no-depth-test",\n  depthTest: false\n});\nexport const DepthTest = args => {\n  const props = {\n    ...args,\n    layers: [huginLayer, defaultWellsLayer, wellsLayerNoDepthTest]\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(SubsurfaceViewer, props)), /*#__PURE__*/React.createElement("h4", null, "View on the right depthTest for the wells layer property is set to false and wells layer is given last so that it will be painted on top. On the left parts of the wells are hidden beneath the surface."));\n};\nDepthTest.args = {\n  id: "DepthTest",\n  views: {\n    layout: [1, 2],\n    viewports: [{\n      id: "view_1",\n      layerIds: ["hugin", "volve-wells"],\n      show3D: false,\n      isSync: true\n    }, {\n      id: "view_2",\n      layerIds: ["hugin", "wells-layer-no-depth-test"],\n      show3D: false,\n      isSync: true\n    }]\n  }\n};\nDepthTest.parameters = {\n  docs: {\n    description: {\n      story: "Example using the depthTest property. If this is set to false it will disable depth testing for the layer"\n    }\n  }\n};\nfunction getReadout(event) {\n  const pickInfo = event.infos;\n  return /*#__PURE__*/React.createElement(InfoCard, {\n    pickInfos: pickInfo\n  });\n}\nconst MouseEventStory = args => {\n  const [event, setEvent] = useState({\n    type: "click",\n    infos: []\n  });\n  const handleEvent = useCallback(event => {\n    setEvent(event);\n  }, [setEvent]);\n  const useProps = useMemo(() => {\n    const props = {\n      ...defaultProps,\n      layers: [wellsLayerWithlogs, netmapLayer],\n      onMouseEvent: handleEvent,\n      views: {\n        layout: [1, 1],\n        viewports: [{\n          id: "test",\n          show3D: args.show3d\n        }]\n      },\n      coords: {\n        visible: false\n      }\n    };\n    return props;\n  }, [handleEvent, args.show3d]);\n  return /*#__PURE__*/React.createElement(SubsurfaceViewer, useProps,\n  /*#__PURE__*/\n  \n  /* @ts-expect-error */\n  React.createElement(View, {\n    id: "test"\n  }, getReadout(event), /*#__PURE__*/React.createElement(ViewFooter, null, "Mouse event example")));\n};\nexport const MouseEvent = args => {\n  return /*#__PURE__*/React.createElement(MouseEventStory, args);\n};\nMouseEvent.args = {\n  show3d: true\n};\nconst ViewStateSynchronizationStory = args => {\n  const subsurfaceViewerArgs = {\n    id: "view_state_synchronization",\n    layers: [netmapLayer, huginLayer, defaultWellsLayer],\n    views: {\n      layout: [2, 2],\n      viewports: [{\n        id: "view_1",\n        layerIds: ["hugin"],\n        show3D: args.show3d,\n        isSync: args.sync.includes("view_1")\n      }, {\n        id: "view_2",\n        layerIds: ["kh_netmap"],\n        show3D: args.show3d,\n        isSync: args.sync.includes("view_2")\n      }, {\n        id: "view_3",\n        layerIds: ["volve-wells"],\n        show3D: args.show3d,\n        isSync: args.sync.includes("view_3")\n      }, {\n        id: "view_4",\n        layerIds: ["volve-wells", "hugin"],\n        show3D: args.show3d,\n        isSync: args.sync.includes("view_4")\n      }]\n    }\n  };\n  return /*#__PURE__*/React.createElement(SubsurfaceViewer, subsurfaceViewerArgs);\n};\nexport const ViewStateSynchronization = args => {\n  return /*#__PURE__*/React.createElement(ViewStateSynchronizationStory, args);\n};\nViewStateSynchronization.args = {\n  show3d: false,\n  sync: ["view_1", "view_2", "view_3", "view_4"]\n};\nViewStateSynchronization.argTypes = {\n  sync: {\n    options: ["view_1", "view_2", "view_3", "view_4"],\n    control: "check"\n  }\n};\nexport const IsRenderedCallback = args => {\n  const [layers, setLayers] = React.useState([defaultWellsLayer]);\n  const [label, setLabel] = React.useState("");\n  const handleChange = () => {\n    if (layers.length === 1) {\n      setLayers([defaultWellsLayer, meshMapLayerBig]);\n    } else if (layers.length === 2) {\n      setLayers([]);\n    } else {\n      setLayers([defaultWellsLayer]);\n    }\n  };\n  const props = {\n    ...args,\n    isRenderedCallback: isLoaded => {\n      console.log("isRenderedCallback", isLoaded);\n      setLabel(isLoaded ? "LOADED" : "NOT LOADED");\n      return;\n    },\n    layers\n  };\n  return /*#__PURE__*/React.createElement(Root, null, /*#__PURE__*/React.createElement("div", {\n    className: classes.main\n  }, /*#__PURE__*/React.createElement(SubsurfaceViewer, props)), /*#__PURE__*/React.createElement("label", null, "Add big map layer "), /*#__PURE__*/React.createElement(Switch, {\n    onClick: handleChange\n  }), /*#__PURE__*/React.createElement("label", null, label));\n};\nIsRenderedCallback.args = {\n  id: "DeckGL-Map",\n  layers: [meshMapLayerBig, defaultWellsLayer],\n  bounds: [432150, 6475800, 439400, 6481501],\n  views: {\n    layout: [1, 1],\n    viewports: [{\n      id: "view_1",\n      show3D: true\n    }]\n  }\n};\nIsRenderedCallback.parameters = {\n  docs: {\n    inlineStories: false,\n    iframeHeight: 500,\n    description: {\n      story: "IsRenderedCallback will report in console when triggered"\n    }\n  }\n};\nexport const LightsStory = args => {\n  const [headLight, setHeadLight] = React.useState(false);\n  const [ambientLight, setAmbientLight] = React.useState(false);\n  const [pointLight, setPointLight] = React.useState(false);\n  const [directionalLight, setDirectionalLight] = React.useState(false);\n  const [headLightIntensity, setHeadLightIntensity] = React.useState(1.0);\n  const [ambientLightIntensity, setAmbientLightIntensity] = React.useState(1.0);\n  const [pointLightIntensity, setPointLightIntensity] = React.useState(1.0);\n  const [directionslLightIntensity, setDirectionslLightIntensity] = React.useState(1.0);\n  let lights = {};\n  if (headLight) {\n    lights = {\n      ...lights,\n      headLight: {\n        intensity: headLightIntensity\n      }\n    };\n  }\n  if (ambientLight) {\n    lights = {\n      ...lights,\n      ambientLight: {\n        intensity: ambientLightIntensity\n      }\n    };\n  }\n  if (pointLight) {\n    lights = {\n      ...lights,\n      pointLights: [{\n        intensity: pointLightIntensity,\n        position: [-50, -50, -50],\n        color: [0, 255, 0]\n      }]\n    };\n  }\n  if (directionalLight) {\n    lights = {\n      ...lights,\n      directionalLights: [{\n        intensity: directionslLightIntensity,\n        direction: [-1, 0, -1],\n        color: [255, 0, 0]\n      }]\n    };\n  }\n  const props = {\n    lights,\n    ...args\n  };\n  return /*#__PURE__*/React.createElement(Root, null, /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    alignItems: "center",\n    spacing: 10\n  }, /*#__PURE__*/React.createElement(Stack, null, /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement("label", null, "Head Light "), /*#__PURE__*/React.createElement(Switch, {\n    onClick: () => {\n      setHeadLight(!headLight);\n    }\n  })), /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: 100,\n    valueLabelDisplay: "auto",\n    onChange: (_event, value) => {\n      setHeadLightIntensity(value / 100);\n    }\n  })), /*#__PURE__*/React.createElement(Stack, null, /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement("label", null, "Ambient Light "), /*#__PURE__*/React.createElement(Switch, {\n    onClick: () => {\n      setAmbientLight(!ambientLight);\n    }\n  })), /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: 100,\n    valueLabelDisplay: "auto",\n    onChange: (_event, value) => {\n      setAmbientLightIntensity(value / 100);\n    }\n  })), /*#__PURE__*/React.createElement(Stack, null, /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement("label", null, "Point Light "), /*#__PURE__*/React.createElement(Switch, {\n    onClick: () => {\n      setPointLight(!pointLight);\n    }\n  })), /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: 100,\n    valueLabelDisplay: "auto",\n    onChange: (_event, value) => {\n      setPointLightIntensity(value / 100);\n    }\n  })), /*#__PURE__*/React.createElement(Stack, null, /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement("label", null, "Directional Light "), /*#__PURE__*/React.createElement(Switch, {\n    onClick: () => {\n      setDirectionalLight(!directionalLight);\n    }\n  })), /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: 100,\n    valueLabelDisplay: "auto",\n    onChange: (_event, value) => {\n      setDirectionslLightIntensity(value / 100);\n    }\n  }))), /*#__PURE__*/React.createElement("div", {\n    className: classes.main\n  }, /*#__PURE__*/React.createElement(SubsurfaceViewer, props)));\n};\nLightsStory.args = {\n  id: "DeckGL-Map",\n  bounds: [-100, -100, 50, 50],\n  layers: [new AxesLayer({\n    id: "polyhedral-cells-axes",\n    bounds: [-100, -50, -50, 50, 50, 50]\n  }), new SimpleMeshLayer({\n    id: "sphere",\n    data: [{}],\n    mesh: new SphereGeometry({\n      nlat: 100,\n      nlong: 100,\n      radius: 30\n    }),\n    wireframe: false,\n    getPosition: [-75, 0, 0],\n    getColor: [255, 255, 255],\n    material: true\n  }), new Grid3DLayer({\n    id: "Grid3DLayer",\n    material: true,\n    colorMapFunction: () => [255, 255, 255],\n    pointsData: SnubCubePoints.map(v => 35 * v),\n    polysData: SnubCubeFaces,\n    propertiesData: Array(SnubCubeVertexCount).fill(0)\n  })],\n  views: {\n    layout: [1, 1],\n    viewports: [{\n      id: "view_1",\n      show3D: true\n    }]\n  }\n};\nLightsStory.parameters = {\n  docs: {\n    inlineStories: false,\n    iframeHeight: 500,\n    description: {\n      story: "Using different light sources"\n    }\n  }\n};\nconst zoomBox3D = [-325, -450, -25, 125, 150, 125];\n//const zoomBox3D: BoundingBox3D = [-100, -100, -100,  100, 100, 100];\n\nexport const AutoZoomToBoxStory = args => {\n  const [rotX, setRotX] = React.useState(0);\n  const [rotZ, setRotZ] = React.useState(0);\n  const cameraPosition = {\n    rotationX: rotX,\n    rotationOrbit: rotZ,\n    zoom: zoomBox3D,\n    target: [0, 0, 0]\n  };\n  const props = {\n    ...args,\n    cameraPosition\n  };\n  return /*#__PURE__*/React.createElement(Root, null, /*#__PURE__*/React.createElement("label", null, "Rotation X Axis "), /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: 50,\n    valueLabelDisplay: "auto",\n    onChange: (_event, value) => {\n      const angle = 2 * (value / 100 - 0.5) * 90;\n      setRotX(angle);\n    }\n  }), /*#__PURE__*/React.createElement("label", null, "Rotation Z Axis "), /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: 50,\n    valueLabelDisplay: "auto",\n    onChange: (_event, value) => {\n      const angle = 2 * (value / 100 - 0.5) * 180;\n      setRotZ(angle);\n    }\n  }), /*#__PURE__*/React.createElement("div", {\n    className: classes.main\n  }, /*#__PURE__*/React.createElement(SubsurfaceViewer, props)));\n};\nAutoZoomToBoxStory.args = {\n  id: "DeckGL-Map",\n  layers: [new AxesLayer({\n    id: "polyhedral-cells-axes",\n    bounds: zoomBox3D,\n    ZIncreasingDownwards: false\n  }), new SimpleMeshLayer({\n    id: "sphere",\n    data: [{}],\n    mesh: new SphereGeometry({\n      nlat: 100,\n      nlong: 100,\n      radius: 10\n    }),\n    wireframe: false,\n    getPosition: [0, 0, 0],\n    getColor: [255, 255, 255],\n    material: true\n  })],\n  views: {\n    layout: [1, 1],\n    viewports: [{\n      id: "view_1",\n      show3D: true\n    }]\n  }\n};\nAutoZoomToBoxStory.parameters = {\n  docs: {\n    inlineStories: false,\n    iframeHeight: 500,\n    description: {\n      story: ""\n    }\n  }\n};',locationsMap:{"tooltip-api":{startLoc:{col:17,line:71},endLoc:{col:81,line:71},startBody:{col:17,line:71},endBody:{col:81,line:71}},"tooltip-style":{startLoc:{col:17,line:71},endLoc:{col:81,line:71},startBody:{col:17,line:71},endBody:{col:81,line:71}},"customized-camera-position":{startLoc:{col:23,line:172},endLoc:{col:1,line:187},startBody:{col:23,line:172},endBody:{col:1,line:187}},"multi-view-annotation":{startLoc:{col:36,line:220},endLoc:{col:65,line:238},startBody:{col:36,line:220},endBody:{col:65,line:238}},"view-object-initialized-as-empty":{startLoc:{col:36,line:220},endLoc:{col:65,line:238},startBody:{col:36,line:220},endBody:{col:65,line:238}},"depth-test":{startLoc:{col:25,line:266},endLoc:{col:1,line:272},startBody:{col:25,line:266},endBody:{col:1,line:272}},"mouse-event":{startLoc:{col:26,line:337},endLoc:{col:1,line:339},startBody:{col:26,line:337},endBody:{col:1,line:339}},"view-state-synchronization":{startLoc:{col:40,line:374},endLoc:{col:1,line:376},startBody:{col:40,line:374},endBody:{col:1,line:376}},"is-rendered-callback":{startLoc:{col:34,line:387},endLoc:{col:1,line:413},startBody:{col:34,line:387},endBody:{col:1,line:413}},"lights-story":{startLoc:{col:27,line:435},endLoc:{col:1,line:544},startBody:{col:27,line:435},endBody:{col:1,line:544}},"auto-zoom-to-box-story":{startLoc:{col:34,line:591},endLoc:{col:1,line:621},startBody:{col:34,line:591},endBody:{col:1,line:621}}}}},component:_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__.Z,title:"SubsurfaceViewer"};const classes_main="default-main",Root=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_7__.ZP)("div")({[`& .${classes_main}`]:{width:750,height:500,top:"50%",left:"50%",transform:"translate(-50%, -50%)",border:"1px solid black",background:"azure",position:"absolute"}}),defaultWellsProps={id:"volve-wells",data:"./volve_wells.json"},defaultWellsLayer=new _layers__WEBPACK_IMPORTED_MODULE_3__.WellsLayer({...defaultWellsProps}),defaultProps={id:"volve-wells",bounds:[432150,6475800,439400,6481500],layers:[defaultWellsLayer]},wellsLayerWithlogs=new _layers__WEBPACK_IMPORTED_MODULE_3__.WellsLayer({...defaultWellsProps,logData:"./volve_logs.json",logrunName:"BLOCKING",logName:"PORO",logColor:"Physics"}),meshMapLayerBig=new _layers__WEBPACK_IMPORTED_MODULE_3__.MapLayer({id:"mesh-layer",meshData:"hugin_depth_5_m.float32",frame:{origin:[432150,6475800],count:[1451,1141],increment:[5,5],rotDeg:0},propertiesData:"kh_netmap_5_m.float32",contours:[0,100],isContoursDepth:!0,gridLines:!1,material:!0,colorMapName:"Physics"}),Template=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__.Z,args);const TooltipApi=Template.bind({});TooltipApi.args={...defaultProps,layers:[new _layers__WEBPACK_IMPORTED_MODULE_3__.WellsLayer({...defaultWellsProps,lineStyle:{width:7}})],getTooltip:function mdTooltip(info){if(!info.picked)return null;const value=info?.properties?.[0].value;return value?"MD: "+(0,d3_format__WEBPACK_IMPORTED_MODULE_8__.WU)(".2f")(+value):null},bounds:[433e3,6476e3,439e3,648e4]},TooltipApi.parameters={docs:{description:{story:"Example of overriding the default tooltip, showing measured depth (MD) instead of the default bahaviour, which is to show the well name."},inlineStories:!1,iframeHeight:500}};const TooltipStyle=Template.bind({}),processPropInfo=(properties,filter)=>{if(!properties)return"";let outputString="";return"boolean"==typeof filter?filter&&properties.forEach((ppobj=>{outputString+=`\n${ppobj.name} : ${ppobj.value}`})):properties.forEach((ppobj=>{filter.includes(ppobj.name)&&(outputString+=`\n${ppobj.name} : ${ppobj.value}`)})),outputString};TooltipStyle.args={...defaultProps,layers:[new _layers__WEBPACK_IMPORTED_MODULE_3__.WellsLayer({...defaultWellsProps,lineStyle:{width:7}})],getTooltip:info=>{if(!info.picked||!info.layer)return null;const outputObject={},layerName=info.layer.constructor.name;let outputString="";if("Map3DLayer"===layerName){const layerName=info.layer.props.name,properties=info.properties;outputString+=`Property: ${layerName}`,outputString+=processPropInfo(properties,!0)}else if("WellsLayer"===layerName){const wellsPickInfo=info;outputString+=`Well: ${info.object.properties.name||""}`,"points"!==wellsPickInfo.featureType&&(outputString+=processPropInfo(wellsPickInfo.properties,!0))}return outputObject.text=outputString,outputObject.style={color:"yellow"},outputObject},bounds:[433e3,6476e3,439e3,648e4]},TooltipStyle.parameters={docs:{description:{story:"Example of overriding tooltip style."},inlineStories:!1,iframeHeight:500}};const customizedCameraPosition=(args=>{const[state,setState]=react__WEBPACK_IMPORTED_MODULE_0__.useState(args.cameraPosition),getCameraPosition=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((input=>(setState(input),input)),[]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},args,{cameraPosition:args.cameraPosition,getCameraPosition:getCameraPosition})),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{position:"absolute",marginLeft:200}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"zoom: ",state?.zoom),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"rotationX: ",state?.rotationX),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"rotationOrbit: ",state?.rotationOrbit),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"targetX: ",state?.target[0]),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"targetY: ",state?.target[1])))}).bind({});customizedCameraPosition.args={...defaultProps,cameraPosition:{target:[437500,6475e3],zoom:-5,rotationX:90,rotationOrbit:0}};const mapProps={id:"kh_netmap",meshData:"hugin_depth_25_m.float32",frame:{origin:[432150,6475800],count:[291,229],increment:[25,25],rotDeg:0},propertiesData:"kh_netmap_25_m.float32",contours:[0,100],material:!1},netmapLayer=new _layers__WEBPACK_IMPORTED_MODULE_3__.MapLayer({...mapProps}),huginLayer=new _layers__WEBPACK_IMPORTED_MODULE_3__.MapLayer({...mapProps,id:"hugin",propertiesData:"hugin_depth_25_m.float32"}),MultiViewAnnotationTemplate=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__.Z,args,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_deck_gl_core_typed__WEBPACK_IMPORTED_MODULE_9__.Z,{id:"view_1"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_1__.sG,{min:-3071,max:41048}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_ViewFooter__WEBPACK_IMPORTED_MODULE_5__.n,null,"kH netmap")),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_deck_gl_core_typed__WEBPACK_IMPORTED_MODULE_9__.Z,{id:"view_2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_1__.sG,{min:2725,max:3396}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_ViewFooter__WEBPACK_IMPORTED_MODULE_5__.n,null,"Hugin"))),MultiViewAnnotation=MultiViewAnnotationTemplate.bind({});MultiViewAnnotation.args={id:"multi_view_annotation",layers:[netmapLayer,huginLayer],views:{layout:[1,2],showLabel:!0,viewports:[{id:"view_1",layerIds:["hugin"]},{id:"view_2",layerIds:["kh_netmap"]}]}};const ViewObjectInitializedAsEmpty=MultiViewAnnotationTemplate.bind({});ViewObjectInitializedAsEmpty.args={id:"view_initialized_as_empty",layers:[netmapLayer,huginLayer],views:{}};const wellsLayerNoDepthTest=new _layers__WEBPACK_IMPORTED_MODULE_3__.WellsLayer({...defaultWellsProps,id:"wells-layer-no-depth-test",depthTest:!1}),DepthTest=args=>{const props={...args,layers:[huginLayer,defaultWellsLayer,wellsLayerNoDepthTest]};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__.Z,props)),react__WEBPACK_IMPORTED_MODULE_0__.createElement("h4",null,"View on the right depthTest for the wells layer property is set to false and wells layer is given last so that it will be painted on top. On the left parts of the wells are hidden beneath the surface."))};DepthTest.args={id:"DepthTest",views:{layout:[1,2],viewports:[{id:"view_1",layerIds:["hugin","volve-wells"],show3D:!1,isSync:!0},{id:"view_2",layerIds:["hugin","wells-layer-no-depth-test"],show3D:!1,isSync:!0}]}},DepthTest.parameters={docs:{description:{story:"Example using the depthTest property. If this is set to false it will disable depth testing for the layer"}}};const MouseEventStory=args=>{const[event,setEvent]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({type:"click",infos:[]}),handleEvent=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((event=>{setEvent(event)}),[setEvent]),useProps=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({...defaultProps,layers:[wellsLayerWithlogs,netmapLayer],onMouseEvent:handleEvent,views:{layout:[1,1],viewports:[{id:"test",show3D:args.show3d}]},coords:{visible:!1}})),[handleEvent,args.show3d]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__.Z,useProps,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_deck_gl_core_typed__WEBPACK_IMPORTED_MODULE_9__.Z,{id:"test"},function getReadout(event){const pickInfo=event.infos;return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_InfoCard__WEBPACK_IMPORTED_MODULE_4__.Z,{pickInfos:pickInfo})}(event),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_ViewFooter__WEBPACK_IMPORTED_MODULE_5__.n,null,"Mouse event example")))},MouseEvent=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(MouseEventStory,args);MouseEvent.args={show3d:!0};const ViewStateSynchronizationStory=args=>{const subsurfaceViewerArgs={id:"view_state_synchronization",layers:[netmapLayer,huginLayer,defaultWellsLayer],views:{layout:[2,2],viewports:[{id:"view_1",layerIds:["hugin"],show3D:args.show3d,isSync:args.sync.includes("view_1")},{id:"view_2",layerIds:["kh_netmap"],show3D:args.show3d,isSync:args.sync.includes("view_2")},{id:"view_3",layerIds:["volve-wells"],show3D:args.show3d,isSync:args.sync.includes("view_3")},{id:"view_4",layerIds:["volve-wells","hugin"],show3D:args.show3d,isSync:args.sync.includes("view_4")}]}};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__.Z,subsurfaceViewerArgs)},ViewStateSynchronization=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(ViewStateSynchronizationStory,args);ViewStateSynchronization.args={show3d:!1,sync:["view_1","view_2","view_3","view_4"]},ViewStateSynchronization.argTypes={sync:{options:["view_1","view_2","view_3","view_4"],control:"check"}};const IsRenderedCallback=args=>{const[layers,setLayers]=react__WEBPACK_IMPORTED_MODULE_0__.useState([defaultWellsLayer]),[label,setLabel]=react__WEBPACK_IMPORTED_MODULE_0__.useState(""),props={...args,isRenderedCallback:isLoaded=>{console.log("isRenderedCallback",isLoaded),setLabel(isLoaded?"LOADED":"NOT LOADED")},layers:layers};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Root,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:classes_main},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__.Z,props)),react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",null,"Add big map layer "),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Switch__WEBPACK_IMPORTED_MODULE_10__.Z,{onClick:()=>{1===layers.length?setLayers([defaultWellsLayer,meshMapLayerBig]):2===layers.length?setLayers([]):setLayers([defaultWellsLayer])}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",null,label))};IsRenderedCallback.args={id:"DeckGL-Map",layers:[meshMapLayerBig,defaultWellsLayer],bounds:[432150,6475800,439400,6481501],views:{layout:[1,1],viewports:[{id:"view_1",show3D:!0}]}},IsRenderedCallback.parameters={docs:{inlineStories:!1,iframeHeight:500,description:{story:"IsRenderedCallback will report in console when triggered"}}};const LightsStory=args=>{const[headLight,setHeadLight]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1),[ambientLight,setAmbientLight]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1),[pointLight,setPointLight]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1),[directionalLight,setDirectionalLight]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1),[headLightIntensity,setHeadLightIntensity]=react__WEBPACK_IMPORTED_MODULE_0__.useState(1),[ambientLightIntensity,setAmbientLightIntensity]=react__WEBPACK_IMPORTED_MODULE_0__.useState(1),[pointLightIntensity,setPointLightIntensity]=react__WEBPACK_IMPORTED_MODULE_0__.useState(1),[directionslLightIntensity,setDirectionslLightIntensity]=react__WEBPACK_IMPORTED_MODULE_0__.useState(1);let lights={};headLight&&(lights={...lights,headLight:{intensity:headLightIntensity}}),ambientLight&&(lights={...lights,ambientLight:{intensity:ambientLightIntensity}}),pointLight&&(lights={...lights,pointLights:[{intensity:pointLightIntensity,position:[-50,-50,-50],color:[0,255,0]}]}),directionalLight&&(lights={...lights,directionalLights:[{intensity:directionslLightIntensity,direction:[-1,0,-1],color:[255,0,0]}]});const props={lights:lights,...args};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Root,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_11__.Z,{direction:"row",alignItems:"center",spacing:10},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_11__.Z,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_11__.Z,{direction:"row",alignItems:"center"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",null,"Head Light "),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Switch__WEBPACK_IMPORTED_MODULE_10__.Z,{onClick:()=>{setHeadLight(!headLight)}})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Slider__WEBPACK_IMPORTED_MODULE_12__.ZP,{defaultValue:100,valueLabelDisplay:"auto",onChange:(_event,value)=>{setHeadLightIntensity(value/100)}})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_11__.Z,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_11__.Z,{direction:"row",alignItems:"center"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",null,"Ambient Light "),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Switch__WEBPACK_IMPORTED_MODULE_10__.Z,{onClick:()=>{setAmbientLight(!ambientLight)}})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Slider__WEBPACK_IMPORTED_MODULE_12__.ZP,{defaultValue:100,valueLabelDisplay:"auto",onChange:(_event,value)=>{setAmbientLightIntensity(value/100)}})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_11__.Z,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_11__.Z,{direction:"row",alignItems:"center"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",null,"Point Light "),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Switch__WEBPACK_IMPORTED_MODULE_10__.Z,{onClick:()=>{setPointLight(!pointLight)}})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Slider__WEBPACK_IMPORTED_MODULE_12__.ZP,{defaultValue:100,valueLabelDisplay:"auto",onChange:(_event,value)=>{setPointLightIntensity(value/100)}})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_11__.Z,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_11__.Z,{direction:"row",alignItems:"center"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",null,"Directional Light "),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Switch__WEBPACK_IMPORTED_MODULE_10__.Z,{onClick:()=>{setDirectionalLight(!directionalLight)}})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Slider__WEBPACK_IMPORTED_MODULE_12__.ZP,{defaultValue:100,valueLabelDisplay:"auto",onChange:(_event,value)=>{setDirectionslLightIntensity(value/100)}}))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:classes_main},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__.Z,props)))};LightsStory.args={id:"DeckGL-Map",bounds:[-100,-100,50,50],layers:[new _layers__WEBPACK_IMPORTED_MODULE_3__.AxesLayer({id:"polyhedral-cells-axes",bounds:[-100,-50,-50,50,50,50]}),new _deck_gl_mesh_layers_typed__WEBPACK_IMPORTED_MODULE_13__.Z({id:"sphere",data:[{}],mesh:new _luma_gl_engine__WEBPACK_IMPORTED_MODULE_14__.Z({nlat:100,nlong:100,radius:30}),wireframe:!1,getPosition:[-75,0,0],getColor:[255,255,255],material:!0}),new _layers__WEBPACK_IMPORTED_MODULE_3__.Grid3DLayer({id:"Grid3DLayer",material:!0,colorMapFunction:()=>[255,255,255],pointsData:_layers_grid3d_test_data_TruncatedSnubCube__WEBPACK_IMPORTED_MODULE_6__.wo.map((v=>35*v)),polysData:_layers_grid3d_test_data_TruncatedSnubCube__WEBPACK_IMPORTED_MODULE_6__.OQ,propertiesData:Array(_layers_grid3d_test_data_TruncatedSnubCube__WEBPACK_IMPORTED_MODULE_6__.sr).fill(0)})],views:{layout:[1,1],viewports:[{id:"view_1",show3D:!0}]}},LightsStory.parameters={docs:{inlineStories:!1,iframeHeight:500,description:{story:"Using different light sources"}}};const zoomBox3D=[-325,-450,-25,125,150,125],AutoZoomToBoxStory=args=>{const[rotX,setRotX]=react__WEBPACK_IMPORTED_MODULE_0__.useState(0),[rotZ,setRotZ]=react__WEBPACK_IMPORTED_MODULE_0__.useState(0),props={...args,cameraPosition:{rotationX:rotX,rotationOrbit:rotZ,zoom:zoomBox3D,target:[0,0,0]}};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Root,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",null,"Rotation X Axis "),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Slider__WEBPACK_IMPORTED_MODULE_12__.ZP,{defaultValue:50,valueLabelDisplay:"auto",onChange:(_event,value)=>{setRotX(2*(value/100-.5)*90)}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",null,"Rotation Z Axis "),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Slider__WEBPACK_IMPORTED_MODULE_12__.ZP,{defaultValue:50,valueLabelDisplay:"auto",onChange:(_event,value)=>{setRotZ(2*(value/100-.5)*180)}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:classes_main},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__.Z,props)))};AutoZoomToBoxStory.args={id:"DeckGL-Map",layers:[new _layers__WEBPACK_IMPORTED_MODULE_3__.AxesLayer({id:"polyhedral-cells-axes",bounds:zoomBox3D,ZIncreasingDownwards:!1}),new _deck_gl_mesh_layers_typed__WEBPACK_IMPORTED_MODULE_13__.Z({id:"sphere",data:[{}],mesh:new _luma_gl_engine__WEBPACK_IMPORTED_MODULE_14__.Z({nlat:100,nlong:100,radius:10}),wireframe:!1,getPosition:[0,0,0],getColor:[255,255,255],material:!0})],views:{layout:[1,1],viewports:[{id:"view_1",show3D:!0}]}},AutoZoomToBoxStory.parameters={docs:{inlineStories:!1,iframeHeight:500,description:{story:""}}},TooltipApi.parameters={...TooltipApi.parameters,docs:{...TooltipApi.parameters?.docs,source:{originalSource:"args => <SubsurfaceViewer {...args} />",...TooltipApi.parameters?.docs?.source}}},TooltipStyle.parameters={...TooltipStyle.parameters,docs:{...TooltipStyle.parameters?.docs,source:{originalSource:"args => <SubsurfaceViewer {...args} />",...TooltipStyle.parameters?.docs?.source}}},customizedCameraPosition.parameters={...customizedCameraPosition.parameters,docs:{...customizedCameraPosition.parameters?.docs,source:{originalSource:'args => {\n  const [state, setState] = React.useState(args.cameraPosition);\n  const getCameraPosition = React.useCallback((input: ViewStateType) => {\n    setState(input);\n    return input;\n  }, []);\n  return <>\n            <SubsurfaceViewer {...args} cameraPosition={args.cameraPosition} getCameraPosition={getCameraPosition} />\n            <div style={{\n      position: "absolute",\n      marginLeft: 200\n    }}>\n                <div>zoom: {state?.zoom}</div>\n                <div>rotationX: {state?.rotationX}</div>\n                <div>rotationOrbit: {state?.rotationOrbit}</div>\n                <div>targetX: {state?.target[0]}</div>\n                <div>targetY: {state?.target[1]}</div>\n            </div>\n        </>;\n}',...customizedCameraPosition.parameters?.docs?.source}}},MultiViewAnnotation.parameters={...MultiViewAnnotation.parameters,docs:{...MultiViewAnnotation.parameters?.docs,source:{originalSource:'args => <SubsurfaceViewer {...args}>\n        {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  /* @ts-expect-error */\n  <View id="view_1">\n                <ContinuousLegend min={-3071} max={41048} />\n                <ViewFooter>kH netmap</ViewFooter>\n            </View>}\n        {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  /* @ts-expect-error */\n  <View id="view_2">\n                <ContinuousLegend min={2725} max={3396} />\n                <ViewFooter>Hugin</ViewFooter>\n            </View>}\n    </SubsurfaceViewer>',...MultiViewAnnotation.parameters?.docs?.source}}},ViewObjectInitializedAsEmpty.parameters={...ViewObjectInitializedAsEmpty.parameters,docs:{...ViewObjectInitializedAsEmpty.parameters?.docs,source:{originalSource:'args => <SubsurfaceViewer {...args}>\n        {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  /* @ts-expect-error */\n  <View id="view_1">\n                <ContinuousLegend min={-3071} max={41048} />\n                <ViewFooter>kH netmap</ViewFooter>\n            </View>}\n        {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  /* @ts-expect-error */\n  <View id="view_2">\n                <ContinuousLegend min={2725} max={3396} />\n                <ViewFooter>Hugin</ViewFooter>\n            </View>}\n    </SubsurfaceViewer>',...ViewObjectInitializedAsEmpty.parameters?.docs?.source}}},DepthTest.parameters={...DepthTest.parameters,docs:{...DepthTest.parameters?.docs,source:{originalSource:"args => {\n  const props = {\n    ...args,\n    layers: [huginLayer, defaultWellsLayer, wellsLayerNoDepthTest]\n  };\n  return <>\n            <div>\n                <SubsurfaceViewer {...props} />\n            </div>\n            <h4>\n                View on the right depthTest for the wells layer property is set\n                to false and wells layer is given last so that it will be\n                painted on top. On the left parts of the wells are hidden\n                beneath the surface.\n            </h4>\n        </>;\n}",...DepthTest.parameters?.docs?.source}}},MouseEvent.parameters={...MouseEvent.parameters,docs:{...MouseEvent.parameters?.docs,source:{originalSource:"args => {\n  return <MouseEventStory {...args} />;\n}",...MouseEvent.parameters?.docs?.source}}},ViewStateSynchronization.parameters={...ViewStateSynchronization.parameters,docs:{...ViewStateSynchronization.parameters?.docs,source:{originalSource:"args => {\n  return <ViewStateSynchronizationStory {...args} />;\n}",...ViewStateSynchronization.parameters?.docs?.source}}},IsRenderedCallback.parameters={...IsRenderedCallback.parameters,docs:{...IsRenderedCallback.parameters?.docs,source:{originalSource:'(args: SubsurfaceViewerProps) => {\n  const [layers, setLayers] = React.useState(([defaultWellsLayer] as [WellsLayer, MapLayer?]));\n  const [label, setLabel] = React.useState("");\n  const handleChange = () => {\n    if (layers.length === 1) {\n      setLayers([defaultWellsLayer, meshMapLayerBig]);\n    } else if (layers.length === 2) {\n      setLayers([]);\n    } else {\n      setLayers([defaultWellsLayer]);\n    }\n  };\n  const props = {\n    ...args,\n    isRenderedCallback: (isLoaded: boolean) => {\n      console.log("isRenderedCallback", isLoaded);\n      setLabel(isLoaded ? "LOADED" : "NOT LOADED");\n      return;\n    },\n    layers\n  };\n  return <Root>\n            <div className={classes.main}>\n                <SubsurfaceViewer {...props} />\n            </div>\n            <label>{"Add big map layer "}</label>\n            <Switch onClick={handleChange} />\n            <label>{label}</label>\n        </Root>;\n}',...IsRenderedCallback.parameters?.docs?.source}}},LightsStory.parameters={...LightsStory.parameters,docs:{...LightsStory.parameters?.docs,source:{originalSource:'(args: SubsurfaceViewerProps) => {\n  const [headLight, setHeadLight] = React.useState(false);\n  const [ambientLight, setAmbientLight] = React.useState(false);\n  const [pointLight, setPointLight] = React.useState(false);\n  const [directionalLight, setDirectionalLight] = React.useState(false);\n  const [headLightIntensity, setHeadLightIntensity] = React.useState(1.0);\n  const [ambientLightIntensity, setAmbientLightIntensity] = React.useState(1.0);\n  const [pointLightIntensity, setPointLightIntensity] = React.useState(1.0);\n  const [directionslLightIntensity, setDirectionslLightIntensity] = React.useState(1.0);\n  let lights = ({} as LightsType);\n  if (headLight) {\n    lights = {\n      ...lights,\n      headLight: {\n        intensity: headLightIntensity\n      }\n    };\n  }\n  if (ambientLight) {\n    lights = {\n      ...lights,\n      ambientLight: {\n        intensity: ambientLightIntensity\n      }\n    };\n  }\n  if (pointLight) {\n    lights = {\n      ...lights,\n      pointLights: [{\n        intensity: pointLightIntensity,\n        position: [-50, -50, -50],\n        color: [0, 255, 0]\n      }]\n    };\n  }\n  if (directionalLight) {\n    lights = {\n      ...lights,\n      directionalLights: [{\n        intensity: directionslLightIntensity,\n        direction: [-1, 0, -1],\n        color: [255, 0, 0]\n      }]\n    };\n  }\n  const props = {\n    lights,\n    ...args\n  };\n  return <Root>\n            <Stack direction={"row"} alignItems={"center"} spacing={10}>\n                <Stack>\n                    <Stack direction={"row"} alignItems={"center"}>\n                        <label>{"Head Light "}</label>\n                        <Switch onClick={() => {\n            setHeadLight(!headLight);\n          }} />\n                    </Stack>\n                    <Slider defaultValue={100} valueLabelDisplay={"auto"} onChange={(_event: Event, value: number | number[]) => {\n          setHeadLightIntensity((value as number) / 100);\n        }} />\n                </Stack>\n\n                <Stack>\n                    <Stack direction={"row"} alignItems={"center"}>\n                        <label>{"Ambient Light "}</label>\n                        <Switch onClick={() => {\n            setAmbientLight(!ambientLight);\n          }} />\n                    </Stack>\n                    <Slider defaultValue={100} valueLabelDisplay={"auto"} onChange={(_event: Event, value: number | number[]) => {\n          setAmbientLightIntensity((value as number) / 100);\n        }} />\n                </Stack>\n\n                <Stack>\n                    <Stack direction={"row"} alignItems={"center"}>\n                        <label>{"Point Light "}</label>\n                        <Switch onClick={() => {\n            setPointLight(!pointLight);\n          }} />\n                    </Stack>\n                    <Slider defaultValue={100} valueLabelDisplay={"auto"} onChange={(_event: Event, value: number | number[]) => {\n          setPointLightIntensity((value as number) / 100);\n        }} />\n                </Stack>\n\n                <Stack>\n                    <Stack direction={"row"} alignItems={"center"}>\n                        <label>{"Directional Light "}</label>\n                        <Switch onClick={() => {\n            setDirectionalLight(!directionalLight);\n          }} />\n                    </Stack>\n                    <Slider defaultValue={100} valueLabelDisplay={"auto"} onChange={(_event: Event, value: number | number[]) => {\n          setDirectionslLightIntensity((value as number) / 100);\n        }} />\n                </Stack>\n            </Stack>\n            <div className={classes.main}>\n                <SubsurfaceViewer {...props} />\n            </div>\n        </Root>;\n}',...LightsStory.parameters?.docs?.source}}},AutoZoomToBoxStory.parameters={...AutoZoomToBoxStory.parameters,docs:{...AutoZoomToBoxStory.parameters?.docs,source:{originalSource:'(args: SubsurfaceViewerProps) => {\n  const [rotX, setRotX] = React.useState(0);\n  const [rotZ, setRotZ] = React.useState(0);\n  const cameraPosition: ViewStateType = {\n    rotationX: rotX,\n    rotationOrbit: rotZ,\n    zoom: zoomBox3D,\n    target: [0, 0, 0]\n  };\n  const props = {\n    ...args,\n    cameraPosition\n  };\n  return <Root>\n            <label>{"Rotation X Axis "}</label>\n            <Slider defaultValue={50} valueLabelDisplay={"auto"} onChange={(_event: Event, value: number | number[]) => {\n      const angle = 2 * ((value as number) / 100 - 0.5) * 90;\n      setRotX(angle);\n    }} />\n            <label>{"Rotation Z Axis "}</label>\n            <Slider defaultValue={50} valueLabelDisplay={"auto"} onChange={(_event: Event, value: number | number[]) => {\n      const angle = 2 * ((value as number) / 100 - 0.5) * 180;\n      setRotZ(angle);\n    }} />\n            <div className={classes.main}>\n                <SubsurfaceViewer {...props} />\n            </div>\n        </Root>;\n}',...AutoZoomToBoxStory.parameters?.docs?.source}}};const __namedExportsOrder=["TooltipApi","TooltipStyle","customizedCameraPosition","MultiViewAnnotation","ViewObjectInitializedAsEmpty","DepthTest","MouseEvent","ViewStateSynchronization","IsRenderedCallback","LightsStory","AutoZoomToBoxStory"];try{IsRenderedCallback.displayName="IsRenderedCallback",IsRenderedCallback.__docgenInfo={description:"",displayName:"IsRenderedCallback",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},resources:{defaultValue:null,description:"",name:"resources",required:!1,type:{name:"Record<string, unknown>"}},layers:{defaultValue:null,description:"",name:"layers",required:!1,type:{name:"Record<string, unknown>[] | LayersList"}},bounds:{defaultValue:null,description:"",name:"bounds",required:!1,type:{name:"[number, number, number, number] | BoundsAccessor"}},cameraPosition:{defaultValue:null,description:"",name:"cameraPosition",required:!1,type:{name:"ViewStateType"}},triggerHome:{defaultValue:null,description:"",name:"triggerHome",required:!1,type:{name:"number"}},views:{defaultValue:null,description:"",name:"views",required:!1,type:{name:"ViewsType"}},coords:{defaultValue:null,description:"",name:"coords",required:!1,type:{name:"{ visible?: boolean | null; multiPicking?: boolean | null; pickDepth?: number | null | undefined; } | undefined"}},scale:{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"{ visible?: boolean | null; incrementValue?: number | null; widthPerUnit?: number | null | undefined; cssStyle?: Record<string, unknown> | null | undefined; } | undefined"}},coordinateUnit:{defaultValue:null,description:"",name:"coordinateUnit",required:!1,type:{name:"enum",value:[{value:'"m"'},{value:'"mm"'},{value:'"cm"'},{value:'"km"'},{value:'"in"'},{value:'"ft-us"'},{value:'"ft"'},{value:'"mi"'},{value:'"mm2"'},{value:'"cm2"'},{value:'"m2"'},{value:'"ha"'},{value:'"km2"'},{value:'"in2"'},{value:'"ft2"'},{value:'"ac"'},{value:'"mi2"'},{value:'"mcg"'},{value:'"mg"'},{value:'"g"'},{value:'"kg"'},{value:'"oz"'},{value:'"lb"'},{value:'"mt"'},{value:'"t"'},{value:'"mm3"'},{value:'"cm3"'},{value:'"ml"'},{value:'"l"'},{value:'"kl"'},{value:'"m3"'},{value:'"km3"'},{value:'"tsp"'},{value:'"Tbs"'},{value:'"in3"'},{value:'"fl-oz"'},{value:'"cup"'},{value:'"pnt"'},{value:'"qt"'},{value:'"gal"'},{value:'"ft3"'},{value:'"yd3"'},{value:'"mm3/s"'},{value:'"cm3/s"'},{value:'"ml/s"'},{value:'"cl/s"'},{value:'"dl/s"'},{value:'"l/s"'},{value:'"l/min"'},{value:'"l/h"'},{value:'"kl/s"'},{value:'"kl/min"'},{value:'"kl/h"'},{value:'"m3/s"'},{value:'"m3/min"'},{value:'"m3/h"'},{value:'"km3/s"'},{value:'"tsp/s"'},{value:'"Tbs/s"'},{value:'"in3/s"'},{value:'"in3/min"'},{value:'"in3/h"'},{value:'"fl-oz/s"'},{value:'"fl-oz/min"'},{value:'"fl-oz/h"'},{value:'"cup/s"'},{value:'"pnt/s"'},{value:'"pnt/min"'},{value:'"pnt/h"'},{value:'"qt/s"'},{value:'"gal/s"'},{value:'"gal/min"'},{value:'"gal/h"'},{value:'"ft3/s"'},{value:'"ft3/min"'},{value:'"ft3/h"'},{value:'"yd3/s"'},{value:'"yd3/min"'},{value:'"yd3/h"'},{value:'"C"'},{value:'"F"'},{value:'"K"'},{value:'"R"'},{value:'"ns"'},{value:'"mu"'},{value:'"ms"'},{value:'"s"'},{value:'"min"'},{value:'"h"'},{value:'"d"'},{value:'"week"'},{value:'"month"'},{value:'"year"'},{value:'"Hz"'},{value:'"mHz"'},{value:'"kHz"'},{value:'"MHz"'},{value:'"GHz"'},{value:'"THz"'},{value:'"rpm"'},{value:'"deg/s"'},{value:'"rad/s"'},{value:'"m/s"'},{value:'"km/h"'},{value:'"m/h"'},{value:'"knot"'},{value:'"ft/s"'},{value:'"s/m"'},{value:'"min/km"'},{value:'"s/ft"'},{value:'"Pa"'},{value:'"hPa"'},{value:'"kPa"'},{value:'"MPa"'},{value:'"bar"'},{value:'"torr"'},{value:'"psi"'},{value:'"ksi"'},{value:'"b"'},{value:'"Kb"'},{value:'"Mb"'},{value:'"Gb"'},{value:'"Tb"'},{value:'"B"'},{value:'"KB"'},{value:'"MB"'},{value:'"GB"'},{value:'"TB"'},{value:'"lx"'},{value:'"ft-cd"'},{value:'"ppm"'},{value:'"ppb"'},{value:'"ppt"'},{value:'"ppq"'},{value:'"V"'},{value:'"mV"'},{value:'"kV"'},{value:'"A"'},{value:'"mA"'},{value:'"kA"'},{value:'"W"'},{value:'"mW"'},{value:'"kW"'},{value:'"MW"'},{value:'"GW"'},{value:'"VA"'},{value:'"mVA"'},{value:'"kVA"'},{value:'"MVA"'},{value:'"GVA"'},{value:'"VAR"'},{value:'"mVAR"'},{value:'"kVAR"'},{value:'"MVAR"'},{value:'"GVAR"'},{value:'"Wh"'},{value:'"mWh"'},{value:'"kWh"'},{value:'"MWh"'},{value:'"GWh"'},{value:'"J"'},{value:'"kJ"'},{value:'"VARh"'},{value:'"mVARh"'},{value:'"kVARh"'},{value:'"MVARh"'},{value:'"GVARH"'},{value:'"deg"'},{value:'"rad"'},{value:'"grad"'},{value:'"arcmin"'},{value:'"arcsec"'}]}},colorTables:{defaultValue:null,description:"",name:"colorTables",required:!1,type:{name:"colorTablesArray"}},editedData:{defaultValue:null,description:"",name:"editedData",required:!1,type:{name:"Record<string, unknown>"}},setProps:{defaultValue:null,description:"",name:"setProps",required:!1,type:{name:"((data: Record<string, unknown>) => void)"}},checkDatafileSchema:{defaultValue:null,description:"Validate JSON datafile against schema",name:"checkDatafileSchema",required:!1,type:{name:"boolean"}},onMouseEvent:{defaultValue:null,description:"For get mouse events",name:"onMouseEvent",required:!1,type:{name:"((event: MapMouseEvent) => void)"}},getCameraPosition:{defaultValue:null,description:"",name:"getCameraPosition",required:!1,type:{name:"((input: ViewStateType) => void)"}},isRenderedCallback:{defaultValue:null,description:"Will be called after all layers have rendered data.",name:"isRenderedCallback",required:!1,type:{name:"((arg: boolean) => void)"}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:"((info: PickingInfo, event: MjolnirGestureEvent) => void)"}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:"((info: PickingInfo, event: MjolnirGestureEvent) => void)"}},triggerResetMultipleWells:{defaultValue:null,description:"",name:"triggerResetMultipleWells",required:!1,type:{name:"number"}},selection:{defaultValue:null,description:"Range selection of the current well",name:"selection",required:!1,type:{name:"{ well: string; selection: [number, number | undefined] | undefined; } | undefined"}},getTooltip:{defaultValue:null,description:"Override default tooltip with a callback.",name:"getTooltip",required:!1,type:{name:"TooltipCallback"}},lights:{defaultValue:null,description:"",name:"lights",required:!1,type:{name:"LightsType"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/subsurface-viewer/src/SubsurfaceViewer.stories.tsx#IsRenderedCallback"]={docgenInfo:IsRenderedCallback.__docgenInfo,name:"IsRenderedCallback",path:"packages/subsurface-viewer/src/SubsurfaceViewer.stories.tsx#IsRenderedCallback"})}catch(__react_docgen_typescript_loader_error){}try{LightsStory.displayName="LightsStory",LightsStory.__docgenInfo={description:"",displayName:"LightsStory",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},resources:{defaultValue:null,description:"",name:"resources",required:!1,type:{name:"Record<string, unknown>"}},layers:{defaultValue:null,description:"",name:"layers",required:!1,type:{name:"Record<string, unknown>[] | LayersList"}},bounds:{defaultValue:null,description:"",name:"bounds",required:!1,type:{name:"[number, number, number, number] | BoundsAccessor"}},cameraPosition:{defaultValue:null,description:"",name:"cameraPosition",required:!1,type:{name:"ViewStateType"}},triggerHome:{defaultValue:null,description:"",name:"triggerHome",required:!1,type:{name:"number"}},views:{defaultValue:null,description:"",name:"views",required:!1,type:{name:"ViewsType"}},coords:{defaultValue:null,description:"",name:"coords",required:!1,type:{name:"{ visible?: boolean | null; multiPicking?: boolean | null; pickDepth?: number | null | undefined; } | undefined"}},scale:{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"{ visible?: boolean | null; incrementValue?: number | null; widthPerUnit?: number | null | undefined; cssStyle?: Record<string, unknown> | null | undefined; } | undefined"}},coordinateUnit:{defaultValue:null,description:"",name:"coordinateUnit",required:!1,type:{name:"enum",value:[{value:'"m"'},{value:'"mm"'},{value:'"cm"'},{value:'"km"'},{value:'"in"'},{value:'"ft-us"'},{value:'"ft"'},{value:'"mi"'},{value:'"mm2"'},{value:'"cm2"'},{value:'"m2"'},{value:'"ha"'},{value:'"km2"'},{value:'"in2"'},{value:'"ft2"'},{value:'"ac"'},{value:'"mi2"'},{value:'"mcg"'},{value:'"mg"'},{value:'"g"'},{value:'"kg"'},{value:'"oz"'},{value:'"lb"'},{value:'"mt"'},{value:'"t"'},{value:'"mm3"'},{value:'"cm3"'},{value:'"ml"'},{value:'"l"'},{value:'"kl"'},{value:'"m3"'},{value:'"km3"'},{value:'"tsp"'},{value:'"Tbs"'},{value:'"in3"'},{value:'"fl-oz"'},{value:'"cup"'},{value:'"pnt"'},{value:'"qt"'},{value:'"gal"'},{value:'"ft3"'},{value:'"yd3"'},{value:'"mm3/s"'},{value:'"cm3/s"'},{value:'"ml/s"'},{value:'"cl/s"'},{value:'"dl/s"'},{value:'"l/s"'},{value:'"l/min"'},{value:'"l/h"'},{value:'"kl/s"'},{value:'"kl/min"'},{value:'"kl/h"'},{value:'"m3/s"'},{value:'"m3/min"'},{value:'"m3/h"'},{value:'"km3/s"'},{value:'"tsp/s"'},{value:'"Tbs/s"'},{value:'"in3/s"'},{value:'"in3/min"'},{value:'"in3/h"'},{value:'"fl-oz/s"'},{value:'"fl-oz/min"'},{value:'"fl-oz/h"'},{value:'"cup/s"'},{value:'"pnt/s"'},{value:'"pnt/min"'},{value:'"pnt/h"'},{value:'"qt/s"'},{value:'"gal/s"'},{value:'"gal/min"'},{value:'"gal/h"'},{value:'"ft3/s"'},{value:'"ft3/min"'},{value:'"ft3/h"'},{value:'"yd3/s"'},{value:'"yd3/min"'},{value:'"yd3/h"'},{value:'"C"'},{value:'"F"'},{value:'"K"'},{value:'"R"'},{value:'"ns"'},{value:'"mu"'},{value:'"ms"'},{value:'"s"'},{value:'"min"'},{value:'"h"'},{value:'"d"'},{value:'"week"'},{value:'"month"'},{value:'"year"'},{value:'"Hz"'},{value:'"mHz"'},{value:'"kHz"'},{value:'"MHz"'},{value:'"GHz"'},{value:'"THz"'},{value:'"rpm"'},{value:'"deg/s"'},{value:'"rad/s"'},{value:'"m/s"'},{value:'"km/h"'},{value:'"m/h"'},{value:'"knot"'},{value:'"ft/s"'},{value:'"s/m"'},{value:'"min/km"'},{value:'"s/ft"'},{value:'"Pa"'},{value:'"hPa"'},{value:'"kPa"'},{value:'"MPa"'},{value:'"bar"'},{value:'"torr"'},{value:'"psi"'},{value:'"ksi"'},{value:'"b"'},{value:'"Kb"'},{value:'"Mb"'},{value:'"Gb"'},{value:'"Tb"'},{value:'"B"'},{value:'"KB"'},{value:'"MB"'},{value:'"GB"'},{value:'"TB"'},{value:'"lx"'},{value:'"ft-cd"'},{value:'"ppm"'},{value:'"ppb"'},{value:'"ppt"'},{value:'"ppq"'},{value:'"V"'},{value:'"mV"'},{value:'"kV"'},{value:'"A"'},{value:'"mA"'},{value:'"kA"'},{value:'"W"'},{value:'"mW"'},{value:'"kW"'},{value:'"MW"'},{value:'"GW"'},{value:'"VA"'},{value:'"mVA"'},{value:'"kVA"'},{value:'"MVA"'},{value:'"GVA"'},{value:'"VAR"'},{value:'"mVAR"'},{value:'"kVAR"'},{value:'"MVAR"'},{value:'"GVAR"'},{value:'"Wh"'},{value:'"mWh"'},{value:'"kWh"'},{value:'"MWh"'},{value:'"GWh"'},{value:'"J"'},{value:'"kJ"'},{value:'"VARh"'},{value:'"mVARh"'},{value:'"kVARh"'},{value:'"MVARh"'},{value:'"GVARH"'},{value:'"deg"'},{value:'"rad"'},{value:'"grad"'},{value:'"arcmin"'},{value:'"arcsec"'}]}},colorTables:{defaultValue:null,description:"",name:"colorTables",required:!1,type:{name:"colorTablesArray"}},editedData:{defaultValue:null,description:"",name:"editedData",required:!1,type:{name:"Record<string, unknown>"}},setProps:{defaultValue:null,description:"",name:"setProps",required:!1,type:{name:"((data: Record<string, unknown>) => void)"}},checkDatafileSchema:{defaultValue:null,description:"Validate JSON datafile against schema",name:"checkDatafileSchema",required:!1,type:{name:"boolean"}},onMouseEvent:{defaultValue:null,description:"For get mouse events",name:"onMouseEvent",required:!1,type:{name:"((event: MapMouseEvent) => void)"}},getCameraPosition:{defaultValue:null,description:"",name:"getCameraPosition",required:!1,type:{name:"((input: ViewStateType) => void)"}},isRenderedCallback:{defaultValue:null,description:"Will be called after all layers have rendered data.",name:"isRenderedCallback",required:!1,type:{name:"((arg: boolean) => void)"}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:"((info: PickingInfo, event: MjolnirGestureEvent) => void)"}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:"((info: PickingInfo, event: MjolnirGestureEvent) => void)"}},triggerResetMultipleWells:{defaultValue:null,description:"",name:"triggerResetMultipleWells",required:!1,type:{name:"number"}},selection:{defaultValue:null,description:"Range selection of the current well",name:"selection",required:!1,type:{name:"{ well: string; selection: [number, number | undefined] | undefined; } | undefined"}},getTooltip:{defaultValue:null,description:"Override default tooltip with a callback.",name:"getTooltip",required:!1,type:{name:"TooltipCallback"}},lights:{defaultValue:null,description:"",name:"lights",required:!1,type:{name:"LightsType"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/subsurface-viewer/src/SubsurfaceViewer.stories.tsx#LightsStory"]={docgenInfo:LightsStory.__docgenInfo,name:"LightsStory",path:"packages/subsurface-viewer/src/SubsurfaceViewer.stories.tsx#LightsStory"})}catch(__react_docgen_typescript_loader_error){}try{AutoZoomToBoxStory.displayName="AutoZoomToBoxStory",AutoZoomToBoxStory.__docgenInfo={description:"",displayName:"AutoZoomToBoxStory",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},resources:{defaultValue:null,description:"",name:"resources",required:!1,type:{name:"Record<string, unknown>"}},layers:{defaultValue:null,description:"",name:"layers",required:!1,type:{name:"Record<string, unknown>[] | LayersList"}},bounds:{defaultValue:null,description:"",name:"bounds",required:!1,type:{name:"[number, number, number, number] | BoundsAccessor"}},cameraPosition:{defaultValue:null,description:"",name:"cameraPosition",required:!1,type:{name:"ViewStateType"}},triggerHome:{defaultValue:null,description:"",name:"triggerHome",required:!1,type:{name:"number"}},views:{defaultValue:null,description:"",name:"views",required:!1,type:{name:"ViewsType"}},coords:{defaultValue:null,description:"",name:"coords",required:!1,type:{name:"{ visible?: boolean | null; multiPicking?: boolean | null; pickDepth?: number | null | undefined; } | undefined"}},scale:{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"{ visible?: boolean | null; incrementValue?: number | null; widthPerUnit?: number | null | undefined; cssStyle?: Record<string, unknown> | null | undefined; } | undefined"}},coordinateUnit:{defaultValue:null,description:"",name:"coordinateUnit",required:!1,type:{name:"enum",value:[{value:'"m"'},{value:'"mm"'},{value:'"cm"'},{value:'"km"'},{value:'"in"'},{value:'"ft-us"'},{value:'"ft"'},{value:'"mi"'},{value:'"mm2"'},{value:'"cm2"'},{value:'"m2"'},{value:'"ha"'},{value:'"km2"'},{value:'"in2"'},{value:'"ft2"'},{value:'"ac"'},{value:'"mi2"'},{value:'"mcg"'},{value:'"mg"'},{value:'"g"'},{value:'"kg"'},{value:'"oz"'},{value:'"lb"'},{value:'"mt"'},{value:'"t"'},{value:'"mm3"'},{value:'"cm3"'},{value:'"ml"'},{value:'"l"'},{value:'"kl"'},{value:'"m3"'},{value:'"km3"'},{value:'"tsp"'},{value:'"Tbs"'},{value:'"in3"'},{value:'"fl-oz"'},{value:'"cup"'},{value:'"pnt"'},{value:'"qt"'},{value:'"gal"'},{value:'"ft3"'},{value:'"yd3"'},{value:'"mm3/s"'},{value:'"cm3/s"'},{value:'"ml/s"'},{value:'"cl/s"'},{value:'"dl/s"'},{value:'"l/s"'},{value:'"l/min"'},{value:'"l/h"'},{value:'"kl/s"'},{value:'"kl/min"'},{value:'"kl/h"'},{value:'"m3/s"'},{value:'"m3/min"'},{value:'"m3/h"'},{value:'"km3/s"'},{value:'"tsp/s"'},{value:'"Tbs/s"'},{value:'"in3/s"'},{value:'"in3/min"'},{value:'"in3/h"'},{value:'"fl-oz/s"'},{value:'"fl-oz/min"'},{value:'"fl-oz/h"'},{value:'"cup/s"'},{value:'"pnt/s"'},{value:'"pnt/min"'},{value:'"pnt/h"'},{value:'"qt/s"'},{value:'"gal/s"'},{value:'"gal/min"'},{value:'"gal/h"'},{value:'"ft3/s"'},{value:'"ft3/min"'},{value:'"ft3/h"'},{value:'"yd3/s"'},{value:'"yd3/min"'},{value:'"yd3/h"'},{value:'"C"'},{value:'"F"'},{value:'"K"'},{value:'"R"'},{value:'"ns"'},{value:'"mu"'},{value:'"ms"'},{value:'"s"'},{value:'"min"'},{value:'"h"'},{value:'"d"'},{value:'"week"'},{value:'"month"'},{value:'"year"'},{value:'"Hz"'},{value:'"mHz"'},{value:'"kHz"'},{value:'"MHz"'},{value:'"GHz"'},{value:'"THz"'},{value:'"rpm"'},{value:'"deg/s"'},{value:'"rad/s"'},{value:'"m/s"'},{value:'"km/h"'},{value:'"m/h"'},{value:'"knot"'},{value:'"ft/s"'},{value:'"s/m"'},{value:'"min/km"'},{value:'"s/ft"'},{value:'"Pa"'},{value:'"hPa"'},{value:'"kPa"'},{value:'"MPa"'},{value:'"bar"'},{value:'"torr"'},{value:'"psi"'},{value:'"ksi"'},{value:'"b"'},{value:'"Kb"'},{value:'"Mb"'},{value:'"Gb"'},{value:'"Tb"'},{value:'"B"'},{value:'"KB"'},{value:'"MB"'},{value:'"GB"'},{value:'"TB"'},{value:'"lx"'},{value:'"ft-cd"'},{value:'"ppm"'},{value:'"ppb"'},{value:'"ppt"'},{value:'"ppq"'},{value:'"V"'},{value:'"mV"'},{value:'"kV"'},{value:'"A"'},{value:'"mA"'},{value:'"kA"'},{value:'"W"'},{value:'"mW"'},{value:'"kW"'},{value:'"MW"'},{value:'"GW"'},{value:'"VA"'},{value:'"mVA"'},{value:'"kVA"'},{value:'"MVA"'},{value:'"GVA"'},{value:'"VAR"'},{value:'"mVAR"'},{value:'"kVAR"'},{value:'"MVAR"'},{value:'"GVAR"'},{value:'"Wh"'},{value:'"mWh"'},{value:'"kWh"'},{value:'"MWh"'},{value:'"GWh"'},{value:'"J"'},{value:'"kJ"'},{value:'"VARh"'},{value:'"mVARh"'},{value:'"kVARh"'},{value:'"MVARh"'},{value:'"GVARH"'},{value:'"deg"'},{value:'"rad"'},{value:'"grad"'},{value:'"arcmin"'},{value:'"arcsec"'}]}},colorTables:{defaultValue:null,description:"",name:"colorTables",required:!1,type:{name:"colorTablesArray"}},editedData:{defaultValue:null,description:"",name:"editedData",required:!1,type:{name:"Record<string, unknown>"}},setProps:{defaultValue:null,description:"",name:"setProps",required:!1,type:{name:"((data: Record<string, unknown>) => void)"}},checkDatafileSchema:{defaultValue:null,description:"Validate JSON datafile against schema",name:"checkDatafileSchema",required:!1,type:{name:"boolean"}},onMouseEvent:{defaultValue:null,description:"For get mouse events",name:"onMouseEvent",required:!1,type:{name:"((event: MapMouseEvent) => void)"}},getCameraPosition:{defaultValue:null,description:"",name:"getCameraPosition",required:!1,type:{name:"((input: ViewStateType) => void)"}},isRenderedCallback:{defaultValue:null,description:"Will be called after all layers have rendered data.",name:"isRenderedCallback",required:!1,type:{name:"((arg: boolean) => void)"}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:"((info: PickingInfo, event: MjolnirGestureEvent) => void)"}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:"((info: PickingInfo, event: MjolnirGestureEvent) => void)"}},triggerResetMultipleWells:{defaultValue:null,description:"",name:"triggerResetMultipleWells",required:!1,type:{name:"number"}},selection:{defaultValue:null,description:"Range selection of the current well",name:"selection",required:!1,type:{name:"{ well: string; selection: [number, number | undefined] | undefined; } | undefined"}},getTooltip:{defaultValue:null,description:"Override default tooltip with a callback.",name:"getTooltip",required:!1,type:{name:"TooltipCallback"}},lights:{defaultValue:null,description:"",name:"lights",required:!1,type:{name:"LightsType"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/subsurface-viewer/src/SubsurfaceViewer.stories.tsx#AutoZoomToBoxStory"]={docgenInfo:AutoZoomToBoxStory.__docgenInfo,name:"AutoZoomToBoxStory",path:"packages/subsurface-viewer/src/SubsurfaceViewer.stories.tsx#AutoZoomToBoxStory"})}catch(__react_docgen_typescript_loader_error){}},"./packages/subsurface-viewer/src/components/ViewFooter.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{n:function(){return ViewFooter}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);const StyledViewFooter=(0,__webpack_require__("./node_modules/@mui/system/esm/styled.js").Z)("div")((({theme:theme})=>({position:"absolute",bottom:theme.spacing(0),right:theme.spacing(2),zIndex:999999,float:"right",backgroundColor:"#ffffffcc",color:"#000000ff",paddingLeft:"3px",display:"tableRow"}))),ViewFooter=({children:children})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(StyledViewFooter,null,children);ViewFooter.propTypes={children:prop_types__WEBPACK_IMPORTED_MODULE_2___default().any};try{ViewFooter.displayName="ViewFooter",ViewFooter.__docgenInfo={description:"",displayName:"ViewFooter",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/subsurface-viewer/src/components/ViewFooter.tsx#ViewFooter"]={docgenInfo:ViewFooter.__docgenInfo,name:"ViewFooter",path:"packages/subsurface-viewer/src/components/ViewFooter.tsx#ViewFooter"})}catch(__react_docgen_typescript_loader_error){}},"./packages/subsurface-viewer/src/layers/grid3d/test_data/TruncatedSnubCube.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{OQ:function(){return Faces},sr:function(){return VertexCount},wo:function(){return Points}});const C0=.03022517647727011,C1=.03630716729159513,C2=.040977806224636225,C3=.04564293957876494,C4=.051724930393089966,C5=.08744289047276839,C6=.08897531081303763,C7=.09641163211454777,C8=.10383500001768008,C9=.10536742035794933,C10=.2450214662773631,C11=.25213479294506524,C12=.25578852648697925,C13=.2594078935254808,C14=.266521220193183,C15=.30296894256435697,C16=.3107539819206035,C17=.3137398958061564,C18=.3166836571239303,C19=.32446869648017684,C20=.3415821603133315,C21=.3421516282996725,C22=.3496389843387572,C23=.35707936458297945,C24=.35764883256932045,C25=.3919404789469772,C26=.40221538330780837,C27=.40271740948195195,C28=.40316532850196596,C29=.4134402328627971,C30=.4223523523667726,C31=.4257635648947752,C32=.43136191452063516,C33=.43690230845586675,C34=.44031352098386933,C35=.4714793574054987,C36=.47546003791984226,C37=.4804922200139097,C38=.4854598455082518,C39=.4894405260225954,C40=.6319974061364817,C41=.6358614860540425,C42=.6398421665683861,C43=.6410027320851348,C44=.6420771755897583,C45=.6439380803776656,C46=.647947477795688,C47=.6499219360216627,C49=.6855579590791095,C48=.6519281583100315,C50=.6889691716071121,C51=.6930683858709402,C52=.697074482834414,C53=.7004856953624166,C54=.7657290432607724,C55=.7691698956742122,C56=.7697393636605533,C57=.7720413833524075,C58=.7732108302879603,C59=.7742763923737797,C60=.7747913160528183,C61=.7797391712489629,C62=.7803086392353038,C63=.7805887324654148,C64=.9227051570193641,C65=.9237364928727411,C66=.9244082055612856,C67=.9268980705658701,C68=.9274353460160546,C69=.9278480157600277,C70=.9303378807646123,C71=.9310095934531567,C72=.9320409293065338,Points=[C72,-C25,-C2,-C72,C25,-C2,C25,C72,-C2,-C25,-C72,-C2,C71,-C15,C12,-C71,C15,C12,C15,C71,C12,-C15,-C71,C12,C10,C70,-C17,-C10,-C70,-C17,C70,-C10,-C17,-C70,C10,-C17,C0,C69,C27,-C0,-C69,C27,C69,-C0,C27,-C69,C0,C27,C28,-C1,-C68,-C28,C1,-C68,C1,C28,-C68,-C1,-C28,-C68,C26,C3,C68,-C26,-C3,C68,C3,-C26,C68,-C3,C26,C68,C18,-C11,C68,-C18,C11,C68,C11,C18,C68,-C11,-C18,C68,C16,C13,-C68,-C16,-C13,-C68,C13,-C16,-C68,-C13,C16,-C68,C4,-C67,-C27,-C4,C67,-C27,C67,C4,-C27,-C67,-C4,-C27,C14,-C66,C17,-C14,C66,C17,C66,C14,C17,-C66,-C14,C17,C65,C19,-C12,-C65,-C19,-C12,C19,-C65,-C12,-C19,C65,-C12,C64,C29,C2,-C64,-C29,C2,C29,-C64,C2,-C29,C64,C2,C63,-C40,-C7,-C63,C40,-C7,C40,C63,-C7,-C40,-C63,-C7,C62,-C35,C32,-C62,C35,C32,C35,C62,C32,-C35,-C62,C32,C30,C61,-C37,-C30,-C61,-C37,C61,-C30,-C37,-C61,C30,-C37,C38,-C31,C60,-C38,C31,C60,C31,C38,C60,-C31,-C38,C60,C36,C33,-C60,-C36,-C33,-C60,C33,-C36,-C60,-C33,C36,-C60,C5,C59,C43,-C5,-C59,C43,C59,-C5,C43,-C59,C5,C43,C44,-C6,-C58,-C44,C6,-C58,C6,C44,-C58,-C6,-C44,-C58,C42,C8,C58,-C42,-C8,C58,C8,-C42,C58,-C8,C42,C58,C9,-C57,-C43,-C9,C57,-C43,C57,C9,-C43,-C57,-C9,-C43,C34,-C56,C37,-C34,C56,C37,C56,C34,C37,-C56,-C34,C37,C55,C39,-C32,-C55,-C39,-C32,C39,-C55,-C32,-C39,C55,-C32,C54,C47,C7,-C54,-C47,C7,C47,-C54,C7,-C47,C54,C7,C53,-C41,-C22,-C53,C41,-C22,C41,C53,-C22,-C41,-C53,-C22,C20,C52,C45,-C20,-C52,C45,C52,-C20,C45,-C52,C20,C45,C46,-C21,-C51,-C46,C21,-C51,C21,C46,-C51,-C21,-C46,-C51,C42,C23,C51,-C42,-C23,C51,C23,-C42,C51,-C23,C42,C51,C24,-C50,-C45,-C24,C50,-C45,C50,C24,-C45,-C50,-C24,-C45,C49,C48,C22,-C49,-C48,C22,C48,-C49,C22,-C48,C49,C22],Faces=[8,0,10,34,40,44,38,14,4,8,1,11,35,41,45,39,15,5,8,2,8,33,43,47,37,12,6,8,3,9,32,42,46,36,13,7,8,16,30,19,29,17,31,18,28,8,20,26,23,25,21,27,22,24,6,52,102,60,110,84,118,6,53,103,61,111,85,119,6,54,100,62,108,86,116,6,55,101,63,109,87,117,6,56,98,88,114,64,106,6,57,99,89,115,65,107,6,58,96,90,112,66,104,6,59,97,91,113,67,105,6,0,4,52,118,94,48,6,1,5,53,119,95,49,6,2,6,54,116,92,50,6,3,7,55,117,93,51,6,8,56,106,74,81,33,6,9,57,107,75,80,32,6,10,58,104,72,82,34,6,11,59,105,73,83,35,6,12,37,85,111,79,68,6,13,36,84,110,78,69,6,14,38,86,108,76,70,6,15,39,87,109,77,71,6,16,28,64,114,82,72,6,17,29,65,115,83,73,6,18,31,67,113,81,74,6,19,30,66,112,80,75,6,20,24,60,102,70,76,6,21,25,61,103,71,77,6,22,27,63,101,69,78,6,23,26,62,100,68,79,6,40,88,98,50,92,44,6,41,89,99,51,93,45,6,42,90,96,48,94,46,6,43,91,97,49,95,47,5,0,48,96,58,10,5,1,49,97,59,11,5,2,50,98,56,8,5,3,51,99,57,9,5,4,14,70,102,52,5,5,15,71,103,53,5,6,12,68,100,54,5,7,13,69,101,55,5,16,72,104,66,30,5,17,73,105,67,31,5,18,74,106,64,28,5,19,75,107,65,29,5,20,76,108,62,26,5,21,77,109,63,27,5,22,78,110,60,24,5,23,79,111,61,25,5,32,80,112,90,42,5,33,81,113,91,43,5,34,82,114,88,40,5,35,83,115,89,41,5,36,46,94,118,84,5,37,47,95,119,85,5,38,44,92,116,86,5,39,45,93,117,87],VertexCount=354}}]);