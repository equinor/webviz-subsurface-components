/*! For license information please see 534.8c7b3e8c.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[534],{"./packages/well-log-viewer/src/components/CallbackManager.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{T:function(){return CallbackManager}});class CallbackManager{constructor(wellLogSetsGetter){this.getWellLogSets=wellLogSetsGetter,this.welllog=()=>this.getWellLogSets()?.[0],this.controller=null,this.onCreateControllerCallbacks=[],this.onInfoCallbacks=[],this.onContentRescaleCallbacks=[],this.onContentSelectionCallbacks=[],this.onTemplateChangedCallbacks=[],this.onChangePrimaryAxisCallbacks=[],this.onInfoFilledCallbacks=[],this.onCreateController=this.onCreateController.bind(this),this.onInfo=this.onInfo.bind(this),this.onInfoFilled=this.onInfoFilled.bind(this),this.onContentRescale=this.onContentRescale.bind(this),this.onContentSelection=this.onContentSelection.bind(this),this.onTemplateChanged=this.onTemplateChanged.bind(this),this.onChangePrimaryAxis=this.onChangePrimaryAxis.bind(this)}unregisterAll(){for(const key in this)key.indexOf("Callbacks")>=0&&(this[key].length=0)}registerCallback(name,callback,userDefined){let table=this[name+"Callbacks"];if(!table){if(!userDefined)return void console.log("CallbackManager.registerCallback: "+name+"s not found");table=this[name+"Callbacks"]=[]}table.push(callback)}unregisterCallback(name,callback){const table=this[name+"Callbacks"];table?this[name+"Callbacks"]=table.filter((p=>p!==callback)):console.log("CallbackManager.unregisterCallback: "+name+"Callbacks not found")}callCallbacks(name,...args){const table=this[name+"Callbacks"];if(table)for(const callback of table)callback(...args)}onCreateController(controller){this.controller=controller;for(const onCreateController of this.onCreateControllerCallbacks)onCreateController(controller)}onInfo(x,logController,iFrom,iTo){for(const onInfo of this.onInfoCallbacks)onInfo(x,logController,iFrom,iTo)}onInfoFilled(infos){for(const onInfoFilled of this.onInfoFilledCallbacks)onInfoFilled(infos)}onContentRescale(){for(const onContentRescale of this.onContentRescaleCallbacks)onContentRescale()}onContentSelection(){for(const onContentSelection of this.onContentSelectionCallbacks)onContentSelection()}onTemplateChanged(){for(const onTemplateChanged of this.onTemplateChangedCallbacks)onTemplateChanged()}onChangePrimaryAxis(value){for(const onChangePrimaryAxis of this.onChangePrimaryAxisCallbacks)onChangePrimaryAxis(value)}updateInfo(){const wellLogView=this.controller;wellLogView?.setInfo()}}},"./packages/well-log-viewer/src/components/WellLogAxesPanel.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return components_WellLogAxesPanel}});var react=__webpack_require__("./node_modules/react/index.js");class AxisSelector extends react.Component{createItem(label,value){return react.createElement("div",{key:value},react.createElement("input",{type:"radio",value:value,checked:this.props.value===value,onChange:ev=>{this.props.onChange(ev.target.value)}}),label)}render(){return this.props.autoHide&&this.props.axes.length<=1?react.createElement(react.Fragment,null):react.createElement("div",{className:"axis-selector"},react.createElement("fieldset",null,react.createElement("legend",null,this.props.header),this.props.axes.map((axis=>this.createItem(this.props.axisTitles?this.props.axisTitles[axis]:axis,axis)))))}}var components_AxisSelector=AxisSelector;AxisSelector.__docgenInfo={description:"",methods:[{name:"createItem",docblock:null,modifiers:[],params:[{name:"label",optional:!1,type:{name:"string"}},{name:"value",optional:!1,type:{name:"string"}}],returns:{type:{name:"ReactNode"}}}],displayName:"AxisSelector",props:{header:{required:!1,tsType:{name:"union",raw:"string | JSX.Element",elements:[{name:"string"},{name:"JSX.Element"}]},description:""},axes:{required:!0,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:""},axisTitles:{required:!0,tsType:{name:"Record",elements:[{name:"string"},{name:"string"}],raw:"Record<string, string>"},description:""},value:{required:!0,tsType:{name:"string"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:""},autoHide:{required:!1,tsType:{name:"boolean"},description:"Hide the component when only one axis is available"}}};var tracks=__webpack_require__("./packages/well-log-viewer/src/utils/tracks.ts");class WellLogAxesPanel extends react.Component{constructor(props){super(props),this.wellLogSets=this.props.callbackManager.getWellLogSets()??[];const axes=(0,tracks.Dy)(this.wellLogSets,this.props.axisMnemos);this.state={axes:axes,primaryAxis:this.props.primaryAxis},this.onChangePrimaryAxis=this.onChangePrimaryAxis.bind(this)}registerCallbacks(callbackManager){callbackManager?.registerCallback("onChangePrimaryAxis",this.onChangePrimaryAxis)}unregisterCallbacks(callbackManager){callbackManager?.unregisterCallback("onChangePrimaryAxis",this.onChangePrimaryAxis)}componentDidMount(){this.registerCallbacks(this.props.callbackManager)}componentWillUnmount(){this.unregisterCallbacks(this.props.callbackManager)}componentDidUpdate(prevProps){prevProps.callbackManager!==this.props.callbackManager&&(this.unregisterCallbacks(prevProps.callbackManager),this.registerCallbacks(this.props.callbackManager));const wellog=this.props.callbackManager?.getWellLogSets();if(this.wellLogSets!==wellog||prevProps.axisMnemos!==this.props.axisMnemos){this.wellLogSets=wellog;const axes=(0,tracks.Dy)(this.wellLogSets??[],this.props.axisMnemos);this.setState({axes:axes})}}onChangePrimaryAxis(value){this.setState({primaryAxis:value})}render(){return react.createElement("div",{className:"axes-selector"},react.createElement(components_AxisSelector,{header:this.props.header,axes:this.state.axes,value:this.state.primaryAxis,axisTitles:this.props.axisTitles,onChange:value=>this.props.onChangePrimaryAxis(value),autoHide:this.props.autoHide}))}}var components_WellLogAxesPanel=WellLogAxesPanel;WellLogAxesPanel.__docgenInfo={description:"",methods:[{name:"registerCallbacks",docblock:null,modifiers:[],params:[{name:"callbackManager",optional:!1,type:{name:"CallbackManager",alias:"CallbackManager"}}],returns:{type:{name:"void"}}},{name:"unregisterCallbacks",docblock:null,modifiers:[],params:[{name:"callbackManager",optional:!1,type:{name:"CallbackManager",alias:"CallbackManager"}}],returns:{type:{name:"void"}}},{name:"onChangePrimaryAxis",docblock:null,modifiers:[],params:[{name:"value",optional:!1,type:{name:"string"}}],returns:{type:{name:"void"}}}],displayName:"WellLogAxesPanel",props:{callbackManager:{required:!0,tsType:{name:"CallbackManager"},description:""},header:{required:!1,tsType:{name:"union",raw:"string | JSX.Element",elements:[{name:"string"},{name:"JSX.Element"}]},description:""},axisTitles:{required:!0,tsType:{name:"Record",elements:[{name:"string"},{name:"string"}],raw:"Record<string, string>"},description:"Log mnemonics for axes"},axisMnemos:{required:!0,tsType:{name:"Record",elements:[{name:"string"},{name:"Array",elements:[{name:"string"}],raw:"string[]"}],raw:"Record<string, string[]>"},description:"Names for axes"},primaryAxis:{required:!0,tsType:{name:"string"},description:""},onChangePrimaryAxis:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:""},autoHide:{required:!1,tsType:{name:"boolean"},description:"Hide the component when only one axis is available"}}}},"./packages/well-log-viewer/src/components/WellLogInfoPanel.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return components_WellLogInfoPanel}});var react=__webpack_require__("./node_modules/react/index.js");class InfoPanel extends react.Component{constructor(props){super(props),this.createRow=this.createRow.bind(this)}onRowClick(info){this.props.onGroupClick?.(info)}createGroupRow(info){return react.createElement("tr",{className:"group-row",key:"_group_"+info.trackId+"."+info.name,onClick:()=>this.onRowClick(info)},react.createElement("td",{style:{color:info.color}},info.collapsed?"►":"▼"),react.createElement("td",{colSpan:3,className:"group-row-name"},info.name))}createRow(info){if("separator"===info.type)return function createSeparator(info){return react.createElement("tr",{key:"_separator_"+info.trackId+"."+info.name},react.createElement("td",{colSpan:4}," ",react.createElement("hr",null)))}(info);if(void 0!==info.groupStart)return this.createGroupRow(info);let name=info.name||"?";const tooltip=name;let maxLen=11;name.length>maxLen&&(name=name.substring(0,maxLen-2)+"…");let value=function formatValue(value){if(!Number.isFinite(value))return"";if(Number.isInteger(value))return value.toFixed(0);let v=value.toPrecision(4);if(v.indexOf(".")>=0)for(;;){let l=v.length;if(!l--)break;if("0"!==v[l])break;v=v.substring(0,l)}return v}(info.value);info.discrete&&(value=info.discrete+(value?" ("+value+")":"")),""===value&&(value=" ");return react.createElement("tr",{key:info.trackId+"."+info.name},react.createElement("td",{className:"row-info",style:{color:info.color}},"⬤"),react.createElement("td",{className:"row-name",title:tooltip}),react.createElement("td",{className:"row-value",colSpan:info.discrete?2:1,title:value}),!info.discrete&&react.createElement("td",{className:"row-units",title:info.units}))}render(){const header=this.props.header;return react.createElement("div",{className:"readout"},react.createElement("fieldset",null,header&&react.createElement("legend",null,header),react.createElement("table",null,react.createElement("tbody",null,this.props.infos?.map(this.createRow.bind(this))))))}}var components_InfoPanel=InfoPanel;InfoPanel.__docgenInfo={description:"",methods:[{name:"onRowClick",docblock:null,modifiers:[],params:[{name:"info",optional:!1,type:{name:"Info",alias:"Info"}}],returns:{type:{name:"void"}}},{name:"createGroupRow",docblock:null,modifiers:[],params:[{name:"info",optional:!1,type:{name:"Info",alias:"Info"}}],returns:{type:{name:"ReactNode"}}},{name:"createRow",docblock:null,modifiers:[],params:[{name:"info",optional:!1,type:{name:"Info",alias:"Info"}}],returns:{type:{name:"ReactNode"}}}],displayName:"InfoPanel",props:{header:{required:!1,tsType:{name:"union",raw:"string | JSX.Element",elements:[{name:"string"},{name:"JSX.Element"}]},description:""},infos:{required:!0,tsType:{name:"Array",elements:[{name:"Info"}],raw:"Info[]"},description:""},onGroupClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(info: Info) => void",signature:{arguments:[{type:{name:"Info"},name:"info"}],return:{name:"void"}}},description:""}}};__webpack_require__("./packages/well-log-viewer/src/components/SidePanel.scss");class WellLogInfoPanel extends react.Component{constructor(props){super(props),this.state={infos:[]},this.collapsedTrackIds=[],this.onInfoFilled=this.onInfoFilled.bind(this),this.onGroupClick=void 0}registerCallBacks(callbackManager){callbackManager&&(callbackManager.registerCallback("onInfoFilled",this.onInfoFilled),this.onGroupClick=callbackManager.callCallbacks.bind(callbackManager,"onInfoGroupClick"))}unregisterCallBacks(callbackManager){callbackManager&&(this.onGroupClick=void 0,callbackManager.unregisterCallback("onInfoFilled",this.onInfoFilled))}componentDidMount(){const callbackManager=this.props.callbackManager;this.registerCallBacks(callbackManager),callbackManager.updateInfo()}componentWillUnmount(){const callbackManager=this.props.callbackManager;this.unregisterCallBacks(callbackManager)}componentDidUpdate(prevProps){prevProps.callbackManager!==this.props.callbackManager&&(this.unregisterCallBacks(prevProps.callbackManager),this.registerCallBacks(this.props.callbackManager)),!this.props.readoutOptions||prevProps.readoutOptions&&this.props.readoutOptions.allTracks===prevProps.readoutOptions.allTracks&&this.props.readoutOptions.grouping===prevProps.readoutOptions.grouping||this.props.callbackManager.updateInfo()}onInfoFilled(infos){this.setState({infos:infos})}render(){return react.createElement(components_InfoPanel,{header:this.props.header,infos:this.state.infos,onGroupClick:this.onGroupClick})}}var components_WellLogInfoPanel=WellLogInfoPanel;WellLogInfoPanel.__docgenInfo={description:"",methods:[{name:"registerCallBacks",docblock:null,modifiers:[],params:[{name:"callbackManager",optional:!1,type:{name:"union",raw:"CallbackManager | undefined",elements:[{name:"CallbackManager"},{name:"undefined"}]}}],returns:{type:{name:"void"}}},{name:"unregisterCallBacks",docblock:null,modifiers:[],params:[{name:"callbackManager",optional:!1,type:{name:"union",raw:"CallbackManager | undefined",elements:[{name:"CallbackManager"},{name:"undefined"}]}}],returns:{type:{name:"void"}}},{name:"onInfoFilled",docblock:null,modifiers:[],params:[{name:"infos",optional:!1,type:{name:"Array",elements:[{name:"Info"}],raw:"Info[]"}}],returns:{type:{name:"void"}}}],displayName:"WellLogInfoPanel",props:{callbackManager:{required:!0,tsType:{name:"CallbackManager"},description:""},header:{required:!1,tsType:{name:"union",raw:"string | JSX.Element",elements:[{name:"string"},{name:"JSX.Element"}]},description:""},readoutOptions:{required:!1,tsType:{name:"InfoOptions"},description:""}}}},"./packages/well-log-viewer/src/components/WellLogLayout.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");__webpack_require__("./packages/well-log-viewer/src/components/WellLogLayout.scss");class WellLogLayout extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props)}createPanel(panel){return"function"==typeof panel?panel(this.props.parent):panel}render(){const center=this.createPanel(this.props.center);let header,left,right,top,bottom,footer;const layout=this.props.layout;return layout?(header=this.createPanel(layout.header),left=this.createPanel(layout.left),right=this.createPanel(layout.right),top=this.createPanel(layout.top),bottom=this.createPanel(layout.bottom),footer=this.createPanel(layout.footer)):(header=void 0,left=void 0,right=void 0,top=void 0,bottom=void 0,footer=void 0),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"welllog-layout"},header&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"header-footer"},header),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"interior"},left&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"left-right"},left),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"middle"},top&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"top-bottom"},top),center,bottom&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"top-bottom"},bottom)),right&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"left-right"},right)),footer&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"header-footer"},footer))}}__webpack_exports__.A=WellLogLayout,WellLogLayout.__docgenInfo={description:"",methods:[{name:"createPanel",docblock:null,modifiers:[],params:[{name:"panel",optional:!0,type:{name:"union",raw:"JSX.Element | string | ((parent: Parent) => JSX.Element)",elements:[{name:"JSX.Element"},{name:"string"},{name:"unknown"}]}}],returns:{type:{name:"union",raw:"JSX.Element | string | undefined",elements:[{name:"JSX.Element"},{name:"string"},{name:"undefined"}]}}}],displayName:"WellLogLayout",props:{parent:{required:!0,tsType:{name:"Parent"},description:""},center:{required:!1,tsType:{name:"union",raw:"((parent: Parent) => JSX.Element) | JSX.Element | string",elements:[{name:"unknown"},{name:"JSX.Element"},{name:"string"}]},description:""},layout:{required:!1,tsType:{name:"ViewerLayout",elements:[{name:"Parent"}],raw:"ViewerLayout<Parent>"},description:""}}}},"./packages/well-log-viewer/src/components/WellLogZoomSlider.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_ZoomSlider__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/well-log-viewer/src/components/ZoomSlider.tsx");class WellLogZoomSlider extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.state={zoomValue:1},this.onContentRescale=this.onContentRescale.bind(this),this.onZoomSliderChange=this.onZoomSliderChange.bind(this)}registerCallbacks(callbackManager){callbackManager?.registerCallback("onContentRescale",this.onContentRescale)}unregisterCallbacks(callbackManager){callbackManager?.unregisterCallback("onContentRescale",this.onContentRescale)}componentDidMount(){this.registerCallbacks(this.props.callbackManager)}componentWillUnmount(){this.unregisterCallbacks(this.props.callbackManager)}componentDidUpdate(prevProps){prevProps.callbackManager!==this.props.callbackManager&&(this.unregisterCallbacks(prevProps.callbackManager),this.registerCallbacks(this.props.callbackManager))}onContentRescale(){this.setState((state=>{const controller=this.props.callbackManager?.controller;if(!controller)return null;const zoom=controller.getContentZoom();return Math.abs(Math.log(state.zoomValue/zoom))<.01?null:{zoomValue:zoom}}))}onZoomSliderChange(zoom){this.props.callbackManager?.controller?.zoomContent(zoom)}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"zoom"},this.props.label&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"zoom-label"},this.props.label),react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"zoom-value"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ZoomSlider__WEBPACK_IMPORTED_MODULE_1__.A,{value:this.state.zoomValue,max:this.props.max,onChange:this.onZoomSliderChange})))}}__webpack_exports__.A=WellLogZoomSlider,WellLogZoomSlider.__docgenInfo={description:"",methods:[{name:"registerCallbacks",docblock:null,modifiers:[],params:[{name:"callbackManager",optional:!1,type:{name:"union",raw:"CallbackManager | undefined",elements:[{name:"CallbackManager"},{name:"undefined"}]}}],returns:{type:{name:"void"}}},{name:"unregisterCallbacks",docblock:null,modifiers:[],params:[{name:"callbackManager",optional:!1,type:{name:"union",raw:"CallbackManager | undefined",elements:[{name:"CallbackManager"},{name:"undefined"}]}}],returns:{type:{name:"void"}}},{name:"onContentRescale",docblock:null,modifiers:[],params:[],returns:{type:{name:"void"}}},{name:"onZoomSliderChange",docblock:null,modifiers:[],params:[{name:"zoom",optional:!1,type:{name:"number"}}],returns:{type:{name:"void"}}}],displayName:"WellLogZoomSlider",props:{callbackManager:{required:!0,tsType:{name:"union",raw:"CallbackManager | undefined",elements:[{name:"CallbackManager"},{name:"undefined"}]},description:""},label:{required:!1,tsType:{name:"union",raw:"string | JSX.Element",elements:[{name:"string"},{name:"JSX.Element"}]},description:""},max:{required:!1,tsType:{name:"number"},description:""}}}},"./packages/well-log-viewer/src/components/ZoomSlider.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material_Slider__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mui/material/Slider/Slider.js");function convertLevelToValue(level){return 2**level}function convertValueToLevel(value){return value>0?Math.log2(value):0}function valueLabelFormat(value){return value.toFixed(Number.isInteger(value)||value>20?0:1)}class ZoomSlider extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props);const level=convertValueToLevel(this.props.value);this.state={level:level},this.onChange=this.onChange.bind(this)}componentDidUpdate(prevProps){this.props.value!==prevProps.value&&this.setState((state=>{const level=convertValueToLevel(this.props.value);return state.level===level?null:{level:level}}))}onChange(_event,level){"number"==typeof level&&this.setState((state=>state.level===level?null:(this.props.onChange?this.props.onChange(convertLevelToValue(level)):console.error("ZoomSlider props.onChange not set"),{level:level})))}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Slider__WEBPACK_IMPORTED_MODULE_1__.Ay,{value:this.state.level,defaultValue:0,min:0,step:this.props.step||.5,max:convertValueToLevel(this.props.max||256),scale:convertLevelToValue,onChange:this.onChange,getAriaValueText:valueLabelFormat,valueLabelFormat:valueLabelFormat,"aria-labelledby":"non-linear-slider",valueLabelDisplay:"auto"})}}__webpack_exports__.A=ZoomSlider,ZoomSlider.__docgenInfo={description:"",methods:[{name:"onChange",docblock:null,modifiers:[],params:[{name:"_event",optional:!1,type:{name:"Event",alias:"Event"}},{name:"level",optional:!1,type:{name:"union",raw:"number | number[]",elements:[{name:"number"},{name:"Array",elements:[{name:"number"}],raw:"number[]"}]}}],returns:{type:{name:"void"}}}],displayName:"ZoomSlider",props:{onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: number) => void",signature:{arguments:[{type:{name:"number"},name:"value"}],return:{name:"void"}}},description:""},value:{required:!0,tsType:{name:"number"},description:""},max:{required:!1,tsType:{name:"number"},description:""},step:{required:!1,tsType:{name:"number"},description:""}}}},"./packages/well-log-viewer/src/utils/edit-track.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{D:function(){return onTrackMouseEventDefault}});var react=__webpack_require__("./node_modules/react/index.js"),client=__webpack_require__("./node_modules/react-dom/client.js"),tracks=__webpack_require__("./packages/well-log-viewer/src/utils/tracks.ts"),Menu=__webpack_require__("./node_modules/@mui/material/Menu/Menu.js"),MenuItem=__webpack_require__("./node_modules/@mui/material/MenuItem/MenuItem.js"),well_log=__webpack_require__("./packages/well-log-viewer/src/utils/well-log.ts");function getPlotTitle(plot,wellLogSets){let title="";const legend=plot.options.legendInfo();if(legend){legend.label&&(title=legend.label);const legend2=legend;legend2.serie1&&legend2.serie1.label&&(title=legend2.serie1.label),legend2.serie2&&legend2.serie2.label&&(title+=" – "+legend2.serie2.label)}return title||(title=(0,well_log.s0)(wellLogSets,plot.id)?.name??""),title}class SimpleMenu extends react.Component{constructor(props){super(props),this.state={anchorEl:this.props.anchorEl};const wellLogView=this.props.wellLogView;this.addTrack=wellLogView.addTrack.bind(wellLogView,this.state.anchorEl,this.props.track),this.editTrack=wellLogView.editTrack.bind(wellLogView,this.state.anchorEl,this.props.track),this.removeTrack=wellLogView.removeTrack.bind(wellLogView,this.props.track),this.addPlot=wellLogView.addPlot.bind(wellLogView,this.state.anchorEl,this.props.track),this.editPlots=editPlots.bind(null,this.state.anchorEl,wellLogView,this.props.track),this.removePlots=removePlots.bind(null,this.state.anchorEl,wellLogView,this.props.track)}componentDidUpdate(prevProps){this.props.anchorEl!==prevProps.anchorEl&&this.setState(((_state,props)=>({anchorEl:props.anchorEl})))}closeMenu(){this.setState({anchorEl:null})}handleContextMenu(ev){ev.preventDefault(),this.closeMenu()}handleCloseMenu(){this.closeMenu()}handleClickItem(action){action&&action(),this.closeMenu()}createRemovePlotMenuItem(title,plot){return react.createElement(MenuItem.A,{key:plot.id,onClick:()=>this.handleClickItem(this.props.wellLogView.removeTrackPlot.bind(this.props.wellLogView,this.props.track,plot))},"    ",title)}menuRemovePlotItems(){const nodes=[],wellLogSets=this.props.wellLogView.wellLogSets;if(!wellLogSets.length)return nodes;const plots=this.props.track.plots;for(const plot of plots){const title=getPlotTitle(plot,wellLogSets);nodes.push(this.createRemovePlotMenuItem(title,plot))}return nodes}createEditPlotMenuItem(title,plot){return react.createElement(MenuItem.A,{key:plot.id,onClick:()=>this.handleClickItem(this.props.wellLogView.editPlot.bind(this.props.wellLogView,this.state.anchorEl,this.props.track,plot))},"    ",title)}menuEditPlotItems(){const nodes=[],wellLogSets=this.props.wellLogView.wellLogSets;if(!wellLogSets.length)return nodes;const plots=this.props.track.plots;for(const plot of plots){const title=getPlotTitle(plot,wellLogSets);nodes.push(this.createEditPlotMenuItem(title,plot))}return nodes}createMenuItem(title,action){return react.createElement(MenuItem.A,{key:title,onClick:()=>this.handleClickItem(action)},"    ",title)}render(){if("removePlots"===this.props.type)return react.createElement("div",{className:"local-menu"},react.createElement(Menu.A,{id:"simple-menu",anchorEl:this.state.anchorEl,keepMounted:!0,open:Boolean(this.state.anchorEl),onClose:this.handleCloseMenu.bind(this),onContextMenu:this.handleContextMenu.bind(this)},this.menuRemovePlotItems()));if("editPlots"===this.props.type)return react.createElement("div",{className:"local-menu"},react.createElement(Menu.A,{id:"simple-menu",anchorEl:this.state.anchorEl,keepMounted:!0,open:Boolean(this.state.anchorEl),onClose:this.handleCloseMenu.bind(this),onContextMenu:this.handleContextMenu.bind(this)},this.menuEditPlotItems()));if("title"===this.props.type)return react.createElement("div",{className:"local-menu"},react.createElement(Menu.A,{id:"simple-menu",anchorEl:this.state.anchorEl,open:Boolean(this.state.anchorEl),onClose:this.handleCloseMenu.bind(this),onContextMenu:this.handleContextMenu.bind(this)},this.createMenuItem("Add track",this.addTrack),this.createMenuItem("Edit track",this.editTrack),this.createMenuItem("Remove track",this.removeTrack)));const track=this.props.track,plots=track.plots;return react.createElement("div",{className:"local-menu"},react.createElement(Menu.A,{id:"simple-menu",anchorEl:this.state.anchorEl,keepMounted:!0,open:Boolean(this.state.anchorEl),onClose:this.handleCloseMenu.bind(this),onContextMenu:this.handleContextMenu.bind(this)},(track=>track.options.plotFactory?[this.createMenuItem("Add plot",this.addPlot)]:(0,tracks.Q1)(track)?[]:[this.createMenuItem("Edit track",this.editTrack)])(track),plots&&plots.length?[this.createMenuItem("Edit plot",this.editPlots),this.createMenuItem("Remove plot",this.removePlots)]:[]))}}function editPlots(parent,wellLogView,track){const plots=track.plots;if(plots&&plots.length<=1)return void(1===plots.length&&wellLogView.editPlot(parent,track,plots[0]));const el=document.createElement("div");el.style.width="10px",el.style.height="13px",parent&&parent.appendChild(el),(0,client.H)(el).render(react.createElement(SimpleMenu,{type:"editPlots",anchorEl:el,wellLogView:wellLogView,track:track}))}function removePlots(parent,wellLogView,track){const plots=track.plots;if(plots&&plots.length<=1)return void(1===plots.length&&wellLogView.removeTrackPlot(track,plots[0]));const el=document.createElement("div");el.style.width="10px",el.style.height="13px",parent&&parent.appendChild(el),(0,client.H)(el).render(react.createElement(SimpleMenu,{type:"removePlots",anchorEl:el,wellLogView:wellLogView,track:track}))}function onTrackMouseEventDefault(wellLogView,ev){const track=ev.track;if("click"===ev.type)wellLogView.selectTrack(track,!wellLogView.isTrackSelected(track));else if("dblclick"===ev.type)if(wellLogView.selectTrack(track,!0),"title"===ev.area)wellLogView.editTrack(ev.element,ev.track);else{const plot=ev.plot;plot?wellLogView.editPlot(ev.element,ev.track,plot):editPlots(ev.element,wellLogView,ev.track)}else if("contextmenu"===ev.type){wellLogView.selectTrack(track,!0);const el=document.createElement("div");el.style.width="10px",el.style.height="3px",ev.element.appendChild(el),(0,client.H)(el).render(react.createElement(SimpleMenu,{type:ev.area,anchorEl:el,wellLogView:wellLogView,track:track}))}}SimpleMenu.__docgenInfo={description:"",methods:[{name:"closeMenu",docblock:null,modifiers:[],params:[],returns:{type:{name:"void"}}},{name:"handleContextMenu",docblock:null,modifiers:[],params:[{name:"ev",optional:!1,type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLElement>",elements:[{name:"HTMLElement"}],alias:"React.MouseEvent"}}],returns:{type:{name:"void"}}},{name:"handleCloseMenu",docblock:null,modifiers:[],params:[],returns:{type:{name:"void"}}},{name:"handleClickItem",docblock:null,modifiers:[],params:[{name:"action",optional:!0,type:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}}}],returns:{type:{name:"void"}}},{name:"createRemovePlotMenuItem",docblock:null,modifiers:[],params:[{name:"title",optional:!1,type:{name:"string"}},{name:"plot",optional:!1,type:{name:"Plot",alias:"Plot"}}],returns:{type:{name:"ReactNode"}}},{name:"menuRemovePlotItems",docblock:null,modifiers:[],params:[],returns:{type:{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]"}}},{name:"createEditPlotMenuItem",docblock:null,modifiers:[],params:[{name:"title",optional:!1,type:{name:"string"}},{name:"plot",optional:!1,type:{name:"Plot",alias:"Plot"}}],returns:{type:{name:"ReactNode"}}},{name:"menuEditPlotItems",docblock:null,modifiers:[],params:[],returns:{type:{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]"}}},{name:"createMenuItem",docblock:null,modifiers:[],params:[{name:"title",optional:!1,type:{name:"string"}},{name:"action",optional:!0,type:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}}}],returns:{type:{name:"ReactNode"}}}],displayName:"SimpleMenu",props:{anchorEl:{required:!0,tsType:{name:"HTMLElement"},description:""},wellLogView:{required:!0,tsType:{name:"WellLogView"},description:""},track:{required:!0,tsType:{name:"Track"},description:""},type:{required:!0,tsType:{name:"string"},description:""},plotName:{required:!1,tsType:{name:"string"},description:""}}}},"./packages/well-log-viewer/src/utils/fill-info.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{r:function(){return fillInfos}});var _equinor_videx_wellog__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@equinor/videx-wellog/dist/index.umd.js"),_tracks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/well-log-viewer/src/utils/tracks.ts");function getValueOnInterval(x,rowPrev,row,type){if(null===rowPrev[0])return Number.NaN;if("linestep"===type)return null===row[1]?Number.NaN:row[1];const d=row[0]-rowPrev[0],f=x-rowPrev[0];if("dot"===type)return f<.5*d?null===rowPrev[1]?Number.NaN:rowPrev[1]:null===row[1]?Number.NaN:row[1];if(null===rowPrev[1])return Number.NaN;if(null===row[1])return Number.NaN;return f*(d?(row[1]-rowPrev[1])/d:1)+rowPrev[1]}function getValue(x,data,type){const v=Number.NaN;if(Number.isFinite(x)){const n=data.length;for(let i=0;i<n;i++){const row=data[i];if(x<row[0]){if(!i)break;return getValueOnInterval(x,data[i-1],row,type)}}}return v}function fillInfos(x,logController,iFrom,iTo,collapsedTrackIds,options){const infos=[],tracks=logController.tracks;!function addScaleTrackInfos(infos,x,logController,tracks){const interpolator=logController.scaleHandler.interpolator,x2=interpolator&&!isNaN(x)?interpolator.reverse(x):Number.NaN;let iPlot=0;for(const _track of tracks){if(!(0,_tracks__WEBPACK_IMPORTED_MODULE_1__.Q1)(_track))continue;const track=_track,_x=track.options.mode?x2:x;infos.push({name:track.options.abbr,units:track.options.units,color:0===iPlot?"black":"grey",value:_x,type:"",iTrack:-1,trackId:track.id}),iPlot++}infos.push({color:"",value:Number.NaN,type:"separator",iTrack:-1,trackId:tracks[0]?.id||"separator"})}(infos,x,logController,tracks);const allTracks=options?.allTracks,grouping=options?.grouping;let iTrack=0;for(const _track of tracks){if((0,_tracks__WEBPACK_IMPORTED_MODULE_1__.Q1)(_track))continue;const visible=allTracks||iFrom<=iTrack&&iTrack<iTo;if(iTrack++,!visible)continue;const collapsed=collapsedTrackIds&&collapsedTrackIds.indexOf(_track.id)>=0,track=_track;if("by_track"===grouping&&track.plots&&track.plots.length&&infos.push({name:track.options.label,color:"",value:Number.NaN,type:"track",collapsed:collapsed,iTrack:iTrack-1,trackId:track.id,groupStart:"!"}),!collapsed)if(_track instanceof _equinor_videx_wellog__WEBPACK_IMPORTED_MODULE_0__.StackedTrack){const trackStacked=_track,d=trackStacked.data;let discrete="",value=Number.NaN,color="";if(d)for(let i=0;i<d.length;i++){const p=d[i];if(p.from<=x&&x<=p.to){value=p.code,discrete=p.name,color="rgb("+p.color.r+","+p.color.g+","+p.color.b+")";break}}infos.push({name:trackStacked.options.abbr,units:"",color:color,value:value,discrete:discrete,type:"stacked",iTrack:iTrack-1,trackId:trackStacked.id})}else for(const plot of track.plots){const type=(0,_tracks__WEBPACK_IMPORTED_MODULE_1__.Kc)(plot);let data=plot.data;"differential"===type&&(data=plot.data[0]);const options=plot.options,optionsDifferential=plot.options,options1=optionsDifferential.serie1,options2=optionsDifferential.serie2,legend=options.legendInfo(),legendDifferential=legend,legend1=legendDifferential.serie1,legend2=legendDifferential.serie2;infos.push({name:legend1?legend1.label:legend.label,units:legend1?legend1.unit:legend.unit,color:(options1?options1.color:options.color)||"",value:getValue(x,data,type),type:type,iTrack:iTrack-1,trackId:track.id}),"differential"===type&&(data=plot.data[1],infos.push({name:legend2.label,units:legend2.unit,color:(options2?options2.color:options.color)||"",value:getValue(x,data,type),type:type,iTrack:iTrack-1,trackId:"_"+track.id}))}}return infos}},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./packages/well-log-viewer/src/components/SidePanel.scss":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".side-panel{min-width:255px;max-width:255px;font-size:12px;display:flex;flex-direction:column;height:100%}.side-panel .readout{overflow-y:auto;overflow-x:hidden}.side-panel .readout table{border-spacing:0px;width:100%}.side-panel .readout table .group-row{cursor:pointer}.side-panel .readout table .group-row .group-row-name{font-weight:bold}.side-panel .readout table .row-info{font-size:smaller}.side-panel .readout table .row-name{min-width:110px;max-width:110px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.side-panel .readout table .row-name:before{content:attr(title)}.side-panel .readout table .row-value{min-width:50px;max-width:50px;padding-left:.5em;text-align:right;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.side-panel .readout table .row-value:before{content:attr(title)}.side-panel .readout table .row-units{min-width:35px;max-width:35px;padding-left:.5em;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.side-panel .readout table .row-units:before{content:attr(title)}.side-panel .zoom{padding-top:5px;padding-left:10px;display:flex}.side-panel .zoom .zoom-label{padding-top:6px;padding-right:8px}.side-panel .zoom .zoom-value{flex:1 1 100px;padding:0 20px 0 10px}.side-panel .scale{padding-left:10px;display:flex}.side-panel .scale .scale-label{padding-top:4px;padding-right:8px}","",{version:3,sources:["webpack://./packages/well-log-viewer/src/components/SidePanel.scss"],names:[],mappings:"AACA,YACE,eAAA,CACA,eAAA,CACA,cAAA,CACA,YAAA,CACA,qBAAA,CACA,WAAA,CAMA,qBACE,eAAA,CACA,iBAAA,CAIA,2BACE,kBAAA,CACA,UAAA,CAEA,sCACE,cAAA,CACA,sDACE,gBAAA,CAIJ,qCACE,iBAAA,CAGF,qCACE,eAAA,CACA,eAAA,CACA,kBAAA,CACA,sBAAA,CACA,eAAA,CACA,4CACE,mBAAA,CAIJ,sCACE,cAAA,CACA,cAAA,CACA,iBAAA,CACA,gBAAA,CACA,kBAAA,CACA,sBAAA,CACA,eAAA,CACA,6CACE,mBAAA,CAIJ,sCACE,cAAA,CACA,cAAA,CACA,iBAAA,CACA,kBAAA,CACA,sBAAA,CACA,eAAA,CACA,6CACE,mBAAA,CAKR,kBACE,eAAA,CACA,iBAAA,CACA,YAAA,CACA,8BACI,eAAA,CACA,iBAAA,CAEJ,8BACI,cAAA,CACA,qBAAA,CAGN,mBACE,iBAAA,CACA,YAAA,CACA,gCACE,eAAA,CACA,iBAAA",sourceRoot:""}]),__webpack_exports__.default=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./packages/well-log-viewer/src/components/WellLogLayout.scss":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".welllog-layout{height:100%;width:100%;display:flex;flex-direction:column}.welllog-layout .header-footer{flex:0;width:100%}.welllog-layout .interior{flex:1;height:0pt;width:100%;display:flex;flex-direction:row}.welllog-layout .top-bottom{flex:0}.welllog-layout .middle{flex:1;height:100%;width:0pt;display:flex;flex-direction:column}.welllog-layout .left-right{flex:0;height:100%}","",{version:3,sources:["webpack://./packages/well-log-viewer/src/components/WellLogLayout.scss"],names:[],mappings:"AAAA,gBACE,WAAA,CACA,UAAA,CACA,YAAA,CACA,qBAAA,CACA,+BACE,MAAA,CACA,UAAA,CAEF,0BACE,MAAA,CACA,UAAA,CACA,UAAA,CACA,YAAA,CACA,kBAAA,CAEF,4BACE,MAAA,CAEF,wBACE,MAAA,CACA,WAAA,CACA,SAAA,CACA,YAAA,CACA,qBAAA,CAEF,4BACE,MAAA,CACA,WAAA",sourceRoot:""}]),__webpack_exports__.default=___CSS_LOADER_EXPORT___},"./packages/well-log-viewer/src/components/SidePanel.scss":function(module,__unused_webpack_exports,__webpack_require__){var content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./packages/well-log-viewer/src/components/SidePanel.scss");content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[module.id,content,""]]),content.locals&&(module.exports=content.locals);(0,__webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js").A)("8a4d0ca2",content,!0,{})},"./packages/well-log-viewer/src/components/WellLogLayout.scss":function(module,__unused_webpack_exports,__webpack_require__){var content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./packages/well-log-viewer/src/components/WellLogLayout.scss");content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[module.id,content,""]]),content.locals&&(module.exports=content.locals);(0,__webpack_require__("./node_modules/vue-style-loader/lib/addStylesClient.js").A)("d0395562",content,!0,{})}}]);