"use strict";(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[4708],{"./packages/subsurface-viewer/src/storybook/components/colorLegends/SingleScaleForMap.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ContinuousLegendForSubsurfaceViewer:function(){return ContinuousLegendForSubsurfaceViewer},__namedExportsOrder:function(){return __namedExportsOrder}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),lodash__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/lodash/lodash.js"),_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@emerson-eps/color-tables/dist/index.js"),_emerson_eps_color_tables_dist_component_Legend_constants__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@emerson-eps/color-tables/dist/component/Legend/constants.js"),_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/subsurface-viewer/src/SubsurfaceViewer.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const stories={parameters:{storySource:{source:'function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from "react";\nimport { styled } from "@mui/material/styles";\nimport { omit } from "lodash";\nimport { ContinuousLegend, colorTables } from "@emerson-eps/color-tables";\nimport { DEFAULT_STYLE as defaultLegendStyle } from "@emerson-eps/color-tables/dist/component/Legend/constants";\nimport SubsurfaceViewer from "../../../SubsurfaceViewer";\nconst stories = {\n  component: SubsurfaceViewer,\n  title: "SubsurfaceViewer/Components/ColorLegends"\n};\nexport default stories;\nconst PREFIX = "SingleScaleForMap";\nconst classes = {\n  main: `${PREFIX}-main`,\n  legend: `${PREFIX}-legend`\n};\nconst Root = styled("div")({\n  [`& .${classes.main}`]: {\n    height: 500,\n    width: "100%",\n    border: "1px solid black",\n    position: "absolute"\n  },\n  [`& .${classes.legend}`]: {\n    zIndex: 999,\n    opacity: 1\n  }\n});\n\n// Remove the left and top keys from the default legend style\n// The Legends from @emerson-eps/color-tables do overwrite the style to {"position": absolute} and cssLegendStyles prop :(\nconst legendStyle = omit(defaultLegendStyle, ["left", "top"]);\nconst defaultProps = {\n  id: "SubsurfaceViewer",\n  resources: {\n    propertyMap: "propertyMap.png"\n  },\n  bounds: [432150, 6475800, 439400, 6481500]\n};\nconst layers = [{\n  "@@type": "ColormapLayer",\n  image: "@@#resources.propertyMap",\n  rotDeg: 0,\n  bounds: [432205, 6475078, 437720, 6481113],\n  valueRange: [2782, 3513],\n  colorMapRange: [2782, 3513]\n}];\n\n// prop for legend\nconst min = 0;\nconst max = 0.35;\nconst dataObjectName = "Legend";\nconst position = [16, 10];\nconst horizontal = true;\nconst reverseRange = false;\n\n// 4 maps with same color scale for all maps\n// ContinuousLegend is overwriting the style to {"position": absolute} and cssLegendStyles :(\nconst SubsurfaceViewerWithLegend = args => {\n  const updatedLayerData = [{\n    ...args.layers[0],\n    colorMapName: args.colorName\n  }];\n  return /*#__PURE__*/React.createElement(Root, {\n    className: classes.main\n  }, /*#__PURE__*/React.createElement("div", {\n    className: classes.legend\n  }, /*#__PURE__*/React.createElement(ContinuousLegend, _extends({\n    cssLegendStyles: {\n      ...legendStyle,\n      right: "0vw",\n      top: "0vh"\n    }\n  }, args))), /*#__PURE__*/React.createElement(SubsurfaceViewer, _extends({}, args, {\n    layers: updatedLayerData\n  })));\n};\nexport const ContinuousLegendForSubsurfaceViewer = {\n  name: "ContinuousLegend For SubsurfaceViewer",\n  parameters: {\n    docs: {\n      description: {\n        story: "Four maps with same color scale for all maps"\n      },\n      inlineStories: false,\n      iframeHeight: 500\n    }\n  },\n  args: {\n    min,\n    max,\n    dataObjectName,\n    position,\n    horizontal,\n    colorTables,\n    colorName: "Rainbow",\n    layers,\n    ...defaultProps,\n    legend: {\n      visible: false\n    },\n    zoom: -5,\n    reverseRange,\n    views: {\n      layout: [2, 2],\n      showLabel: true,\n      viewports: [{\n        id: "view_1",\n        name: "Colormap layer 1",\n        show3D: false,\n        layerIds: ["colormap-layer"]\n      }, {\n        id: "view_2",\n        name: "Colormap layer 2",\n        show3D: false,\n        layerIds: ["colormap-layer"]\n      }, {\n        id: "view_3",\n        name: "Colormap layer 3",\n        show3D: false,\n        layerIds: ["colormap-layer"]\n      }, {\n        id: "view_4",\n        name: "Colormap layer 4",\n        show3D: false,\n        layerIds: ["colormap-layer"]\n      }]\n    }\n  },\n  render: args => /*#__PURE__*/React.createElement(SubsurfaceViewerWithLegend, args)\n};',locationsMap:{"continuous-legend-for-subsurface-viewer":{startLoc:{col:51,line:79},endLoc:{col:1,line:132},startBody:{col:51,line:79},endBody:{col:1,line:132}}}}},component:_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_4__.Z,title:"SubsurfaceViewer/Components/ColorLegends"};__webpack_exports__.default=stories;const classes={main:"SingleScaleForMap-main",legend:"SingleScaleForMap-legend"},Root=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_5__.ZP)("div")({[`& .${classes.main}`]:{height:500,width:"100%",border:"1px solid black",position:"absolute"},[`& .${classes.legend}`]:{zIndex:999,opacity:1}}),legendStyle=(0,lodash__WEBPACK_IMPORTED_MODULE_1__.omit)(_emerson_eps_color_tables_dist_component_Legend_constants__WEBPACK_IMPORTED_MODULE_3__.P,["left","top"]),SubsurfaceViewerWithLegend=args=>{const updatedLayerData=[{...args.layers[0],colorMapName:args.colorName}];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Root,{className:classes.main},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:classes.legend},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_2__.sG,_extends({cssLegendStyles:{...legendStyle,right:"0vw",top:"0vh"}},args))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_4__.Z,_extends({},args,{layers:updatedLayerData})))},ContinuousLegendForSubsurfaceViewer={name:"ContinuousLegend For SubsurfaceViewer",parameters:{docs:{description:{story:"Four maps with same color scale for all maps"},inlineStories:!1,iframeHeight:500}},args:{min:0,max:.35,dataObjectName:"Legend",position:[16,10],horizontal:!0,colorTables:_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_2__.Su,colorName:"Rainbow",layers:[{"@@type":"ColormapLayer",image:"@@#resources.propertyMap",rotDeg:0,bounds:[432205,6475078,437720,6481113],valueRange:[2782,3513],colorMapRange:[2782,3513]}],id:"SubsurfaceViewer",resources:{propertyMap:"propertyMap.png"},bounds:[432150,6475800,439400,6481500],legend:{visible:!1},zoom:-5,reverseRange:!1,views:{layout:[2,2],showLabel:!0,viewports:[{id:"view_1",name:"Colormap layer 1",show3D:!1,layerIds:["colormap-layer"]},{id:"view_2",name:"Colormap layer 2",show3D:!1,layerIds:["colormap-layer"]},{id:"view_3",name:"Colormap layer 3",show3D:!1,layerIds:["colormap-layer"]},{id:"view_4",name:"Colormap layer 4",show3D:!1,layerIds:["colormap-layer"]}]}},render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(SubsurfaceViewerWithLegend,args)};ContinuousLegendForSubsurfaceViewer.parameters={...ContinuousLegendForSubsurfaceViewer.parameters,docs:{...ContinuousLegendForSubsurfaceViewer.parameters?.docs,source:{originalSource:'{\n  name: "ContinuousLegend For SubsurfaceViewer",\n  parameters: {\n    docs: {\n      description: {\n        story: "Four maps with same color scale for all maps"\n      },\n      inlineStories: false,\n      iframeHeight: 500\n    }\n  },\n  args: {\n    min,\n    max,\n    dataObjectName,\n    position,\n    horizontal,\n    colorTables,\n    colorName: "Rainbow",\n    layers,\n    ...defaultProps,\n    legend: {\n      visible: false\n    },\n    zoom: -5,\n    reverseRange,\n    views: {\n      layout: [2, 2],\n      showLabel: true,\n      viewports: [{\n        id: "view_1",\n        name: "Colormap layer 1",\n        show3D: false,\n        layerIds: ["colormap-layer"]\n      }, {\n        id: "view_2",\n        name: "Colormap layer 2",\n        show3D: false,\n        layerIds: ["colormap-layer"]\n      }, {\n        id: "view_3",\n        name: "Colormap layer 3",\n        show3D: false,\n        layerIds: ["colormap-layer"]\n      }, {\n        id: "view_4",\n        name: "Colormap layer 4",\n        show3D: false,\n        layerIds: ["colormap-layer"]\n      }]\n    }\n  },\n  render: args => <SubsurfaceViewerWithLegend {...args} />\n}',...ContinuousLegendForSubsurfaceViewer.parameters?.docs?.source}}};const __namedExportsOrder=["ContinuousLegendForSubsurfaceViewer"]}}]);