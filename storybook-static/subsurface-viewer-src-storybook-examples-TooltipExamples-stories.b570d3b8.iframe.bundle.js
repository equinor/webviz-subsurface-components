"use strict";(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[8956],{"./packages/subsurface-viewer/src/storybook/examples/TooltipExamples.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{MouseEvent:function(){return MouseEvent},TooltipApi:function(){return TooltipApi},TooltipStyle:function(){return TooltipStyle},__namedExportsOrder:function(){return __namedExportsOrder}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),d3_format__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/d3-format/src/defaultLocale.js"),_deck_gl_core_typed__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@deck.gl/core/dist/esm/views/view.js"),_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/subsurface-viewer/src/SubsurfaceViewer.tsx"),_components_InfoCard__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/subsurface-viewer/src/components/InfoCard.tsx"),_components_ViewFooter__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/subsurface-viewer/src/components/ViewFooter.tsx"),_sharedSettings__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/subsurface-viewer/src/storybook/sharedSettings.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const stories={parameters:{storySource:{source:'function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from "react";\nimport { format } from "d3-format";\nimport { View } from "@deck.gl/core/typed";\nimport SubsurfaceViewer from "../../SubsurfaceViewer";\nimport InfoCard from "../../components/InfoCard";\nimport { ViewFooter } from "../../components/ViewFooter";\nimport { huginMapNetmapPropLayerPng, volveWellsBounds, volveWellsLayer, volveWellsWithLogsLayer } from "../sharedSettings";\nconst stories = {\n  component: SubsurfaceViewer,\n  title: "SubsurfaceViewer/Examples/Tooltip",\n  args: {\n    // Add a reset button for all the stories.\n    // Somehow, I do not manage to add the triggerHome to the general "unset" controls :/\n    triggerHome: 0\n  }\n};\nexport default stories;\nconst mdTooltip = info => {\n  if (!info.picked) return null;\n  const value = info?.properties?.[0].value;\n  if (!value) return null;\n  const f = format(".2f");\n  const niceValue = f(+value);\n  return "MD: " + niceValue;\n};\nexport const TooltipApi = {\n  args: {\n    layers: [{\n      ...volveWellsLayer,\n      lineStyle: {\n        width: 7\n      }\n    }],\n    getTooltip: mdTooltip,\n    bounds: volveWellsBounds\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: "Example of overriding the default tooltip, showing measured depth (MD) instead of the default behavior, which is to show the well name."\n      },\n      inlineStories: false,\n      iframeHeight: 500\n    }\n  }\n};\nconst processPropInfo = (properties, filter) => {\n  if (!properties) {\n    return "";\n  }\n  let outputString = "";\n  if (typeof filter == "boolean") {\n    if (filter) {\n      properties.forEach(ppobj => {\n        outputString += `\\n${ppobj["name"]} : ${ppobj["value"]}`;\n      });\n    }\n  } else {\n    // filter is not boolean - thus it is a string array and we should check each property\n    properties.forEach(ppobj => {\n      if (filter.includes(ppobj["name"])) {\n        outputString += `\\n${ppobj["name"]} : ${ppobj["value"]}`;\n      }\n    });\n  }\n  return outputString;\n};\nconst tooltipImpFunc = info => {\n  if (!info.picked || !info.layer) {\n    return null;\n  }\n  const outputObject = {};\n  const layerName = info.layer.constructor.name;\n  let outputString = "";\n  if (layerName === "MapLayer") {\n    const layerProps = info.layer.props;\n    const layerName = layerProps.name;\n    const properties = info.properties;\n    outputString += `Property: ${layerName}`;\n    outputString += processPropInfo(properties, true);\n  } else if (layerName === "WellsLayer") {\n    const wellsPickInfo = info;\n    const wellsPickInfoObject = info.object;\n    const wellProperties = wellsPickInfoObject.properties;\n    const name = wellProperties.name;\n    outputString += `Well: ${name || ""}`;\n    if (wellsPickInfo.featureType !== "points") {\n      outputString += processPropInfo(wellsPickInfo.properties, true);\n    }\n  }\n  outputObject["text"] = outputString;\n  outputObject["style"] = {\n    color: "yellow"\n  };\n  return outputObject;\n};\nexport const TooltipStyle = {\n  args: {\n    layers: [{\n      ...volveWellsLayer,\n      lineStyle: {\n        width: 7\n      }\n    }],\n    getTooltip: tooltipImpFunc,\n    bounds: volveWellsBounds\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: "Example of overriding tooltip style."\n      },\n      inlineStories: false,\n      iframeHeight: 500\n    }\n  }\n};\nconst getReadout = event => {\n  const pickInfo = event.infos;\n  return /*#__PURE__*/React.createElement(InfoCard, {\n    pickInfos: pickInfo\n  });\n};\nconst MouseEventComponent = args => {\n  const [event, setEvent] = React.useState({\n    type: "click",\n    infos: []\n  });\n  const handleEvent = React.useCallback(event => {\n    setEvent(event);\n  }, [setEvent]);\n  const subsurfaceProps = React.useMemo(() => {\n    const props = {\n      layers: [volveWellsWithLogsLayer, huginMapNetmapPropLayerPng],\n      bounds: volveWellsBounds,\n      onMouseEvent: handleEvent,\n      views: {\n        layout: [1, 1],\n        viewports: [{\n          id: "test",\n          show3D: args.show3d\n        }]\n      },\n      coords: {\n        visible: false\n      }\n    };\n    return props;\n  }, [handleEvent, args.show3d]);\n  return /*#__PURE__*/React.createElement(SubsurfaceViewer, _extends({\n    id: "MouseEventComponent"\n  }, subsurfaceProps),\n  /*#__PURE__*/\n  \n  /* @ts-expect-error */\n  React.createElement(View, {\n    id: "test"\n  }, getReadout(event), /*#__PURE__*/React.createElement(ViewFooter, null, "Mouse event example")));\n};\nexport const MouseEvent = {\n  args: {\n    show3d: true\n  },\n  render: args => /*#__PURE__*/React.createElement(MouseEventComponent, args)\n};',locationsMap:{"tooltip-api":{startLoc:{col:26,line:27},endLoc:{col:1,line:47},startBody:{col:26,line:27},endBody:{col:1,line:47}},"tooltip-style":{startLoc:{col:28,line:98},endLoc:{col:1,line:118},startBody:{col:28,line:98},endBody:{col:1,line:118}},"mouse-event":{startLoc:{col:26,line:161},endLoc:{col:1,line:166},startBody:{col:26,line:161},endBody:{col:1,line:166}}}}},component:_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,title:"SubsurfaceViewer/Examples/Tooltip",args:{triggerHome:0}};__webpack_exports__.default=stories;const TooltipApi={args:{layers:[{..._sharedSettings__WEBPACK_IMPORTED_MODULE_4__.ex,lineStyle:{width:7}}],getTooltip:info=>{if(!info.picked)return null;const value=info?.properties?.[0].value;if(!value)return null;return"MD: "+(0,d3_format__WEBPACK_IMPORTED_MODULE_5__.WU)(".2f")(+value)},bounds:_sharedSettings__WEBPACK_IMPORTED_MODULE_4__.z},parameters:{docs:{description:{story:"Example of overriding the default tooltip, showing measured depth (MD) instead of the default behavior, which is to show the well name."},inlineStories:!1,iframeHeight:500}}},processPropInfo=(properties,filter)=>{if(!properties)return"";let outputString="";return"boolean"==typeof filter?filter&&properties.forEach((ppobj=>{outputString+=`\n${ppobj.name} : ${ppobj.value}`})):properties.forEach((ppobj=>{filter.includes(ppobj.name)&&(outputString+=`\n${ppobj.name} : ${ppobj.value}`)})),outputString},TooltipStyle={args:{layers:[{..._sharedSettings__WEBPACK_IMPORTED_MODULE_4__.ex,lineStyle:{width:7}}],getTooltip:info=>{if(!info.picked||!info.layer)return null;const outputObject={},layerName=info.layer.constructor.name;let outputString="";if("MapLayer"===layerName){const layerName=info.layer.props.name,properties=info.properties;outputString+=`Property: ${layerName}`,outputString+=processPropInfo(properties,!0)}else if("WellsLayer"===layerName){const wellsPickInfo=info;outputString+=`Well: ${info.object.properties.name||""}`,"points"!==wellsPickInfo.featureType&&(outputString+=processPropInfo(wellsPickInfo.properties,!0))}return outputObject.text=outputString,outputObject.style={color:"yellow"},outputObject},bounds:_sharedSettings__WEBPACK_IMPORTED_MODULE_4__.z},parameters:{docs:{description:{story:"Example of overriding tooltip style."},inlineStories:!1,iframeHeight:500}}},MouseEventComponent=args=>{const[event,setEvent]=react__WEBPACK_IMPORTED_MODULE_0__.useState({type:"click",infos:[]}),handleEvent=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event=>{setEvent(event)}),[setEvent]),subsurfaceProps=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>({layers:[_sharedSettings__WEBPACK_IMPORTED_MODULE_4__.On,_sharedSettings__WEBPACK_IMPORTED_MODULE_4__.PQ],bounds:_sharedSettings__WEBPACK_IMPORTED_MODULE_4__.z,onMouseEvent:handleEvent,views:{layout:[1,1],viewports:[{id:"test",show3D:args.show3d}]},coords:{visible:!1}})),[handleEvent,args.show3d]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,_extends({id:"MouseEventComponent"},subsurfaceProps),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_deck_gl_core_typed__WEBPACK_IMPORTED_MODULE_6__.Z,{id:"test"},(event=>{const pickInfo=event.infos;return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_InfoCard__WEBPACK_IMPORTED_MODULE_2__.Z,{pickInfos:pickInfo})})(event),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_ViewFooter__WEBPACK_IMPORTED_MODULE_3__.n,null,"Mouse event example")))},MouseEvent={args:{show3d:!0},render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(MouseEventComponent,args)};TooltipApi.parameters={...TooltipApi.parameters,docs:{...TooltipApi.parameters?.docs,source:{originalSource:'{\n  args: {\n    layers: [{\n      ...volveWellsLayer,\n      lineStyle: {\n        width: 7\n      }\n    }],\n    getTooltip: mdTooltip,\n    bounds: volveWellsBounds\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: "Example of overriding the default tooltip, showing measured depth (MD) instead of the default behavior, which is to show the well name."\n      },\n      inlineStories: false,\n      iframeHeight: 500\n    }\n  }\n}',...TooltipApi.parameters?.docs?.source}}},TooltipStyle.parameters={...TooltipStyle.parameters,docs:{...TooltipStyle.parameters?.docs,source:{originalSource:'{\n  args: {\n    layers: [{\n      ...volveWellsLayer,\n      lineStyle: {\n        width: 7\n      }\n    }],\n    getTooltip: tooltipImpFunc,\n    bounds: volveWellsBounds\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: "Example of overriding tooltip style."\n      },\n      inlineStories: false,\n      iframeHeight: 500\n    }\n  }\n}',...TooltipStyle.parameters?.docs?.source}}},MouseEvent.parameters={...MouseEvent.parameters,docs:{...MouseEvent.parameters?.docs,source:{originalSource:"{\n  args: {\n    show3d: true\n  },\n  render: args => <MouseEventComponent {...args} />\n}",...MouseEvent.parameters?.docs?.source}}};const __namedExportsOrder=["TooltipApi","TooltipStyle","MouseEvent"]},"./packages/subsurface-viewer/src/components/ViewFooter.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{n:function(){return ViewFooter}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);const StyledViewFooter=(0,__webpack_require__("./node_modules/@mui/system/esm/styled.js").Z)("div")((({theme:theme})=>({position:"absolute",bottom:theme.spacing(0),right:theme.spacing(2),zIndex:999999,float:"right",backgroundColor:"#ffffffcc",color:"#000000ff",paddingLeft:"3px",display:"tableRow"}))),ViewFooter=({children:children})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(StyledViewFooter,null,children);ViewFooter.propTypes={children:prop_types__WEBPACK_IMPORTED_MODULE_2___default().any};try{ViewFooter.displayName="ViewFooter",ViewFooter.__docgenInfo={description:"",displayName:"ViewFooter",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/subsurface-viewer/src/components/ViewFooter.tsx#ViewFooter"]={docgenInfo:ViewFooter.__docgenInfo,name:"ViewFooter",path:"packages/subsurface-viewer/src/components/ViewFooter.tsx#ViewFooter"})}catch(__react_docgen_typescript_loader_error){}},"./packages/subsurface-viewer/src/storybook/sharedSettings.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{BX:function(){return EditedDataTemplate},D$:function(){return northArrowLayer},DU:function(){return huginMapDepthPropLayerPng},Dh:function(){return hillshadingLayer},HV:function(){return mainStyle},Jl:function(){return hugin2DBounds},M1:function(){return customLayerWithPolylineData},Ng:function(){return customLayerWithTextData},On:function(){return volveWellsWithLogsLayer},PQ:function(){return huginMapNetmapPropLayerPng},Pl:function(){return default3DViews},QH:function(){return huginAxes3DLayer},Rd:function(){return customLayerWithPolygonData},Sh:function(){return classes},Wj:function(){return colormapLayer},ex:function(){return volveWellsLayer},fC:function(){return Root},iH:function(){return redAxes2DLayer},vj:function(){return subsufaceProps},wL:function(){return huginMeshMapLayerPng},yP:function(){return hugin3DBounds},z:function(){return volveWellsBounds}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/subsurface-viewer/src/SubsurfaceViewer.tsx"),_example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../example-data/deckgl-map.json");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const classes={main:"default-main"},mainStyle={[`& .${classes.main}`]:{width:750,height:500,top:"50%",left:"50%",transform:"translate(-50%, -50%)",border:"1px solid black",background:"azure",position:"absolute"}},Root=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_3__.ZP)("div")(mainStyle),subsufaceProps=_example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0],colormapLayer={..._example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0].layers[0],id:"colormap-layer"},hillshadingLayer={..._example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0].layers[1],id:"hillshading-layer"},redAxes2DLayer=(_example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0].layers[2],{"@@type":"Axes2DLayer",id:"axes-layer",marginH:80,marginV:30,isLeftRuler:!0,isRightRuler:!1,isBottomRuler:!0,isTopRuler:!1,backgroundColor:[155,0,0,255]}),hugin2DBounds=[432150,6475800,439400,6481500],hugin3DBounds=[432150,6475800,-2e3,439400,6481500,-3500],huginAxes3DLayer={"@@type":"AxesLayer",id:"axes-layer2",bounds:[432150,6475800,2e3,439400,6481500,3500]},northArrowLayer={"@@type":"NorthArrow3DLayer",id:"north-arrow-layer"},volveWellsLayer={"@@type":"WellsLayer",id:"volve-wells",data:"./volve_wells.json"},volveWellsBounds=[432150,6475800,439400,6481500],volveWellsWithLogsLayer={"@@type":"WellsLayer",id:"volve-wells-with-logs",data:"./volve_wells.json",logData:"./volve_logs.json",logrunName:"BLOCKING",logName:"ZONELOG",logColor:"Stratigraphy"},huginMapDepthPropLayerPng={"@@type":"MapLayer",id:"hugin_depth",meshData:"hugin_depth_25_m.float32",frame:{origin:[432150,6475800],count:[291,229],increment:[25,25],rotDeg:0},propertiesData:"hugin_depth_25_m.float32",contours:[0,100],material:!1},huginMapNetmapPropLayerPng={...huginMapDepthPropLayerPng,id:"hugin_kh_netmap",propertiesData:"kh_netmap_25_m.float32"},huginMeshMapLayerPng={"@@type":"MapLayer",id:"hugin-mesh-layer",meshData:"hugin_depth_25_m.png",frame:{origin:[432150,6475800],count:[291,229],increment:[25,25],rotDeg:0},propertiesData:"kh_netmap_25_m.png",contours:[0,100],isContoursDepth:!0,gridLines:!1,material:!0,smoothShading:!0,colorMapName:"Physics",ZIncreasingDownwards:!0},default3DViews={layout:[1,1],viewports:[{id:"view_1",show3D:!0}]},customLayerWithPolylineData={"@@type":"GeoJsonLayer",id:"geojson-line-layer",name:"Line",data:{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:{type:"LineString",coordinates:[[434e3,6477500],[435500,6477500]]}}]},getLineWidth:20,lineWidthMinPixels:2},customLayerWithPolygonData={"@@type":"GeoJsonLayer",id:"geojson-layer",name:"Polygon",data:{type:"Feature",properties:{},geometry:{type:"Polygon",coordinates:[[[434562,6477595],[434562,6478595],[435062,6478595],[435062,6477595],[434562,6477595]]]}},getLineWidth:20,lineWidthMinPixels:2,getLineColor:[0,255,255],getFillColor:[0,255,0],opacity:.3},customLayerWithTextData={"@@type":"TextLayer",id:"text-layer",name:"Text",data:[{name:"Custom GeoJson layer",coordinates:[434800,6478695]}],pickable:!0,getPosition:d=>d.coordinates,getText:d=>d.name,getColor:[255,0,0],getSize:16,getAngle:0,getTextAnchor:"middle",getAlignmentBaseline:"center"},EditedDataTemplate=args=>{const[editedData,setEditedData]=react__WEBPACK_IMPORTED_MODULE_0__.useState(args.editedData);return react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{setEditedData(args.editedData)}),[args.editedData]),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,_extends({},args,{editedData:editedData,setProps:updatedProps=>{setEditedData(updatedProps.editedData)}}))};try{Root.displayName="Root",Root.__docgenInfo={description:"",displayName:"Root",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/subsurface-viewer/src/storybook/sharedSettings.tsx#Root"]={docgenInfo:Root.__docgenInfo,name:"Root",path:"packages/subsurface-viewer/src/storybook/sharedSettings.tsx#Root"})}catch(__react_docgen_typescript_loader_error){}try{EditedDataTemplate.displayName="EditedDataTemplate",EditedDataTemplate.__docgenInfo={description:"",displayName:"EditedDataTemplate",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},resources:{defaultValue:null,description:"",name:"resources",required:!1,type:{name:"Record<string, unknown>"}},layers:{defaultValue:null,description:"",name:"layers",required:!1,type:{name:"Record<string, unknown>[] | LayersList"}},bounds:{defaultValue:null,description:"",name:"bounds",required:!1,type:{name:"[number, number, number, number] | BoundsAccessor"}},cameraPosition:{defaultValue:null,description:"",name:"cameraPosition",required:!1,type:{name:"ViewStateType"}},triggerHome:{defaultValue:null,description:"",name:"triggerHome",required:!1,type:{name:"number"}},views:{defaultValue:null,description:"",name:"views",required:!1,type:{name:"ViewsType"}},coords:{defaultValue:null,description:"",name:"coords",required:!1,type:{name:"{ visible?: boolean | null; multiPicking?: boolean | null; pickDepth?: number | null | undefined; } | undefined"}},scale:{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"{ visible?: boolean | null; incrementValue?: number | null; widthPerUnit?: number | null | undefined; cssStyle?: Record<string, unknown> | null | undefined; } | undefined"}},coordinateUnit:{defaultValue:null,description:"",name:"coordinateUnit",required:!1,type:{name:"enum",value:[{value:'"m"'},{value:'"mm"'},{value:'"cm"'},{value:'"km"'},{value:'"in"'},{value:'"ft-us"'},{value:'"ft"'},{value:'"mi"'},{value:'"mm2"'},{value:'"cm2"'},{value:'"m2"'},{value:'"ha"'},{value:'"km2"'},{value:'"in2"'},{value:'"ft2"'},{value:'"ac"'},{value:'"mi2"'},{value:'"mcg"'},{value:'"mg"'},{value:'"g"'},{value:'"kg"'},{value:'"oz"'},{value:'"lb"'},{value:'"mt"'},{value:'"t"'},{value:'"mm3"'},{value:'"cm3"'},{value:'"ml"'},{value:'"l"'},{value:'"kl"'},{value:'"m3"'},{value:'"km3"'},{value:'"tsp"'},{value:'"Tbs"'},{value:'"in3"'},{value:'"fl-oz"'},{value:'"cup"'},{value:'"pnt"'},{value:'"qt"'},{value:'"gal"'},{value:'"ft3"'},{value:'"yd3"'},{value:'"mm3/s"'},{value:'"cm3/s"'},{value:'"ml/s"'},{value:'"cl/s"'},{value:'"dl/s"'},{value:'"l/s"'},{value:'"l/min"'},{value:'"l/h"'},{value:'"kl/s"'},{value:'"kl/min"'},{value:'"kl/h"'},{value:'"m3/s"'},{value:'"m3/min"'},{value:'"m3/h"'},{value:'"km3/s"'},{value:'"tsp/s"'},{value:'"Tbs/s"'},{value:'"in3/s"'},{value:'"in3/min"'},{value:'"in3/h"'},{value:'"fl-oz/s"'},{value:'"fl-oz/min"'},{value:'"fl-oz/h"'},{value:'"cup/s"'},{value:'"pnt/s"'},{value:'"pnt/min"'},{value:'"pnt/h"'},{value:'"qt/s"'},{value:'"gal/s"'},{value:'"gal/min"'},{value:'"gal/h"'},{value:'"ft3/s"'},{value:'"ft3/min"'},{value:'"ft3/h"'},{value:'"yd3/s"'},{value:'"yd3/min"'},{value:'"yd3/h"'},{value:'"C"'},{value:'"F"'},{value:'"K"'},{value:'"R"'},{value:'"ns"'},{value:'"mu"'},{value:'"ms"'},{value:'"s"'},{value:'"min"'},{value:'"h"'},{value:'"d"'},{value:'"week"'},{value:'"month"'},{value:'"year"'},{value:'"Hz"'},{value:'"mHz"'},{value:'"kHz"'},{value:'"MHz"'},{value:'"GHz"'},{value:'"THz"'},{value:'"rpm"'},{value:'"deg/s"'},{value:'"rad/s"'},{value:'"m/s"'},{value:'"km/h"'},{value:'"m/h"'},{value:'"knot"'},{value:'"ft/s"'},{value:'"s/m"'},{value:'"min/km"'},{value:'"s/ft"'},{value:'"Pa"'},{value:'"hPa"'},{value:'"kPa"'},{value:'"MPa"'},{value:'"bar"'},{value:'"torr"'},{value:'"psi"'},{value:'"ksi"'},{value:'"b"'},{value:'"Kb"'},{value:'"Mb"'},{value:'"Gb"'},{value:'"Tb"'},{value:'"B"'},{value:'"KB"'},{value:'"MB"'},{value:'"GB"'},{value:'"TB"'},{value:'"lx"'},{value:'"ft-cd"'},{value:'"ppm"'},{value:'"ppb"'},{value:'"ppt"'},{value:'"ppq"'},{value:'"V"'},{value:'"mV"'},{value:'"kV"'},{value:'"A"'},{value:'"mA"'},{value:'"kA"'},{value:'"W"'},{value:'"mW"'},{value:'"kW"'},{value:'"MW"'},{value:'"GW"'},{value:'"VA"'},{value:'"mVA"'},{value:'"kVA"'},{value:'"MVA"'},{value:'"GVA"'},{value:'"VAR"'},{value:'"mVAR"'},{value:'"kVAR"'},{value:'"MVAR"'},{value:'"GVAR"'},{value:'"Wh"'},{value:'"mWh"'},{value:'"kWh"'},{value:'"MWh"'},{value:'"GWh"'},{value:'"J"'},{value:'"kJ"'},{value:'"VARh"'},{value:'"mVARh"'},{value:'"kVARh"'},{value:'"MVARh"'},{value:'"GVARH"'},{value:'"deg"'},{value:'"rad"'},{value:'"grad"'},{value:'"arcmin"'},{value:'"arcsec"'}]}},colorTables:{defaultValue:null,description:"",name:"colorTables",required:!1,type:{name:"colorTablesArray"}},editedData:{defaultValue:null,description:"",name:"editedData",required:!1,type:{name:"Record<string, unknown>"}},setProps:{defaultValue:null,description:"",name:"setProps",required:!1,type:{name:"((data: Record<string, unknown>) => void)"}},checkDatafileSchema:{defaultValue:null,description:"Validate JSON datafile against schema",name:"checkDatafileSchema",required:!1,type:{name:"boolean"}},onMouseEvent:{defaultValue:null,description:"For get mouse events",name:"onMouseEvent",required:!1,type:{name:"((event: MapMouseEvent) => void)"}},getCameraPosition:{defaultValue:null,description:"",name:"getCameraPosition",required:!1,type:{name:"((input: ViewStateType) => void)"}},onRenderingProgress:{defaultValue:null,description:"Will be called while layers are processed to rendered data.\n@param progress vlaue between 0 and 100.",name:"onRenderingProgress",required:!1,type:{name:"((progress: number) => void)"}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:"((info: PickingInfo, event: MjolnirGestureEvent) => void)"}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:"((info: PickingInfo, event: MjolnirGestureEvent) => void)"}},triggerResetMultipleWells:{defaultValue:null,description:"",name:"triggerResetMultipleWells",required:!1,type:{name:"number"}},selection:{defaultValue:null,description:"Range selection of the current well",name:"selection",required:!1,type:{name:"{ well: string; selection: [number, number | undefined] | undefined; } | undefined"}},getTooltip:{defaultValue:null,description:"Override default tooltip with a callback.",name:"getTooltip",required:!1,type:{name:"TooltipCallback"}},lights:{defaultValue:null,description:"",name:"lights",required:!1,type:{name:"LightsType"}},typedArraySupport:{defaultValue:null,description:"If set to true allows to use typed arrays in layer description JS objects.",name:"typedArraySupport",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/subsurface-viewer/src/storybook/sharedSettings.tsx#EditedDataTemplate"]={docgenInfo:EditedDataTemplate.__docgenInfo,name:"EditedDataTemplate",path:"packages/subsurface-viewer/src/storybook/sharedSettings.tsx#EditedDataTemplate"})}catch(__react_docgen_typescript_loader_error){}},"../example-data/deckgl-map.json":function(module){module.exports=JSON.parse('[{"id":"DeckGL-Map","coords":{"visible":true,"multiPicking":true,"pickDepth":10},"scale":{"visible":true,"incrementValue":100,"widthPerUnit":100,"cssStyle":{"left":10,"top":10}},"coordinateUnit":"m","resources":{"propertyMap":"propertyMap.png","depthMap":"propertyMap.png","wellsData":"volve_wells.json","logData":"volve_logs.json"},"bounds":[432205,6475078,437720,6481113],"layers":[{"@@type":"ColormapLayer","image":"@@#resources.propertyMap","rotDeg":0,"bounds":[432205,6475078,437720,6481113],"colorMapName":"Rainbow","valueRange":[2782,3513],"colorMapRange":[2782,3513]},{"@@type":"Hillshading2DLayer","bounds":[432205,6475078,437720,6481113],"valueRange":[2782,3513],"rotDeg":0,"image":"@@#resources.depthMap"},{"@@type":"Map3DLayer","bounds":[432205,6475078,437720,6481113],"meshMaxError":5,"mesh":"hugin_depth_25_m_normalized_margin.png","meshValueRange":[2782,3513],"propertyTexture":"kh_netmap_25_m_normalized_margin.png","propertyValueRange":[2782,3513],"rotDeg":0,"contours":[0,50],"isContoursDepth":true,"colorMapName":"Physics","colorMapRange":[2782,3513],"visible":false},{"@@type":"WellsLayer","data":"@@#resources.wellsData","logData":"@@#resources.logData","logrunName":"BLOCKING","logName":"ZONELOG","logColor":"Stratigraphy"},{"@@type":"FaultPolygonsLayer","data":"fault_polygons.geojson"},{"@@type":"PieChartLayer","data":"piechart.json"},{"@@type":"NorthArrow3DLayer","visible":true},{"@@type":"DrawingLayer"}],"editedData":{},"views":{"layout":[1,1],"showLabel":false,"viewports":[{"id":"view_1","show3D":false,"layerIds":[]}]}}]')}}]);