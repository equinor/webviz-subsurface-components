"use strict";(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[1670],{"./packages/subsurface-viewer/src/storybook/components/colorLegends/IndividualScaleForMap.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{IndividualScaleForMap:function(){return IndividualScaleForMap},__namedExportsOrder:function(){return __namedExportsOrder}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../example-data/deckgl-map.json"),_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/subsurface-viewer/src/SubsurfaceViewer.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}__webpack_exports__.default={parameters:{storySource:{source:'function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from "react";\nimport exampleData from "../../../../../../../example-data/deckgl-map.json";\nimport SubsurfaceViewer from "../../../SubsurfaceViewer";\nexport default {\n  component: SubsurfaceViewer,\n  title: "SubsurfaceViewer/Components/ColorLegends/IndividualScaleForMap"\n};\n\n// Template for when edited data needs to be captured.\nconst EditDataTemplate = args => {\n  const [editedData, setEditedData] = React.useState(args.editedData);\n  React.useEffect(() => {\n    setEditedData(args.editedData);\n  }, [args.editedData]);\n  return /*#__PURE__*/React.createElement(SubsurfaceViewer, _extends({}, args, {\n    editedData: editedData,\n    setProps: updatedProps => {\n      setEditedData(updatedProps.editedData);\n    }\n  }));\n};\n\n// 4 maps with individual color scales for each map\nexport const IndividualScaleForMap = EditDataTemplate.bind({});\nIndividualScaleForMap.args = {\n  ...exampleData[0],\n  legend: {\n    visible: true\n  },\n  zoom: -5,\n  layers: [exampleData[0].layers[0], {\n    ...exampleData[0].layers[0],\n    colorMapRange: [3000, 3100],\n    valueRange: [3000, 3100],\n    id: "colormap-2-layer",\n    colorMapName: "Porosity"\n  }, {\n    ...exampleData[0].layers[0],\n    colorMapRange: [3000, 3100],\n    valueRange: [3000, 3100],\n    id: "colormap-3-layer",\n    colorMapName: "Permeability"\n  }, {\n    ...exampleData[0].layers[0],\n    colorMapRange: [3000, 3100],\n    valueRange: [3000, 3100],\n    id: "colormap-4-layer",\n    colorMapName: "Seismic"\n  }],\n  views: {\n    layout: [2, 2],\n    showLabel: true,\n    viewports: [{\n      id: "view_1",\n      name: "Colormap 1 layer",\n      show3D: false,\n      layerIds: ["colormap-layer"]\n    }, {\n      id: "view_2",\n      name: "Colormap 2 layer",\n      show3D: false,\n      layerIds: ["colormap-2-layer"]\n    }, {\n      id: "view_3",\n      name: "Colormap 3 layer",\n      show3D: false,\n      layerIds: ["colormap-3-layer"]\n    }, {\n      id: "view_4",\n      name: "Colormap 4 layer",\n      show3D: false,\n      layerIds: ["colormap-4-layer"]\n    }]\n  }\n};\nIndividualScaleForMap.parameters = {\n  docs: {\n    description: {\n      story: "Four maps with individual color scales for each map"\n    },\n    inlineStories: false,\n    iframeHeight: 500\n  }\n};\nIndividualScaleForMap.parameters = {\n  ...IndividualScaleForMap.parameters,\n  docs: {\n    ...IndividualScaleForMap.parameters?.docs,\n    source: {\n      originalSource: "args => {\\n  const [editedData, setEditedData] = React.useState(args.editedData);\\n  React.useEffect(() => {\\n    setEditedData(args.editedData);\\n  }, [args.editedData]);\\n  return <SubsurfaceViewer {...args} editedData={editedData} setProps={updatedProps => {\\n    setEditedData(updatedProps.editedData);\\n  }} />;\\n}",\n      ...IndividualScaleForMap.parameters?.docs?.source\n    }\n  }\n};',locationsMap:{"individual-scale-for-map":{startLoc:{col:25,line:11},endLoc:{col:1,line:22},startBody:{col:25,line:11},endBody:{col:1,line:22}}}}},component:_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__.Z,title:"SubsurfaceViewer/Components/ColorLegends/IndividualScaleForMap"};const IndividualScaleForMap=(args=>{const[editedData,setEditedData]=react__WEBPACK_IMPORTED_MODULE_0__.useState(args.editedData);return react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{setEditedData(args.editedData)}),[args.editedData]),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__.Z,_extends({},args,{editedData:editedData,setProps:updatedProps=>{setEditedData(updatedProps.editedData)}}))}).bind({});IndividualScaleForMap.args={..._example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_1__[0],legend:{visible:!0},zoom:-5,layers:[_example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_1__[0].layers[0],{..._example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_1__[0].layers[0],colorMapRange:[3e3,3100],valueRange:[3e3,3100],id:"colormap-2-layer",colorMapName:"Porosity"},{..._example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_1__[0].layers[0],colorMapRange:[3e3,3100],valueRange:[3e3,3100],id:"colormap-3-layer",colorMapName:"Permeability"},{..._example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_1__[0].layers[0],colorMapRange:[3e3,3100],valueRange:[3e3,3100],id:"colormap-4-layer",colorMapName:"Seismic"}],views:{layout:[2,2],showLabel:!0,viewports:[{id:"view_1",name:"Colormap 1 layer",show3D:!1,layerIds:["colormap-layer"]},{id:"view_2",name:"Colormap 2 layer",show3D:!1,layerIds:["colormap-2-layer"]},{id:"view_3",name:"Colormap 3 layer",show3D:!1,layerIds:["colormap-3-layer"]},{id:"view_4",name:"Colormap 4 layer",show3D:!1,layerIds:["colormap-4-layer"]}]}},IndividualScaleForMap.parameters={docs:{description:{story:"Four maps with individual color scales for each map"},inlineStories:!1,iframeHeight:500}},IndividualScaleForMap.parameters={...IndividualScaleForMap.parameters,docs:{...IndividualScaleForMap.parameters?.docs,source:{originalSource:"args => {\n  const [editedData, setEditedData] = React.useState(args.editedData);\n  React.useEffect(() => {\n    setEditedData(args.editedData);\n  }, [args.editedData]);\n  return <SubsurfaceViewer {...args} editedData={editedData} setProps={updatedProps => {\n    setEditedData(updatedProps.editedData);\n  }} />;\n}",...IndividualScaleForMap.parameters?.docs?.source}}};const __namedExportsOrder=["IndividualScaleForMap"];try{IndividualScaleForMap.displayName="IndividualScaleForMap",IndividualScaleForMap.__docgenInfo={description:"",displayName:"IndividualScaleForMap",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/subsurface-viewer/src/storybook/components/colorLegends/IndividualScaleForMap.stories.tsx#IndividualScaleForMap"]={docgenInfo:IndividualScaleForMap.__docgenInfo,name:"IndividualScaleForMap",path:"packages/subsurface-viewer/src/storybook/components/colorLegends/IndividualScaleForMap.stories.tsx#IndividualScaleForMap"})}catch(__react_docgen_typescript_loader_error){}},"../example-data/deckgl-map.json":function(module){module.exports=JSON.parse('[{"id":"DeckGL-Map","coords":{"visible":true,"multiPicking":true,"pickDepth":10},"scale":{"visible":true,"incrementValue":100,"widthPerUnit":100,"cssStyle":{"left":10,"top":10}},"legend":{"visible":true,"cssStyle":{"right":10,"top":10},"horizontal":false},"toolbar":{"visible":true},"coordinateUnit":"m","resources":{"propertyMap":"https://raw.githubusercontent.com/equinor/webviz-subsurface-components/master/react/src/demo/example-data/propertyMap.png","depthMap":"https://raw.githubusercontent.com/equinor/webviz-subsurface-components/master/react/src/demo/example-data/propertyMap.png","wellsData":"https://raw.githubusercontent.com/equinor/webviz-subsurface-components/master/react/src/demo/example-data/volve_wells.json","logData":"https://raw.githubusercontent.com/equinor/webviz-subsurface-components/master/react/src/demo/example-data/volve_logs.json"},"bounds":[432205,6475078,437720,6481113],"layers":[{"@@type":"ColormapLayer","image":"@@#resources.propertyMap","rotDeg":0,"bounds":[432205,6475078,437720,6481113],"colorMapName":"Rainbow","valueRange":[2782,3513],"colorMapRange":[2782,3513]},{"@@type":"Hillshading2DLayer","bounds":[432205,6475078,437720,6481113],"valueRange":[2782,3513],"rotDeg":0,"image":"@@#resources.depthMap"},{"@@type":"Map3DLayer","bounds":[432205,6475078,437720,6481113],"meshMaxError":5,"mesh":"hugin_depth_25_m_normalized_margin.png","meshValueRange":[2782,3513],"propertyTexture":"kh_netmap_25_m_normalized_margin.png","propertyValueRange":[2782,3513],"rotDeg":0,"contours":[0,50],"isContoursDepth":true,"colorMapName":"Physics","colorMapRange":[2782,3513],"visible":false},{"@@type":"WellsLayer","data":"@@#resources.wellsData","logData":"@@#resources.logData","logrunName":"BLOCKING","logName":"ZONELOG","logColor":"Stratigraphy"},{"@@type":"FaultPolygonsLayer","data":"https://raw.githubusercontent.com/equinor/webviz-subsurface-components/master/react/src/demo/example-data/fault_polygons.geojson"},{"@@type":"PieChartLayer","data":"https://raw.githubusercontent.com/equinor/webviz-subsurface-components/master/react/src/demo/example-data/piechart.json"},{"@@type":"NorthArrow3DLayer","visible":true},{"@@type":"DrawingLayer"}],"editedData":{},"views":{"layout":[1,1],"showLabel":false,"viewports":[{"id":"view_1","show3D":false,"layerIds":[]}]}}]')}}]);