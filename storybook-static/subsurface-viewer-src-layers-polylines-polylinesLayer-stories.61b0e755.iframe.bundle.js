"use strict";(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[361],{"./packages/subsurface-viewer/src/layers/polylines/polylinesLayer.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{HugePolylinesLayer:function(){return HugePolylinesLayer},SmallPolylinesLayer:function(){return SmallPolylinesLayer},__namedExportsOrder:function(){return __namedExportsOrder}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),mathjs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/mathjs/lib/esm/core/create.js"),mathjs__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/mathjs/lib/esm/entry/allFactoriesAny.js"),_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/subsurface-viewer/src/SubsurfaceViewer.tsx"),_polylinesLayer__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/subsurface-viewer/src/layers/polylines/polylinesLayer.ts"),_axes_axesLayer__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/subsurface-viewer/src/layers/axes/axesLayer.ts");__webpack_exports__.default={parameters:{storySource:{source:'import React from "react";\nimport { create, all } from "mathjs";\nimport SubsurfaceViewer from "../../SubsurfaceViewer";\nimport { default as PolylinesLayer } from "./polylinesLayer";\nimport { default as AxesLayer } from "../axes/axesLayer";\nexport default {\n  component: SubsurfaceViewer,\n  title: "SubsurfaceViewer / Polylines Layer"\n};\nconst defaultParameters = {\n  docs: {\n    inlineStories: false,\n    iframeHeight: 500\n  }\n};\n\n// Small example using polylinesLayer.\nconst smallPolylinesLayer = new PolylinesLayer({\n  id: "small_polylines_layer",\n  \n  polylinePoints: [0, 0, 0, 10, 0, 0, 10, 0, 10, -5, -5, 4, 0, -8, 6, 5, 10, 8],\n  \n  startIndices: [0, 3],\n  polylinesClosed: [true, false],\n  color: [0, 200, 100],\n  widthUnits: "pixels",\n  linesWidth: 10,\n  ZIncreasingDownwards: true\n});\nconst smallAxesLayer = new AxesLayer({\n  id: "small_axes_layer",\n  bounds: [-10, -10, 0, 20, 10, 10]\n});\nexport const SmallPolylinesLayer = args => {\n  return /*#__PURE__*/React.createElement(SubsurfaceViewer, args);\n};\nSmallPolylinesLayer.args = {\n  id: "map",\n  layers: [smallAxesLayer, smallPolylinesLayer],\n  bounds: [-10, -10, 17, 10],\n  views: {\n    layout: [1, 1],\n    viewports: [{\n      id: "view_1",\n      show3D: true\n    }]\n  }\n};\nSmallPolylinesLayer.parameters = {\n  docs: {\n    ...defaultParameters.docs,\n    description: {\n      story: "Polyline nodes are given as native javascript array."\n    }\n  }\n};\nconst sideSize = 10000;\nconst pointsCount = 100000;\nconst math = create(all, {\n  randomSeed: "1234"\n});\nconst randomFunc = (() => {\n  if (math.random) {\n    return () => {\n      const val = math.random?.(sideSize);\n      return val ? val : 0.0;\n    };\n  }\n  return () => Math.random() * sideSize;\n})();\nconst hugePolylinesLayer = new PolylinesLayer({\n  id: "huge_polylines-layer",\n  polylinePoints: Array(pointsCount * 3).fill(0).map(() => randomFunc()),\n  startIndices: [0],\n  color: [0, 100, 100, 40],\n  widthUnits: "pixels",\n  linesWidth: 1,\n  ZIncreasingDownwards: true\n});\nconst hugeAxesLayer = new AxesLayer({\n  id: "huge_axes_layer",\n  bounds: [0, 0, 0, sideSize, sideSize, sideSize]\n});\nexport const HugePolylinesLayer = args => {\n  return /*#__PURE__*/React.createElement(SubsurfaceViewer, args);\n};\nHugePolylinesLayer.args = {\n  id: "map",\n  layers: [hugeAxesLayer, hugePolylinesLayer],\n  bounds: [0, 0, sideSize, sideSize],\n  views: {\n    layout: [1, 1],\n    viewports: [{\n      id: "view_1",\n      show3D: true\n    }]\n  }\n};\nHugePolylinesLayer.parameters = {\n  docs: {\n    ...defaultParameters.docs,\n    description: {\n      story: "Polyline nodes are randomly generated in runtime and given as native javascript array."\n    }\n  }\n};',locationsMap:{"small-polylines-layer":{startLoc:{col:35,line:34},endLoc:{col:1,line:36},startBody:{col:35,line:34},endBody:{col:1,line:36}},"huge-polylines-layer":{startLoc:{col:34,line:84},endLoc:{col:1,line:86},startBody:{col:34,line:84},endBody:{col:1,line:86}}}}},component:_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,title:"SubsurfaceViewer / Polylines Layer"};const defaultParameters_docs={inlineStories:!1,iframeHeight:500},smallPolylinesLayer=new _polylinesLayer__WEBPACK_IMPORTED_MODULE_2__.Z({id:"small_polylines_layer",polylinePoints:[0,0,0,10,0,0,10,0,10,-5,-5,4,0,-8,6,5,10,8],startIndices:[0,3],polylinesClosed:[!0,!1],color:[0,200,100],widthUnits:"pixels",linesWidth:10,ZIncreasingDownwards:!0}),smallAxesLayer=new _axes_axesLayer__WEBPACK_IMPORTED_MODULE_3__.Z({id:"small_axes_layer",bounds:[-10,-10,0,20,10,10]}),SmallPolylinesLayer=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,args);SmallPolylinesLayer.args={id:"map",layers:[smallAxesLayer,smallPolylinesLayer],bounds:[-10,-10,17,10],views:{layout:[1,1],viewports:[{id:"view_1",show3D:!0}]}},SmallPolylinesLayer.parameters={docs:{...defaultParameters_docs,description:{story:"Polyline nodes are given as native javascript array."}}};const math=(0,mathjs__WEBPACK_IMPORTED_MODULE_4__.U)(mathjs__WEBPACK_IMPORTED_MODULE_5__.$,{randomSeed:"1234"}),randomFunc=math.random?()=>{const val=math.random?.(1e4);return val||0}:()=>1e4*Math.random(),hugePolylinesLayer=new _polylinesLayer__WEBPACK_IMPORTED_MODULE_2__.Z({id:"huge_polylines-layer",polylinePoints:Array(3e5).fill(0).map((()=>randomFunc())),startIndices:[0],color:[0,100,100,40],widthUnits:"pixels",linesWidth:1,ZIncreasingDownwards:!0}),hugeAxesLayer=new _axes_axesLayer__WEBPACK_IMPORTED_MODULE_3__.Z({id:"huge_axes_layer",bounds:[0,0,0,1e4,1e4,1e4]}),HugePolylinesLayer=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,args);HugePolylinesLayer.args={id:"map",layers:[hugeAxesLayer,hugePolylinesLayer],bounds:[0,0,1e4,1e4],views:{layout:[1,1],viewports:[{id:"view_1",show3D:!0}]}},HugePolylinesLayer.parameters={docs:{...defaultParameters_docs,description:{story:"Polyline nodes are randomly generated in runtime and given as native javascript array."}}},SmallPolylinesLayer.parameters={...SmallPolylinesLayer.parameters,docs:{...SmallPolylinesLayer.parameters?.docs,source:{originalSource:"args => {\n  return <SubsurfaceViewer {...args} />;\n}",...SmallPolylinesLayer.parameters?.docs?.source}}},HugePolylinesLayer.parameters={...HugePolylinesLayer.parameters,docs:{...HugePolylinesLayer.parameters?.docs,source:{originalSource:"args => {\n  return <SubsurfaceViewer {...args} />;\n}",...HugePolylinesLayer.parameters?.docs?.source}}};const __namedExportsOrder=["SmallPolylinesLayer","HugePolylinesLayer"]}}]);