"use strict";(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[6347],{"./packages/subsurface-viewer/src/layers/well_markers/wellMarkersLayer.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{WellMarkers:function(){return WellMarkers},__namedExportsOrder:function(){return __namedExportsOrder}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),mathjs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/mathjs/lib/esm/core/create.js"),mathjs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/mathjs/lib/esm/entry/allFactoriesAny.js"),_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/subsurface-viewer/src/SubsurfaceViewer.tsx");__webpack_exports__.default={parameters:{storySource:{source:'import React from "react";\nimport { create, all } from "mathjs";\nimport SubsurfaceViewer from "../../SubsurfaceViewer";\nexport default {\n  component: SubsurfaceViewer,\n  title: "SubsurfaceViewer/Well Markers Layer"\n};\nconst Template = args => /*#__PURE__*/React.createElement(SubsurfaceViewer, args);\nconst parameters = {\n  docs: {\n    description: {\n      story: "Well Markers Layer."\n    },\n    inlineStories: false,\n    iframeHeight: 500\n  }\n};\nconst math = create(all, {\n  randomSeed: "1984"\n});\nconst randomFunc = (() => {\n  if (math?.random) {\n    return max => {\n      const val = math.random?.(max);\n      return val ? val : 0.0;\n    };\n  }\n  return max => Math.random() * max;\n})();\nconst generateMarkers = () => {\n  const N = 40;\n  const M = 40;\n  const dN = 2 * Math.PI / N;\n  const dM = 5 * Math.PI / M;\n  const res = [];\n  for (let i = 0; i < N; ++i) {\n    for (let j = 0; j < M; ++j) {\n      const x = -N / 2 + i;\n      const y = -M / 2 + j;\n      const az = dN * i;\n      const incl = dM * j;\n      const z = 5 * (Math.sin(incl) * Math.cos(az));\n      res.push({\n        position: [x, y, z],\n        azimuth: az * 180.0 / Math.PI,\n        inclination: Math.asin(Math.cos(incl)) * 180.0 / Math.PI,\n        color: [randomFunc(255), randomFunc(255), randomFunc(255), 100],\n        outlineColor: [0, 0, 100, 255],\n        size: 0.02 * Math.sqrt(x * x + y * y)\n      });\n    }\n  }\n  return res;\n};\nexport const WellMarkers = Template.bind({});\nWellMarkers.args = {\n  bounds: [-25, -25, 50, 30],\n  views: {\n    layout: [1, 1],\n    viewports: [{\n      id: "view_1",\n      show3D: true\n    }]\n  },\n  id: "well-markers-tttt",\n  layers: [{\n    "@@type": "AxesLayer",\n    id: "well-markers-axes",\n    bounds: [-25, -25, -25, 25, 25, 25],\n    ZIncreasingDownwards: false\n  }, {\n    "@@type": "NorthArrow3DLayer",\n    id: "north-arrow-layer"\n  }, {\n    "@@type": "WellMarkersLayer",\n    id: "well-markers-1",\n    pickable: true,\n    shape: "circle",\n    sizeUnits: "common",\n    data: generateMarkers()\n  }]\n};\nWellMarkers.parameters = parameters;',locationsMap:{"well-markers":{startLoc:{col:17,line:8},endLoc:{col:81,line:8},startBody:{col:17,line:8},endBody:{col:81,line:8}}}}},component:_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,title:"SubsurfaceViewer/Well Markers Layer"};const math=(0,mathjs__WEBPACK_IMPORTED_MODULE_2__.U)(mathjs__WEBPACK_IMPORTED_MODULE_3__.$,{randomSeed:"1984"}),randomFunc=math?.random?max=>{const val=math.random?.(max);return val||0}:max=>Math.random()*max,WellMarkers=(args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,args)).bind({});WellMarkers.args={bounds:[-25,-25,50,30],views:{layout:[1,1],viewports:[{id:"view_1",show3D:!0}]},id:"well-markers-tttt",layers:[{"@@type":"AxesLayer",id:"well-markers-axes",bounds:[-25,-25,-25,25,25,25],ZIncreasingDownwards:!1},{"@@type":"NorthArrow3DLayer",id:"north-arrow-layer"},{"@@type":"WellMarkersLayer",id:"well-markers-1",pickable:!0,shape:"circle",sizeUnits:"common",data:(()=>{const dN=2*Math.PI/40,dM=5*Math.PI/40,res=[];for(let i=0;i<40;++i)for(let j=0;j<40;++j){const x=-20+i,y=-20+j,az=dN*i,incl=dM*j,z=Math.sin(incl)*Math.cos(az)*5;res.push({position:[x,y,z],azimuth:180*az/Math.PI,inclination:180*Math.asin(Math.cos(incl))/Math.PI,color:[randomFunc(255),randomFunc(255),randomFunc(255),100],outlineColor:[0,0,100,255],size:.02*Math.sqrt(x*x+y*y)})}return res})()}]},WellMarkers.parameters={docs:{description:{story:"Well Markers Layer."},inlineStories:!1,iframeHeight:500}},WellMarkers.parameters={...WellMarkers.parameters,docs:{...WellMarkers.parameters?.docs,source:{originalSource:"args => <SubsurfaceViewer {...args} />",...WellMarkers.parameters?.docs?.source}}};const __namedExportsOrder=["WellMarkers"]}}]);