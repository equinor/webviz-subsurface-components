/*! For license information please see 8526.a5de7e14.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[8526],{"./node_modules/@deck.gl/core/dist/controllers/controller.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return Controller}});var transition=__webpack_require__("./node_modules/@deck.gl/core/dist/transitions/transition.js");const noop=()=>{},TRANSITION_EVENTS_SNAP_TO_END=2,TRANSITION_EVENTS_IGNORE=3,DEFAULT_EASING=t=>t,DEFAULT_INTERRUPTION=1;class TransitionManager{constructor(opts){this._onTransitionUpdate=transition=>{const{time:time,settings:{interpolator:interpolator,startProps:startProps,endProps:endProps,duration:duration,easing:easing}}=transition,t=easing(time/duration),viewport=interpolator.interpolateProps(startProps,endProps,t);this.propsInTransition=this.getControllerState({...this.props,...viewport}).getViewportProps(),this.onViewStateChange({viewState:this.propsInTransition,oldViewState:this.props})},this.getControllerState=opts.getControllerState,this.propsInTransition=null,this.transition=new transition.A(opts.timeline),this.onViewStateChange=opts.onViewStateChange||noop,this.onStateChange=opts.onStateChange||noop}finalize(){this.transition.cancel()}getViewportInTransition(){return this.propsInTransition}processViewStateChange(nextProps){let transitionTriggered=!1;const currentProps=this.props;if(this.props=nextProps,!currentProps||this._shouldIgnoreViewportChange(currentProps,nextProps))return!1;if(this._isTransitionEnabled(nextProps)){let startProps=currentProps;if(this.transition.inProgress){const{interruption:interruption,endProps:endProps}=this.transition.settings;startProps={...currentProps,...interruption===TRANSITION_EVENTS_SNAP_TO_END?endProps:this.propsInTransition||currentProps}}this._triggerTransition(startProps,nextProps),transitionTriggered=!0}else this.transition.cancel();return transitionTriggered}updateTransition(){this.transition.update()}_isTransitionEnabled(props){const{transitionDuration:transitionDuration,transitionInterpolator:transitionInterpolator}=props;return(transitionDuration>0||"auto"===transitionDuration)&&Boolean(transitionInterpolator)}_isUpdateDueToCurrentTransition(props){return!(!this.transition.inProgress||!this.propsInTransition)&&this.transition.settings.interpolator.arePropsEqual(props,this.propsInTransition)}_shouldIgnoreViewportChange(currentProps,nextProps){if(this.transition.inProgress){return this.transition.settings.interruption===TRANSITION_EVENTS_IGNORE||this._isUpdateDueToCurrentTransition(nextProps)}return!this._isTransitionEnabled(nextProps)||nextProps.transitionInterpolator.arePropsEqual(currentProps,nextProps)}_triggerTransition(startProps,endProps){const startViewstate=this.getControllerState(startProps),endViewStateProps=this.getControllerState(endProps).shortestPathFrom(startViewstate),transitionInterpolator=endProps.transitionInterpolator,duration=transitionInterpolator.getDuration?transitionInterpolator.getDuration(startProps,endProps):endProps.transitionDuration;if(0===duration)return;const initialProps=transitionInterpolator.initializeProps(startProps,endViewStateProps);this.propsInTransition={};const transitionSettings={duration:duration,easing:endProps.transitionEasing||DEFAULT_EASING,interpolator:transitionInterpolator,interruption:endProps.transitionInterruption||DEFAULT_INTERRUPTION,startProps:initialProps.start,endProps:initialProps.end,onStart:endProps.onTransitionStart,onUpdate:this._onTransitionUpdate,onInterrupt:this._onTransitionEnd(endProps.onTransitionInterrupt),onEnd:this._onTransitionEnd(endProps.onTransitionEnd)};this.transition.start(transitionSettings),this.onStateChange({inTransition:!0}),this.updateTransition()}_onTransitionEnd(callback){return transition=>{this.propsInTransition=null,this.onStateChange({inTransition:!1,isZooming:!1,isPanning:!1,isRotating:!1}),callback?.(transition)}}}var linear_interpolator=__webpack_require__("./node_modules/@deck.gl/core/dist/transitions/linear-interpolator.js");const NO_TRANSITION_PROPS={transitionDuration:0},INERTIA_EASING=t=>1-(1-t)*(1-t),EVENT_TYPES_WHEEL=["wheel"],EVENT_TYPES_PAN=["panstart","panmove","panend"],EVENT_TYPES_PINCH=["pinchstart","pinchmove","pinchend"],EVENT_TYPES_TRIPLE_PAN=["tripanstart","tripanmove","tripanend"],EVENT_TYPES_DOUBLE_TAP=["doubletap"],EVENT_TYPES_KEYBOARD=["keydown"],pinchEventWorkaround={};class Controller{constructor(opts){this.state={},this._events={},this._interactionState={isDragging:!1},this._customEvents=[],this._eventStartBlocked=null,this._panMove=!1,this.invertPan=!1,this.dragMode="rotate",this.inertia=0,this.scrollZoom=!0,this.dragPan=!0,this.dragRotate=!0,this.doubleClickZoom=!0,this.touchZoom=!0,this.touchRotate=!1,this.keyboard=!0,this.transitionManager=new TransitionManager({...opts,getControllerState:props=>new this.ControllerState(props),onViewStateChange:this._onTransition.bind(this),onStateChange:this._setInteractionState.bind(this)}),this.handleEvent=this.handleEvent.bind(this),this.eventManager=opts.eventManager,this.onViewStateChange=opts.onViewStateChange||(()=>{}),this.onStateChange=opts.onStateChange||(()=>{}),this.makeViewport=opts.makeViewport}set events(customEvents){this.toggleEvents(this._customEvents,!1),this.toggleEvents(customEvents,!0),this._customEvents=customEvents,this.props&&this.setProps(this.props)}finalize(){for(const eventName in this._events)this._events[eventName]&&this.eventManager?.off(eventName,this.handleEvent);this.transitionManager.finalize()}handleEvent(event){this._controllerState=void 0;const eventStartBlocked=this._eventStartBlocked;switch(event.type){case"panstart":return!eventStartBlocked&&this._onPanStart(event);case"panmove":return this._onPan(event);case"panend":return this._onPanEnd(event);case"pinchstart":return!eventStartBlocked&&this._onPinchStart(event);case"pinchmove":return this._onPinch(event);case"pinchend":return this._onPinchEnd(event);case"tripanstart":return!eventStartBlocked&&this._onTriplePanStart(event);case"tripanmove":return this._onTriplePan(event);case"tripanend":return this._onTriplePanEnd(event);case"doubletap":return this._onDoubleTap(event);case"wheel":return this._onWheel(event);case"keydown":return this._onKeyDown(event);default:return!1}}get controllerState(){return this._controllerState=this._controllerState||new this.ControllerState({makeViewport:this.makeViewport,...this.props,...this.state}),this._controllerState}getCenter(event){const{x:x,y:y}=this.props,{offsetCenter:offsetCenter}=event;return[offsetCenter.x-x,offsetCenter.y-y]}isPointInBounds(pos,event){const{width:width,height:height}=this.props;if(event&&event.handled)return!1;const inside=pos[0]>=0&&pos[0]<=width&&pos[1]>=0&&pos[1]<=height;return inside&&event&&event.stopPropagation(),inside}isFunctionKeyPressed(event){const{srcEvent:srcEvent}=event;return Boolean(srcEvent.metaKey||srcEvent.altKey||srcEvent.ctrlKey||srcEvent.shiftKey)}isDragging(){return this._interactionState.isDragging||!1}blockEvents(timeout){const timer=setTimeout((()=>{this._eventStartBlocked===timer&&(this._eventStartBlocked=null)}),timeout);this._eventStartBlocked=timer}setProps(props){props.dragMode&&(this.dragMode=props.dragMode),this.props=props,"transitionInterpolator"in props||(props.transitionInterpolator=this._getTransitionProps().transitionInterpolator),this.transitionManager.processViewStateChange(props);const{inertia:inertia}=props;this.inertia=Number.isFinite(inertia)?inertia:!0===inertia?300:0;const{scrollZoom:scrollZoom=!0,dragPan:dragPan=!0,dragRotate:dragRotate=!0,doubleClickZoom:doubleClickZoom=!0,touchZoom:touchZoom=!0,touchRotate:touchRotate=!1,keyboard:keyboard=!0}=props,isInteractive=Boolean(this.onViewStateChange);this.toggleEvents(EVENT_TYPES_WHEEL,isInteractive&&scrollZoom),this.toggleEvents(EVENT_TYPES_PAN,isInteractive),this.toggleEvents(EVENT_TYPES_PINCH,isInteractive&&(touchZoom||touchRotate)),this.toggleEvents(EVENT_TYPES_TRIPLE_PAN,isInteractive&&touchRotate),this.toggleEvents(EVENT_TYPES_DOUBLE_TAP,isInteractive&&doubleClickZoom),this.toggleEvents(EVENT_TYPES_KEYBOARD,isInteractive&&keyboard),this.scrollZoom=scrollZoom,this.dragPan=dragPan,this.dragRotate=dragRotate,this.doubleClickZoom=doubleClickZoom,this.touchZoom=touchZoom,this.touchRotate=touchRotate,this.keyboard=keyboard}updateTransition(){this.transitionManager.updateTransition()}toggleEvents(eventNames,enabled){this.eventManager&&eventNames.forEach((eventName=>{this._events[eventName]!==enabled&&(this._events[eventName]=enabled,enabled?this.eventManager.on(eventName,this.handleEvent):this.eventManager.off(eventName,this.handleEvent))}))}updateViewport(newControllerState,extraProps=null,interactionState={}){const viewState={...newControllerState.getViewportProps(),...extraProps},changed=this.controllerState!==newControllerState;if(this.state=newControllerState.getState(),this._setInteractionState(interactionState),changed){const oldViewState=this.controllerState&&this.controllerState.getViewportProps();this.onViewStateChange&&this.onViewStateChange({viewState:viewState,interactionState:this._interactionState,oldViewState:oldViewState,viewId:this.props.id})}}_onTransition(params){this.onViewStateChange({...params,interactionState:this._interactionState,viewId:this.props.id})}_setInteractionState(newStates){Object.assign(this._interactionState,newStates),this.onStateChange(this._interactionState)}_onPanStart(event){const pos=this.getCenter(event);if(!this.isPointInBounds(pos,event))return!1;let alternateMode=this.isFunctionKeyPressed(event)||event.rightButton||!1;(this.invertPan||"pan"===this.dragMode)&&(alternateMode=!alternateMode);const newControllerState=this.controllerState[alternateMode?"panStart":"rotateStart"]({pos:pos});return this._panMove=alternateMode,this.updateViewport(newControllerState,NO_TRANSITION_PROPS,{isDragging:!0}),!0}_onPan(event){return!!this.isDragging()&&(this._panMove?this._onPanMove(event):this._onPanRotate(event))}_onPanEnd(event){return!!this.isDragging()&&(this._panMove?this._onPanMoveEnd(event):this._onPanRotateEnd(event))}_onPanMove(event){if(!this.dragPan)return!1;const pos=this.getCenter(event),newControllerState=this.controllerState.pan({pos:pos});return this.updateViewport(newControllerState,NO_TRANSITION_PROPS,{isDragging:!0,isPanning:!0}),!0}_onPanMoveEnd(event){const{inertia:inertia}=this;if(this.dragPan&&inertia&&event.velocity){const pos=this.getCenter(event),endPos=[pos[0]+event.velocityX*inertia/2,pos[1]+event.velocityY*inertia/2],newControllerState=this.controllerState.pan({pos:endPos}).panEnd();this.updateViewport(newControllerState,{...this._getTransitionProps(),transitionDuration:inertia,transitionEasing:INERTIA_EASING},{isDragging:!1,isPanning:!0})}else{const newControllerState=this.controllerState.panEnd();this.updateViewport(newControllerState,null,{isDragging:!1,isPanning:!1})}return!0}_onPanRotate(event){if(!this.dragRotate)return!1;const pos=this.getCenter(event),newControllerState=this.controllerState.rotate({pos:pos});return this.updateViewport(newControllerState,NO_TRANSITION_PROPS,{isDragging:!0,isRotating:!0}),!0}_onPanRotateEnd(event){const{inertia:inertia}=this;if(this.dragRotate&&inertia&&event.velocity){const pos=this.getCenter(event),endPos=[pos[0]+event.velocityX*inertia/2,pos[1]+event.velocityY*inertia/2],newControllerState=this.controllerState.rotate({pos:endPos}).rotateEnd();this.updateViewport(newControllerState,{...this._getTransitionProps(),transitionDuration:inertia,transitionEasing:INERTIA_EASING},{isDragging:!1,isRotating:!0})}else{const newControllerState=this.controllerState.rotateEnd();this.updateViewport(newControllerState,null,{isDragging:!1,isRotating:!1})}return!0}_onWheel(event){if(!this.scrollZoom)return!1;const pos=this.getCenter(event);if(!this.isPointInBounds(pos,event))return!1;event.srcEvent.preventDefault();const{speed:speed=.01,smooth:smooth=!1}=!0===this.scrollZoom?{}:this.scrollZoom,{delta:delta}=event;let scale=2/(1+Math.exp(-Math.abs(delta*speed)));delta<0&&0!==scale&&(scale=1/scale);const newControllerState=this.controllerState.zoom({pos:pos,scale:scale});return this.updateViewport(newControllerState,{...this._getTransitionProps({around:pos}),transitionDuration:smooth?250:1},{isZooming:!0,isPanning:!0}),!0}_onTriplePanStart(event){const pos=this.getCenter(event);if(!this.isPointInBounds(pos,event))return!1;const newControllerState=this.controllerState.rotateStart({pos:pos});return this.updateViewport(newControllerState,NO_TRANSITION_PROPS,{isDragging:!0}),!0}_onTriplePan(event){if(!this.touchRotate)return!1;if(!this.isDragging())return!1;const pos=this.getCenter(event);pos[0]-=event.deltaX;const newControllerState=this.controllerState.rotate({pos:pos});return this.updateViewport(newControllerState,NO_TRANSITION_PROPS,{isDragging:!0,isRotating:!0}),!0}_onTriplePanEnd(event){if(!this.isDragging())return!1;const{inertia:inertia}=this;if(this.touchRotate&&inertia&&event.velocityY){const pos=this.getCenter(event),endPos=[pos[0],pos[1]+=event.velocityY*inertia/2],newControllerState=this.controllerState.rotate({pos:endPos});this.updateViewport(newControllerState,{...this._getTransitionProps(),transitionDuration:inertia,transitionEasing:INERTIA_EASING},{isDragging:!1,isRotating:!0}),this.blockEvents(inertia)}else{const newControllerState=this.controllerState.rotateEnd();this.updateViewport(newControllerState,null,{isDragging:!1,isRotating:!1})}return!0}_onPinchStart(event){const pos=this.getCenter(event);if(!this.isPointInBounds(pos,event))return!1;const newControllerState=this.controllerState.zoomStart({pos:pos}).rotateStart({pos:pos});return pinchEventWorkaround._startPinchRotation=event.rotation,pinchEventWorkaround._lastPinchEvent=event,this.updateViewport(newControllerState,NO_TRANSITION_PROPS,{isDragging:!0}),!0}_onPinch(event){if(!this.touchZoom&&!this.touchRotate)return!1;if(!this.isDragging())return!1;let newControllerState=this.controllerState;if(this.touchZoom){const{scale:scale}=event,pos=this.getCenter(event);newControllerState=newControllerState.zoom({pos:pos,scale:scale})}if(this.touchRotate){const{rotation:rotation}=event;newControllerState=newControllerState.rotate({deltaAngleX:pinchEventWorkaround._startPinchRotation-rotation})}return this.updateViewport(newControllerState,NO_TRANSITION_PROPS,{isDragging:!0,isPanning:this.touchZoom,isZooming:this.touchZoom,isRotating:this.touchRotate}),pinchEventWorkaround._lastPinchEvent=event,!0}_onPinchEnd(event){if(!this.isDragging())return!1;const{inertia:inertia}=this,{_lastPinchEvent:_lastPinchEvent}=pinchEventWorkaround;if(this.touchZoom&&inertia&&_lastPinchEvent&&event.scale!==_lastPinchEvent.scale){const pos=this.getCenter(event);let newControllerState=this.controllerState.rotateEnd();const z=Math.log2(event.scale),velocityZ=(z-Math.log2(_lastPinchEvent.scale))/(event.deltaTime-_lastPinchEvent.deltaTime),endScale=Math.pow(2,z+velocityZ*inertia/2);newControllerState=newControllerState.zoom({pos:pos,scale:endScale}).zoomEnd(),this.updateViewport(newControllerState,{...this._getTransitionProps({around:pos}),transitionDuration:inertia,transitionEasing:INERTIA_EASING},{isDragging:!1,isPanning:this.touchZoom,isZooming:this.touchZoom,isRotating:!1}),this.blockEvents(inertia)}else{const newControllerState=this.controllerState.zoomEnd().rotateEnd();this.updateViewport(newControllerState,null,{isDragging:!1,isPanning:!1,isZooming:!1,isRotating:!1})}return pinchEventWorkaround._startPinchRotation=null,pinchEventWorkaround._lastPinchEvent=null,!0}_onDoubleTap(event){if(!this.doubleClickZoom)return!1;const pos=this.getCenter(event);if(!this.isPointInBounds(pos,event))return!1;const isZoomOut=this.isFunctionKeyPressed(event),newControllerState=this.controllerState.zoom({pos:pos,scale:isZoomOut?.5:2});return this.updateViewport(newControllerState,this._getTransitionProps({around:pos}),{isZooming:!0,isPanning:!0}),this.blockEvents(100),!0}_onKeyDown(event){if(!this.keyboard)return!1;const funcKey=this.isFunctionKeyPressed(event),{zoomSpeed:zoomSpeed,moveSpeed:moveSpeed,rotateSpeedX:rotateSpeedX,rotateSpeedY:rotateSpeedY}=!0===this.keyboard?{}:this.keyboard,{controllerState:controllerState}=this;let newControllerState;const interactionState={};switch(event.srcEvent.code){case"Minus":newControllerState=funcKey?controllerState.zoomOut(zoomSpeed).zoomOut(zoomSpeed):controllerState.zoomOut(zoomSpeed),interactionState.isZooming=!0;break;case"Equal":newControllerState=funcKey?controllerState.zoomIn(zoomSpeed).zoomIn(zoomSpeed):controllerState.zoomIn(zoomSpeed),interactionState.isZooming=!0;break;case"ArrowLeft":funcKey?(newControllerState=controllerState.rotateLeft(rotateSpeedX),interactionState.isRotating=!0):(newControllerState=controllerState.moveLeft(moveSpeed),interactionState.isPanning=!0);break;case"ArrowRight":funcKey?(newControllerState=controllerState.rotateRight(rotateSpeedX),interactionState.isRotating=!0):(newControllerState=controllerState.moveRight(moveSpeed),interactionState.isPanning=!0);break;case"ArrowUp":funcKey?(newControllerState=controllerState.rotateUp(rotateSpeedY),interactionState.isRotating=!0):(newControllerState=controllerState.moveUp(moveSpeed),interactionState.isPanning=!0);break;case"ArrowDown":funcKey?(newControllerState=controllerState.rotateDown(rotateSpeedY),interactionState.isRotating=!0):(newControllerState=controllerState.moveDown(moveSpeed),interactionState.isPanning=!0);break;default:return!1}return this.updateViewport(newControllerState,this._getTransitionProps(),interactionState),!0}_getTransitionProps(opts){const{transition:transition}=this;return transition&&transition.transitionInterpolator?opts?{...transition,transitionInterpolator:new linear_interpolator.A({...opts,...transition.transitionInterpolator.opts,makeViewport:this.controllerState.makeViewport})}:transition:NO_TRANSITION_PROPS}}},"./node_modules/@deck.gl/core/dist/controllers/orbit-controller.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return OrbitController},c:function(){return OrbitState}});var _math_gl_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js"),_controller_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@deck.gl/core/dist/controllers/controller.js"),_view_state_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@deck.gl/core/dist/controllers/view-state.js"),_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/math-utils.js"),_transitions_linear_interpolator_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@deck.gl/core/dist/transitions/linear-interpolator.js");class OrbitState extends _view_state_js__WEBPACK_IMPORTED_MODULE_0__.A{constructor(options){const{width:width,height:height,rotationX:rotationX=0,rotationOrbit:rotationOrbit=0,target:target=[0,0,0],zoom:zoom=0,minRotationX:minRotationX=-90,maxRotationX:maxRotationX=90,minZoom:minZoom=-1/0,maxZoom:maxZoom=1/0,startPanPosition:startPanPosition,startRotatePos:startRotatePos,startRotationX:startRotationX,startRotationOrbit:startRotationOrbit,startZoomPosition:startZoomPosition,startZoom:startZoom}=options;super({width:width,height:height,rotationX:rotationX,rotationOrbit:rotationOrbit,target:target,zoom:zoom,minRotationX:minRotationX,maxRotationX:maxRotationX,minZoom:minZoom,maxZoom:maxZoom},{startPanPosition:startPanPosition,startRotatePos:startRotatePos,startRotationX:startRotationX,startRotationOrbit:startRotationOrbit,startZoomPosition:startZoomPosition,startZoom:startZoom}),this.makeViewport=options.makeViewport}panStart({pos:pos}){return this._getUpdatedState({startPanPosition:this._unproject(pos)})}pan({pos:pos,startPosition:startPosition}){const startPanPosition=this.getState().startPanPosition||startPosition;if(!startPanPosition)return this;const newProps=this.makeViewport(this.getViewportProps()).panByPosition(startPanPosition,pos);return this._getUpdatedState(newProps)}panEnd(){return this._getUpdatedState({startPanPosition:null})}rotateStart({pos:pos}){return this._getUpdatedState({startRotatePos:pos,startRotationX:this.getViewportProps().rotationX,startRotationOrbit:this.getViewportProps().rotationOrbit})}rotate({pos:pos,deltaAngleX:deltaAngleX=0,deltaAngleY:deltaAngleY=0}){const{startRotatePos:startRotatePos,startRotationX:startRotationX,startRotationOrbit:startRotationOrbit}=this.getState(),{width:width,height:height}=this.getViewportProps();if(!startRotatePos||void 0===startRotationX||void 0===startRotationOrbit)return this;let newRotation;if(pos){let deltaScaleX=(pos[0]-startRotatePos[0])/width;(startRotationX<-90||startRotationX>90)&&(deltaScaleX*=-1),newRotation={rotationX:startRotationX+180*((pos[1]-startRotatePos[1])/height),rotationOrbit:startRotationOrbit+180*deltaScaleX}}else newRotation={rotationX:startRotationX+deltaAngleY,rotationOrbit:startRotationOrbit+deltaAngleX};return this._getUpdatedState(newRotation)}rotateEnd(){return this._getUpdatedState({startRotationX:null,startRotationOrbit:null})}shortestPathFrom(viewState){const fromProps=viewState.getViewportProps(),props={...this.getViewportProps()},{rotationOrbit:rotationOrbit}=props;return Math.abs(rotationOrbit-fromProps.rotationOrbit)>180&&(props.rotationOrbit=rotationOrbit<0?rotationOrbit+360:rotationOrbit-360),props}zoomStart({pos:pos}){return this._getUpdatedState({startZoomPosition:this._unproject(pos),startZoom:this.getViewportProps().zoom})}zoom({pos:pos,startPos:startPos,scale:scale}){let{startZoom:startZoom,startZoomPosition:startZoomPosition}=this.getState();if(startZoomPosition||(startZoom=this.getViewportProps().zoom,startZoomPosition=this._unproject(startPos)||this._unproject(pos)),!startZoomPosition)return this;const newZoom=this._calculateNewZoom({scale:scale,startZoom:startZoom}),zoomedViewport=this.makeViewport({...this.getViewportProps(),zoom:newZoom});return this._getUpdatedState({zoom:newZoom,...zoomedViewport.panByPosition(startZoomPosition,pos)})}zoomEnd(){return this._getUpdatedState({startZoomPosition:null,startZoom:null})}zoomIn(speed=2){return this._getUpdatedState({zoom:this._calculateNewZoom({scale:speed})})}zoomOut(speed=2){return this._getUpdatedState({zoom:this._calculateNewZoom({scale:1/speed})})}moveLeft(speed=50){return this._panFromCenter([-speed,0])}moveRight(speed=50){return this._panFromCenter([speed,0])}moveUp(speed=50){return this._panFromCenter([0,-speed])}moveDown(speed=50){return this._panFromCenter([0,speed])}rotateLeft(speed=15){return this._getUpdatedState({rotationOrbit:this.getViewportProps().rotationOrbit-speed})}rotateRight(speed=15){return this._getUpdatedState({rotationOrbit:this.getViewportProps().rotationOrbit+speed})}rotateUp(speed=10){return this._getUpdatedState({rotationX:this.getViewportProps().rotationX-speed})}rotateDown(speed=10){return this._getUpdatedState({rotationX:this.getViewportProps().rotationX+speed})}_unproject(pos){const viewport=this.makeViewport(this.getViewportProps());return pos&&viewport.unproject(pos)}_calculateNewZoom({scale:scale,startZoom:startZoom}){const{maxZoom:maxZoom,minZoom:minZoom}=this.getViewportProps();void 0===startZoom&&(startZoom=this.getViewportProps().zoom);const zoom=startZoom+Math.log2(scale);return(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_1__.qE)(zoom,minZoom,maxZoom)}_panFromCenter(offset){const{width:width,height:height,target:target}=this.getViewportProps();return this.pan({startPosition:target,pos:[width/2+offset[0],height/2+offset[1]]})}_getUpdatedState(newProps){return new this.constructor({makeViewport:this.makeViewport,...this.getViewportProps(),...this.getState(),...newProps})}applyConstraints(props){const{maxZoom:maxZoom,minZoom:minZoom,zoom:zoom,maxRotationX:maxRotationX,minRotationX:minRotationX,rotationOrbit:rotationOrbit}=props;return props.zoom=Array.isArray(zoom)?[(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_1__.qE)(zoom[0],minZoom,maxZoom),(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_1__.qE)(zoom[1],minZoom,maxZoom)]:(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_1__.qE)(zoom,minZoom,maxZoom),props.rotationX=(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_1__.qE)(props.rotationX,minRotationX,maxRotationX),(rotationOrbit<-180||rotationOrbit>180)&&(props.rotationOrbit=(0,_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_2__.zi)(rotationOrbit+180,360)-180),props}}class OrbitController extends _controller_js__WEBPACK_IMPORTED_MODULE_3__.A{constructor(){super(...arguments),this.ControllerState=OrbitState,this.transition={transitionDuration:300,transitionInterpolator:new _transitions_linear_interpolator_js__WEBPACK_IMPORTED_MODULE_4__.A({transitionProps:{compare:["target","zoom","rotationX","rotationOrbit"],required:["target","zoom"]}})}}}},"./node_modules/@deck.gl/core/dist/controllers/orthographic-controller.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return OrthographicController}});var _math_gl_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js"),_controller_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@deck.gl/core/dist/controllers/controller.js"),_orbit_controller_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@deck.gl/core/dist/controllers/orbit-controller.js"),_transitions_linear_interpolator_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@deck.gl/core/dist/transitions/linear-interpolator.js");class OrthographicState extends _orbit_controller_js__WEBPACK_IMPORTED_MODULE_0__.c{constructor(props){super(props),this.zoomAxis=props.zoomAxis||"all"}_calculateNewZoom({scale:scale,startZoom:startZoom}){const{maxZoom:maxZoom,minZoom:minZoom}=this.getViewportProps();void 0===startZoom&&(startZoom=this.getViewportProps().zoom);let deltaZoom=Math.log2(scale);if(Array.isArray(startZoom)){let[newZoomX,newZoomY]=startZoom;switch(this.zoomAxis){case"X":newZoomX=(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_1__.qE)(newZoomX+deltaZoom,minZoom,maxZoom);break;case"Y":newZoomY=(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_1__.qE)(newZoomY+deltaZoom,minZoom,maxZoom);break;default:let z=Math.min(newZoomX+deltaZoom,newZoomY+deltaZoom);z<minZoom&&(deltaZoom+=minZoom-z),z=Math.max(newZoomX+deltaZoom,newZoomY+deltaZoom),z>maxZoom&&(deltaZoom+=maxZoom-z),newZoomX+=deltaZoom,newZoomY+=deltaZoom}return[newZoomX,newZoomY]}return(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_1__.qE)(startZoom+deltaZoom,minZoom,maxZoom)}}class OrthographicController extends _controller_js__WEBPACK_IMPORTED_MODULE_2__.A{constructor(){super(...arguments),this.ControllerState=OrthographicState,this.transition={transitionDuration:300,transitionInterpolator:new _transitions_linear_interpolator_js__WEBPACK_IMPORTED_MODULE_3__.A(["target","zoom"])},this.dragMode="pan"}_onPanRotate(){return!1}}},"./node_modules/@deck.gl/core/dist/controllers/view-state.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return ViewState}});class ViewState{constructor(props,state){this._viewportProps=this.applyConstraints(props),this._state=state}getViewportProps(){return this._viewportProps}getState(){return this._state}}},"./node_modules/@deck.gl/core/dist/debug/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return debug},k:function(){return register}});var _utils_log_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/log.js");let loggers={};function register(handlers){loggers=handlers}function debug(eventType,arg1,arg2,arg3){_utils_log_js__WEBPACK_IMPORTED_MODULE_0__.A.level>0&&loggers[eventType]&&loggers[eventType].call(null,arg1,arg2,arg3)}},"./node_modules/@deck.gl/core/dist/effects/lighting/ambient-light.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{$:function(){return AmbientLight}});const DEFAULT_LIGHT_COLOR=[255,255,255],DEFAULT_LIGHT_INTENSITY=1;let idCount=0;class AmbientLight{constructor(props={}){this.type="ambient";const{color:color=DEFAULT_LIGHT_COLOR}=props,{intensity:intensity=DEFAULT_LIGHT_INTENSITY}=props;this.id=props.id||"ambient-"+idCount++,this.color=color,this.intensity=intensity}}},"./node_modules/@deck.gl/core/dist/effects/lighting/directional-light.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{Z:function(){return DirectionalLight}});var _math_gl_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/classes/vector3.js");const DEFAULT_LIGHT_COLOR=[255,255,255],DEFAULT_LIGHT_INTENSITY=1,DEFAULT_LIGHT_DIRECTION=[0,0,-1];let idCount=0;class DirectionalLight{constructor(props={}){this.type="directional";const{color:color=DEFAULT_LIGHT_COLOR}=props,{intensity:intensity=DEFAULT_LIGHT_INTENSITY}=props,{direction:direction=DEFAULT_LIGHT_DIRECTION}=props,{_shadow:_shadow=!1}=props;this.id=props.id||"directional-"+idCount++,this.color=color,this.intensity=intensity,this.type="directional",this.direction=new _math_gl_core__WEBPACK_IMPORTED_MODULE_0__.P(direction).normalize().toArray(),this.shadow=_shadow}getProjectedLight(opts){return this}}},"./node_modules/@deck.gl/core/dist/effects/lighting/lighting-effect.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return LightingEffect}});var ambient_light=__webpack_require__("./node_modules/@deck.gl/core/dist/effects/lighting/ambient-light.js"),directional_light=__webpack_require__("./node_modules/@deck.gl/core/dist/effects/lighting/directional-light.js"),matrix4=__webpack_require__("./node_modules/@math.gl/core/dist/classes/matrix4.js"),vector3=__webpack_require__("./node_modules/@math.gl/core/dist/classes/vector3.js"),layers_pass=__webpack_require__("./node_modules/@deck.gl/core/dist/passes/layers-pass.js");class ShadowPass extends layers_pass.A{constructor(device,props){super(device,props),this.shadowMap=device.createTexture({width:1,height:1,sampler:{minFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"}}),this.depthBuffer=device.createTexture({format:"depth16unorm",width:1,height:1,mipmaps:!1,dataFormat:6402,type:5125}),this.fbo=device.createFramebuffer({id:"shadowmap",width:1,height:1,colorAttachments:[this.shadowMap],depthStencilAttachment:this.depthBuffer})}render(params){const target=this.fbo,pixelRatio=this.device.canvasContext.cssToDeviceRatio(),viewport=params.viewports[0],width=viewport.width*pixelRatio,height=viewport.height*pixelRatio;width===target.width&&height===target.height||target.resize({width:width,height:height}),super.render({...params,clearColor:[1,1,1,1],target:target,pass:"shadow"})}getLayerParameters(layer,layerIndex,viewport){return{...layer.props.parameters,blend:!1,depthRange:[0,1],depthTest:!0}}shouldDrawLayer(layer){return!1!==layer.props.shadowEnabled}getModuleParameters(){return{drawToShadowMap:!0}}delete(){this.fbo&&(this.fbo.destroy(),this.fbo=null),this.shadowMap&&(this.shadowMap.destroy(),this.shadowMap=null),this.depthBuffer&&(this.depthBuffer.destroy(),this.depthBuffer=null)}}var constants=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/constants.js"),project=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/project/project.js"),memoize=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/memoize.js"),dist=__webpack_require__("./node_modules/@math.gl/web-mercator/dist/index.js");const getMemoizedViewportCenterPosition=(0,memoize.A)((function getViewportCenterPosition({viewport:viewport,center:center}){return new matrix4.k(viewport.viewProjectionMatrix).invert().transform(center)})),getMemoizedViewProjectionMatrices=(0,memoize.A)((function getViewProjectionMatrices({viewport:viewport,shadowMatrices:shadowMatrices}){const projectionMatrices=[],pixelUnprojectionMatrix=viewport.pixelUnprojectionMatrix,farZ=viewport.isGeospatial?void 0:1,corners=[[0,0,farZ],[viewport.width,0,farZ],[0,viewport.height,farZ],[viewport.width,viewport.height,farZ],[0,0,-1],[viewport.width,0,-1],[0,viewport.height,-1],[viewport.width,viewport.height,-1]].map((pixel=>function screenToCommonSpace(xyz,pixelUnprojectionMatrix){const[x,y,z]=xyz,coord=(0,dist.xJ)([x,y,z],pixelUnprojectionMatrix);if(Number.isFinite(z))return coord;return[coord[0],coord[1],0]}(pixel,pixelUnprojectionMatrix)));for(const shadowMatrix of shadowMatrices){const viewMatrix=shadowMatrix.clone().translate(new vector3.P(viewport.center).negate()),positions=corners.map((corner=>viewMatrix.transform(corner))),projectionMatrix=(new matrix4.k).ortho({left:Math.min(...positions.map((position=>position[0]))),right:Math.max(...positions.map((position=>position[0]))),bottom:Math.min(...positions.map((position=>position[1]))),top:Math.max(...positions.map((position=>position[1]))),near:Math.min(...positions.map((position=>-position[2]))),far:Math.max(...positions.map((position=>-position[2])))});projectionMatrices.push(projectionMatrix.multiplyRight(shadowMatrix))}return projectionMatrices})),DEFAULT_SHADOW_COLOR=[0,0,0,1],VECTOR_TO_POINT_MATRIX=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0];var shadow={name:"shadow",dependencies:[project.A],vs:"\nconst int max_lights = 2;\nuniform mat4 shadow_uViewProjectionMatrices[max_lights];\nuniform vec4 shadow_uProjectCenters[max_lights];\nuniform bool shadow_uDrawShadowMap;\nuniform bool shadow_uUseShadowMap;\nuniform int shadow_uLightId;\nuniform float shadow_uLightCount;\n\nout vec3 shadow_vPosition[max_lights];\n\nvec4 shadow_setVertexPosition(vec4 position_commonspace) {\n  if (shadow_uDrawShadowMap) {\n    return project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[shadow_uLightId], shadow_uProjectCenters[shadow_uLightId]);\n  }\n  if (shadow_uUseShadowMap) {\n    for (int i = 0; i < max_lights; i++) {\n      if(i < int(shadow_uLightCount)) {\n        vec4 shadowMap_position = project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[i], shadow_uProjectCenters[i]);\n        shadow_vPosition[i] = (shadowMap_position.xyz / shadowMap_position.w + 1.0) / 2.0;\n      }\n    }\n  }\n  return gl_Position;\n}\n",fs:"\nconst int max_lights = 2;\nuniform bool shadow_uDrawShadowMap;\nuniform bool shadow_uUseShadowMap;\nuniform sampler2D shadow_uShadowMap0;\nuniform sampler2D shadow_uShadowMap1;\nuniform vec4 shadow_uColor;\nuniform float shadow_uLightCount;\n\nin vec3 shadow_vPosition[max_lights];\n\nconst vec4 bitPackShift = vec4(1.0, 255.0, 65025.0, 16581375.0);\nconst vec4 bitUnpackShift = 1.0 / bitPackShift;\nconst vec4 bitMask = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0,  0.0);\n\nfloat shadow_getShadowWeight(vec3 position, sampler2D shadowMap) {\n  vec4 rgbaDepth = texture(shadowMap, position.xy);\n\n  float z = dot(rgbaDepth, bitUnpackShift);\n  return smoothstep(0.001, 0.01, position.z - z);\n}\n\nvec4 shadow_filterShadowColor(vec4 color) {\n  if (shadow_uDrawShadowMap) {\n    vec4 rgbaDepth = fract(gl_FragCoord.z * bitPackShift);\n    rgbaDepth -= rgbaDepth.gbaa * bitMask;\n    return rgbaDepth;\n  }\n  if (shadow_uUseShadowMap) {\n    float shadowAlpha = 0.0;\n    shadowAlpha += shadow_getShadowWeight(shadow_vPosition[0], shadow_uShadowMap0);\n    if(shadow_uLightCount > 1.0) {\n      shadowAlpha += shadow_getShadowWeight(shadow_vPosition[1], shadow_uShadowMap1);\n    }\n    shadowAlpha *= shadow_uColor.a / shadow_uLightCount;\n    float blendedAlpha = shadowAlpha + color.a * (1.0 - shadowAlpha);\n\n    return vec4(\n      mix(color.rgb, shadow_uColor.rgb, shadowAlpha / blendedAlpha),\n      blendedAlpha\n    );\n  }\n  return color;\n}\n",inject:{"vs:DECKGL_FILTER_GL_POSITION":"\n    position = shadow_setVertexPosition(geometry.position);\n    ","fs:DECKGL_FILTER_COLOR":"\n    color = shadow_filterShadowColor(color);\n    "},getUniforms:(opts={},context={})=>"viewport"in opts&&(opts.drawToShadowMap||opts.shadowMaps&&opts.shadowMaps.length>0)?function createShadowUniforms(opts,context){const{shadowEnabled:shadowEnabled=!0}=opts;if(!shadowEnabled||!opts.shadowMatrices||!opts.shadowMatrices.length)return{shadow_uDrawShadowMap:!1,shadow_uUseShadowMap:!1,shadow_uShadowMap0:opts.dummyShadowMap,shadow_uShadowMap1:opts.dummyShadowMap};const uniforms={shadow_uDrawShadowMap:Boolean(opts.drawToShadowMap),shadow_uUseShadowMap:!!opts.shadowMaps&&opts.shadowMaps.length>0,shadow_uColor:opts.shadowColor||DEFAULT_SHADOW_COLOR,shadow_uLightId:opts.shadowLightId||0,shadow_uLightCount:opts.shadowMatrices.length},center=getMemoizedViewportCenterPosition({viewport:opts.viewport,center:context.project_uCenter}),projectCenters=[],viewProjectionMatrices=getMemoizedViewProjectionMatrices({shadowMatrices:opts.shadowMatrices,viewport:opts.viewport}).slice();for(let i=0;i<opts.shadowMatrices.length;i++){const viewProjectionMatrix=viewProjectionMatrices[i],viewProjectionMatrixCentered=viewProjectionMatrix.clone().translate(new vector3.P(opts.viewport.center).negate());context.project_uCoordinateSystem===constants.rf.LNGLAT&&context.project_uProjectionMode===constants.Kx.WEB_MERCATOR?(viewProjectionMatrices[i]=viewProjectionMatrixCentered,projectCenters[i]=center):(viewProjectionMatrices[i]=viewProjectionMatrix.clone().multiplyRight(VECTOR_TO_POINT_MATRIX),projectCenters[i]=viewProjectionMatrixCentered.transform(center))}for(let i=0;i<viewProjectionMatrices.length;i++)uniforms[`shadow_uViewProjectionMatrices[${i}]`]=viewProjectionMatrices[i],uniforms[`shadow_uProjectCenters[${i}]`]=projectCenters[i];for(let i=0;i<2;i++)uniforms[`shadow_uShadowMap${i}`]=opts.shadowMaps&&opts.shadowMaps[i]||opts.dummyShadowMap;return uniforms}(opts,context):{}};const DEFAULT_AMBIENT_LIGHT_PROPS={color:[255,255,255],intensity:1},DEFAULT_DIRECTIONAL_LIGHT_PROPS=[{color:[255,255,255],intensity:1,direction:[-1,3,-1]},{color:[255,255,255],intensity:.9,direction:[1,-8,-2.5]}],lighting_effect_DEFAULT_SHADOW_COLOR=[0,0,0,200/255];class LightingEffect{constructor(props={}){this.id="lighting-effect",this.shadowColor=lighting_effect_DEFAULT_SHADOW_COLOR,this.shadow=!1,this.ambientLight=null,this.directionalLights=[],this.pointLights=[],this.shadowPasses=[],this.shadowMaps=[],this.dummyShadowMap=null,this.setProps(props)}setup(context){this.context=context;const{device:device,deck:deck}=context;this.shadow&&!this.dummyShadowMap&&(this._createShadowPasses(device),deck._addDefaultShaderModule(shadow),this.dummyShadowMap=device.createTexture({width:1,height:1}))}setProps(props){this.ambientLight=null,this.directionalLights=[],this.pointLights=[];for(const key in props){const lightSource=props[key];switch(lightSource.type){case"ambient":this.ambientLight=lightSource;break;case"directional":this.directionalLights.push(lightSource);break;case"point":this.pointLights.push(lightSource)}}this._applyDefaultLights(),this.shadow=this.directionalLights.some((light=>light.shadow)),this.context&&this.setup(this.context),this.props=props}preRender({layers:layers,layerFilter:layerFilter,viewports:viewports,onViewportActive:onViewportActive,views:views}){if(this.shadow){this.shadowMatrices=this._calculateMatrices();for(let i=0;i<this.shadowPasses.length;i++){this.shadowPasses[i].render({layers:layers,layerFilter:layerFilter,viewports:viewports,onViewportActive:onViewportActive,views:views,moduleParameters:{shadowLightId:i,dummyShadowMap:this.dummyShadowMap,shadowMatrices:this.shadowMatrices}})}}}getModuleParameters(layer){const parameters=this.shadow?{shadowMaps:this.shadowMaps,dummyShadowMap:this.dummyShadowMap,shadowColor:this.shadowColor,shadowMatrices:this.shadowMatrices}:{};return parameters.lightSources={ambientLight:this.ambientLight,directionalLights:this.directionalLights.map((directionalLight=>directionalLight.getProjectedLight({layer:layer}))),pointLights:this.pointLights.map((pointLight=>pointLight.getProjectedLight({layer:layer})))},parameters}cleanup(context){for(const shadowPass of this.shadowPasses)shadowPass.delete();this.shadowPasses.length=0,this.shadowMaps.length=0,this.dummyShadowMap&&(this.dummyShadowMap.destroy(),this.dummyShadowMap=null,context.deck._removeDefaultShaderModule(shadow))}_calculateMatrices(){const lightMatrices=[];for(const light of this.directionalLights){const viewMatrix=(new matrix4.k).lookAt({eye:new vector3.P(light.direction).negate()});lightMatrices.push(viewMatrix)}return lightMatrices}_createShadowPasses(device){for(let i=0;i<this.directionalLights.length;i++){const shadowPass=new ShadowPass(device);this.shadowPasses[i]=shadowPass,this.shadowMaps[i]=shadowPass.shadowMap}}_applyDefaultLights(){const{ambientLight:ambientLight,pointLights:pointLights,directionalLights:directionalLights}=this;ambientLight||0!==pointLights.length||0!==directionalLights.length||(this.ambientLight=new ambient_light.$(DEFAULT_AMBIENT_LIGHT_PROPS),this.directionalLights.push(new directional_light.Z(DEFAULT_DIRECTIONAL_LIGHT_PROPS[0]),new directional_light.Z(DEFAULT_DIRECTIONAL_LIGHT_PROPS[1])))}}},"./node_modules/@deck.gl/core/dist/lib/attribute/attribute-manager.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return AttributeManager}});var resources_buffer=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/buffer.js"),vertex_format_from_attribute=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/type-utils/vertex-format-from-attribute.js");const dataTypeFromTypedArray=vertex_format_from_attribute.UE;function getBufferAttributeLayout(name,accessor){return{attribute:name,format:accessor.size>1?`${accessor.type}x${accessor.size}`:accessor.type,byteOffset:accessor.offset||0}}function getStride(accessor){return accessor.stride||accessor.size*accessor.bytesPerElement}var typed_array_manager=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/typed-array-manager.js"),math_utils=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/math-utils.js"),log=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/log.js");function resolveShaderAttribute(baseAccessor,shaderAttributeOptions){shaderAttributeOptions.offset&&log.A.removed("shaderAttribute.offset","vertexOffset, elementOffset")();const stride=getStride(baseAccessor),offset=(void 0!==shaderAttributeOptions.vertexOffset?shaderAttributeOptions.vertexOffset:baseAccessor.vertexOffset||0)*stride+(shaderAttributeOptions.elementOffset||0)*baseAccessor.bytesPerElement+(baseAccessor.offset||0);return{...shaderAttributeOptions,offset:offset,stride:stride}}class DataColumn{constructor(device,opts,state){this._buffer=null,this.device=device,this.id=opts.id||"",this.size=opts.size||1;const logicalType=opts.logicalType||opts.type,doublePrecision="float64"===logicalType;let bufferType,{defaultValue:defaultValue}=opts;defaultValue=Number.isFinite(defaultValue)?[defaultValue]:defaultValue||new Array(this.size).fill(0),bufferType=doublePrecision?"float32":!logicalType&&opts.isIndexed?"uint32":logicalType||"float32";let defaultType=function typedArrayFromDataType(type){switch(type){case"float64":return Float64Array;case"uint8":case"unorm8":return Uint8ClampedArray;default:return(0,vertex_format_from_attribute.Y0)(type)}}(logicalType||bufferType);this.doublePrecision=doublePrecision,doublePrecision&&!1===opts.fp64&&(defaultType=Float32Array),this.value=null,this.settings={...opts,defaultType:defaultType,defaultValue:defaultValue,logicalType:logicalType,type:bufferType,normalized:bufferType.includes("norm"),size:this.size,bytesPerElement:defaultType.BYTES_PER_ELEMENT},this.state={...state,externalBuffer:null,bufferAccessor:this.settings,allocatedValue:null,numInstances:0,bounds:null,constant:!1}}get isConstant(){return this.state.constant}get buffer(){return this._buffer}get byteOffset(){const accessor=this.getAccessor();return accessor.vertexOffset?accessor.vertexOffset*getStride(accessor):0}get numInstances(){return this.state.numInstances}set numInstances(n){this.state.numInstances=n}delete(){this._buffer&&(this._buffer.delete(),this._buffer=null),typed_array_manager.A.release(this.state.allocatedValue)}getBuffer(){return this.state.constant?null:this.state.externalBuffer||this._buffer}getValue(attributeName=this.id,options=null){const result={};if(this.state.constant){const value=this.value;if(options){const shaderAttributeDef=resolveShaderAttribute(this.getAccessor(),options),offset=shaderAttributeDef.offset/value.BYTES_PER_ELEMENT,size=shaderAttributeDef.size||this.size;result[attributeName]=value.subarray(offset,offset+size)}else result[attributeName]=value}else result[attributeName]=this.getBuffer();return this.doublePrecision&&(this.value instanceof Float64Array?result[`${attributeName}64Low`]=result[attributeName]:result[`${attributeName}64Low`]=new Float32Array(this.size)),result}_getBufferLayout(attributeName=this.id,options=null){const accessor=this.getAccessor(),attributes=[],result={name:this.id,byteStride:getStride(accessor),attributes:attributes};if(this.doublePrecision){const doubleShaderAttributeDefs=function resolveDoublePrecisionShaderAttributes(baseAccessor,shaderAttributeOptions){const resolvedOptions=resolveShaderAttribute(baseAccessor,shaderAttributeOptions);return{high:resolvedOptions,low:{...resolvedOptions,offset:resolvedOptions.offset+4*baseAccessor.size}}}(accessor,options||{});attributes.push(getBufferAttributeLayout(attributeName,{...accessor,...doubleShaderAttributeDefs.high}),getBufferAttributeLayout(`${attributeName}64Low`,{...accessor,...doubleShaderAttributeDefs.low}))}else if(options){const shaderAttributeDef=resolveShaderAttribute(accessor,options);attributes.push(getBufferAttributeLayout(attributeName,{...accessor,...shaderAttributeDef}))}else attributes.push(getBufferAttributeLayout(attributeName,accessor));return result}setAccessor(accessor){this.state.bufferAccessor=accessor}getAccessor(){return this.state.bufferAccessor}getBounds(){if(this.state.bounds)return this.state.bounds;let result=null;if(this.state.constant&&this.value){const min=Array.from(this.value);result=[min,min]}else{const{value:value,numInstances:numInstances,size:size}=this,len=numInstances*size;if(value&&len&&value.length>=len){const min=new Array(size).fill(1/0),max=new Array(size).fill(-1/0);for(let i=0;i<len;)for(let j=0;j<size;j++){const v=value[i++];v<min[j]&&(min[j]=v),v>max[j]&&(max[j]=v)}result=[min,max]}}return this.state.bounds=result,result}setData(data){const{state:state}=this;let opts;opts=ArrayBuffer.isView(data)?{value:data}:data instanceof resources_buffer.h?{buffer:data}:data;const accessor={...this.settings,...opts};if(ArrayBuffer.isView(opts.value)){if(!opts.type){if(this.doublePrecision&&opts.value instanceof Float64Array)accessor.type="float32";else{const type=dataTypeFromTypedArray(opts.value);accessor.type=accessor.normalized?type.replace("int","norm"):type}}accessor.bytesPerElement=opts.value.BYTES_PER_ELEMENT,accessor.stride=getStride(accessor)}if(state.bounds=null,opts.constant){let value=opts.value;value=this._normalizeValue(value,[],0),this.settings.normalized&&(value=this.normalizeConstant(value));if(!(!state.constant||!this._areValuesEqual(value,this.value)))return!1;state.externalBuffer=null,state.constant=!0,this.value=ArrayBuffer.isView(value)?value:new Float32Array(value)}else if(opts.buffer){const buffer=opts.buffer;state.externalBuffer=buffer,state.constant=!1,this.value=opts.value||null}else if(opts.value){this._checkExternalBuffer(opts);let value=opts.value;state.externalBuffer=null,state.constant=!1,this.value=value;let{buffer:buffer}=this;const stride=getStride(accessor),byteOffset=(accessor.vertexOffset||0)*stride;if(this.doublePrecision&&value instanceof Float64Array&&(value=(0,math_utils.cT)(value,accessor)),this.settings.isIndexed){const ArrayType=this.settings.defaultType;value.constructor!==ArrayType&&(value=new ArrayType(value))}const requiredBufferSize=value.byteLength+byteOffset+2*stride;(!buffer||buffer.byteLength<requiredBufferSize)&&(buffer=this._createBuffer(requiredBufferSize)),buffer.write(value,byteOffset)}return this.setAccessor(accessor),!0}updateSubBuffer(opts={}){this.state.bounds=null;const value=this.value,{startOffset:startOffset=0,endOffset:endOffset}=opts;this.buffer.write(this.doublePrecision&&value instanceof Float64Array?(0,math_utils.cT)(value,{size:this.size,startIndex:startOffset,endIndex:endOffset}):value.subarray(startOffset,endOffset),startOffset*value.BYTES_PER_ELEMENT+this.byteOffset)}allocate(numInstances,copy=!1){const{state:state}=this,oldValue=state.allocatedValue,value=typed_array_manager.A.allocate(oldValue,numInstances+1,{size:this.size,type:this.settings.defaultType,copy:copy});this.value=value;const{byteOffset:byteOffset}=this;let{buffer:buffer}=this;return(!buffer||buffer.byteLength<value.byteLength+byteOffset)&&(buffer=this._createBuffer(value.byteLength+byteOffset),copy&&oldValue&&buffer.write(oldValue instanceof Float64Array?(0,math_utils.cT)(oldValue,this):oldValue,byteOffset)),state.allocatedValue=value,state.constant=!1,state.externalBuffer=null,this.setAccessor(this.settings),!0}_checkExternalBuffer(opts){const{value:value}=opts;if(!ArrayBuffer.isView(value))throw new Error(`Attribute ${this.id} value is not TypedArray`);const ArrayType=this.settings.defaultType;let illegalArrayType=!1;if(this.doublePrecision&&(illegalArrayType=value.BYTES_PER_ELEMENT<4),illegalArrayType)throw new Error(`Attribute ${this.id} does not support ${value.constructor.name}`);value instanceof ArrayType||!this.settings.normalized||"normalized"in opts||log.A.warn(`Attribute ${this.id} is normalized`)()}normalizeConstant(value){switch(this.settings.type){case"snorm8":return new Float32Array(value).map((x=>(x+128)/255*2-1));case"snorm16":return new Float32Array(value).map((x=>(x+32768)/65535*2-1));case"unorm8":return new Float32Array(value).map((x=>x/255));case"unorm16":return new Float32Array(value).map((x=>x/65535));default:return value}}_normalizeValue(value,out,start){const{defaultValue:defaultValue,size:size}=this.settings;if(Number.isFinite(value))return out[start]=value,out;if(!value){let i=size;for(;--i>=0;)out[start+i]=defaultValue[i];return out}switch(size){case 4:out[start+3]=Number.isFinite(value[3])?value[3]:defaultValue[3];case 3:out[start+2]=Number.isFinite(value[2])?value[2]:defaultValue[2];case 2:out[start+1]=Number.isFinite(value[1])?value[1]:defaultValue[1];case 1:out[start+0]=Number.isFinite(value[0])?value[0]:defaultValue[0];break;default:let i=size;for(;--i>=0;)out[start+i]=Number.isFinite(value[i])?value[i]:defaultValue[i]}return out}_areValuesEqual(value1,value2){if(!value1||!value2)return!1;const{size:size}=this;for(let i=0;i<size;i++)if(value1[i]!==value2[i])return!1;return!0}_createBuffer(byteLength){this._buffer&&this._buffer.destroy();const{isIndexed:isIndexed,type:type}=this.settings;return this._buffer=this.device.createBuffer({...this._buffer?.props,id:this.id,usage:isIndexed?resources_buffer.h.INDEX:resources_buffer.h.VERTEX,indexType:isIndexed?type:void 0,byteLength:byteLength}),this._buffer}}var assert=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/assert.js"),iterable_utils=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/iterable-utils.js"),flatten=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/flatten.js");const EMPTY=[],FULL=[[0,1/0]];var transition_settings=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/attribute/transition-settings.js");class Attribute extends DataColumn{constructor(device,opts){super(device,opts,{startIndices:null,lastExternalBuffer:null,binaryValue:null,binaryAccessor:null,needsUpdate:!0,needsRedraw:!1,layoutChanged:!1,updateRanges:FULL}),this.constant=!1,this.settings.update=opts.update||(opts.accessor?this._autoUpdater:void 0),Object.seal(this.settings),Object.seal(this.state),this._validateAttributeUpdaters()}get startIndices(){return this.state.startIndices}set startIndices(layout){this.state.startIndices=layout}needsUpdate(){return this.state.needsUpdate}needsRedraw({clearChangedFlags:clearChangedFlags=!1}={}){const needsRedraw=this.state.needsRedraw;return this.state.needsRedraw=needsRedraw&&!clearChangedFlags,needsRedraw}layoutChanged(){return this.state.layoutChanged}setAccessor(accessor){this.state.layoutChanged||=!function bufferLayoutEqual(accessor1,accessor2){return accessor1.type===accessor2.type&&accessor1.size===accessor2.size&&getStride(accessor1)===getStride(accessor2)&&(accessor1.offset||0)===(accessor2.offset||0)}(accessor,this.getAccessor()),super.setAccessor(accessor)}getUpdateTriggers(){const{accessor:accessor}=this.settings;return[this.id].concat("function"!=typeof accessor&&accessor||[])}supportsTransition(){return Boolean(this.settings.transition)}getTransitionSetting(opts){if(!opts||!this.supportsTransition())return null;const{accessor:accessor}=this.settings,layerSettings=this.settings.transition,userSettings=Array.isArray(accessor)?opts[accessor.find((a=>opts[a]))]:opts[accessor];return(0,transition_settings.K)(userSettings,layerSettings)}setNeedsUpdate(reason=this.id,dataRange){if(this.state.needsUpdate=this.state.needsUpdate||reason,this.setNeedsRedraw(reason),dataRange){const{startRow:startRow=0,endRow:endRow=1/0}=dataRange;this.state.updateRanges=function add(rangeList,range){if(rangeList===FULL)return rangeList;if(range[0]<0&&(range[0]=0),range[0]>=range[1])return rangeList;const newRangeList=[],len=rangeList.length;let insertPosition=0;for(let i=0;i<len;i++){const range0=rangeList[i];range0[1]<range[0]?(newRangeList.push(range0),insertPosition=i+1):range0[0]>range[1]?newRangeList.push(range0):range=[Math.min(range0[0],range[0]),Math.max(range0[1],range[1])]}return newRangeList.splice(insertPosition,0,range),newRangeList}(this.state.updateRanges,[startRow,endRow])}else this.state.updateRanges=FULL}clearNeedsUpdate(){this.state.needsUpdate=!1,this.state.updateRanges=EMPTY}setNeedsRedraw(reason=this.id){this.state.needsRedraw=this.state.needsRedraw||reason}allocate(numInstances){const{state:state,settings:settings}=this;return!settings.noAlloc&&(!!settings.update&&(super.allocate(numInstances,state.updateRanges!==FULL),!0))}updateBuffer({numInstances:numInstances,data:data,props:props,context:context}){if(!this.needsUpdate())return!1;const{state:{updateRanges:updateRanges},settings:{update:update,noAlloc:noAlloc}}=this;let updated=!0;if(update){for(const[startRow,endRow]of updateRanges)update.call(context,this,{data:data,startRow:startRow,endRow:endRow,props:props,numInstances:numInstances});if(this.value)if(this.constant||!this.buffer||this.buffer.byteLength<this.value.byteLength+this.byteOffset)this.setData({value:this.value,constant:this.constant}),this.constant=!1;else for(const[startRow,endRow]of updateRanges){const startOffset=Number.isFinite(startRow)?this.getVertexOffset(startRow):0,endOffset=Number.isFinite(endRow)?this.getVertexOffset(endRow):noAlloc||!Number.isFinite(numInstances)?this.value.length:numInstances*this.size;super.updateSubBuffer({startOffset:startOffset,endOffset:endOffset})}else;this._checkAttributeArray()}else updated=!1;return this.clearNeedsUpdate(),this.setNeedsRedraw(),updated}setConstantValue(value){if(void 0===value||"function"==typeof value)return!1;return this.setData({constant:!0,value:value})&&this.setNeedsRedraw(),this.clearNeedsUpdate(),!0}setExternalBuffer(buffer){const{state:state}=this;return buffer?(this.clearNeedsUpdate(),state.lastExternalBuffer===buffer||(state.lastExternalBuffer=buffer,this.setNeedsRedraw(),this.setData(buffer)),!0):(state.lastExternalBuffer=null,!1)}setBinaryValue(buffer,startIndices=null){const{state:state,settings:settings}=this;if(!buffer)return state.binaryValue=null,state.binaryAccessor=null,!1;if(settings.noAlloc)return!1;if(state.binaryValue===buffer)return this.clearNeedsUpdate(),!0;state.binaryValue=buffer,this.setNeedsRedraw();if(settings.transform||startIndices!==this.startIndices){ArrayBuffer.isView(buffer)&&(buffer={value:buffer});const binaryValue=buffer;(0,assert.A)(ArrayBuffer.isView(binaryValue.value),`invalid ${settings.accessor}`);const needsNormalize=Boolean(binaryValue.size)&&binaryValue.size!==this.size;return state.binaryAccessor=(0,iterable_utils.I)(binaryValue.value,{size:binaryValue.size||this.size,stride:binaryValue.stride,offset:binaryValue.offset,startIndices:startIndices,nested:needsNormalize}),!1}return this.clearNeedsUpdate(),this.setData(buffer),!0}getVertexOffset(row){const{startIndices:startIndices}=this;return(startIndices?row<startIndices.length?startIndices[row]:this.numInstances:row)*this.size}getValue(){const shaderAttributeDefs=this.settings.shaderAttributes,result=super.getValue();if(!shaderAttributeDefs)return result;for(const shaderAttributeName in shaderAttributeDefs)Object.assign(result,super.getValue(shaderAttributeName,shaderAttributeDefs[shaderAttributeName]));return result}getBufferLayout(modelInfo){this.state.layoutChanged=!1;const shaderAttributeDefs=this.settings.shaderAttributes,result=super._getBufferLayout(),{stepMode:stepMode}=this.settings;if(result.stepMode="dynamic"===stepMode?modelInfo?modelInfo.isInstanced?"instance":"vertex":"instance":stepMode??"vertex",!shaderAttributeDefs)return result;for(const shaderAttributeName in shaderAttributeDefs){const map=super._getBufferLayout(shaderAttributeName,shaderAttributeDefs[shaderAttributeName]);result.attributes.push(...map.attributes)}return result}_autoUpdater(attribute,{data:data,startRow:startRow,endRow:endRow,props:props,numInstances:numInstances}){if(attribute.constant)return;const{settings:settings,state:state,value:value,size:size,startIndices:startIndices}=attribute,{accessor:accessor,transform:transform}=settings,accessorFunc=state.binaryAccessor||("function"==typeof accessor?accessor:props[accessor]);(0,assert.A)("function"==typeof accessorFunc,`accessor "${accessor}" is not a function`);let i=attribute.getVertexOffset(startRow);const{iterable:iterable,objectInfo:objectInfo}=(0,iterable_utils.X)(data,startRow,endRow);for(const object of iterable){objectInfo.index++;let objectValue=accessorFunc(object,objectInfo);if(transform&&(objectValue=transform.call(this,objectValue)),startIndices){const numVertices=(objectInfo.index<startIndices.length-1?startIndices[objectInfo.index+1]:numInstances)-startIndices[objectInfo.index];if(objectValue&&Array.isArray(objectValue[0])){let startIndex=i;for(const item of objectValue)attribute._normalizeValue(item,value,startIndex),startIndex+=size}else objectValue&&objectValue.length>size?value.set(objectValue,i):(attribute._normalizeValue(objectValue,objectInfo.target,0),(0,flatten.R)({target:value,source:objectInfo.target,start:i,count:numVertices}));i+=numVertices*size}else attribute._normalizeValue(objectValue,value,i),i+=size}}_validateAttributeUpdaters(){const{settings:settings}=this;if(!(settings.noAlloc||"function"==typeof settings.update))throw new Error(`Attribute ${this.id} missing update or accessor`)}_checkAttributeArray(){const{value:value}=this,limit=Math.min(4,this.size);if(value&&value.length>=limit){let valid=!0;switch(limit){case 4:valid=valid&&Number.isFinite(value[3]);case 3:valid=valid&&Number.isFinite(value[2]);case 2:valid=valid&&Number.isFinite(value[1]);case 1:valid=valid&&Number.isFinite(value[0]);break;default:valid=!1}if(!valid)throw new Error(`Illegal attribute generated for ${this.id}`)}}}var memoize=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/memoize.js"),debug=__webpack_require__("./node_modules/@deck.gl/core/dist/debug/index.js"),utils_assert=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/assert.js"),shader_utils=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/lib/glsl-utils/shader-utils.js"),model=__webpack_require__("./node_modules/@luma.gl/engine/dist/model/model.js");class BufferTransform{device;model;transformFeedback;static isSupported(device){return"webgl"===device?.info?.type}constructor(device,props=model.K.defaultProps){(0,utils_assert.v)(BufferTransform.isSupported(device),"BufferTransform not yet implemented on WebGPU"),this.device=device,this.model=new model.K(this.device,{id:props.id||"buffer-transform-model",fs:props.fs||(0,shader_utils.Wk)(),topology:props.topology||"point-list",...props}),this.transformFeedback=this.device.createTransformFeedback({layout:this.model.pipeline.shaderLayout,buffers:props.feedbackBuffers}),this.model.setTransformFeedback(this.transformFeedback),Object.seal(this)}destroy(){this.model&&this.model.destroy()}delete(){this.destroy()}run(options){const renderPass=this.device.beginRenderPass(options);this.model.draw(renderPass),renderPass.end()}update(...args){console.warn("TextureTransform#update() not implemented")}getBuffer(varyingName){return this.transformFeedback.getBuffer(varyingName)}readAsync(varyingName){const result=this.getBuffer(varyingName);if(result instanceof resources_buffer.h)return result.readAsync();const{buffer:buffer,byteOffset:byteOffset=0,byteLength:byteLength=buffer.byteLength}=result;return buffer.readAsync(byteOffset,byteLength)}}var fp64=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/modules-webgl1/math/fp64/fp64.js");function padArrayChunk(options){const{source:source,target:target,start:start=0,size:size,getData:getData}=options,end=options.end||target.length,sourceLength=source.length,targetLength=end-start;if(sourceLength>targetLength)return void target.set(source.subarray(0,targetLength),start);if(target.set(source,start),!getData)return;let i=sourceLength;for(;i<targetLength;){const datum=getData(i,source);for(let j=0;j<size;j++)target[start+i]=datum[j]||0,i++}}function getAttributeTypeFromSize(size){switch(size){case 1:return"float";case 2:return"vec2";case 3:return"vec3";case 4:return"vec4";default:throw new Error(`No defined attribute type for size "${size}"`)}}function getFloat32VertexFormat(size){switch(size){case 1:return"float32";case 2:return"float32x2";case 3:return"float32x3";case 4:return"float32x4";default:throw new Error("invalid type size")}}function cycleBuffers(buffers){buffers.push(buffers.shift())}function matchBuffer({device:device,source:source,target:target}){return(!target||target.byteLength<source.byteLength)&&(target?.destroy(),target=device.createBuffer({byteLength:source.byteLength,usage:source.usage})),target}function padBuffer({device:device,buffer:buffer,attribute:attribute,fromLength:fromLength,toLength:toLength,fromStartIndices:fromStartIndices,getData:getData=(x=>x)}){const precisionMultiplier=attribute.doublePrecision&&attribute.value instanceof Float64Array?2:1,size=attribute.size*precisionMultiplier,byteOffset=attribute.byteOffset,targetByteOffset=attribute.settings.bytesPerElement<4?byteOffset/attribute.settings.bytesPerElement*4:byteOffset,toStartIndices=attribute.startIndices,hasStartIndices=fromStartIndices&&toStartIndices,isConstant=attribute.isConstant;if(!hasStartIndices&&buffer&&fromLength>=toLength)return buffer;const ArrayType=attribute.value instanceof Float64Array?Float32Array:attribute.value.constructor,toData=isConstant?attribute.value:new ArrayType(attribute.getBuffer().readSyncWebGL(byteOffset,toLength*ArrayType.BYTES_PER_ELEMENT).buffer);if(attribute.settings.normalized&&!isConstant){const getter=getData;getData=(value,chunk)=>attribute.normalizeConstant(getter(value,chunk))}const getMissingData=isConstant?(i,chunk)=>getData(toData,chunk):(i,chunk)=>getData(toData.subarray(i+byteOffset,i+byteOffset+size),chunk),source=buffer?new Float32Array(buffer.readSyncWebGL(targetByteOffset,4*fromLength).buffer):new Float32Array(0),target=new Float32Array(toLength);return function padArray({source:source,target:target,size:size,getData:getData,sourceStartIndices:sourceStartIndices,targetStartIndices:targetStartIndices}){if(!sourceStartIndices||!targetStartIndices)return padArrayChunk({source:source,target:target,size:size,getData:getData}),target;let sourceIndex=0,targetIndex=0;const getChunkData=getData&&((i,chunk)=>getData(i+targetIndex,chunk)),n=Math.min(sourceStartIndices.length,targetStartIndices.length);for(let i=1;i<n;i++){const nextSourceIndex=sourceStartIndices[i]*size,nextTargetIndex=targetStartIndices[i]*size;padArrayChunk({source:source.subarray(sourceIndex,nextSourceIndex),target:target,start:targetIndex,end:nextTargetIndex,size:size,getData:getChunkData}),sourceIndex=nextSourceIndex,targetIndex=nextTargetIndex}return targetIndex<target.length&&padArrayChunk({source:[],target:target,start:targetIndex,size:size,getData:getChunkData}),target}({source:source,target:target,sourceStartIndices:fromStartIndices,targetStartIndices:toStartIndices,size:size,getData:getMissingData}),(!buffer||buffer.byteLength<target.byteLength+targetByteOffset)&&(buffer?.destroy(),buffer=device.createBuffer({byteLength:target.byteLength+targetByteOffset,usage:35050})),buffer.write(target,targetByteOffset),buffer}var transition=__webpack_require__("./node_modules/@deck.gl/core/dist/transitions/transition.js");class GPUTransitionBase{constructor({device:device,attribute:attribute,timeline:timeline}){this.buffers=[],this.currentLength=0,this.device=device,this.transition=new transition.A(timeline),this.attribute=attribute,this.attributeInTransition=function cloneAttribute(attribute){const{device:device,settings:settings,value:value}=attribute,newAttribute=new Attribute(device,settings);return newAttribute.setData({value:value instanceof Float64Array?new Float64Array(0):new Float32Array(0),normalized:settings.normalized}),newAttribute}(attribute),this.currentStartIndices=attribute.startIndices}get inProgress(){return this.transition.inProgress}start(transitionSettings,numInstances,duration=1/0){this.settings=transitionSettings,this.currentStartIndices=this.attribute.startIndices,this.currentLength=function getAttributeBufferLength(attribute,numInstances){const{doublePrecision:doublePrecision,settings:settings,value:value,size:size}=attribute,multiplier=doublePrecision&&value instanceof Float64Array?2:1;let maxVertexOffset=0;const{shaderAttributes:shaderAttributes}=attribute.settings;if(shaderAttributes)for(const shaderAttribute of Object.values(shaderAttributes))maxVertexOffset=Math.max(maxVertexOffset,shaderAttribute.vertexOffset??0);return(settings.noAlloc?value.length:(numInstances+maxVertexOffset)*size)*multiplier}(this.attribute,numInstances),this.transition.start({...transitionSettings,duration:duration})}update(){const updated=this.transition.update();return updated&&this.onUpdate(),updated}setBuffer(buffer){this.attributeInTransition.setData({buffer:buffer,normalized:this.attribute.settings.normalized,value:this.attributeInTransition.value})}cancel(){this.transition.cancel()}delete(){this.cancel();for(const buffer of this.buffers)buffer.destroy();this.buffers.length=0}}const vs="#version 300 es\n#define SHADER_NAME interpolation-transition-vertex-shader\n\nuniform float time;\nin ATTRIBUTE_TYPE aFrom;\nin ATTRIBUTE_TYPE aTo;\nout ATTRIBUTE_TYPE vCurrent;\n\nvoid main(void) {\n  vCurrent = mix(aFrom, aTo, time);\n  gl_Position = vec4(0.0);\n}\n",vs64="#version 300 es\n#define SHADER_NAME interpolation-transition-vertex-shader\n\nuniform float time;\nin ATTRIBUTE_TYPE aFrom;\nin ATTRIBUTE_TYPE aFrom64Low;\nin ATTRIBUTE_TYPE aTo;\nin ATTRIBUTE_TYPE aTo64Low;\nout ATTRIBUTE_TYPE vCurrent;\nout ATTRIBUTE_TYPE vCurrent64Low;\n\nvec2 mix_fp64(vec2 a, vec2 b, float x) {\n  vec2 range = sub_fp64(b, a);\n  return sum_fp64(a, mul_fp64(range, vec2(x, 0.0)));\n}\n\nvoid main(void) {\n  for (int i=0; i<ATTRIBUTE_SIZE; i++) {\n    vec2 value = mix_fp64(vec2(aFrom[i], aFrom64Low[i]), vec2(aTo[i], aTo64Low[i]), time);\n    vCurrent[i] = value.x;\n    vCurrent64Low[i] = value.y;\n  }\n  gl_Position = vec4(0.0);\n}\n";function useFp64(attribute){return attribute.doublePrecision&&attribute.value instanceof Float64Array}const gpu_spring_transition_vs="#version 300 es\n#define SHADER_NAME spring-transition-vertex-shader\n\n#define EPSILON 0.00001\n\nuniform float stiffness;\nuniform float damping;\nin ATTRIBUTE_TYPE aPrev;\nin ATTRIBUTE_TYPE aCur;\nin ATTRIBUTE_TYPE aTo;\nout ATTRIBUTE_TYPE vNext;\nout float vIsTransitioningFlag;\n\nATTRIBUTE_TYPE getNextValue(ATTRIBUTE_TYPE cur, ATTRIBUTE_TYPE prev, ATTRIBUTE_TYPE dest) {\n  ATTRIBUTE_TYPE velocity = cur - prev;\n  ATTRIBUTE_TYPE delta = dest - cur;\n  ATTRIBUTE_TYPE spring = delta * stiffness;\n  ATTRIBUTE_TYPE damper = velocity * -1.0 * damping;\n  return spring + damper + velocity + cur;\n}\n\nvoid main(void) {\n  bool isTransitioning = length(aCur - aPrev) > EPSILON || length(aTo - aCur) > EPSILON;\n  vIsTransitioningFlag = isTransitioning ? 1.0 : 0.0;\n\n  vNext = getNextValue(aCur, aPrev, aTo);\n  gl_Position = vec4(0, 0, 0, 1);\n  gl_PointSize = 100.0;\n}\n",fs="#version 300 es\n#define SHADER_NAME spring-transition-is-transitioning-fragment-shader\n\nin float vIsTransitioningFlag;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  if (vIsTransitioningFlag == 0.0) {\n    discard;\n  }\n  fragColor = vec4(1.0);\n}";const TRANSITION_TYPES={interpolation:class GPUInterpolationTransition extends GPUTransitionBase{constructor({device:device,attribute:attribute,timeline:timeline}){super({device:device,attribute:attribute,timeline:timeline}),this.type="interpolation",this.transform=function getTransform(device,attribute){const attributeSize=attribute.size,attributeType=getAttributeTypeFromSize(attributeSize),inputFormat=getFloat32VertexFormat(attributeSize),bufferLayout=attribute.getBufferLayout();if(useFp64(attribute))return new BufferTransform(device,{vs:vs64,bufferLayout:[{name:"aFrom",byteStride:8*attributeSize,attributes:[{attribute:"aFrom",format:inputFormat,byteOffset:0},{attribute:"aFrom64Low",format:inputFormat,byteOffset:4*attributeSize}]},{name:"aTo",byteStride:8*attributeSize,attributes:[{attribute:"aTo",format:inputFormat,byteOffset:0},{attribute:"aTo64Low",format:inputFormat,byteOffset:4*attributeSize}]}],modules:[fp64.dI],defines:{ATTRIBUTE_TYPE:attributeType,ATTRIBUTE_SIZE:attributeSize},moduleSettings:{},varyings:["vCurrent","vCurrent64Low"],bufferMode:35980,disableWarnings:!0});return new BufferTransform(device,{vs:vs,bufferLayout:[{name:"aFrom",format:inputFormat},{name:"aTo",format:bufferLayout.attributes[0].format}],defines:{ATTRIBUTE_TYPE:attributeType},varyings:["vCurrent"],disableWarnings:!0})}(device,attribute)}start(transitionSettings,numInstances){const prevLength=this.currentLength,prevStartIndices=this.currentStartIndices;if(super.start(transitionSettings,numInstances,transitionSettings.duration),transitionSettings.duration<=0)return void this.transition.cancel();const{buffers:buffers,attribute:attribute}=this;cycleBuffers(buffers),buffers[0]=padBuffer({device:this.device,buffer:buffers[0],attribute:attribute,fromLength:prevLength,toLength:this.currentLength,fromStartIndices:prevStartIndices,getData:transitionSettings.enter}),buffers[1]=matchBuffer({device:this.device,source:buffers[0],target:buffers[1]}),this.setBuffer(buffers[1]);const{transform:transform}=this,model=transform.model;let vertexCount=Math.floor(this.currentLength/attribute.size);useFp64(attribute)&&(vertexCount/=2),model.setVertexCount(vertexCount),attribute.isConstant?(model.setAttributes({aFrom:buffers[0]}),model.setConstantAttributes({aTo:attribute.value})):model.setAttributes({aFrom:buffers[0],aTo:attribute.getBuffer()}),transform.transformFeedback.setBuffers({vCurrent:buffers[1]})}onUpdate(){const{duration:duration,easing:easing}=this.settings,{time:time}=this.transition;let t=time/duration;easing&&(t=easing(t));const{model:model}=this.transform;model.setUniforms({time:t}),this.transform.run({discard:!0})}delete(){super.delete(),this.transform.destroy()}},spring:class GPUSpringTransition extends GPUTransitionBase{constructor({device:device,attribute:attribute,timeline:timeline}){super({device:device,attribute:attribute,timeline:timeline}),this.type="spring",this.texture=function getTexture(device){return device.createTexture({data:new Uint8Array(4),format:"rgba8unorm",mipmaps:!1,width:1,height:1})}(device),this.framebuffer=function getFramebuffer(device,texture){return device.createFramebuffer({id:"spring-transition-is-transitioning-framebuffer",width:1,height:1,colorAttachments:[texture]})}(device,this.texture),this.transform=function gpu_spring_transition_getTransform(device,attribute){const attributeType=getAttributeTypeFromSize(attribute.size),format=getFloat32VertexFormat(attribute.size);return new BufferTransform(device,{vs:gpu_spring_transition_vs,fs:fs,bufferLayout:[{name:"aPrev",format:format},{name:"aCur",format:format},{name:"aTo",format:attribute.getBufferLayout().attributes[0].format}],varyings:["vNext"],defines:{ATTRIBUTE_TYPE:attributeType},parameters:{depthCompare:"always",blendColorOperation:"max",blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaOperation:"max",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one"}})}(device,attribute)}start(transitionSettings,numInstances){const prevLength=this.currentLength,prevStartIndices=this.currentStartIndices;super.start(transitionSettings,numInstances);const{buffers:buffers,attribute:attribute}=this;for(let i=0;i<2;i++)buffers[i]=padBuffer({device:this.device,buffer:buffers[i],attribute:attribute,fromLength:prevLength,toLength:this.currentLength,fromStartIndices:prevStartIndices,getData:transitionSettings.enter});buffers[2]=matchBuffer({device:this.device,source:buffers[0],target:buffers[2]}),this.setBuffer(buffers[1]);const{model:model}=this.transform;model.setVertexCount(Math.floor(this.currentLength/attribute.size)),attribute.isConstant?model.setConstantAttributes({aTo:attribute.value}):model.setAttributes({aTo:attribute.getBuffer()})}onUpdate(){const{buffers:buffers,transform:transform,framebuffer:framebuffer,transition:transition}=this,settings=this.settings;transform.model.setAttributes({aPrev:buffers[0],aCur:buffers[1]}),transform.transformFeedback.setBuffers({vNext:buffers[2]}),transform.model.setUniforms({stiffness:settings.stiffness,damping:settings.damping}),transform.run({framebuffer:framebuffer,discard:!1,parameters:{viewport:[0,0,1,1]},clearColor:[0,0,0,0]}),cycleBuffers(buffers),this.setBuffer(buffers[1]);this.device.readPixelsToArrayWebGL(framebuffer)[0]>0||transition.end()}delete(){super.delete(),this.transform.destroy(),this.texture.destroy(),this.framebuffer.destroy()}}};class AttributeTransitionManager{constructor(device,{id:id,timeline:timeline}){if(!device)throw new Error("AttributeTransitionManager is constructed without device");this.id=id,this.device=device,this.timeline=timeline,this.transitions={},this.needsRedraw=!1,this.numInstances=1}finalize(){for(const attributeName in this.transitions)this._removeTransition(attributeName)}update({attributes:attributes,transitions:transitions,numInstances:numInstances}){this.numInstances=numInstances||1;for(const attributeName in attributes){const attribute=attributes[attributeName],settings=attribute.getTransitionSetting(transitions);settings&&this._updateAttribute(attributeName,attribute,settings)}for(const attributeName in this.transitions){const attribute=attributes[attributeName];attribute&&attribute.getTransitionSetting(transitions)||this._removeTransition(attributeName)}}hasAttribute(attributeName){const transition=this.transitions[attributeName];return transition&&transition.inProgress}getAttributes(){const animatedAttributes={};for(const attributeName in this.transitions){const transition=this.transitions[attributeName];transition.inProgress&&(animatedAttributes[attributeName]=transition.attributeInTransition)}return animatedAttributes}run(){if(0===this.numInstances)return!1;for(const attributeName in this.transitions){this.transitions[attributeName].update()&&(this.needsRedraw=!0)}const needsRedraw=this.needsRedraw;return this.needsRedraw=!1,needsRedraw}_removeTransition(attributeName){this.transitions[attributeName].delete(),delete this.transitions[attributeName]}_updateAttribute(attributeName,attribute,settings){const transition=this.transitions[attributeName];let isNew=!transition||transition.type!==settings.type;if(isNew){transition&&this._removeTransition(attributeName);const TransitionType=TRANSITION_TYPES[settings.type];TransitionType?this.transitions[attributeName]=new TransitionType({attribute:attribute,timeline:this.timeline,device:this.device}):(log.A.error(`unsupported transition type '${settings.type}'`)(),isNew=!1)}(isNew||attribute.needsRedraw())&&(this.needsRedraw=!0,this.transitions[attributeName].start(settings,this.numInstances))}}class AttributeManager{constructor(device,{id:id="attribute-manager",stats:stats,timeline:timeline}={}){this.mergeBoundsMemoized=(0,memoize.A)(math_utils._Z),this.id=id,this.device=device,this.attributes={},this.updateTriggers={},this.needsRedraw=!0,this.userData={},this.stats=stats,this.attributeTransitionManager=new AttributeTransitionManager(device,{id:`${id}-transitions`,timeline:timeline}),Object.seal(this)}finalize(){for(const attributeName in this.attributes)this.attributes[attributeName].delete();this.attributeTransitionManager.finalize()}getNeedsRedraw(opts={clearRedrawFlags:!1}){const redraw=this.needsRedraw;return this.needsRedraw=this.needsRedraw&&!opts.clearRedrawFlags,redraw&&this.id}setNeedsRedraw(){this.needsRedraw=!0}add(attributes){this._add(attributes)}addInstanced(attributes){this._add(attributes,{stepMode:"instance"})}remove(attributeNameArray){for(const name of attributeNameArray)void 0!==this.attributes[name]&&(this.attributes[name].delete(),delete this.attributes[name])}invalidate(triggerName,dataRange){const invalidatedAttributes=this._invalidateTrigger(triggerName,dataRange);(0,debug.A)("attributeManager.invalidate",this,triggerName,invalidatedAttributes)}invalidateAll(dataRange){for(const attributeName in this.attributes)this.attributes[attributeName].setNeedsUpdate(attributeName,dataRange);(0,debug.A)("attributeManager.invalidate",this,"all")}update({data:data,numInstances:numInstances,startIndices:startIndices=null,transitions:transitions,props:props={},buffers:buffers={},context:context={}}){let updated=!1;(0,debug.A)("attributeManager.updateStart",this),this.stats&&this.stats.get("Update Attributes").timeStart();for(const attributeName in this.attributes){const attribute=this.attributes[attributeName],accessorName=attribute.settings.accessor;attribute.startIndices=startIndices,attribute.numInstances=numInstances,props[attributeName]&&log.A.removed(`props.${attributeName}`,`data.attributes.${attributeName}`)(),attribute.setExternalBuffer(buffers[attributeName])||attribute.setBinaryValue("string"==typeof accessorName?buffers[accessorName]:void 0,data.startIndices)||"string"==typeof accessorName&&!buffers[accessorName]&&attribute.setConstantValue(props[accessorName])||attribute.needsUpdate()&&(updated=!0,this._updateAttribute({attribute:attribute,numInstances:numInstances,data:data,props:props,context:context})),this.needsRedraw=this.needsRedraw||attribute.needsRedraw()}updated&&(0,debug.A)("attributeManager.updateEnd",this,numInstances),this.stats&&this.stats.get("Update Attributes").timeEnd(),this.attributeTransitionManager.update({attributes:this.attributes,numInstances:numInstances,transitions:transitions})}updateTransition(){const{attributeTransitionManager:attributeTransitionManager}=this,transitionUpdated=attributeTransitionManager.run();return this.needsRedraw=this.needsRedraw||transitionUpdated,transitionUpdated}getAttributes(){return{...this.attributes,...this.attributeTransitionManager.getAttributes()}}getBounds(attributeNames){const bounds=attributeNames.map((attributeName=>this.attributes[attributeName]?.getBounds()));return this.mergeBoundsMemoized(bounds)}getChangedAttributes(opts={clearChangedFlags:!1}){const{attributes:attributes,attributeTransitionManager:attributeTransitionManager}=this,changedAttributes={...attributeTransitionManager.getAttributes()};for(const attributeName in attributes){const attribute=attributes[attributeName];attribute.needsRedraw(opts)&&!attributeTransitionManager.hasAttribute(attributeName)&&(changedAttributes[attributeName]=attribute)}return changedAttributes}getBufferLayouts(modelInfo){return Object.values(this.getAttributes()).map((attribute=>attribute.getBufferLayout(modelInfo)))}_add(attributes,overrideOptions){for(const attributeName in attributes){const attribute=attributes[attributeName],props={...attribute,id:attributeName,size:(attribute.isIndexed?1:attribute.size)||1,...overrideOptions};this.attributes[attributeName]=new Attribute(this.device,props)}this._mapUpdateTriggersToAttributes()}_mapUpdateTriggersToAttributes(){const triggers={};for(const attributeName in this.attributes){this.attributes[attributeName].getUpdateTriggers().forEach((triggerName=>{triggers[triggerName]||(triggers[triggerName]=[]),triggers[triggerName].push(attributeName)}))}this.updateTriggers=triggers}_invalidateTrigger(triggerName,dataRange){const{attributes:attributes,updateTriggers:updateTriggers}=this,invalidatedAttributes=updateTriggers[triggerName];return invalidatedAttributes&&invalidatedAttributes.forEach((name=>{const attribute=attributes[name];attribute&&attribute.setNeedsUpdate(attribute.id,dataRange)})),invalidatedAttributes}_updateAttribute(opts){const{attribute:attribute,numInstances:numInstances}=opts;if((0,debug.A)("attribute.updateStart",attribute),attribute.constant)return void attribute.setConstantValue(attribute.value);attribute.allocate(numInstances)&&(0,debug.A)("attribute.allocate",attribute,numInstances);attribute.updateBuffer(opts)&&(this.needsRedraw=!0,(0,debug.A)("attribute.updateEnd",attribute,numInstances))}}},"./node_modules/@deck.gl/core/dist/lib/attribute/transition-settings.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{K:function(){return normalizeTransitionSettings}});const DEFAULT_TRANSITION_SETTINGS={interpolation:{duration:0,easing:t=>t},spring:{stiffness:.05,damping:.5}};function normalizeTransitionSettings(userSettings,layerSettings){if(!userSettings)return null;Number.isFinite(userSettings)&&(userSettings={type:"interpolation",duration:userSettings});const type=userSettings.type||"interpolation";return{...DEFAULT_TRANSITION_SETTINGS[type],...layerSettings,...userSettings,type:type}}},"./node_modules/@deck.gl/core/dist/lib/composite-layer.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return CompositeLayer}});var _layer_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/layer.js"),_debug_index_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@deck.gl/core/dist/debug/index.js"),_utils_flatten_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/flatten.js"),_lifecycle_constants_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@deck.gl/core/dist/lifecycle/constants.js");class CompositeLayer extends _layer_js__WEBPACK_IMPORTED_MODULE_0__.A{static{this.layerName="CompositeLayer"}get isComposite(){return!0}get isLoaded(){return super.isLoaded&&this.getSubLayers().every((layer=>layer.isLoaded))}getSubLayers(){return this.internalState&&this.internalState.subLayers||[]}initializeState(context){}setState(updateObject){super.setState(updateObject),this.setNeedsUpdate()}getPickingInfo({info:info}){const{object:object}=info;return object&&object.__source&&object.__source.parent&&object.__source.parent.id===this.id?(info.object=object.__source.object,info.index=object.__source.index,info):info}filterSubLayer(context){return!0}shouldRenderSubLayer(subLayerId,data){return data&&data.length}getSubLayerClass(subLayerId,DefaultLayerClass){const{_subLayerProps:overridingProps}=this.props;return overridingProps&&overridingProps[subLayerId]&&overridingProps[subLayerId].type||DefaultLayerClass}getSubLayerRow(row,sourceObject,sourceObjectIndex){return row.__source={parent:this,object:sourceObject,index:sourceObjectIndex},row}getSubLayerAccessor(accessor){if("function"==typeof accessor){const objectInfo={index:-1,data:this.props.data,target:[]};return(x,i)=>x&&x.__source?(objectInfo.index=x.__source.index,accessor(x.__source.object,objectInfo)):accessor(x,i)}return accessor}getSubLayerProps(sublayerProps={}){const{opacity:opacity,pickable:pickable,visible:visible,parameters:parameters,getPolygonOffset:getPolygonOffset,highlightedObjectIndex:highlightedObjectIndex,autoHighlight:autoHighlight,highlightColor:highlightColor,coordinateSystem:coordinateSystem,coordinateOrigin:coordinateOrigin,wrapLongitude:wrapLongitude,positionFormat:positionFormat,modelMatrix:modelMatrix,extensions:extensions,fetch:fetch,operation:operation,_subLayerProps:overridingProps}=this.props,newProps={id:"",updateTriggers:{},opacity:opacity,pickable:pickable,visible:visible,parameters:parameters,getPolygonOffset:getPolygonOffset,highlightedObjectIndex:highlightedObjectIndex,autoHighlight:autoHighlight,highlightColor:highlightColor,coordinateSystem:coordinateSystem,coordinateOrigin:coordinateOrigin,wrapLongitude:wrapLongitude,positionFormat:positionFormat,modelMatrix:modelMatrix,extensions:extensions,fetch:fetch,operation:operation},overridingSublayerProps=overridingProps&&sublayerProps.id&&overridingProps[sublayerProps.id],overridingSublayerTriggers=overridingSublayerProps&&overridingSublayerProps.updateTriggers,sublayerId=sublayerProps.id||"sublayer";if(overridingSublayerProps){const propTypes=this.props[_lifecycle_constants_js__WEBPACK_IMPORTED_MODULE_1__.fW],subLayerPropTypes=sublayerProps.type?sublayerProps.type._propTypes:{};for(const key in overridingSublayerProps){const propType=subLayerPropTypes[key]||propTypes[key];propType&&"accessor"===propType.type&&(overridingSublayerProps[key]=this.getSubLayerAccessor(overridingSublayerProps[key]))}}Object.assign(newProps,sublayerProps,overridingSublayerProps),newProps.id=`${this.props.id}-${sublayerId}`,newProps.updateTriggers={all:this.props.updateTriggers?.all,...sublayerProps.updateTriggers,...overridingSublayerTriggers};for(const extension of extensions){const passThroughProps=extension.getSubLayerProps.call(this,extension);passThroughProps&&Object.assign(newProps,passThroughProps,{updateTriggers:Object.assign(newProps.updateTriggers,passThroughProps.updateTriggers)})}return newProps}_updateAutoHighlight(info){for(const layer of this.getSubLayers())layer.updateAutoHighlight(info)}_getAttributeManager(){return null}_postUpdate(updateParams,forceUpdate){let subLayers=this.internalState.subLayers;const shouldUpdate=!subLayers||this.needsUpdate();if(shouldUpdate){const subLayersList=this.renderLayers();subLayers=(0,_utils_flatten_js__WEBPACK_IMPORTED_MODULE_2__.B)(subLayersList,Boolean),this.internalState.subLayers=subLayers}(0,_debug_index_js__WEBPACK_IMPORTED_MODULE_3__.A)("compositeLayer.renderLayers",this,shouldUpdate,subLayers);for(const layer of subLayers)layer.parent=this}}},"./node_modules/@deck.gl/core/dist/lib/constants.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{Kx:function(){return PROJECTION_MODE},p5:function(){return UNIT},qY:function(){return EVENTS},rf:function(){return COORDINATE_SYSTEM}});var _utils_log_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/log.js");const COORDINATE_SYSTEM={DEFAULT:-1,LNGLAT:1,METER_OFFSETS:2,LNGLAT_OFFSETS:3,CARTESIAN:0};Object.defineProperty(COORDINATE_SYSTEM,"IDENTITY",{get:()=>(_utils_log_js__WEBPACK_IMPORTED_MODULE_0__.A.deprecated("COORDINATE_SYSTEM.IDENTITY","COORDINATE_SYSTEM.CARTESIAN")(),0)});const PROJECTION_MODE={WEB_MERCATOR:1,GLOBE:2,WEB_MERCATOR_AUTO_OFFSET:4,IDENTITY:0},UNIT={common:0,meters:1,pixels:2},EVENTS={click:{handler:"onClick"},panstart:{handler:"onDragStart"},panmove:{handler:"onDrag"},panend:{handler:"onDragEnd"}}},"./node_modules/@deck.gl/core/dist/lib/layer.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return Layer}});var buffer=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/buffer.js"),constants=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/constants.js"),attribute_manager=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/attribute/attribute-manager.js"),transition_settings=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/attribute/transition-settings.js"),common=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js"),transition=__webpack_require__("./node_modules/@deck.gl/core/dist/transitions/transition.js");class CPUInterpolationTransition extends transition.A{get value(){return this._value}_onUpdate(){const{time:time,settings:{fromValue:fromValue,toValue:toValue,duration:duration,easing:easing}}=this,t=easing(time/duration);this._value=(0,common.Cc)(fromValue,toValue,t)}}function updateSpringElement(prev,cur,dest,damping,stiffness){const velocity=cur-prev;return(dest-cur)*stiffness+-velocity*damping+velocity+cur}function distance(value1,value2){if(Array.isArray(value1)){let distanceSquare=0;for(let i=0;i<value1.length;i++){const d=value1[i]-value2[i];distanceSquare+=d*d}return Math.sqrt(distanceSquare)}return Math.abs(value1-value2)}class CPUSpringTransition extends transition.A{get value(){return this._currValue}_onUpdate(){const{fromValue:fromValue,toValue:toValue,damping:damping,stiffness:stiffness}=this.settings,{_prevValue:_prevValue=fromValue,_currValue:_currValue=fromValue}=this;let nextValue=function updateSpring(prev,cur,dest,damping,stiffness){if(Array.isArray(dest)){const next=[];for(let i=0;i<dest.length;i++)next[i]=updateSpringElement(prev[i],cur[i],dest[i],damping,stiffness);return next}return updateSpringElement(prev,cur,dest,damping,stiffness)}(_prevValue,_currValue,toValue,damping,stiffness);const delta=distance(nextValue,toValue),velocity=distance(nextValue,_currValue);delta<1e-5&&velocity<1e-5&&(nextValue=toValue,this.end()),this._prevValue=_currValue,this._currValue=nextValue}}var log=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/log.js");const TRANSITION_TYPES={interpolation:CPUInterpolationTransition,spring:CPUSpringTransition};class UniformTransitionManager{constructor(timeline){this.transitions=new Map,this.timeline=timeline}get active(){return this.transitions.size>0}add(key,fromValue,toValue,settings){const{transitions:transitions}=this;if(transitions.has(key)){const transition=transitions.get(key),{value:value=transition.settings.fromValue}=transition;fromValue=value,this.remove(key)}if(!(settings=(0,transition_settings.K)(settings)))return;const TransitionType=TRANSITION_TYPES[settings.type];if(!TransitionType)return void log.A.error(`unsupported transition type '${settings.type}'`)();const transition=new TransitionType(this.timeline);transition.start({...settings,fromValue:fromValue,toValue:toValue}),transitions.set(key,transition)}remove(key){const{transitions:transitions}=this;transitions.has(key)&&(transitions.get(key).cancel(),transitions.delete(key))}update(){const propsInTransition={};for(const[key,transition]of this.transitions)transition.update(),propsInTransition[key]=transition.value,transition.inProgress||this.remove(key);return propsInTransition}clear(){for(const key of this.transitions.keys())this.remove(key)}}var props=__webpack_require__("./node_modules/@deck.gl/core/dist/lifecycle/props.js"),lifecycle_constants=__webpack_require__("./node_modules/@deck.gl/core/dist/lifecycle/constants.js");function count(container){if(!function isObject(value){return null!==value&&"object"==typeof value}(container))throw new Error("count(): argument not an object");if("function"==typeof container.count)return container.count();if(Number.isFinite(container.size))return container.size;if(Number.isFinite(container.length))return container.length;if(function isPlainObject(value){return null!==value&&"object"==typeof value&&value.constructor===Object}(container))return Object.keys(container).length;throw new Error("count(): argument not a container")}var debug=__webpack_require__("./node_modules/@deck.gl/core/dist/debug/index.js"),assert=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/assert.js"),memoize=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/memoize.js"),shader=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/shader.js"),project_functions=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/project/project-functions.js"),typed_array_manager=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/typed-array-manager.js"),iterable_utils=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/iterable-utils.js"),resources_texture=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/texture.js");const DEFAULT_TEXTURE_PARAMETERS={minFilter:"linear",mipmapFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},internalTextures={};var deep_equal=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/deep-equal.js");const TYPE_DEFINITIONS={boolean:{validate(value,propType){return!0},equal(value1,value2,propType){return Boolean(value1)===Boolean(value2)}},number:{validate(value,propType){return Number.isFinite(value)&&(!("max"in propType)||value<=propType.max)&&(!("min"in propType)||value>=propType.min)}},color:{validate(value,propType){return propType.optional&&!value||isArray(value)&&(3===value.length||4===value.length)},equal(value1,value2,propType){return(0,deep_equal.b)(value1,value2,1)}},accessor:{validate(value,propType){const valueType=getTypeOf(value);return"function"===valueType||valueType===getTypeOf(propType.value)},equal(value1,value2,propType){return"function"==typeof value2||(0,deep_equal.b)(value1,value2,1)}},array:{validate(value,propType){return propType.optional&&!value||isArray(value)},equal(value1,value2,propType){const{compare:compare}=propType,depth=Number.isInteger(compare)?compare:compare?1:0;return compare?(0,deep_equal.b)(value1,value2,depth):value1===value2}},object:{equal(value1,value2,propType){if(propType.ignore)return!0;const{compare:compare}=propType,depth=Number.isInteger(compare)?compare:compare?1:0;return compare?(0,deep_equal.b)(value1,value2,depth):value1===value2}},function:{validate(value,propType){return propType.optional&&!value||"function"==typeof value},equal(value1,value2,propType){return!propType.compare&&!1!==propType.ignore||value1===value2}},data:{transform:(value,propType,component)=>{if(!value)return value;const{dataTransform:dataTransform}=component.props;return dataTransform?dataTransform(value):"string"==typeof value.shape&&value.shape.endsWith("-table")&&Array.isArray(value.data)?value.data:value}},image:{transform:(value,propType,component)=>{const context=component.context;return context&&context.device?function createTexture(owner,device,image,sampler){if(image instanceof resources_texture.g)return image;image.constructor&&"Object"!==image.constructor.name&&(image={data:image});let samplerParameters=null;image.compressed&&(samplerParameters={minFilter:"linear",mipmapFilter:image.data.length>1?"nearest":"linear"});const texture=device.createTexture({...image,sampler:{...DEFAULT_TEXTURE_PARAMETERS,...samplerParameters,...sampler}});return internalTextures[texture.id]=owner,texture}(component.id,context.device,value,{...propType.parameters,...component.props.textureParameters}):null},release:(value,propType,component)=>{!function destroyTexture(owner,texture){texture&&texture instanceof resources_texture.g&&internalTextures[texture.id]===owner&&(texture.delete(),delete internalTextures[texture.id])}(component.id,value)}}};function parsePropType(name,propDef){switch(getTypeOf(propDef)){case"object":return normalizePropDefinition(name,propDef);case"array":return normalizePropDefinition(name,{type:"array",value:propDef,compare:!1});case"boolean":return normalizePropDefinition(name,{type:"boolean",value:propDef});case"number":return normalizePropDefinition(name,{type:"number",value:propDef});case"function":return normalizePropDefinition(name,{type:"function",value:propDef,compare:!0});default:return{name:name,type:"unknown",value:propDef}}}function normalizePropDefinition(name,propDef){return"type"in propDef?{name:name,...TYPE_DEFINITIONS[propDef.type],...propDef}:"value"in propDef?{name:name,type:getTypeOf(propDef.value),...propDef}:{name:name,type:"object",value:propDef}}function isArray(value){return Array.isArray(value)||ArrayBuffer.isView(value)}function getTypeOf(value){return isArray(value)?"array":null===value?"null":typeof value}const MergedDefaultPropsCacheKey="_mergedDefaultProps";function getPropsPrototype(componentClass,extensions){let cacheKey=MergedDefaultPropsCacheKey;if(extensions)for(const extension of extensions){const ExtensionClass=extension.constructor;ExtensionClass&&(cacheKey+=`:${ExtensionClass.extensionName||ExtensionClass.name}`)}const defaultProps=getOwnProperty(componentClass,cacheKey);return defaultProps||(componentClass[cacheKey]=function createPropsPrototypeAndTypes(componentClass,extensions){const parent=componentClass.prototype;if(!parent)return null;const parentClass=Object.getPrototypeOf(componentClass),parentDefaultProps=getPropsPrototype(parentClass),componentDefaultProps=getOwnProperty(componentClass,"defaultProps")||{},componentPropDefs=function parsePropTypes(propDefs){const propTypes={},defaultProps={},deprecatedProps={};for(const[propName,propDef]of Object.entries(propDefs)){const deprecated=propDef?.deprecatedFor;if(deprecated)deprecatedProps[propName]=Array.isArray(deprecated)?deprecated:[deprecated];else{const propType=parsePropType(propName,propDef);propTypes[propName]=propType,defaultProps[propName]=propType.value}}return{propTypes:propTypes,defaultProps:defaultProps,deprecatedProps:deprecatedProps}}(componentDefaultProps),defaultProps=Object.assign(Object.create(null),parentDefaultProps,componentPropDefs.defaultProps),propTypes=Object.assign(Object.create(null),parentDefaultProps?.[lifecycle_constants.fW],componentPropDefs.propTypes),deprecatedProps=Object.assign(Object.create(null),parentDefaultProps?.[lifecycle_constants.uH],componentPropDefs.deprecatedProps);for(const extension of extensions){const extensionDefaultProps=getPropsPrototype(extension.constructor);extensionDefaultProps&&(Object.assign(defaultProps,extensionDefaultProps),Object.assign(propTypes,extensionDefaultProps[lifecycle_constants.fW]),Object.assign(deprecatedProps,extensionDefaultProps[lifecycle_constants.uH]))}(function createPropsPrototype(defaultProps,componentClass){const id=function getComponentName(componentClass){const componentName=componentClass.componentName;componentName||log.A.warn(`${componentClass.name}.componentName not specified`)();return componentName||componentClass.name}(componentClass);Object.defineProperties(defaultProps,{id:{writable:!0,value:id}})})(defaultProps,componentClass),function addAsyncPropsToPropPrototype(defaultProps,propTypes){const defaultValues={},descriptors={};for(const propName in propTypes){const propType=propTypes[propName],{name:name,value:value}=propType;propType.async&&(defaultValues[name]=value,descriptors[name]=getDescriptorForAsyncProp(name))}defaultProps[lifecycle_constants.jA]=defaultValues,defaultProps[lifecycle_constants.YN]={},Object.defineProperties(defaultProps,descriptors)}(defaultProps,propTypes),function addDeprecatedPropsToPropPrototype(defaultProps,deprecatedProps){for(const propName in deprecatedProps)Object.defineProperty(defaultProps,propName,{enumerable:!1,set(newValue){const nameStr=`${this.id}: ${propName}`;for(const newPropName of deprecatedProps[propName])create_props_hasOwnProperty(this,newPropName)||(this[newPropName]=newValue);log.A.deprecated(nameStr,deprecatedProps[propName].join("/"))()}})}(defaultProps,deprecatedProps),defaultProps[lifecycle_constants.fW]=propTypes,defaultProps[lifecycle_constants.uH]=deprecatedProps,0!==extensions.length||create_props_hasOwnProperty(componentClass,"_propTypes")||(componentClass._propTypes=propTypes);return defaultProps}(componentClass,extensions||[]))}function getDescriptorForAsyncProp(name){return{enumerable:!0,set(newValue){"string"==typeof newValue||newValue instanceof Promise||(0,iterable_utils.Td)(newValue)?this[lifecycle_constants.YN][name]=newValue:this[lifecycle_constants.vf][name]=newValue},get(){if(this[lifecycle_constants.vf]){if(name in this[lifecycle_constants.vf]){return this[lifecycle_constants.vf][name]||this[lifecycle_constants.jA][name]}if(name in this[lifecycle_constants.YN]){const state=this[lifecycle_constants.r3]&&this[lifecycle_constants.r3].internalState;if(state&&state.hasAsyncProp(name))return state.getAsyncProp(name)||this[lifecycle_constants.jA][name]}}return this[lifecycle_constants.jA][name]}}}function create_props_hasOwnProperty(object,prop){return Object.prototype.hasOwnProperty.call(object,prop)}function getOwnProperty(object,prop){return create_props_hasOwnProperty(object,prop)&&object[prop]}let counter=0;class Component{static{this.componentName="Component"}static{this.defaultProps={}}constructor(...propObjects){this.props=function createProps(component,propObjects){let extensions;for(let i=propObjects.length-1;i>=0;i--){const props=propObjects[i];"extensions"in props&&(extensions=props.extensions)}const propsPrototype=getPropsPrototype(component.constructor,extensions),propsInstance=Object.create(propsPrototype);propsInstance[lifecycle_constants.r3]=component,propsInstance[lifecycle_constants.YN]={},propsInstance[lifecycle_constants.vf]={};for(let i=0;i<propObjects.length;++i){const props=propObjects[i];for(const key in props)propsInstance[key]=props[key]}return Object.freeze(propsInstance),propsInstance}(this,propObjects),this.id=this.props.id,this.count=counter++}clone(newProps){const{props:props}=this,asyncProps={};for(const key in props[lifecycle_constants.jA])key in props[lifecycle_constants.vf]?asyncProps[key]=props[lifecycle_constants.vf][key]:key in props[lifecycle_constants.YN]&&(asyncProps[key]=props[lifecycle_constants.YN][key]);return new this.constructor({...props,...asyncProps,...newProps})}}const EMPTY_PROPS=Object.freeze({});class ComponentState{constructor(component){this.component=component,this.asyncProps={},this.onAsyncPropUpdated=()=>{},this.oldProps=null,this.oldAsyncProps=null}finalize(){for(const propName in this.asyncProps){const asyncProp=this.asyncProps[propName];asyncProp&&asyncProp.type&&asyncProp.type.release&&asyncProp.type.release(asyncProp.resolvedValue,asyncProp.type,this.component)}this.asyncProps={},this.component=null,this.resetOldProps()}getOldProps(){return this.oldAsyncProps||this.oldProps||EMPTY_PROPS}resetOldProps(){this.oldAsyncProps=null,this.oldProps=this.component?this.component.props:null}hasAsyncProp(propName){return propName in this.asyncProps}getAsyncProp(propName){const asyncProp=this.asyncProps[propName];return asyncProp&&asyncProp.resolvedValue}isAsyncPropLoading(propName){if(propName){const asyncProp=this.asyncProps[propName];return Boolean(asyncProp&&asyncProp.pendingLoadCount>0&&asyncProp.pendingLoadCount!==asyncProp.resolvedLoadCount)}for(const key in this.asyncProps)if(this.isAsyncPropLoading(key))return!0;return!1}reloadAsyncProp(propName,value){this._watchPromise(propName,Promise.resolve(value))}setAsyncProps(props){this.component=props[lifecycle_constants.r3]||this.component;const resolvedValues=props[lifecycle_constants.vf]||{},originalValues=props[lifecycle_constants.YN]||props,defaultValues=props[lifecycle_constants.jA]||{};for(const propName in resolvedValues){const value=resolvedValues[propName];this._createAsyncPropData(propName,defaultValues[propName]),this._updateAsyncProp(propName,value),resolvedValues[propName]=this.getAsyncProp(propName)}for(const propName in originalValues){const value=originalValues[propName];this._createAsyncPropData(propName,defaultValues[propName]),this._updateAsyncProp(propName,value)}}_fetch(propName,url){return null}_onResolve(propName,value){}_onError(propName,error){}_updateAsyncProp(propName,value){this._didAsyncInputValueChange(propName,value)&&("string"==typeof value&&(value=this._fetch(propName,value)),value instanceof Promise?this._watchPromise(propName,value):(0,iterable_utils.Td)(value)?this._resolveAsyncIterable(propName,value):this._setPropValue(propName,value))}_freezeAsyncOldProps(){if(!this.oldAsyncProps&&this.oldProps){this.oldAsyncProps=Object.create(this.oldProps);for(const propName in this.asyncProps)Object.defineProperty(this.oldAsyncProps,propName,{enumerable:!0,value:this.oldProps[propName]})}}_didAsyncInputValueChange(propName,value){const asyncProp=this.asyncProps[propName];return value!==asyncProp.resolvedValue&&value!==asyncProp.lastValue&&(asyncProp.lastValue=value,!0)}_setPropValue(propName,value){this._freezeAsyncOldProps();const asyncProp=this.asyncProps[propName];asyncProp&&(value=this._postProcessValue(asyncProp,value),asyncProp.resolvedValue=value,asyncProp.pendingLoadCount++,asyncProp.resolvedLoadCount=asyncProp.pendingLoadCount)}_setAsyncPropValue(propName,value,loadCount){const asyncProp=this.asyncProps[propName];asyncProp&&loadCount>=asyncProp.resolvedLoadCount&&void 0!==value&&(this._freezeAsyncOldProps(),asyncProp.resolvedValue=value,asyncProp.resolvedLoadCount=loadCount,this.onAsyncPropUpdated(propName,value))}_watchPromise(propName,promise){const asyncProp=this.asyncProps[propName];if(asyncProp){asyncProp.pendingLoadCount++;const loadCount=asyncProp.pendingLoadCount;promise.then((data=>{this.component&&(data=this._postProcessValue(asyncProp,data),this._setAsyncPropValue(propName,data,loadCount),this._onResolve(propName,data))})).catch((error=>{this._onError(propName,error)}))}}async _resolveAsyncIterable(propName,iterable){if("data"!==propName)return void this._setPropValue(propName,iterable);const asyncProp=this.asyncProps[propName];if(!asyncProp)return;asyncProp.pendingLoadCount++;const loadCount=asyncProp.pendingLoadCount;let data=[],count=0;for await(const chunk of iterable){if(!this.component)return;const{dataTransform:dataTransform}=this.component.props;data=dataTransform?dataTransform(chunk,data):data.concat(chunk),Object.defineProperty(data,"__diff",{enumerable:!1,value:[{startRow:count,endRow:data.length}]}),count=data.length,this._setAsyncPropValue(propName,data,loadCount)}this._onResolve(propName,data)}_postProcessValue(asyncProp,value){const propType=asyncProp.type;return propType&&this.component&&(propType.release&&propType.release(asyncProp.resolvedValue,propType,this.component),propType.transform)?propType.transform(value,propType,this.component):value}_createAsyncPropData(propName,defaultValue){if(!this.asyncProps[propName]){const propTypes=this.component&&this.component.props[lifecycle_constants.fW];this.asyncProps[propName]={type:propTypes&&propTypes[propName],lastValue:null,resolvedValue:defaultValue,pendingLoadCount:0,resolvedLoadCount:0}}}}class LayerState extends ComponentState{constructor({attributeManager:attributeManager,layer:layer}){super(layer),this.attributeManager=attributeManager,this.needsRedraw=!0,this.needsUpdate=!0,this.subLayers=null,this.usesPickingColorCache=!1}get layer(){return this.component}_fetch(propName,url){const layer=this.layer,fetch=layer?.props.fetch;return fetch?fetch(url,{propName:propName,layer:layer}):super._fetch(propName,url)}_onResolve(propName,value){const layer=this.layer;if(layer){const onDataLoad=layer.props.onDataLoad;"data"===propName&&onDataLoad&&onDataLoad(value,{propName:propName,layer:layer})}}_onError(propName,error){const layer=this.layer;layer&&layer.raiseError(error,`loading ${propName} of ${this.layer}`)}}var dist=__webpack_require__("./node_modules/@math.gl/web-mercator/dist/index.js"),load=__webpack_require__("./node_modules/@loaders.gl/core/dist/lib/api/load.js");const EMPTY_ARRAY=Object.freeze([]),areViewportsEqual=(0,memoize.A)((({oldViewport:oldViewport,viewport:viewport})=>oldViewport.equals(viewport)));let pickingColorCache=new Uint8ClampedArray(0);const defaultProps={data:{type:"data",value:EMPTY_ARRAY,async:!0},dataComparator:{type:"function",value:null,optional:!0},_dataDiff:{type:"function",value:data=>data&&data.__diff,optional:!0},dataTransform:{type:"function",value:null,optional:!0},onDataLoad:{type:"function",value:null,optional:!0},onError:{type:"function",value:null,optional:!0},fetch:{type:"function",value:(url,{propName:propName,layer:layer,loaders:loaders,loadOptions:loadOptions,signal:signal})=>{const{resourceManager:resourceManager}=layer.context;loadOptions=loadOptions||layer.getLoadOptions(),loaders=loaders||layer.props.loaders,signal&&(loadOptions={...loadOptions,fetch:{...loadOptions?.fetch,signal:signal}});let inResourceManager=resourceManager.contains(url);return inResourceManager||loadOptions||(resourceManager.add({resourceId:url,data:(0,load.H)(url,loaders),persistent:!1}),inResourceManager=!0),inResourceManager?resourceManager.subscribe({resourceId:url,onChange:data=>layer.internalState?.reloadAsyncProp(propName,data),consumerId:layer.id,requestId:propName}):(0,load.H)(url,loaders,loadOptions)}},updateTriggers:{},visible:!0,pickable:!1,opacity:{type:"number",min:0,max:1,value:1},operation:"draw",onHover:{type:"function",value:null,optional:!0},onClick:{type:"function",value:null,optional:!0},onDragStart:{type:"function",value:null,optional:!0},onDrag:{type:"function",value:null,optional:!0},onDragEnd:{type:"function",value:null,optional:!0},coordinateSystem:constants.rf.DEFAULT,coordinateOrigin:{type:"array",value:[0,0,0],compare:!0},modelMatrix:{type:"array",value:null,compare:!0,optional:!0},wrapLongitude:!1,positionFormat:"XYZ",colorFormat:"RGBA",parameters:{type:"object",value:{},optional:!0,compare:2},loadOptions:{type:"object",value:null,optional:!0,ignore:!0},transitions:null,extensions:[],loaders:{type:"array",value:[],optional:!0,ignore:!0},getPolygonOffset:{type:"function",value:({layerIndex:layerIndex})=>[0,100*-layerIndex]},highlightedObjectIndex:null,autoHighlight:!1,highlightColor:{type:"accessor",value:[0,0,128,128]}};class Layer extends Component{constructor(){super(...arguments),this.internalState=null,this.lifecycle=lifecycle_constants.VD.NO_STATE,this.parent=null}static{this.defaultProps=defaultProps}static{this.layerName="Layer"}static get componentName(){return Object.prototype.hasOwnProperty.call(this,"layerName")?this.layerName:""}get root(){let layer=this;for(;layer.parent;)layer=layer.parent;return layer}toString(){return`${this.constructor.layerName||this.constructor.name}({id: '${this.props.id}'})`}project(xyz){(0,assert.A)(this.internalState);const viewport=this.internalState.viewport||this.context.viewport,worldPosition=(0,project_functions.w)(xyz,{viewport:viewport,modelMatrix:this.props.modelMatrix,coordinateOrigin:this.props.coordinateOrigin,coordinateSystem:this.props.coordinateSystem}),[x,y,z]=(0,dist.VJ)(worldPosition,viewport.pixelProjectionMatrix);return 2===xyz.length?[x,y]:[x,y,z]}unproject(xy){(0,assert.A)(this.internalState);return(this.internalState.viewport||this.context.viewport).unproject(xy)}projectPosition(xyz,params){(0,assert.A)(this.internalState);const viewport=this.internalState.viewport||this.context.viewport;return(0,project_functions.R)(xyz,{viewport:viewport,modelMatrix:this.props.modelMatrix,coordinateOrigin:this.props.coordinateOrigin,coordinateSystem:this.props.coordinateSystem,...params})}get isComposite(){return!1}setState(partialState){this.setChangeFlags({stateChanged:!0}),Object.assign(this.state,partialState),this.setNeedsRedraw()}setNeedsRedraw(){this.internalState&&(this.internalState.needsRedraw=!0)}setNeedsUpdate(){this.internalState&&(this.context.layerManager.setNeedsUpdate(String(this)),this.internalState.needsUpdate=!0)}get isLoaded(){return!!this.internalState&&!this.internalState.isAsyncPropLoading()}get wrapLongitude(){return this.props.wrapLongitude}isPickable(){return this.props.pickable&&this.props.visible}getModels(){const state=this.state;return state&&(state.models||state.model&&[state.model])||[]}setModuleParameters(moduleParameters){for(const model of this.getModels())model.updateModuleSettings(moduleParameters)}setShaderModuleProps(...props){for(const model of this.getModels())model.shaderInputs.setProps(...props)}getAttributeManager(){return this.internalState&&this.internalState.attributeManager}getCurrentLayer(){return this.internalState&&this.internalState.layer}getLoadOptions(){return this.props.loadOptions}use64bitPositions(){const{coordinateSystem:coordinateSystem}=this.props;return coordinateSystem===constants.rf.DEFAULT||coordinateSystem===constants.rf.LNGLAT||coordinateSystem===constants.rf.CARTESIAN}onHover(info,pickingEvent){return this.props.onHover&&this.props.onHover(info,pickingEvent)||!1}onClick(info,pickingEvent){return this.props.onClick&&this.props.onClick(info,pickingEvent)||!1}nullPickingColor(){return[0,0,0]}encodePickingColor(i,target=[]){return target[0]=i+1&255,target[1]=i+1>>8&255,target[2]=i+1>>8>>8&255,target}decodePickingColor(color){(0,assert.A)(color instanceof Uint8Array);const[i1,i2,i3]=color;return i1+256*i2+65536*i3-1}getNumInstances(){return Number.isFinite(this.props.numInstances)?this.props.numInstances:this.state&&void 0!==this.state.numInstances?this.state.numInstances:count(this.props.data)}getStartIndices(){return this.props.startIndices?this.props.startIndices:this.state&&this.state.startIndices?this.state.startIndices:null}getBounds(){return this.getAttributeManager()?.getBounds(["positions","instancePositions"])}getShaders(shaders){shaders=(0,shader.n)(shaders,{disableWarnings:!0,modules:this.context.defaultShaderModules});for(const extension of this.props.extensions)shaders=(0,shader.n)(shaders,extension.getShaders.call(this,extension));return shaders}shouldUpdateState(params){return params.changeFlags.propsOrDataChanged}updateState(params){const attributeManager=this.getAttributeManager(),{dataChanged:dataChanged}=params.changeFlags;if(dataChanged&&attributeManager)if(Array.isArray(dataChanged))for(const dataRange of dataChanged)attributeManager.invalidateAll(dataRange);else attributeManager.invalidateAll();if(attributeManager){const{props:props}=params,hasPickingBuffer=this.internalState.hasPickingBuffer,needsPickingBuffer=Number.isInteger(props.highlightedObjectIndex)||props.pickable||props.extensions.some((extension=>extension.getNeedsPickingBuffer.call(this,extension)));if(hasPickingBuffer!==needsPickingBuffer){this.internalState.hasPickingBuffer=needsPickingBuffer;const{pickingColors:pickingColors,instancePickingColors:instancePickingColors}=attributeManager.attributes,pickingColorsAttribute=pickingColors||instancePickingColors;pickingColorsAttribute&&(needsPickingBuffer&&pickingColorsAttribute.constant&&(pickingColorsAttribute.constant=!1,attributeManager.invalidate(pickingColorsAttribute.id)),pickingColorsAttribute.value||needsPickingBuffer||(pickingColorsAttribute.constant=!0,pickingColorsAttribute.value=[0,0,0]))}}}finalizeState(context){for(const model of this.getModels())model.destroy();const attributeManager=this.getAttributeManager();attributeManager&&attributeManager.finalize(),this.context&&this.context.resourceManager.unsubscribe({consumerId:this.id}),this.internalState&&(this.internalState.uniformTransitions.clear(),this.internalState.finalize())}draw(opts){for(const model of this.getModels())model.draw(opts)}getPickingInfo({info:info,mode:mode,sourceLayer:sourceLayer}){const{index:index}=info;return index>=0&&Array.isArray(this.props.data)&&(info.object=this.props.data[index]),info}raiseError(error,message){message&&(error=new Error(`${message}: ${error.message}`,{cause:error})),this.props.onError?.(error)||this.context?.onError?.(error,this)}getNeedsRedraw(opts={clearRedrawFlags:!1}){return this._getNeedsRedraw(opts)}needsUpdate(){return!!this.internalState&&(this.internalState.needsUpdate||this.hasUniformTransition()||this.shouldUpdateState(this._getUpdateParams()))}hasUniformTransition(){return this.internalState?.uniformTransitions.active||!1}activateViewport(viewport){if(!this.internalState)return;const oldViewport=this.internalState.viewport;this.internalState.viewport=viewport,oldViewport&&areViewportsEqual({oldViewport:oldViewport,viewport:viewport})||(this.setChangeFlags({viewportChanged:!0}),this.isComposite?this.needsUpdate()&&this.setNeedsUpdate():this._update())}invalidateAttribute(name="all"){const attributeManager=this.getAttributeManager();attributeManager&&("all"===name?attributeManager.invalidateAll():attributeManager.invalidate(name))}updateAttributes(changedAttributes){let bufferLayoutChanged=!1;for(const id in changedAttributes)changedAttributes[id].layoutChanged()&&(bufferLayoutChanged=!0);for(const model of this.getModels())this._setModelAttributes(model,changedAttributes,bufferLayoutChanged)}_updateAttributes(){const attributeManager=this.getAttributeManager();if(!attributeManager)return;const props=this.props,numInstances=this.getNumInstances(),startIndices=this.getStartIndices();attributeManager.update({data:props.data,numInstances:numInstances,startIndices:startIndices,props:props,transitions:props.transitions,buffers:props.data.attributes,context:this});const changedAttributes=attributeManager.getChangedAttributes({clearChangedFlags:!0});this.updateAttributes(changedAttributes)}_updateAttributeTransition(){const attributeManager=this.getAttributeManager();attributeManager&&attributeManager.updateTransition()}_updateUniformTransition(){const{uniformTransitions:uniformTransitions}=this.internalState;if(uniformTransitions.active){const propsInTransition=uniformTransitions.update(),props=Object.create(this.props);for(const key in propsInTransition)Object.defineProperty(props,key,{value:propsInTransition[key]});return props}return this.props}calculateInstancePickingColors(attribute,{numInstances:numInstances}){if(attribute.constant)return;const cacheSize=Math.floor(pickingColorCache.length/4);if(this.internalState.usesPickingColorCache=!0,cacheSize<numInstances){numInstances>16777215&&log.A.warn("Layer has too many data objects. Picking might not be able to distinguish all objects.")(),pickingColorCache=typed_array_manager.A.allocate(pickingColorCache,numInstances,{size:4,copy:!0,maxCount:Math.max(numInstances,16777215)});const newCacheSize=Math.floor(pickingColorCache.length/4),pickingColor=[];for(let i=cacheSize;i<newCacheSize;i++)this.encodePickingColor(i,pickingColor),pickingColorCache[4*i+0]=pickingColor[0],pickingColorCache[4*i+1]=pickingColor[1],pickingColorCache[4*i+2]=pickingColor[2]}attribute.value=pickingColorCache.subarray(0,4*numInstances)}_setModelAttributes(model,changedAttributes,bufferLayoutChanged=!1){if(!Object.keys(changedAttributes).length)return;if(bufferLayoutChanged){const attributeManager=this.getAttributeManager();model.setBufferLayout(attributeManager.getBufferLayouts(model)),changedAttributes=attributeManager.getAttributes()}const excludeAttributes=model.userData?.excludeAttributes||{},attributeBuffers={},constantAttributes={};for(const name in changedAttributes){if(excludeAttributes[name])continue;const values=changedAttributes[name].getValue();for(const attributeName in values){const value=values[attributeName];value instanceof buffer.h?changedAttributes[name].settings.isIndexed?model.setIndexBuffer(value):attributeBuffers[attributeName]=value:value&&(constantAttributes[attributeName]=value)}}model.setAttributes(attributeBuffers),model.setConstantAttributes(constantAttributes)}disablePickingIndex(objectIndex){const data=this.props.data;if(!("attributes"in data))return void this._disablePickingIndex(objectIndex);const{pickingColors:pickingColors,instancePickingColors:instancePickingColors}=this.getAttributeManager().attributes,colors=pickingColors||instancePickingColors,externalColorAttribute=colors&&data.attributes&&data.attributes[colors.id];if(externalColorAttribute&&externalColorAttribute.value){const values=externalColorAttribute.value,objectColor=this.encodePickingColor(objectIndex);for(let index=0;index<data.length;index++){const i=colors.getVertexOffset(index);values[i]===objectColor[0]&&values[i+1]===objectColor[1]&&values[i+2]===objectColor[2]&&this._disablePickingIndex(index)}}else this._disablePickingIndex(objectIndex)}_disablePickingIndex(objectIndex){const{pickingColors:pickingColors,instancePickingColors:instancePickingColors}=this.getAttributeManager().attributes,colors=pickingColors||instancePickingColors;if(!colors)return;const start=colors.getVertexOffset(objectIndex),end=colors.getVertexOffset(objectIndex+1);colors.buffer.write(new Uint8Array(end-start),start)}restorePickingColors(){const{pickingColors:pickingColors,instancePickingColors:instancePickingColors}=this.getAttributeManager().attributes,colors=pickingColors||instancePickingColors;colors&&(this.internalState.usesPickingColorCache&&colors.value.buffer!==pickingColorCache.buffer&&(colors.value=pickingColorCache.subarray(0,colors.value.length)),colors.updateSubBuffer({startOffset:0}))}_initialize(){(0,assert.A)(!this.internalState),(0,assert.A)(Number.isFinite(this.props.coordinateSystem)),(0,debug.A)("layer.initialize",this);const attributeManager=this._getAttributeManager();attributeManager&&attributeManager.addInstanced({instancePickingColors:{type:"uint8",size:4,noAlloc:!0,update:this.calculateInstancePickingColors}}),this.internalState=new LayerState({attributeManager:attributeManager,layer:this}),this._clearChangeFlags(),this.state={},Object.defineProperty(this.state,"attributeManager",{get:()=>(log.A.deprecated("layer.state.attributeManager","layer.getAttributeManager()")(),attributeManager)}),this.internalState.uniformTransitions=new UniformTransitionManager(this.context.timeline),this.internalState.onAsyncPropUpdated=this._onAsyncPropUpdated.bind(this),this.internalState.setAsyncProps(this.props),this.initializeState(this.context);for(const extension of this.props.extensions)extension.initializeState.call(this,this.context,extension);this.setChangeFlags({dataChanged:"init",propsChanged:"init",viewportChanged:!0,extensionsChanged:!0}),this._update()}_transferState(oldLayer){(0,debug.A)("layer.matched",this,this===oldLayer);const{state:state,internalState:internalState}=oldLayer;this!==oldLayer&&(this.internalState=internalState,this.state=state,this.internalState.setAsyncProps(this.props),this._diffProps(this.props,this.internalState.getOldProps()))}_update(){const stateNeedsUpdate=this.needsUpdate();if((0,debug.A)("layer.update",this,stateNeedsUpdate),!stateNeedsUpdate)return;const currentProps=this.props,context=this.context,internalState=this.internalState,currentViewport=context.viewport,propsInTransition=this._updateUniformTransition();internalState.propsInTransition=propsInTransition,context.viewport=internalState.viewport||currentViewport,this.props=propsInTransition;try{const updateParams=this._getUpdateParams(),oldModels=this.getModels();if(context.device)this.updateState(updateParams);else try{this.updateState(updateParams)}catch(error){}for(const extension of this.props.extensions)extension.updateState.call(this,updateParams,extension);const modelChanged=this.getModels()[0]!==oldModels[0];this._postUpdate(updateParams,modelChanged)}finally{context.viewport=currentViewport,this.props=currentProps,this._clearChangeFlags(),internalState.needsUpdate=!1,internalState.resetOldProps()}}_finalize(){(0,debug.A)("layer.finalize",this),this.finalizeState(this.context);for(const extension of this.props.extensions)extension.finalizeState.call(this,this.context,extension)}_drawLayer({renderPass:renderPass,moduleParameters:moduleParameters=null,uniforms:uniforms={},parameters:parameters={}}){this._updateAttributeTransition();const currentProps=this.props,context=this.context;this.props=this.internalState.propsInTransition||currentProps;const opacity=this.props.opacity;uniforms.opacity=Math.pow(opacity,1/2.2);try{if(moduleParameters){const{isActive:isActive,isAttribute:isAttribute}=moduleParameters.picking;this.setModuleParameters(moduleParameters),this.setShaderModuleProps({picking:{isActive:isActive,isAttribute:isAttribute}})}const{getPolygonOffset:getPolygonOffset}=this.props,offsets=getPolygonOffset&&getPolygonOffset(uniforms)||[0,0];context.device.setParametersWebGL({polygonOffset:offsets});for(const model of this.getModels())model.setParameters(parameters);context.device.withParametersWebGL(parameters,(()=>{const opts={renderPass:renderPass,moduleParameters:moduleParameters,uniforms:uniforms,parameters:parameters,context:context};for(const extension of this.props.extensions)extension.draw.call(this,opts,extension);this.draw(opts)}))}finally{this.props=currentProps}}getChangeFlags(){return this.internalState?.changeFlags}setChangeFlags(flags){if(!this.internalState)return;const{changeFlags:changeFlags}=this.internalState;for(const key in flags)if(flags[key]){let flagChanged=!1;if("dataChanged"===key){const dataChangedReason=flags[key],prevDataChangedReason=changeFlags[key];dataChangedReason&&Array.isArray(prevDataChangedReason)&&(changeFlags.dataChanged=Array.isArray(dataChangedReason)?prevDataChangedReason.concat(dataChangedReason):dataChangedReason,flagChanged=!0)}changeFlags[key]||(changeFlags[key]=flags[key],flagChanged=!0),flagChanged&&(0,debug.A)("layer.changeFlag",this,key,flags)}const propsOrDataChanged=Boolean(changeFlags.dataChanged||changeFlags.updateTriggersChanged||changeFlags.propsChanged||changeFlags.extensionsChanged);changeFlags.propsOrDataChanged=propsOrDataChanged,changeFlags.somethingChanged=propsOrDataChanged||changeFlags.viewportChanged||changeFlags.stateChanged}_clearChangeFlags(){this.internalState.changeFlags={dataChanged:!1,propsChanged:!1,updateTriggersChanged:!1,viewportChanged:!1,stateChanged:!1,extensionsChanged:!1,propsOrDataChanged:!1,somethingChanged:!1}}_diffProps(newProps,oldProps){const changeFlags=(0,props.mg)(newProps,oldProps);if(changeFlags.updateTriggersChanged)for(const key in changeFlags.updateTriggersChanged)changeFlags.updateTriggersChanged[key]&&this.invalidateAttribute(key);if(changeFlags.transitionsChanged)for(const key in changeFlags.transitionsChanged)this.internalState.uniformTransitions.add(key,oldProps[key],newProps[key],newProps.transitions?.[key]);return this.setChangeFlags(changeFlags)}validateProps(){(0,props.zo)(this.props)}updateAutoHighlight(info){this.props.autoHighlight&&!Number.isInteger(this.props.highlightedObjectIndex)&&this._updateAutoHighlight(info)}_updateAutoHighlight(info){const picking={highlightedObjectColor:info.picked?info.color:null},{highlightColor:highlightColor}=this.props;info.picked&&"function"==typeof highlightColor&&(picking.highlightColor=highlightColor(info)),this.setShaderModuleProps({picking:picking}),this.setNeedsRedraw()}_getAttributeManager(){const context=this.context;return new attribute_manager.A(context.device,{id:this.props.id,stats:context.stats,timeline:context.timeline})}_postUpdate(updateParams,forceUpdate){const{props:props,oldProps:oldProps}=updateParams;this.setNeedsRedraw(),this._updateAttributes();const model=this.state.model;model?.isInstanced&&model.setInstanceCount(this.getNumInstances());const{autoHighlight:autoHighlight,highlightedObjectIndex:highlightedObjectIndex,highlightColor:highlightColor}=props;if(forceUpdate||oldProps.autoHighlight!==autoHighlight||oldProps.highlightedObjectIndex!==highlightedObjectIndex||oldProps.highlightColor!==highlightColor){const picking={};Array.isArray(highlightColor)&&(picking.highlightColor=highlightColor),(forceUpdate||oldProps.autoHighlight!==autoHighlight||highlightedObjectIndex!==oldProps.highlightedObjectIndex)&&(picking.highlightedObjectColor=Number.isFinite(highlightedObjectIndex)&&highlightedObjectIndex>=0?this.encodePickingColor(highlightedObjectIndex):null),this.setShaderModuleProps({picking:picking})}}_getUpdateParams(){return{props:this.props,oldProps:this.internalState.getOldProps(),context:this.context,changeFlags:this.internalState.changeFlags}}_getNeedsRedraw(opts){if(!this.internalState)return!1;let redraw=!1;redraw=redraw||this.internalState.needsRedraw&&this.id;const attributeManager=this.getAttributeManager(),attributeManagerNeedsRedraw=!!attributeManager&&attributeManager.getNeedsRedraw(opts);if(redraw=redraw||attributeManagerNeedsRedraw,redraw)for(const extension of this.props.extensions)extension.onNeedsRedraw.call(this,extension);return this.internalState.needsRedraw=this.internalState.needsRedraw&&!opts.clearRedrawFlags,redraw}_onAsyncPropUpdated(){this._diffProps(this.props,this.internalState.getOldProps()),this.setNeedsUpdate()}}},"./node_modules/@deck.gl/core/dist/lifecycle/constants.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{VD:function(){return LIFECYCLE},YN:function(){return ASYNC_ORIGINAL_SYMBOL},fW:function(){return PROP_TYPES_SYMBOL},jA:function(){return ASYNC_DEFAULTS_SYMBOL},r3:function(){return COMPONENT_SYMBOL},uH:function(){return DEPRECATED_PROPS_SYMBOL},vf:function(){return ASYNC_RESOLVED_SYMBOL}});const LIFECYCLE={NO_STATE:"Awaiting state",MATCHED:"Matched. State transferred from previous layer",INITIALIZED:"Initialized",AWAITING_GC:"Discarded. Awaiting garbage collection",AWAITING_FINALIZATION:"No longer matched. Awaiting garbage collection",FINALIZED:"Finalized! Awaiting garbage collection"},COMPONENT_SYMBOL=Symbol.for("component"),PROP_TYPES_SYMBOL=Symbol.for("propTypes"),DEPRECATED_PROPS_SYMBOL=Symbol.for("deprecatedProps"),ASYNC_DEFAULTS_SYMBOL=Symbol.for("asyncPropDefaults"),ASYNC_ORIGINAL_SYMBOL=Symbol.for("asyncPropOriginal"),ASYNC_RESOLVED_SYMBOL=Symbol.for("asyncPropResolved")},"./node_modules/@deck.gl/core/dist/lifecycle/props.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{Me:function(){return compareProps},mg:function(){return diffProps},zo:function(){return validateProps}});var _constants_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@deck.gl/core/dist/lifecycle/constants.js");function validateProps(props){const propTypes=props[_constants_js__WEBPACK_IMPORTED_MODULE_0__.fW];for(const propName in propTypes){const propType=propTypes[propName],{validate:validate}=propType;if(validate&&!validate(props[propName],propType))throw new Error(`Invalid prop ${propName}: ${props[propName]}`)}}function diffProps(props,oldProps){const propsChangedReason=compareProps({newProps:props,oldProps:oldProps,propTypes:props[_constants_js__WEBPACK_IMPORTED_MODULE_0__.fW],ignoreProps:{data:null,updateTriggers:null,extensions:null,transitions:null}}),dataChangedReason=function diffDataProps(props,oldProps){if(null===oldProps)return"oldProps is null, initial diff";let dataChanged=!1;const{dataComparator:dataComparator,_dataDiff:_dataDiff}=props;dataComparator?dataComparator(props.data,oldProps.data)||(dataChanged="Data comparator detected a change"):props.data!==oldProps.data&&(dataChanged="A new data container was supplied");dataChanged&&_dataDiff&&(dataChanged=_dataDiff(props.data,oldProps.data)||dataChanged);return dataChanged}(props,oldProps);let updateTriggersChangedReason=!1;return dataChangedReason||(updateTriggersChangedReason=function diffUpdateTriggers(props,oldProps){if(null===oldProps)return{all:!0};if("all"in props.updateTriggers){if(diffUpdateTrigger(props,oldProps,"all"))return{all:!0}}const reason={};let changed=!1;for(const triggerName in props.updateTriggers)if("all"!==triggerName){diffUpdateTrigger(props,oldProps,triggerName)&&(reason[triggerName]=!0,changed=!0)}return!!changed&&reason}(props,oldProps)),{dataChanged:dataChangedReason,propsChanged:propsChangedReason,updateTriggersChanged:updateTriggersChangedReason,extensionsChanged:diffExtensions(props,oldProps),transitionsChanged:diffTransitions(props,oldProps)}}function diffTransitions(props,oldProps){if(!props.transitions)return!1;const result={},propTypes=props[_constants_js__WEBPACK_IMPORTED_MODULE_0__.fW];let changed=!1;for(const key in props.transitions){const propType=propTypes[key],type=propType&&propType.type;("number"===type||"color"===type||"array"===type)&&comparePropValues(props[key],oldProps[key],propType)&&(result[key]=!0,changed=!0)}return!!changed&&result}function compareProps({newProps:newProps,oldProps:oldProps,ignoreProps:ignoreProps={},propTypes:propTypes={},triggerName:triggerName="props"}){if(oldProps===newProps)return!1;if("object"!=typeof newProps||null===newProps)return`${triggerName} changed shallowly`;if("object"!=typeof oldProps||null===oldProps)return`${triggerName} changed shallowly`;for(const key of Object.keys(newProps))if(!(key in ignoreProps)){if(!(key in oldProps))return`${triggerName}.${key} added`;const changed=comparePropValues(newProps[key],oldProps[key],propTypes[key]);if(changed)return`${triggerName}.${key} ${changed}`}for(const key of Object.keys(oldProps))if(!(key in ignoreProps)){if(!(key in newProps))return`${triggerName}.${key} dropped`;if(!Object.hasOwnProperty.call(newProps,key)){const changed=comparePropValues(newProps[key],oldProps[key],propTypes[key]);if(changed)return`${triggerName}.${key} ${changed}`}}return!1}function comparePropValues(newProp,oldProp,propType){let equal=propType&&propType.equal;return equal&&!equal(newProp,oldProp,propType)?"changed deeply":equal||(equal=newProp&&oldProp&&newProp.equals,!equal||equal.call(newProp,oldProp))?equal||oldProp===newProp?null:"changed shallowly":"changed deeply"}function diffExtensions(props,oldProps){if(null===oldProps)return!0;const oldExtensions=oldProps.extensions,{extensions:extensions}=props;if(extensions===oldExtensions)return!1;if(!oldExtensions||!extensions)return!0;if(extensions.length!==oldExtensions.length)return!0;for(let i=0;i<extensions.length;i++)if(!extensions[i].equals(oldExtensions[i]))return!0;return!1}function diffUpdateTrigger(props,oldProps,triggerName){let newTriggers=props.updateTriggers[triggerName];newTriggers=null==newTriggers?{}:newTriggers;let oldTriggers=oldProps.updateTriggers[triggerName];oldTriggers=null==oldTriggers?{}:oldTriggers;return compareProps({oldProps:oldTriggers,newProps:newTriggers,triggerName:triggerName})}},"./node_modules/@deck.gl/core/dist/passes/layers-pass.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return LayersPass}});class Pass{constructor(device,props={id:"pass"}){const{id:id}=props;this.id=id,this.device=device,this.props={...props}}setProps(props){Object.assign(this.props,props)}render(params){}cleanup(){}}class LayersPass extends Pass{constructor(){super(...arguments),this._lastRenderIndex=-1}render(options){const[width,height]=this.device.canvasContext.getDrawingBufferSize(),clearCanvas=options.clearCanvas??!0,clearColor=options.clearColor??(!!clearCanvas&&[0,0,0,0]),clearDepth=!!clearCanvas&&1,clearStencil=!!clearCanvas&&0,colorMask=options.colorMask??15,parameters={viewport:[0,0,width,height]};options.colorMask&&(parameters.colorMask=colorMask),options.scissorRect&&(parameters.scissorRect=options.scissorRect);const renderPass=this.device.beginRenderPass({framebuffer:options.target,parameters:parameters,clearColor:clearColor,clearDepth:clearDepth,clearStencil:clearStencil});try{return this._drawLayers(renderPass,options)}finally{renderPass.end()}}_drawLayers(renderPass,options){const{target:target,moduleParameters:moduleParameters,viewports:viewports,views:views,onViewportActive:onViewportActive,clearStack:clearStack=!0}=options;options.pass=options.pass||"unknown",clearStack&&(this._lastRenderIndex=-1);const renderStats=[];for(const viewport of viewports){const view=views&&views[viewport.id];onViewportActive?.(viewport);const drawLayerParams=this._getDrawLayerParams(viewport,options),subViewports=viewport.subViewports||[viewport];for(const subViewport of subViewports){const stats=this._drawLayersInViewport(renderPass,{target:target,moduleParameters:moduleParameters,viewport:subViewport,view:view,pass:options.pass,layers:options.layers},drawLayerParams);renderStats.push(stats)}}return renderStats}_getDrawLayerParams(viewport,{layers:layers,pass:pass,isPicking:isPicking=!1,layerFilter:layerFilter,cullRect:cullRect,effects:effects,moduleParameters:moduleParameters},evaluateShouldDrawOnly=!1){const drawLayerParams=[],indexResolver=layerIndexResolver(this._lastRenderIndex+1),drawContext={layer:layers[0],viewport:viewport,isPicking:isPicking,renderPass:pass,cullRect:cullRect},layerFilterCache={};for(let layerIndex=0;layerIndex<layers.length;layerIndex++){const layer=layers[layerIndex],shouldDrawLayer=this._shouldDrawLayer(layer,drawContext,layerFilter,layerFilterCache),layerParam={shouldDrawLayer:shouldDrawLayer};shouldDrawLayer&&!evaluateShouldDrawOnly&&(layerParam.layerRenderIndex=indexResolver(layer,shouldDrawLayer),layerParam.moduleParameters=this._getModuleParameters(layer,effects,pass,moduleParameters),layerParam.layerParameters={...layer.context.deck?.props.parameters,...this.getLayerParameters(layer,layerIndex,viewport)}),drawLayerParams[layerIndex]=layerParam}return drawLayerParams}_drawLayersInViewport(renderPass,{layers:layers,moduleParameters:globalModuleParameters,pass:pass,target:target,viewport:viewport,view:view},drawLayerParams){const glViewport=function getGLViewport(device,{moduleParameters:moduleParameters,target:target,viewport:viewport}){const pixelRatio=moduleParameters&&moduleParameters.devicePixelRatio||device.canvasContext.cssToDeviceRatio(),[,drawingBufferHeight]=device.canvasContext.getDrawingBufferSize(),height=target?target.height:drawingBufferHeight,dimensions=viewport;return[dimensions.x*pixelRatio,height-(dimensions.y+dimensions.height)*pixelRatio,dimensions.width*pixelRatio,dimensions.height*pixelRatio]}(this.device,{moduleParameters:globalModuleParameters,target:target,viewport:viewport});if(view&&view.props.clear){const clearOpts=!0===view.props.clear?{color:!0,depth:!0}:view.props.clear;this.device.withParametersWebGL({scissorTest:!0,scissor:glViewport},(()=>this.device.clearWebGL(clearOpts)))}const renderStatus={totalCount:layers.length,visibleCount:0,compositeCount:0,pickableCount:0};renderPass.setParameters({viewport:glViewport});for(let layerIndex=0;layerIndex<layers.length;layerIndex++){const layer=layers[layerIndex],{shouldDrawLayer:shouldDrawLayer,layerRenderIndex:layerRenderIndex,moduleParameters:moduleParameters,layerParameters:layerParameters}=drawLayerParams[layerIndex];if(shouldDrawLayer&&layer.props.pickable&&renderStatus.pickableCount++,layer.isComposite)renderStatus.compositeCount++;else if(shouldDrawLayer){renderStatus.visibleCount++,this._lastRenderIndex=Math.max(this._lastRenderIndex,layerRenderIndex),moduleParameters.viewport=viewport,layer.context.renderPass=renderPass;try{layer._drawLayer({renderPass:renderPass,moduleParameters:moduleParameters,uniforms:{layerIndex:layerRenderIndex},parameters:layerParameters})}catch(err){layer.raiseError(err,`drawing ${layer} to ${pass}`)}}}return renderStatus}shouldDrawLayer(layer){return!0}getModuleParameters(layer,effects){return null}getLayerParameters(layer,layerIndex,viewport){return layer.props.parameters}_shouldDrawLayer(layer,drawContext,layerFilter,layerFilterCache){if(!(layer.props.visible&&this.shouldDrawLayer(layer)))return!1;drawContext.layer=layer;let parent=layer.parent;for(;parent;){if(!parent.props.visible||!parent.filterSubLayer(drawContext))return!1;drawContext.layer=parent,parent=parent.parent}if(layerFilter){const rootLayerId=drawContext.layer.id;if(rootLayerId in layerFilterCache||(layerFilterCache[rootLayerId]=layerFilter(drawContext)),!layerFilterCache[rootLayerId])return!1}return layer.activateViewport(drawContext.viewport),!0}_getModuleParameters(layer,effects,pass,overrides){const devicePixelRatio=this.device.canvasContext.cssToDeviceRatio(),moduleParameters=Object.assign(Object.create(layer.internalState?.propsInTransition||layer.props),{autoWrapLongitude:layer.wrapLongitude,viewport:layer.context.viewport,mousePosition:layer.context.mousePosition,picking:{isActive:0},devicePixelRatio:devicePixelRatio});if(effects)for(const effect of effects)Object.assign(moduleParameters,effect.getModuleParameters?.(layer));return Object.assign(moduleParameters,this.getModuleParameters(layer,effects),overrides)}}function layerIndexResolver(startIndex=0,layerIndices={}){const resolvers={},resolveLayerIndex=(layer,isDrawn)=>{const indexOverride=layer.props._offset,layerId=layer.id,parentId=layer.parent&&layer.parent.id;let index;if(parentId&&!(parentId in layerIndices)&&resolveLayerIndex(layer.parent,!1),parentId in resolvers){const resolver=resolvers[parentId]=resolvers[parentId]||layerIndexResolver(layerIndices[parentId],layerIndices);index=resolver(layer,isDrawn),resolvers[layerId]=resolver}else Number.isFinite(indexOverride)?(index=indexOverride+(layerIndices[parentId]||0),resolvers[layerId]=null):index=startIndex;return isDrawn&&index>=startIndex&&(startIndex=index+1),layerIndices[layerId]=index,index};return resolveLayerIndex}},"./node_modules/@deck.gl/core/dist/shaderlib/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{cN:function(){return getShaderAssembler}});var _luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/lib/shader-assembler.js");const DEFAULT_MODULES=[__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/project/project.js").A],SHADER_HOOKS=["vs:DECKGL_FILTER_SIZE(inout vec3 size, VertexGeometry geometry)","vs:DECKGL_FILTER_GL_POSITION(inout vec4 position, VertexGeometry geometry)","vs:DECKGL_FILTER_COLOR(inout vec4 color, VertexGeometry geometry)","fs:DECKGL_FILTER_COLOR(inout vec4 color, FragmentGeometry geometry)"];function getShaderAssembler(){const shaderAssembler=_luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_1__._.getDefaultShaderAssembler();for(const shaderModule of DEFAULT_MODULES)shaderAssembler.addDefaultModule(shaderModule);for(const shaderHook of SHADER_HOOKS)shaderAssembler.addShaderHook(shaderHook);return shaderAssembler}},"./node_modules/@deck.gl/core/dist/shaderlib/picking/picking.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return picking_picking}});const picking={name:"picking",vs:"uniform pickingUniforms {\nfloat isActive;\nfloat isAttribute;\nfloat isHighlightActive;\nfloat useFloatColors;\nvec3 highlightedObjectColor;\nvec4 highlightColor;\n} picking;\nout vec4 picking_vRGBcolor_Avalid;\nvec3 picking_normalizeColor(vec3 color) {\nreturn picking.useFloatColors > 0.5 ? color : color / 255.0;\n}\nvec4 picking_normalizeColor(vec4 color) {\nreturn picking.useFloatColors > 0.5 ? color : color / 255.0;\n}\nbool picking_isColorZero(vec3 color) {\nreturn dot(color, vec3(1.0)) < 0.00001;\n}\nbool picking_isColorValid(vec3 color) {\nreturn dot(color, vec3(1.0)) > 0.00001;\n}\nbool isVertexHighlighted(vec3 vertexColor) {\nvec3 highlightedObjectColor = picking_normalizeColor(picking.highlightedObjectColor);\nreturn\nbool(picking.isHighlightActive) && picking_isColorZero(abs(vertexColor - highlightedObjectColor));\n}\nvoid picking_setPickingColor(vec3 pickingColor) {\npickingColor = picking_normalizeColor(pickingColor);\nif (bool(picking.isActive)) {\npicking_vRGBcolor_Avalid.a = float(picking_isColorValid(pickingColor));\nif (!bool(picking.isAttribute)) {\npicking_vRGBcolor_Avalid.rgb = pickingColor;\n}\n} else {\npicking_vRGBcolor_Avalid.a = float(isVertexHighlighted(pickingColor));\n}\n}\nvoid picking_setPickingAttribute(float value) {\nif (bool(picking.isAttribute)) {\npicking_vRGBcolor_Avalid.r = value;\n}\n}\nvoid picking_setPickingAttribute(vec2 value) {\nif (bool(picking.isAttribute)) {\npicking_vRGBcolor_Avalid.rg = value;\n}\n}\nvoid picking_setPickingAttribute(vec3 value) {\nif (bool(picking.isAttribute)) {\npicking_vRGBcolor_Avalid.rgb = value;\n}\n}\n",fs:"uniform pickingUniforms {\nfloat isActive;\nfloat isAttribute;\nfloat isHighlightActive;\nfloat useFloatColors;\nvec3 highlightedObjectColor;\nvec4 highlightColor;\n} picking;\nin vec4 picking_vRGBcolor_Avalid;\nvec4 picking_filterHighlightColor(vec4 color) {\nif (picking.isActive > 0.5) {\nreturn color;\n}\nbool selected = bool(picking_vRGBcolor_Avalid.a);\nif (selected) {\nfloat highLightAlpha = picking.highlightColor.a;\nfloat blendedAlpha = highLightAlpha + color.a * (1.0 - highLightAlpha);\nfloat highLightRatio = highLightAlpha / blendedAlpha;\nvec3 blendedRGB = mix(color.rgb, picking.highlightColor.rgb, highLightRatio);\nreturn vec4(blendedRGB, blendedAlpha);\n} else {\nreturn color;\n}\n}\nvec4 picking_filterPickingColor(vec4 color) {\nif (bool(picking.isActive)) {\nif (picking_vRGBcolor_Avalid.a == 0.0) {\ndiscard;\n}\nreturn picking_vRGBcolor_Avalid;\n}\nreturn color;\n}\nvec4 picking_filterColor(vec4 color) {\nvec4 highlightColor = picking_filterHighlightColor(color);\nreturn picking_filterPickingColor(highlightColor);\n}\n",uniformTypes:{isActive:"f32",isAttribute:"f32",isHighlightActive:"f32",useFloatColors:"f32",highlightedObjectColor:"vec3<f32>",highlightColor:"vec4<f32>"},defaultUniforms:{isActive:!1,isAttribute:!1,isHighlightActive:!1,useFloatColors:!0,highlightedObjectColor:[0,0,0],highlightColor:[0,1,1,1]},getUniforms:function getUniforms(opts={},prevUniforms){const uniforms={};if(void 0===opts.highlightedObjectColor);else if(null===opts.highlightedObjectColor)uniforms.isHighlightActive=!1;else{uniforms.isHighlightActive=!0;const highlightedObjectColor=opts.highlightedObjectColor.slice(0,3);uniforms.highlightedObjectColor=highlightedObjectColor}if(opts.highlightColor){const color=Array.from(opts.highlightColor,(x=>x/255));Number.isFinite(color[3])||(color[3]=1),uniforms.highlightColor=color}void 0!==opts.isActive&&(uniforms.isActive=Boolean(opts.isActive),uniforms.isAttribute=Boolean(opts.isAttribute));void 0!==opts.useFloatColors&&(uniforms.useFloatColors=Boolean(opts.useFloatColors));return uniforms}};var picking_picking={...picking,defaultUniforms:{...picking.defaultUniforms,useFloatColors:!1},inject:{"vs:DECKGL_FILTER_GL_POSITION":"\n    // for picking depth values\n    picking_setPickingAttribute(position.z / position.w);\n  ","vs:DECKGL_FILTER_COLOR":"\n  picking_setPickingColor(geometry.pickingColor);\n  ","fs:DECKGL_FILTER_COLOR":{order:99,injection:"\n  // use highlight color if this fragment belongs to the selected object.\n  color = picking_filterHighlightColor(color);\n\n  // use picking color if rendering to picking FBO.\n  color = picking_filterPickingColor(color);\n    "}}}},"./node_modules/@deck.gl/core/dist/shaderlib/project/project-functions.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{R:function(){return projectPosition},w:function(){return getWorldPosition}});var _lib_constants_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/constants.js"),_viewport_uniforms_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/project/viewport-uniforms.js"),_viewports_web_mercator_viewport_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@deck.gl/core/dist/viewports/web-mercator-viewport.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec4.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec3.js"),_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/web-mercator/dist/index.js");const DEFAULT_COORDINATE_ORIGIN=[0,0,0];function lngLatZToWorldPosition(lngLatZ,viewport,offsetMode=!1){const p=viewport.projectPosition(lngLatZ);if(offsetMode&&viewport instanceof _viewports_web_mercator_viewport_js__WEBPACK_IMPORTED_MODULE_1__.A){const[longitude,latitude,z=0]=lngLatZ,distanceScales=viewport.getDistanceScales([longitude,latitude]);p[2]=z*distanceScales.unitsPerMeter[2]}return p}function getWorldPosition(position,{viewport:viewport,modelMatrix:modelMatrix,coordinateSystem:coordinateSystem,coordinateOrigin:coordinateOrigin,offsetMode:offsetMode}){let[x,y,z=0]=position;switch(modelMatrix&&([x,y,z]=_math_gl_core__WEBPACK_IMPORTED_MODULE_3__.Z0([],[x,y,z,1],modelMatrix)),coordinateSystem){case _lib_constants_js__WEBPACK_IMPORTED_MODULE_2__.rf.LNGLAT:return lngLatZToWorldPosition([x,y,z],viewport,offsetMode);case _lib_constants_js__WEBPACK_IMPORTED_MODULE_2__.rf.LNGLAT_OFFSETS:return lngLatZToWorldPosition([x+coordinateOrigin[0],y+coordinateOrigin[1],z+(coordinateOrigin[2]||0)],viewport,offsetMode);case _lib_constants_js__WEBPACK_IMPORTED_MODULE_2__.rf.METER_OFFSETS:return lngLatZToWorldPosition((0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.dT)(coordinateOrigin,[x,y,z]),viewport,offsetMode);case _lib_constants_js__WEBPACK_IMPORTED_MODULE_2__.rf.CARTESIAN:default:return viewport.isGeospatial?[x+coordinateOrigin[0],y+coordinateOrigin[1],z+coordinateOrigin[2]]:viewport.projectPosition([x,y,z])}}function projectPosition(position,params){const{viewport:viewport,coordinateSystem:coordinateSystem,coordinateOrigin:coordinateOrigin,modelMatrix:modelMatrix,fromCoordinateSystem:fromCoordinateSystem,fromCoordinateOrigin:fromCoordinateOrigin}=function normalizeParameters(opts){const{viewport:viewport,modelMatrix:modelMatrix,coordinateOrigin:coordinateOrigin}=opts;let{coordinateSystem:coordinateSystem,fromCoordinateSystem:fromCoordinateSystem,fromCoordinateOrigin:fromCoordinateOrigin}=opts;return coordinateSystem===_lib_constants_js__WEBPACK_IMPORTED_MODULE_2__.rf.DEFAULT&&(coordinateSystem=viewport.isGeospatial?_lib_constants_js__WEBPACK_IMPORTED_MODULE_2__.rf.LNGLAT:_lib_constants_js__WEBPACK_IMPORTED_MODULE_2__.rf.CARTESIAN),void 0===fromCoordinateSystem&&(fromCoordinateSystem=coordinateSystem),void 0===fromCoordinateOrigin&&(fromCoordinateOrigin=coordinateOrigin),{viewport:viewport,coordinateSystem:coordinateSystem,coordinateOrigin:coordinateOrigin,modelMatrix:modelMatrix,fromCoordinateSystem:fromCoordinateSystem,fromCoordinateOrigin:fromCoordinateOrigin}}(params),{autoOffset:autoOffset=!0}=params,{geospatialOrigin:geospatialOrigin=DEFAULT_COORDINATE_ORIGIN,shaderCoordinateOrigin:shaderCoordinateOrigin=DEFAULT_COORDINATE_ORIGIN,offsetMode:offsetMode=!1}=autoOffset?(0,_viewport_uniforms_js__WEBPACK_IMPORTED_MODULE_4__.o)(viewport,coordinateSystem,coordinateOrigin):{},worldPosition=getWorldPosition(position,{viewport:viewport,modelMatrix:modelMatrix,coordinateSystem:fromCoordinateSystem,coordinateOrigin:fromCoordinateOrigin,offsetMode:offsetMode});if(offsetMode){const positionCommonSpace=viewport.projectPosition(geospatialOrigin||shaderCoordinateOrigin);_math_gl_core__WEBPACK_IMPORTED_MODULE_5__.jb(worldPosition,worldPosition,positionCommonSpace)}return worldPosition}},"./node_modules/@deck.gl/core/dist/shaderlib/project/project.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return project}});const fp32={name:"fp32",vs:"#ifdef LUMA_FP32_TAN_PRECISION_WORKAROUND\nconst float TWO_PI = 6.2831854820251465;\nconst float PI_2 = 1.5707963705062866;\nconst float PI_16 = 0.1963495463132858;\nconst float SIN_TABLE_0 = 0.19509032368659973;\nconst float SIN_TABLE_1 = 0.3826834261417389;\nconst float SIN_TABLE_2 = 0.5555702447891235;\nconst float SIN_TABLE_3 = 0.7071067690849304;\nconst float COS_TABLE_0 = 0.9807852506637573;\nconst float COS_TABLE_1 = 0.9238795042037964;\nconst float COS_TABLE_2 = 0.8314695954322815;\nconst float COS_TABLE_3 = 0.7071067690849304;\nconst float INVERSE_FACTORIAL_3 = 1.666666716337204e-01;\nconst float INVERSE_FACTORIAL_5 = 8.333333767950535e-03;\nconst float INVERSE_FACTORIAL_7 = 1.9841270113829523e-04;\nconst float INVERSE_FACTORIAL_9 = 2.75573188446287533e-06;\nfloat sin_taylor_fp32(float a) {\nfloat r, s, t, x;\nif (a == 0.0) {\nreturn 0.0;\n}\nx = -a * a;\ns = a;\nr = a;\nr = r * x;\nt = r * INVERSE_FACTORIAL_3;\ns = s + t;\nr = r * x;\nt = r * INVERSE_FACTORIAL_5;\ns = s + t;\nr = r * x;\nt = r * INVERSE_FACTORIAL_7;\ns = s + t;\nr = r * x;\nt = r * INVERSE_FACTORIAL_9;\ns = s + t;\nreturn s;\n}\nvoid sincos_taylor_fp32(float a, out float sin_t, out float cos_t) {\nif (a == 0.0) {\nsin_t = 0.0;\ncos_t = 1.0;\n}\nsin_t = sin_taylor_fp32(a);\ncos_t = sqrt(1.0 - sin_t * sin_t);\n}\nfloat tan_taylor_fp32(float a) {\nfloat sin_a;\nfloat cos_a;\nif (a == 0.0) {\nreturn 0.0;\n}\nfloat z = floor(a / TWO_PI);\nfloat r = a - TWO_PI * z;\nfloat t;\nfloat q = floor(r / PI_2 + 0.5);\nint j = int(q);\nif (j < -2 || j > 2) {\nreturn 1.0 / 0.0;\n}\nt = r - PI_2 * q;\nq = floor(t / PI_16 + 0.5);\nint k = int(q);\nint abs_k = int(abs(float(k)));\nif (abs_k > 4) {\nreturn 1.0 / 0.0;\n} else {\nt = t - PI_16 * q;\n}\nfloat u = 0.0;\nfloat v = 0.0;\nfloat sin_t, cos_t;\nfloat s, c;\nsincos_taylor_fp32(t, sin_t, cos_t);\nif (k == 0) {\ns = sin_t;\nc = cos_t;\n} else {\nif (abs(float(abs_k) - 1.0) < 0.5) {\nu = COS_TABLE_0;\nv = SIN_TABLE_0;\n} else if (abs(float(abs_k) - 2.0) < 0.5) {\nu = COS_TABLE_1;\nv = SIN_TABLE_1;\n} else if (abs(float(abs_k) - 3.0) < 0.5) {\nu = COS_TABLE_2;\nv = SIN_TABLE_2;\n} else if (abs(float(abs_k) - 4.0) < 0.5) {\nu = COS_TABLE_3;\nv = SIN_TABLE_3;\n}\nif (k > 0) {\ns = u * sin_t + v * cos_t;\nc = u * cos_t - v * sin_t;\n} else {\ns = u * sin_t - v * cos_t;\nc = u * cos_t + v * sin_t;\n}\n}\nif (j == 0) {\nsin_a = s;\ncos_a = c;\n} else if (j == 1) {\nsin_a = c;\ncos_a = -s;\n} else if (j == -1) {\nsin_a = -c;\ncos_a = s;\n} else {\nsin_a = -s;\ncos_a = -c;\n}\nreturn sin_a / cos_a;\n}\n#endif\nfloat tan_fp32(float a) {\n#ifdef LUMA_FP32_TAN_PRECISION_WORKAROUND\nreturn tan_taylor_fp32(a);\n#else\nreturn tan(a);\n#endif\n}\n"},defines="#define SMOOTH_EDGE_RADIUS 0.5";var geometry={name:"geometry",vs:`\n${defines}\n\nstruct VertexGeometry {\n  vec4 position;\n  vec3 worldPosition;\n  vec3 worldPositionAlt;\n  vec3 normal;\n  vec2 uv;\n  vec3 pickingColor;\n} geometry = VertexGeometry(\n  vec4(0.0, 0.0, 1.0, 0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec2(0.0),\n  vec3(0.0)\n);\n`,fs:`\n${defines}\n\nstruct FragmentGeometry {\n  vec2 uv;\n} geometry;\n\nfloat smoothedge(float edge, float x) {\n  return smoothstep(edge - SMOOTH_EDGE_RADIUS, edge + SMOOTH_EDGE_RADIUS, x);\n}\n`},constants=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/constants.js");var project_glsl=`${Object.keys(constants.rf).map((key=>`const int COORDINATE_SYSTEM_${key} = ${constants.rf[key]};`)).join("")}\n${Object.keys(constants.Kx).map((key=>`const int PROJECTION_MODE_${key} = ${constants.Kx[key]};`)).join("")}\n${Object.keys(constants.p5).map((key=>`const int UNIT_${key.toUpperCase()} = ${constants.p5[key]};`)).join("")}\nuniform int project_uCoordinateSystem;\nuniform int project_uProjectionMode;\nuniform float project_uScale;\nuniform bool project_uWrapLongitude;\nuniform vec3 project_uCommonUnitsPerMeter;\nuniform vec3 project_uCommonUnitsPerWorldUnit;\nuniform vec3 project_uCommonUnitsPerWorldUnit2;\nuniform vec4 project_uCenter;\nuniform mat4 project_uModelMatrix;\nuniform mat4 project_uViewProjectionMatrix;\nuniform vec2 project_uViewportSize;\nuniform float project_uDevicePixelRatio;\nuniform float project_uFocalDistance;\nuniform vec3 project_uCameraPosition;\nuniform vec3 project_uCoordinateOrigin;\nuniform vec3 project_uCommonOrigin;\nuniform bool project_uPseudoMeters;\nconst float TILE_SIZE = 512.0;\nconst float PI = 3.1415926536;\nconst float WORLD_SCALE = TILE_SIZE / (PI * 2.0);\nconst vec3 ZERO_64_LOW = vec3(0.0);\nconst float EARTH_RADIUS = 6370972.0;\nconst float GLOBE_RADIUS = 256.0;\nfloat project_size_at_latitude(float lat) {\nfloat y = clamp(lat, -89.9, 89.9);\nreturn 1.0 / cos(radians(y));\n}\nfloat project_size() {\nif (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR &&\nproject_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT &&\nproject_uPseudoMeters == false) {\nif (geometry.position.w == 0.0) {\nreturn project_size_at_latitude(geometry.worldPosition.y);\n}\nfloat y = geometry.position.y / TILE_SIZE * 2.0 - 1.0;\nfloat y2 = y * y;\nfloat y4 = y2 * y2;\nfloat y6 = y4 * y2;\nreturn 1.0 + 4.9348 * y2 + 4.0587 * y4 + 1.5642 * y6;\n}\nreturn 1.0;\n}\nfloat project_size_at_latitude(float meters, float lat) {\nreturn meters * project_uCommonUnitsPerMeter.z * project_size_at_latitude(lat);\n}\nfloat project_size(float meters) {\nreturn meters * project_uCommonUnitsPerMeter.z * project_size();\n}\nvec2 project_size(vec2 meters) {\nreturn meters * project_uCommonUnitsPerMeter.xy * project_size();\n}\nvec3 project_size(vec3 meters) {\nreturn meters * project_uCommonUnitsPerMeter * project_size();\n}\nvec4 project_size(vec4 meters) {\nreturn vec4(meters.xyz * project_uCommonUnitsPerMeter, meters.w);\n}\nmat3 project_get_orientation_matrix(vec3 up) {\nvec3 uz = normalize(up);\nvec3 ux = abs(uz.z) == 1.0 ? vec3(1.0, 0.0, 0.0) : normalize(vec3(uz.y, -uz.x, 0));\nvec3 uy = cross(uz, ux);\nreturn mat3(ux, uy, uz);\n}\nbool project_needs_rotation(vec3 commonPosition, out mat3 transform) {\nif (project_uProjectionMode == PROJECTION_MODE_GLOBE) {\ntransform = project_get_orientation_matrix(commonPosition);\nreturn true;\n}\nreturn false;\n}\nvec3 project_normal(vec3 vector) {\nvec4 normal_modelspace = project_uModelMatrix * vec4(vector, 0.0);\nvec3 n = normalize(normal_modelspace.xyz * project_uCommonUnitsPerMeter);\nmat3 rotation;\nif (project_needs_rotation(geometry.position.xyz, rotation)) {\nn = rotation * n;\n}\nreturn n;\n}\nvec4 project_offset_(vec4 offset) {\nfloat dy = offset.y;\nvec3 commonUnitsPerWorldUnit = project_uCommonUnitsPerWorldUnit + project_uCommonUnitsPerWorldUnit2 * dy;\nreturn vec4(offset.xyz * commonUnitsPerWorldUnit, offset.w);\n}\nvec2 project_mercator_(vec2 lnglat) {\nfloat x = lnglat.x;\nif (project_uWrapLongitude) {\nx = mod(x + 180., 360.0) - 180.;\n}\nfloat y = clamp(lnglat.y, -89.9, 89.9);\nreturn vec2(\nradians(x) + PI,\nPI + log(tan_fp32(PI * 0.25 + radians(y) * 0.5))\n) * WORLD_SCALE;\n}\nvec3 project_globe_(vec3 lnglatz) {\nfloat lambda = radians(lnglatz.x);\nfloat phi = radians(lnglatz.y);\nfloat cosPhi = cos(phi);\nfloat D = (lnglatz.z / EARTH_RADIUS + 1.0) * GLOBE_RADIUS;\nreturn vec3(\nsin(lambda) * cosPhi,\n-cos(lambda) * cosPhi,\nsin(phi)\n) * D;\n}\nvec4 project_position(vec4 position, vec3 position64Low) {\nvec4 position_world = project_uModelMatrix * position;\nif (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR) {\nif (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\nreturn vec4(\nproject_mercator_(position_world.xy),\nproject_size_at_latitude(position_world.z, position_world.y),\nposition_world.w\n);\n}\nif (project_uCoordinateSystem == COORDINATE_SYSTEM_CARTESIAN) {\nposition_world.xyz += project_uCoordinateOrigin;\n}\n}\nif (project_uProjectionMode == PROJECTION_MODE_GLOBE) {\nif (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\nreturn vec4(\nproject_globe_(position_world.xyz),\nposition_world.w\n);\n}\n}\nif (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\nif (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\nif (abs(position_world.y - project_uCoordinateOrigin.y) > 0.25) {\nreturn vec4(\nproject_mercator_(position_world.xy) - project_uCommonOrigin.xy,\nproject_size(position_world.z),\nposition_world.w\n);\n}\n}\n}\nif (project_uProjectionMode == PROJECTION_MODE_IDENTITY ||\n(project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET &&\n(project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\nproject_uCoordinateSystem == COORDINATE_SYSTEM_CARTESIAN))) {\nposition_world.xyz -= project_uCoordinateOrigin;\n}\nreturn project_offset_(position_world) + project_offset_(project_uModelMatrix * vec4(position64Low, 0.0));\n}\nvec4 project_position(vec4 position) {\nreturn project_position(position, ZERO_64_LOW);\n}\nvec3 project_position(vec3 position, vec3 position64Low) {\nvec4 projected_position = project_position(vec4(position, 1.0), position64Low);\nreturn projected_position.xyz;\n}\nvec3 project_position(vec3 position) {\nvec4 projected_position = project_position(vec4(position, 1.0), ZERO_64_LOW);\nreturn projected_position.xyz;\n}\nvec2 project_position(vec2 position) {\nvec4 projected_position = project_position(vec4(position, 0.0, 1.0), ZERO_64_LOW);\nreturn projected_position.xy;\n}\nvec4 project_common_position_to_clipspace(vec4 position, mat4 viewProjectionMatrix, vec4 center) {\nreturn viewProjectionMatrix * position + center;\n}\nvec4 project_common_position_to_clipspace(vec4 position) {\nreturn project_common_position_to_clipspace(position, project_uViewProjectionMatrix, project_uCenter);\n}\nvec2 project_pixel_size_to_clipspace(vec2 pixels) {\nvec2 offset = pixels / project_uViewportSize * project_uDevicePixelRatio * 2.0;\nreturn offset * project_uFocalDistance;\n}\nfloat project_size_to_pixel(float meters) {\nreturn project_size(meters) * project_uScale;\n}\nfloat project_size_to_pixel(float size, int unit) {\nif (unit == UNIT_METERS) return project_size_to_pixel(size);\nif (unit == UNIT_COMMON) return size * project_uScale;\nreturn size;\n}\nfloat project_pixel_size(float pixels) {\nreturn pixels / project_uScale;\n}\nvec2 project_pixel_size(vec2 pixels) {\nreturn pixels / project_uScale;\n}\n`,viewport_uniforms=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/project/viewport-uniforms.js");const INITIAL_MODULE_OPTIONS={};var project={name:"project",dependencies:[fp32,geometry],vs:project_glsl,getUniforms:function getUniforms(opts=INITIAL_MODULE_OPTIONS){return"viewport"in opts?(0,viewport_uniforms.a)(opts):{}}}},"./node_modules/@deck.gl/core/dist/shaderlib/project/viewport-uniforms.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{a:function(){return getUniformsFromViewport},o:function(){return getOffsetOrigin}});var _math_gl_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec4.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/mat4.js"),_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/constants.js"),_utils_memoize_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/memoize.js");const ZERO_VECTOR=[0,0,0,0],VECTOR_TO_POINT_MATRIX=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0],IDENTITY_MATRIX=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],DEFAULT_PIXELS_PER_UNIT2=[0,0,0],DEFAULT_COORDINATE_ORIGIN=[0,0,0],getMemoizedViewportUniforms=(0,_utils_memoize_js__WEBPACK_IMPORTED_MODULE_0__.A)((function calculateViewportUniforms({viewport:viewport,devicePixelRatio:devicePixelRatio,coordinateSystem:coordinateSystem,coordinateOrigin:coordinateOrigin}){const{projectionCenter:projectionCenter,viewProjectionMatrix:viewProjectionMatrix,originCommon:originCommon,cameraPosCommon:cameraPosCommon,shaderCoordinateOrigin:shaderCoordinateOrigin,geospatialOrigin:geospatialOrigin}=function calculateMatrixAndOffset(viewport,coordinateSystem,coordinateOrigin){const{viewMatrixUncentered:viewMatrixUncentered,projectionMatrix:projectionMatrix}=viewport;let{viewMatrix:viewMatrix,viewProjectionMatrix:viewProjectionMatrix}=viewport,projectionCenter=ZERO_VECTOR,originCommon=ZERO_VECTOR,cameraPosCommon=viewport.cameraPosition;const{geospatialOrigin:geospatialOrigin,shaderCoordinateOrigin:shaderCoordinateOrigin,offsetMode:offsetMode}=getOffsetOrigin(viewport,coordinateSystem,coordinateOrigin);offsetMode&&(originCommon=viewport.projectPosition(geospatialOrigin||shaderCoordinateOrigin),cameraPosCommon=[cameraPosCommon[0]-originCommon[0],cameraPosCommon[1]-originCommon[1],cameraPosCommon[2]-originCommon[2]],originCommon[3]=1,projectionCenter=_math_gl_core__WEBPACK_IMPORTED_MODULE_2__.Z0([],originCommon,viewProjectionMatrix),viewMatrix=viewMatrixUncentered||viewMatrix,viewProjectionMatrix=_math_gl_core__WEBPACK_IMPORTED_MODULE_3__.lw([],projectionMatrix,viewMatrix),viewProjectionMatrix=_math_gl_core__WEBPACK_IMPORTED_MODULE_3__.lw([],viewProjectionMatrix,VECTOR_TO_POINT_MATRIX));return{viewMatrix:viewMatrix,viewProjectionMatrix:viewProjectionMatrix,projectionCenter:projectionCenter,originCommon:originCommon,cameraPosCommon:cameraPosCommon,shaderCoordinateOrigin:shaderCoordinateOrigin,geospatialOrigin:geospatialOrigin}}(viewport,coordinateSystem,coordinateOrigin),distanceScales=viewport.getDistanceScales(),viewportSize=[viewport.width*devicePixelRatio,viewport.height*devicePixelRatio],focalDistance=_math_gl_core__WEBPACK_IMPORTED_MODULE_2__.Z0([],[0,0,-viewport.focalDistance,1],viewport.projectionMatrix)[3]||1,uniforms={project_uCoordinateSystem:coordinateSystem,project_uProjectionMode:viewport.projectionMode,project_uCoordinateOrigin:shaderCoordinateOrigin,project_uCommonOrigin:originCommon.slice(0,3),project_uCenter:projectionCenter,project_uPseudoMeters:Boolean(viewport._pseudoMeters),project_uViewportSize:viewportSize,project_uDevicePixelRatio:devicePixelRatio,project_uFocalDistance:focalDistance,project_uCommonUnitsPerMeter:distanceScales.unitsPerMeter,project_uCommonUnitsPerWorldUnit:distanceScales.unitsPerMeter,project_uCommonUnitsPerWorldUnit2:DEFAULT_PIXELS_PER_UNIT2,project_uScale:viewport.scale,project_uWrapLongitude:!1,project_uViewProjectionMatrix:viewProjectionMatrix,project_uModelMatrix:IDENTITY_MATRIX,project_uCameraPosition:cameraPosCommon};if(geospatialOrigin){const distanceScalesAtOrigin=viewport.getDistanceScales(geospatialOrigin);switch(coordinateSystem){case _lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.METER_OFFSETS:uniforms.project_uCommonUnitsPerWorldUnit=distanceScalesAtOrigin.unitsPerMeter,uniforms.project_uCommonUnitsPerWorldUnit2=distanceScalesAtOrigin.unitsPerMeter2;break;case _lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.LNGLAT:case _lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.LNGLAT_OFFSETS:viewport._pseudoMeters||(uniforms.project_uCommonUnitsPerMeter=distanceScalesAtOrigin.unitsPerMeter),uniforms.project_uCommonUnitsPerWorldUnit=distanceScalesAtOrigin.unitsPerDegree,uniforms.project_uCommonUnitsPerWorldUnit2=distanceScalesAtOrigin.unitsPerDegree2;break;case _lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.CARTESIAN:uniforms.project_uCommonUnitsPerWorldUnit=[1,1,distanceScalesAtOrigin.unitsPerMeter[2]],uniforms.project_uCommonUnitsPerWorldUnit2=[0,0,distanceScalesAtOrigin.unitsPerMeter2[2]]}}return uniforms}));function getOffsetOrigin(viewport,coordinateSystem,coordinateOrigin=DEFAULT_COORDINATE_ORIGIN){coordinateOrigin.length<3&&(coordinateOrigin=[coordinateOrigin[0],coordinateOrigin[1],0]);let geospatialOrigin,shaderCoordinateOrigin=coordinateOrigin,offsetMode=!0;switch(geospatialOrigin=coordinateSystem===_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.LNGLAT_OFFSETS||coordinateSystem===_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.METER_OFFSETS?coordinateOrigin:viewport.isGeospatial?[Math.fround(viewport.longitude),Math.fround(viewport.latitude),0]:null,viewport.projectionMode){case _lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.Kx.WEB_MERCATOR:coordinateSystem!==_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.LNGLAT&&coordinateSystem!==_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.CARTESIAN||(geospatialOrigin=[0,0,0],offsetMode=!1);break;case _lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.Kx.WEB_MERCATOR_AUTO_OFFSET:coordinateSystem===_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.LNGLAT?shaderCoordinateOrigin=geospatialOrigin:coordinateSystem===_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.CARTESIAN&&(shaderCoordinateOrigin=[Math.fround(viewport.center[0]),Math.fround(viewport.center[1]),0],geospatialOrigin=viewport.unprojectPosition(shaderCoordinateOrigin),shaderCoordinateOrigin[0]-=coordinateOrigin[0],shaderCoordinateOrigin[1]-=coordinateOrigin[1],shaderCoordinateOrigin[2]-=coordinateOrigin[2]);break;case _lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.Kx.IDENTITY:shaderCoordinateOrigin=viewport.position.map(Math.fround),shaderCoordinateOrigin[2]=shaderCoordinateOrigin[2]||0;break;case _lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.Kx.GLOBE:offsetMode=!1,geospatialOrigin=null;break;default:offsetMode=!1}return{geospatialOrigin:geospatialOrigin,shaderCoordinateOrigin:shaderCoordinateOrigin,offsetMode:offsetMode}}function getUniformsFromViewport({viewport:viewport,devicePixelRatio:devicePixelRatio=1,modelMatrix:modelMatrix=null,coordinateSystem:coordinateSystem=_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.DEFAULT,coordinateOrigin:coordinateOrigin=DEFAULT_COORDINATE_ORIGIN,autoWrapLongitude:autoWrapLongitude=!1}){coordinateSystem===_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.DEFAULT&&(coordinateSystem=viewport.isGeospatial?_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.LNGLAT:_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.CARTESIAN);const uniforms=getMemoizedViewportUniforms({viewport:viewport,devicePixelRatio:devicePixelRatio,coordinateSystem:coordinateSystem,coordinateOrigin:coordinateOrigin});return uniforms.project_uWrapLongitude=autoWrapLongitude,uniforms.project_uModelMatrix=modelMatrix||IDENTITY_MATRIX,uniforms}},"./node_modules/@deck.gl/core/dist/shaderlib/project32/project32.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var _project_project_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/project/project.js");__webpack_exports__.A={name:"project32",dependencies:[_project_project_js__WEBPACK_IMPORTED_MODULE_0__.A],vs:"\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset, out vec4 commonPosition\n) {\n  vec3 projectedPosition = project_position(position, position64Low);\n  mat3 rotation;\n  if (project_needs_rotation(projectedPosition, rotation)) {\n    // offset is specified as ENU\n    // when in globe projection, rotate offset so that the ground alighs with the surface of the globe\n    offset = rotation * offset;\n  }\n  commonPosition = vec4(projectedPosition + offset, 1.0);\n  return project_common_position_to_clipspace(commonPosition);\n}\n\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset\n) {\n  vec4 commonPosition;\n  return project_position_to_clipspace(position, position64Low, offset, commonPosition);\n}\n"}},"./node_modules/@deck.gl/core/dist/transitions/linear-interpolator.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return LinearInterpolator}});var common=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js"),assert=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/assert.js");class TransitionInterpolator{constructor(opts){const{compare:compare,extract:extract,required:required}=opts;this._propsToCompare=compare,this._propsToExtract=extract||compare,this._requiredProps=required}arePropsEqual(currentProps,nextProps){for(const key of this._propsToCompare)if(!(key in currentProps)||!(key in nextProps)||!(0,common.aI)(currentProps[key],nextProps[key]))return!1;return!0}initializeProps(startProps,endProps){const startViewStateProps={},endViewStateProps={};for(const key of this._propsToExtract)(key in startProps||key in endProps)&&(startViewStateProps[key]=startProps[key],endViewStateProps[key]=endProps[key]);return this._checkRequiredProps(startViewStateProps),this._checkRequiredProps(endViewStateProps),{start:startViewStateProps,end:endViewStateProps}}getDuration(startProps,endProps){return endProps.transitionDuration}_checkRequiredProps(props){this._requiredProps&&this._requiredProps.forEach((propName=>{const value=props[propName];(0,assert.A)(Number.isFinite(value)||Array.isArray(value),`${propName} is required for transition`)}))}}const DEFAULT_PROPS=["longitude","latitude","zoom","bearing","pitch"],DEFAULT_REQUIRED_PROPS=["longitude","latitude","zoom"];class LinearInterpolator extends TransitionInterpolator{constructor(opts={}){const transitionProps=Array.isArray(opts)?opts:opts.transitionProps,normalizedOpts=Array.isArray(opts)?{}:opts;normalizedOpts.transitionProps=Array.isArray(transitionProps)?{compare:transitionProps,required:transitionProps}:transitionProps||{compare:DEFAULT_PROPS,required:DEFAULT_REQUIRED_PROPS},super(normalizedOpts.transitionProps),this.opts=normalizedOpts}initializeProps(startProps,endProps){const result=super.initializeProps(startProps,endProps),{makeViewport:makeViewport,around:around}=this.opts;if(makeViewport&&around){const startViewport=makeViewport(startProps),endViewport=makeViewport(endProps),aroundPosition=startViewport.unproject(around);result.start.around=around,Object.assign(result.end,{around:endViewport.project(aroundPosition),aroundPosition:aroundPosition,width:endProps.width,height:endProps.height})}return result}interpolateProps(startProps,endProps,t){const propsInTransition={};for(const key of this._propsToExtract)propsInTransition[key]=(0,common.Cc)(startProps[key]||0,endProps[key]||0,t);if(endProps.aroundPosition&&this.opts.makeViewport){const viewport=this.opts.makeViewport({...endProps,...propsInTransition});Object.assign(propsInTransition,viewport.panByPosition(endProps.aroundPosition,(0,common.Cc)(startProps.around,endProps.around,t)))}return propsInTransition}}},"./node_modules/@deck.gl/core/dist/transitions/transition.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return Transition}});class Transition{constructor(timeline){this._inProgress=!1,this._handle=null,this.time=0,this.settings={duration:0},this._timeline=timeline}get inProgress(){return this._inProgress}start(settings){this.cancel(),this.settings=settings,this._inProgress=!0,this.settings.onStart?.(this)}end(){this._inProgress&&(this._timeline.removeChannel(this._handle),this._handle=null,this._inProgress=!1,this.settings.onEnd?.(this))}cancel(){this._inProgress&&(this.settings.onInterrupt?.(this),this._timeline.removeChannel(this._handle),this._handle=null,this._inProgress=!1)}update(){if(!this._inProgress)return!1;if(null===this._handle){const{_timeline:timeline,settings:settings}=this;this._handle=timeline.addChannel({delay:timeline.getTime(),duration:settings.duration})}return this.time=this._timeline.getTime(this._handle),this._onUpdate(),this.settings.onUpdate?.(this),this._timeline.isFinished(this._handle)&&this.end(),!0}_onUpdate(){}}},"./node_modules/@deck.gl/core/dist/utils/assert.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function assert(condition,message){if(!condition)throw new Error(message||"deck.gl: assertion failed.")}__webpack_require__.d(__webpack_exports__,{A:function(){return assert}})},"./node_modules/@deck.gl/core/dist/utils/deep-equal.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function deepEqual(a,b,depth){if(a===b)return!0;if(!depth||!a||!b)return!1;if(Array.isArray(a)){if(!Array.isArray(b)||a.length!==b.length)return!1;for(let i=0;i<a.length;i++)if(!deepEqual(a[i],b[i],depth-1))return!1;return!0}if(Array.isArray(b))return!1;if("object"==typeof a&&"object"==typeof b){const aKeys=Object.keys(a),bKeys=Object.keys(b);if(aKeys.length!==bKeys.length)return!1;for(const key of aKeys){if(!b.hasOwnProperty(key))return!1;if(!deepEqual(a[key],b[key],depth-1))return!1}return!0}return!1}__webpack_require__.d(__webpack_exports__,{b:function(){return deepEqual}})},"./node_modules/@deck.gl/core/dist/utils/flatten.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function flatten(array,filter=(()=>!0)){return Array.isArray(array)?flattenArray(array,filter,[]):filter(array)?[array]:[]}function flattenArray(array,filter,result){let index=-1;for(;++index<array.length;){const value=array[index];Array.isArray(value)?flattenArray(value,filter,result):filter(value)&&result.push(value)}return result}function fillArray({target:target,source:source,start:start=0,count:count=1}){const length=source.length,total=count*length;let copied=0;for(let i=start;copied<length;copied++)target[i++]=source[copied];for(;copied<total;)copied<total-copied?(target.copyWithin(start+copied,start,start+copied),copied*=2):(target.copyWithin(start+copied,start,start+total-copied),copied=total);return target}__webpack_require__.d(__webpack_exports__,{B:function(){return flatten},R:function(){return fillArray}})},"./node_modules/@deck.gl/core/dist/utils/iterable-utils.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{I:function(){return getAccessorFromBuffer},Td:function(){return isAsyncIterable},X:function(){return createIterable}});const EMPTY_ARRAY=[],placeholderArray=[];function createIterable(data,startRow=0,endRow=1/0){let iterable=EMPTY_ARRAY;const objectInfo={index:-1,data:data,target:[]};return data?"function"==typeof data[Symbol.iterator]?iterable=data:data.length>0&&(placeholderArray.length=data.length,iterable=placeholderArray):iterable=EMPTY_ARRAY,(startRow>0||Number.isFinite(endRow))&&(iterable=(Array.isArray(iterable)?iterable:Array.from(iterable)).slice(startRow,endRow),objectInfo.index=startRow-1),{iterable:iterable,objectInfo:objectInfo}}function isAsyncIterable(data){return data&&data[Symbol.asyncIterator]}function getAccessorFromBuffer(typedArray,options){const{size:size,stride:stride,offset:offset,startIndices:startIndices,nested:nested}=options,bytesPerElement=typedArray.BYTES_PER_ELEMENT,elementStride=stride?stride/bytesPerElement:size,elementOffset=offset?offset/bytesPerElement:0,vertexCount=Math.floor((typedArray.length-elementOffset)/elementStride);return(_,{index:index,target:target})=>{if(!startIndices){const sourceIndex=index*elementStride+elementOffset;for(let j=0;j<size;j++)target[j]=typedArray[sourceIndex+j];return target}const startIndex=startIndices[index],endIndex=startIndices[index+1]||vertexCount;let result;if(nested){result=new Array(endIndex-startIndex);for(let i=startIndex;i<endIndex;i++){const sourceIndex=i*elementStride+elementOffset;target=new Array(size);for(let j=0;j<size;j++)target[j]=typedArray[sourceIndex+j];result[i-startIndex]=target}}else if(elementStride===size)result=typedArray.subarray(startIndex*size+elementOffset,endIndex*size+elementOffset);else{result=new typedArray.constructor((endIndex-startIndex)*size);let targetIndex=0;for(let i=startIndex;i<endIndex;i++){const sourceIndex=i*elementStride+elementOffset;for(let j=0;j<size;j++)result[targetIndex++]=typedArray[sourceIndex+j]}}return result}}},"./node_modules/@deck.gl/core/dist/utils/log.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";const defaultLogger=new(__webpack_require__("./node_modules/@probe.gl/log/dist/log.js").t)({id:"deck"});__webpack_exports__.A=defaultLogger},"./node_modules/@deck.gl/core/dist/utils/math-utils.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{$M:function(){return createMat4},Vl:function(){return getCameraPosition},_Z:function(){return mergeBounds},cT:function(){return toDoublePrecisionArray},on:function(){return getFrustumPlanes},qk:function(){return fp64LowPart},zi:function(){return mod}});var _typed_array_manager_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/typed-array-manager.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/classes/vector3.js");function createMat4(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}function mod(value,divisor){const modulus=value%divisor;return modulus<0?divisor+modulus:modulus}function getCameraPosition(viewMatrixInverse){return[viewMatrixInverse[12],viewMatrixInverse[13],viewMatrixInverse[14]]}function getFrustumPlanes(viewProjectionMatrix){return{left:getFrustumPlane(viewProjectionMatrix[3]+viewProjectionMatrix[0],viewProjectionMatrix[7]+viewProjectionMatrix[4],viewProjectionMatrix[11]+viewProjectionMatrix[8],viewProjectionMatrix[15]+viewProjectionMatrix[12]),right:getFrustumPlane(viewProjectionMatrix[3]-viewProjectionMatrix[0],viewProjectionMatrix[7]-viewProjectionMatrix[4],viewProjectionMatrix[11]-viewProjectionMatrix[8],viewProjectionMatrix[15]-viewProjectionMatrix[12]),bottom:getFrustumPlane(viewProjectionMatrix[3]+viewProjectionMatrix[1],viewProjectionMatrix[7]+viewProjectionMatrix[5],viewProjectionMatrix[11]+viewProjectionMatrix[9],viewProjectionMatrix[15]+viewProjectionMatrix[13]),top:getFrustumPlane(viewProjectionMatrix[3]-viewProjectionMatrix[1],viewProjectionMatrix[7]-viewProjectionMatrix[5],viewProjectionMatrix[11]-viewProjectionMatrix[9],viewProjectionMatrix[15]-viewProjectionMatrix[13]),near:getFrustumPlane(viewProjectionMatrix[3]+viewProjectionMatrix[2],viewProjectionMatrix[7]+viewProjectionMatrix[6],viewProjectionMatrix[11]+viewProjectionMatrix[10],viewProjectionMatrix[15]+viewProjectionMatrix[14]),far:getFrustumPlane(viewProjectionMatrix[3]-viewProjectionMatrix[2],viewProjectionMatrix[7]-viewProjectionMatrix[6],viewProjectionMatrix[11]-viewProjectionMatrix[10],viewProjectionMatrix[15]-viewProjectionMatrix[14])}}const scratchVector=new _math_gl_core__WEBPACK_IMPORTED_MODULE_0__.P;function getFrustumPlane(a,b,c,d){scratchVector.set(a,b,c);const L=scratchVector.len();return{distance:d/L,normal:new _math_gl_core__WEBPACK_IMPORTED_MODULE_0__.P(-a/L,-b/L,-c/L)}}function fp64LowPart(x){return x-Math.fround(x)}let scratchArray;function toDoublePrecisionArray(typedArray,options){const{size:size=1,startIndex:startIndex=0}=options,endIndex=void 0!==options.endIndex?options.endIndex:typedArray.length,count=(endIndex-startIndex)/size;scratchArray=_typed_array_manager_js__WEBPACK_IMPORTED_MODULE_1__.A.allocate(scratchArray,count,{type:Float32Array,size:2*size});let sourceIndex=startIndex,targetIndex=0;for(;sourceIndex<endIndex;){for(let j=0;j<size;j++){const value=typedArray[sourceIndex++];scratchArray[targetIndex+j]=value,scratchArray[targetIndex+j+size]=fp64LowPart(value)}targetIndex+=2*size}return scratchArray.subarray(0,count*size*2)}function mergeBounds(boundsList){let mergedBounds=null,isMerged=!1;for(const bounds of boundsList)bounds&&(mergedBounds?(isMerged||(mergedBounds=[[mergedBounds[0][0],mergedBounds[0][1]],[mergedBounds[1][0],mergedBounds[1][1]]],isMerged=!0),mergedBounds[0][0]=Math.min(mergedBounds[0][0],bounds[0][0]),mergedBounds[0][1]=Math.min(mergedBounds[0][1],bounds[0][1]),mergedBounds[1][0]=Math.max(mergedBounds[1][0],bounds[1][0]),mergedBounds[1][1]=Math.max(mergedBounds[1][1],bounds[1][1])):mergedBounds=bounds);return mergedBounds}},"./node_modules/@deck.gl/core/dist/utils/memoize.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function isEqual(a,b){if(a===b)return!0;if(Array.isArray(a)){const len=a.length;if(!b||b.length!==len)return!1;for(let i=0;i<len;i++)if(a[i]!==b[i])return!1;return!0}return!1}function memoize(compute){let cachedResult,cachedArgs={};return args=>{for(const key in args)if(!isEqual(args[key],cachedArgs[key])){cachedResult=compute(args),cachedArgs=args;break}return cachedResult}}__webpack_require__.d(__webpack_exports__,{A:function(){return memoize}})},"./node_modules/@deck.gl/core/dist/utils/shader.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function mergeShaders(target,source){if(!source)return target;const result={...target,...source};if("defines"in source&&(result.defines={...target.defines,...source.defines}),"modules"in source&&(result.modules=(target.modules||[]).concat(source.modules),source.modules.some((module=>"project64"===module.name)))){const index=result.modules.findIndex((module=>"project32"===module.name));index>=0&&result.modules.splice(index,1)}if("inject"in source)if(target.inject){const mergedInjection={...target.inject};for(const key in source.inject)mergedInjection[key]=(mergedInjection[key]||"")+source.inject[key];result.inject=mergedInjection}else result.inject=source.inject;return result}__webpack_require__.d(__webpack_exports__,{n:function(){return mergeShaders}})},"./node_modules/@deck.gl/core/dist/utils/typed-array-manager.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_exports__.A=new class TypedArrayManager{constructor(options={}){this._pool=[],this.opts={overAlloc:2,poolSize:100},this.setOptions(options)}setOptions(options){Object.assign(this.opts,options)}allocate(typedArray,count,{size:size=1,type:type,padding:padding=0,copy:copy=!1,initialize:initialize=!1,maxCount:maxCount}){const Type=type||typedArray&&typedArray.constructor||Float32Array,newSize=count*size+padding;if(ArrayBuffer.isView(typedArray)){if(newSize<=typedArray.length)return typedArray;if(newSize*typedArray.BYTES_PER_ELEMENT<=typedArray.buffer.byteLength)return new Type(typedArray.buffer,0,newSize)}let maxSize=1/0;maxCount&&(maxSize=maxCount*size+padding);const newArray=this._allocate(Type,newSize,initialize,maxSize);return typedArray&&copy?newArray.set(typedArray):initialize||newArray.fill(0,0,4),this._release(typedArray),newArray}release(typedArray){this._release(typedArray)}_allocate(Type,size,initialize,maxSize){let sizeToAllocate=Math.max(Math.ceil(size*this.opts.overAlloc),1);sizeToAllocate>maxSize&&(sizeToAllocate=maxSize);const pool=this._pool,byteLength=Type.BYTES_PER_ELEMENT*sizeToAllocate,i=pool.findIndex((b=>b.byteLength>=byteLength));if(i>=0){const array=new Type(pool.splice(i,1)[0],0,sizeToAllocate);return initialize&&array.fill(0),array}return new Type(sizeToAllocate)}_release(typedArray){if(!ArrayBuffer.isView(typedArray))return;const pool=this._pool,{buffer:buffer}=typedArray,{byteLength:byteLength}=buffer,i=pool.findIndex((b=>b.byteLength>=byteLength));i<0?pool.push(buffer):(i>0||pool.length<this.opts.poolSize)&&pool.splice(i,0,buffer),pool.length>this.opts.poolSize&&pool.shift()}}},"./node_modules/@deck.gl/core/dist/viewports/orthographic-viewport.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return OrthographicViewport}});var _viewports_viewport_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@deck.gl/core/dist/viewports/viewport.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@math.gl/core/dist/classes/matrix4.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec2.js"),_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/web-mercator/dist/index.js");const viewMatrix=(new _math_gl_core__WEBPACK_IMPORTED_MODULE_1__.k).lookAt({eye:[0,0,1]});function getProjectionMatrix({width:width,height:height,near:near,far:far,padding:padding}){let left=-width/2,right=width/2,bottom=-height/2,top=height/2;if(padding){const{left:l=0,right:r=0,top:t=0,bottom:b=0}=padding,offsetX=(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_2__.qE)((l+width-r)/2,0,width)-width/2,offsetY=(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_2__.qE)((t+height-b)/2,0,height)-height/2;left-=offsetX,right-=offsetX,bottom+=offsetY,top+=offsetY}return(new _math_gl_core__WEBPACK_IMPORTED_MODULE_1__.k).ortho({left:left,right:right,bottom:bottom,top:top,near:near,far:far})}class OrthographicViewport extends _viewports_viewport_js__WEBPACK_IMPORTED_MODULE_3__.A{constructor(props){const{width:width,height:height,near:near=.1,far:far=1e3,zoom:zoom=0,target:target=[0,0,0],padding:padding=null,flipY:flipY=!0}=props,zoomX=Array.isArray(zoom)?zoom[0]:zoom,zoomY=Array.isArray(zoom)?zoom[1]:zoom,zoom_=Math.min(zoomX,zoomY),scale=Math.pow(2,zoom_);let distanceScales;if(zoomX!==zoomY){const scaleX=Math.pow(2,zoomX),scaleY=Math.pow(2,zoomY);distanceScales={unitsPerMeter:[scaleX/scale,scaleY/scale,1],metersPerUnit:[scale/scaleX,scale/scaleY,1]}}super({...props,longitude:void 0,position:target,viewMatrix:viewMatrix.clone().scale([scale,scale*(flipY?-1:1),scale]),projectionMatrix:getProjectionMatrix({width:width||1,height:height||1,padding:padding,near:near,far:far}),zoom:zoom_,distanceScales:distanceScales})}projectFlat([X,Y]){const{unitsPerMeter:unitsPerMeter}=this.distanceScales;return[X*unitsPerMeter[0],Y*unitsPerMeter[1]]}unprojectFlat([x,y]){const{metersPerUnit:metersPerUnit}=this.distanceScales;return[x*metersPerUnit[0],y*metersPerUnit[1]]}panByPosition(coords,pixel){const fromLocation=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.xJ)(pixel,this.pixelUnprojectionMatrix),toLocation=this.projectFlat(coords),translate=_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.WQ([],toLocation,_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.ze([],fromLocation)),newCenter=_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.WQ([],this.center,translate);return{target:this.unprojectFlat(newCenter)}}}},"./node_modules/@deck.gl/core/dist/viewports/viewport.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return Viewport}});var _utils_log_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/log.js"),_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/math-utils.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@math.gl/core/dist/classes/matrix4.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@math.gl/core/dist/classes/vector3.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/mat4.js"),_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/web-mercator/dist/index.js"),_lib_constants_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/constants.js");const DEGREES_TO_RADIANS=Math.PI/180,IDENTITY=(0,_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.$M)(),ZERO_VECTOR=[0,0,0],DEFAULT_DISTANCE_SCALES={unitsPerMeter:[1,1,1],metersPerUnit:[1,1,1]};class Viewport{static{this.displayName="Viewport"}constructor(opts={}){this._frustumPlanes={},this.id=opts.id||this.constructor.displayName||"viewport",this.x=opts.x||0,this.y=opts.y||0,this.width=opts.width||1,this.height=opts.height||1,this.zoom=opts.zoom||0,this.padding=opts.padding,this.distanceScales=opts.distanceScales||DEFAULT_DISTANCE_SCALES,this.focalDistance=opts.focalDistance||1,this.position=opts.position||ZERO_VECTOR,this.modelMatrix=opts.modelMatrix||null;const{longitude:longitude,latitude:latitude}=opts;this.isGeospatial=Number.isFinite(latitude)&&Number.isFinite(longitude),this._initProps(opts),this._initMatrices(opts),this.equals=this.equals.bind(this),this.project=this.project.bind(this),this.unproject=this.unproject.bind(this),this.projectPosition=this.projectPosition.bind(this),this.unprojectPosition=this.unprojectPosition.bind(this),this.projectFlat=this.projectFlat.bind(this),this.unprojectFlat=this.unprojectFlat.bind(this)}get subViewports(){return null}get metersPerPixel(){return this.distanceScales.metersPerUnit[2]/this.scale}get projectionMode(){return this.isGeospatial?this.zoom<12?_lib_constants_js__WEBPACK_IMPORTED_MODULE_4__.Kx.WEB_MERCATOR:_lib_constants_js__WEBPACK_IMPORTED_MODULE_4__.Kx.WEB_MERCATOR_AUTO_OFFSET:_lib_constants_js__WEBPACK_IMPORTED_MODULE_4__.Kx.IDENTITY}equals(viewport){return viewport instanceof Viewport&&(this===viewport||viewport.width===this.width&&viewport.height===this.height&&viewport.scale===this.scale&&(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_3__.aI)(viewport.projectionMatrix,this.projectionMatrix)&&(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_3__.aI)(viewport.viewMatrix,this.viewMatrix))}project(xyz,{topLeft:topLeft=!0}={}){const worldPosition=this.projectPosition(xyz),coord=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.VJ)(worldPosition,this.pixelProjectionMatrix),[x,y]=coord,y2=topLeft?y:this.height-y;return 2===xyz.length?[x,y2]:[x,y2,coord[2]]}unproject(xyz,{topLeft:topLeft=!0,targetZ:targetZ}={}){const[x,y,z]=xyz,y2=topLeft?y:this.height-y,targetZWorld=targetZ&&targetZ*this.distanceScales.unitsPerMeter[2],coord=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.xJ)([x,y2,z],this.pixelUnprojectionMatrix,targetZWorld),[X,Y,Z]=this.unprojectPosition(coord);return Number.isFinite(z)?[X,Y,Z]:Number.isFinite(targetZ)?[X,Y,targetZ]:[X,Y]}projectPosition(xyz){const[X,Y]=this.projectFlat(xyz);return[X,Y,(xyz[2]||0)*this.distanceScales.unitsPerMeter[2]]}unprojectPosition(xyz){const[X,Y]=this.unprojectFlat(xyz);return[X,Y,(xyz[2]||0)*this.distanceScales.metersPerUnit[2]]}projectFlat(xyz){if(this.isGeospatial){const result=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.Gw)(xyz);return result[1]=(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_3__.qE)(result[1],-318,830),result}return xyz}unprojectFlat(xyz){return this.isGeospatial?(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.iV)(xyz):xyz}getBounds(options={}){const unprojectOption={targetZ:options.z||0},topLeft=this.unproject([0,0],unprojectOption),topRight=this.unproject([this.width,0],unprojectOption),bottomLeft=this.unproject([0,this.height],unprojectOption),bottomRight=this.unproject([this.width,this.height],unprojectOption);return[Math.min(topLeft[0],topRight[0],bottomLeft[0],bottomRight[0]),Math.min(topLeft[1],topRight[1],bottomLeft[1],bottomRight[1]),Math.max(topLeft[0],topRight[0],bottomLeft[0],bottomRight[0]),Math.max(topLeft[1],topRight[1],bottomLeft[1],bottomRight[1])]}getDistanceScales(coordinateOrigin){return coordinateOrigin?(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.nI)({longitude:coordinateOrigin[0],latitude:coordinateOrigin[1],highPrecision:!0}):this.distanceScales}containsPixel({x:x,y:y,width:width=1,height:height=1}){return x<this.x+this.width&&this.x<x+width&&y<this.y+this.height&&this.y<y+height}getFrustumPlanes(){return this._frustumPlanes.near||Object.assign(this._frustumPlanes,(0,_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.on)(this.viewProjectionMatrix)),this._frustumPlanes}panByPosition(coords,pixel){return null}_initProps(opts){const longitude=opts.longitude,latitude=opts.latitude;this.isGeospatial&&(Number.isFinite(opts.zoom)||(this.zoom=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.fO)({latitude:latitude})+Math.log2(this.focalDistance)),this.distanceScales=opts.distanceScales||(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.nI)({latitude:latitude,longitude:longitude}));const scale=Math.pow(2,this.zoom);this.scale=scale;const{position:position,modelMatrix:modelMatrix}=opts;let meterOffset=ZERO_VECTOR;if(position&&(meterOffset=modelMatrix?new _math_gl_core__WEBPACK_IMPORTED_MODULE_2__.k(modelMatrix).transformAsVector(position,[]):position),this.isGeospatial){const center=this.projectPosition([longitude,latitude,0]);this.center=new _math_gl_core__WEBPACK_IMPORTED_MODULE_5__.P(meterOffset).scale(this.distanceScales.unitsPerMeter).add(center)}else this.center=this.projectPosition(meterOffset)}_initMatrices(opts){const{viewMatrix:viewMatrix=IDENTITY,projectionMatrix:projectionMatrix=null,orthographic:orthographic=!1,fovyRadians:fovyRadians,fovy:fovy=75,near:near=.1,far:far=1e3,padding:padding=null,focalDistance:focalDistance=1}=opts;this.viewMatrixUncentered=viewMatrix,this.viewMatrix=(new _math_gl_core__WEBPACK_IMPORTED_MODULE_2__.k).multiplyRight(viewMatrix).translate(new _math_gl_core__WEBPACK_IMPORTED_MODULE_5__.P(this.center).negate()),this.projectionMatrix=projectionMatrix||function createProjectionMatrix({width:width,height:height,orthographic:orthographic,fovyRadians:fovyRadians,focalDistance:focalDistance,padding:padding,near:near,far:far}){const aspect=width/height,matrix=orthographic?(new _math_gl_core__WEBPACK_IMPORTED_MODULE_2__.k).orthographic({fovy:fovyRadians,aspect:aspect,focalDistance:focalDistance,near:near,far:far}):(new _math_gl_core__WEBPACK_IMPORTED_MODULE_2__.k).perspective({fovy:fovyRadians,aspect:aspect,near:near,far:far});if(padding){const{left:left=0,right:right=0,top:top=0,bottom:bottom=0}=padding,offsetX=(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_3__.qE)((left+width-right)/2,0,width)-width/2,offsetY=(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_3__.qE)((top+height-bottom)/2,0,height)-height/2;matrix[8]-=2*offsetX/width,matrix[9]+=2*offsetY/height}return matrix}({width:this.width,height:this.height,orthographic:orthographic,fovyRadians:fovyRadians||fovy*DEGREES_TO_RADIANS,focalDistance:focalDistance,padding:padding,near:near,far:far});const vpm=(0,_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.$M)();_math_gl_core__WEBPACK_IMPORTED_MODULE_6__.lw(vpm,vpm,this.projectionMatrix),_math_gl_core__WEBPACK_IMPORTED_MODULE_6__.lw(vpm,vpm,this.viewMatrix),this.viewProjectionMatrix=vpm,this.viewMatrixInverse=_math_gl_core__WEBPACK_IMPORTED_MODULE_6__.B8([],this.viewMatrix)||this.viewMatrix,this.cameraPosition=(0,_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.Vl)(this.viewMatrixInverse);const viewportMatrix=(0,_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.$M)(),pixelProjectionMatrix=(0,_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.$M)();_math_gl_core__WEBPACK_IMPORTED_MODULE_6__.hs(viewportMatrix,viewportMatrix,[this.width/2,-this.height/2,1]),_math_gl_core__WEBPACK_IMPORTED_MODULE_6__.Tl(viewportMatrix,viewportMatrix,[1,-1,0]),_math_gl_core__WEBPACK_IMPORTED_MODULE_6__.lw(pixelProjectionMatrix,viewportMatrix,this.viewProjectionMatrix),this.pixelProjectionMatrix=pixelProjectionMatrix,this.pixelUnprojectionMatrix=_math_gl_core__WEBPACK_IMPORTED_MODULE_6__.B8((0,_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.$M)(),this.pixelProjectionMatrix),this.pixelUnprojectionMatrix||_utils_log_js__WEBPACK_IMPORTED_MODULE_7__.A.warn("Pixel project matrix not invertible")()}}},"./node_modules/@deck.gl/core/dist/viewports/web-mercator-viewport.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return WebMercatorViewport}});var _viewport_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@deck.gl/core/dist/viewports/viewport.js"),_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/web-mercator/dist/index.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@math.gl/core/dist/classes/matrix4.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec2.js");class WebMercatorViewport extends _viewport_js__WEBPACK_IMPORTED_MODULE_1__.A{static{this.displayName="WebMercatorViewport"}constructor(opts={}){const{latitude:latitude=0,longitude:longitude=0,zoom:zoom=0,pitch:pitch=0,bearing:bearing=0,nearZMultiplier:nearZMultiplier=.1,farZMultiplier:farZMultiplier=1.01,nearZ:nearZ,farZ:farZ,orthographic:orthographic=!1,projectionMatrix:projectionMatrix,repeat:repeat=!1,worldOffset:worldOffset=0,position:position,padding:padding,legacyMeterSizes:legacyMeterSizes=!1}=opts;let{width:width,height:height,altitude:altitude=1.5}=opts;const scale=Math.pow(2,zoom);let fovy;width=width||1,height=height||1;let projectionParameters=null;if(projectionMatrix)altitude=projectionMatrix[5]/2,fovy=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.Os)(altitude);else{let offset;if(opts.fovy?(fovy=opts.fovy,altitude=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.wZ)(fovy)):fovy=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.Os)(altitude),padding){const{top:top=0,bottom:bottom=0}=padding;offset=[0,(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_2__.qE)((top+height-bottom)/2,0,height)-height/2]}projectionParameters=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.om)({width:width,height:height,scale:scale,center:position&&[0,0,position[2]*(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.mY)(latitude)],offset:offset,pitch:pitch,fovy:fovy,nearZMultiplier:nearZMultiplier,farZMultiplier:farZMultiplier}),Number.isFinite(nearZ)&&(projectionParameters.near=nearZ),Number.isFinite(farZ)&&(projectionParameters.far=farZ)}let viewMatrixUncentered=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.rY)({height:height,pitch:pitch,bearing:bearing,scale:scale,altitude:altitude});if(worldOffset){viewMatrixUncentered=(new _math_gl_core__WEBPACK_IMPORTED_MODULE_3__.k).translate([512*worldOffset,0,0]).multiplyLeft(viewMatrixUncentered)}super({...opts,width:width,height:height,viewMatrix:viewMatrixUncentered,longitude:longitude,latitude:latitude,zoom:zoom,...projectionParameters,fovy:fovy,focalDistance:altitude}),this.latitude=latitude,this.longitude=longitude,this.zoom=zoom,this.pitch=pitch,this.bearing=bearing,this.altitude=altitude,this.fovy=fovy,this.orthographic=orthographic,this._subViewports=repeat?[]:null,this._pseudoMeters=legacyMeterSizes,Object.freeze(this)}get subViewports(){if(this._subViewports&&!this._subViewports.length){const bounds=this.getBounds(),minOffset=Math.floor((bounds[0]+180)/360),maxOffset=Math.ceil((bounds[2]-180)/360);for(let x=minOffset;x<=maxOffset;x++){const offsetViewport=x?new WebMercatorViewport({...this,worldOffset:x}):this;this._subViewports.push(offsetViewport)}}return this._subViewports}projectPosition(xyz){if(this._pseudoMeters)return super.projectPosition(xyz);const[X,Y]=this.projectFlat(xyz);return[X,Y,(xyz[2]||0)*(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.mY)(xyz[1])]}unprojectPosition(xyz){if(this._pseudoMeters)return super.unprojectPosition(xyz);const[X,Y]=this.unprojectFlat(xyz);return[X,Y,(xyz[2]||0)/(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.mY)(Y)]}addMetersToLngLat(lngLatZ,xyz){return(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.dT)(lngLatZ,xyz)}panByPosition(coords,pixel){const fromLocation=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.xJ)(pixel,this.pixelUnprojectionMatrix),toLocation=this.projectFlat(coords),translate=_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.WQ([],toLocation,_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.ze([],fromLocation)),newCenter=_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.WQ([],this.center,translate),[longitude,latitude]=this.unprojectFlat(newCenter);return{longitude:longitude,latitude:latitude}}getBounds(options={}){const corners=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.gW)(this,options.z||0);return[Math.min(corners[0][0],corners[1][0],corners[2][0],corners[3][0]),Math.min(corners[0][1],corners[1][1],corners[2][1],corners[3][1]),Math.max(corners[0][0],corners[1][0],corners[2][0],corners[3][0]),Math.max(corners[0][1],corners[1][1],corners[2][1],corners[3][1])]}fitBounds(bounds,options={}){const{width:width,height:height}=this,{longitude:longitude,latitude:latitude,zoom:zoom}=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.Fe)({width:width,height:height,bounds:bounds,...options});return new WebMercatorViewport({width:width,height:height,longitude:longitude,latitude:latitude,zoom:zoom})}}},"./node_modules/@deck.gl/core/dist/views/map-view.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return MapView}});var view=__webpack_require__("./node_modules/@deck.gl/core/dist/views/view.js"),web_mercator_viewport=__webpack_require__("./node_modules/@deck.gl/core/dist/viewports/web-mercator-viewport.js"),common=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js"),controller=__webpack_require__("./node_modules/@deck.gl/core/dist/controllers/controller.js"),view_state=__webpack_require__("./node_modules/@deck.gl/core/dist/controllers/view-state.js"),dist=__webpack_require__("./node_modules/@math.gl/web-mercator/dist/index.js"),assert=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/assert.js"),linear_interpolator=__webpack_require__("./node_modules/@deck.gl/core/dist/transitions/linear-interpolator.js");class MapState extends view_state.A{constructor(options){const{width:width,height:height,latitude:latitude,longitude:longitude,zoom:zoom,bearing:bearing=0,pitch:pitch=0,altitude:altitude=1.5,position:position=[0,0,0],maxZoom:maxZoom=20,minZoom:minZoom=0,maxPitch:maxPitch=60,minPitch:minPitch=0,startPanLngLat:startPanLngLat,startZoomLngLat:startZoomLngLat,startRotatePos:startRotatePos,startBearing:startBearing,startPitch:startPitch,startZoom:startZoom,normalize:normalize=!0}=options;(0,assert.A)(Number.isFinite(longitude)),(0,assert.A)(Number.isFinite(latitude)),(0,assert.A)(Number.isFinite(zoom)),super({width:width,height:height,latitude:latitude,longitude:longitude,zoom:zoom,bearing:bearing,pitch:pitch,altitude:altitude,maxZoom:maxZoom,minZoom:minZoom,maxPitch:maxPitch,minPitch:minPitch,normalize:normalize,position:position},{startPanLngLat:startPanLngLat,startZoomLngLat:startZoomLngLat,startRotatePos:startRotatePos,startBearing:startBearing,startPitch:startPitch,startZoom:startZoom}),this.makeViewport=options.makeViewport}panStart({pos:pos}){return this._getUpdatedState({startPanLngLat:this._unproject(pos)})}pan({pos:pos,startPos:startPos}){const startPanLngLat=this.getState().startPanLngLat||this._unproject(startPos);if(!startPanLngLat)return this;const newProps=this.makeViewport(this.getViewportProps()).panByPosition(startPanLngLat,pos);return this._getUpdatedState(newProps)}panEnd(){return this._getUpdatedState({startPanLngLat:null})}rotateStart({pos:pos}){return this._getUpdatedState({startRotatePos:pos,startBearing:this.getViewportProps().bearing,startPitch:this.getViewportProps().pitch})}rotate({pos:pos,deltaAngleX:deltaAngleX=0,deltaAngleY:deltaAngleY=0}){const{startRotatePos:startRotatePos,startBearing:startBearing,startPitch:startPitch}=this.getState();if(!startRotatePos||void 0===startBearing||void 0===startPitch)return this;let newRotation;return newRotation=pos?this._getNewRotation(pos,startRotatePos,startPitch,startBearing):{bearing:startBearing+deltaAngleX,pitch:startPitch+deltaAngleY},this._getUpdatedState(newRotation)}rotateEnd(){return this._getUpdatedState({startBearing:null,startPitch:null})}zoomStart({pos:pos}){return this._getUpdatedState({startZoomLngLat:this._unproject(pos),startZoom:this.getViewportProps().zoom})}zoom({pos:pos,startPos:startPos,scale:scale}){let{startZoom:startZoom,startZoomLngLat:startZoomLngLat}=this.getState();if(startZoomLngLat||(startZoom=this.getViewportProps().zoom,startZoomLngLat=this._unproject(startPos)||this._unproject(pos)),!startZoomLngLat)return this;const{maxZoom:maxZoom,minZoom:minZoom}=this.getViewportProps();let zoom=startZoom+Math.log2(scale);zoom=(0,common.qE)(zoom,minZoom,maxZoom);const zoomedViewport=this.makeViewport({...this.getViewportProps(),zoom:zoom});return this._getUpdatedState({zoom:zoom,...zoomedViewport.panByPosition(startZoomLngLat,pos)})}zoomEnd(){return this._getUpdatedState({startZoomLngLat:null,startZoom:null})}zoomIn(speed=2){return this._zoomFromCenter(speed)}zoomOut(speed=2){return this._zoomFromCenter(1/speed)}moveLeft(speed=100){return this._panFromCenter([speed,0])}moveRight(speed=100){return this._panFromCenter([-speed,0])}moveUp(speed=100){return this._panFromCenter([0,speed])}moveDown(speed=100){return this._panFromCenter([0,-speed])}rotateLeft(speed=15){return this._getUpdatedState({bearing:this.getViewportProps().bearing-speed})}rotateRight(speed=15){return this._getUpdatedState({bearing:this.getViewportProps().bearing+speed})}rotateUp(speed=10){return this._getUpdatedState({pitch:this.getViewportProps().pitch+speed})}rotateDown(speed=10){return this._getUpdatedState({pitch:this.getViewportProps().pitch-speed})}shortestPathFrom(viewState){const fromProps=viewState.getViewportProps(),props={...this.getViewportProps()},{bearing:bearing,longitude:longitude}=props;return Math.abs(bearing-fromProps.bearing)>180&&(props.bearing=bearing<0?bearing+360:bearing-360),Math.abs(longitude-fromProps.longitude)>180&&(props.longitude=longitude<0?longitude+360:longitude-360),props}applyConstraints(props){const{maxZoom:maxZoom,minZoom:minZoom,zoom:zoom}=props;props.zoom=(0,common.qE)(zoom,minZoom,maxZoom);const{maxPitch:maxPitch,minPitch:minPitch,pitch:pitch}=props;props.pitch=(0,common.qE)(pitch,minPitch,maxPitch);const{normalize:normalize=!0}=props;return normalize&&Object.assign(props,(0,dist.CK)(props)),props}_zoomFromCenter(scale){const{width:width,height:height}=this.getViewportProps();return this.zoom({pos:[width/2,height/2],scale:scale})}_panFromCenter(offset){const{width:width,height:height}=this.getViewportProps();return this.pan({startPos:[width/2,height/2],pos:[width/2+offset[0],height/2+offset[1]]})}_getUpdatedState(newProps){return new this.constructor({makeViewport:this.makeViewport,...this.getViewportProps(),...this.getState(),...newProps})}_unproject(pos){const viewport=this.makeViewport(this.getViewportProps());return pos&&viewport.unproject(pos)}_getNewRotation(pos,startPos,startPitch,startBearing){const deltaX=pos[0]-startPos[0],deltaY=pos[1]-startPos[1],centerY=pos[1],startY=startPos[1],{width:width,height:height}=this.getViewportProps(),deltaScaleX=deltaX/width;let deltaScaleY=0;deltaY>0?Math.abs(height-startY)>5&&(deltaScaleY=deltaY/(startY-height)*1.2):deltaY<0&&startY>5&&(deltaScaleY=1-centerY/startY),deltaScaleY=(0,common.qE)(deltaScaleY,-1,1);const{minPitch:minPitch,maxPitch:maxPitch}=this.getViewportProps();let pitch=startPitch;return deltaScaleY>0?pitch=startPitch+deltaScaleY*(maxPitch-startPitch):deltaScaleY<0&&(pitch=startPitch-deltaScaleY*(minPitch-startPitch)),{pitch:pitch,bearing:startBearing+180*deltaScaleX}}}class MapController extends controller.A{constructor(){super(...arguments),this.ControllerState=MapState,this.transition={transitionDuration:300,transitionInterpolator:new linear_interpolator.A({transitionProps:{compare:["longitude","latitude","zoom","bearing","pitch","position"],required:["longitude","latitude","zoom"]}})},this.dragMode="pan"}setProps(props){props.position=props.position||[0,0,0];const oldProps=this.props;super.setProps(props);(!oldProps||oldProps.height!==props.height)&&this.updateViewport(new this.ControllerState({makeViewport:this.makeViewport,...props,...this.state}))}}class MapView extends view.A{static{this.displayName="MapView"}constructor(props={}){super(props)}get ViewportType(){return web_mercator_viewport.A}get ControllerType(){return MapController}}},"./node_modules/@deck.gl/core/dist/views/orthographic-view.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return OrthographicView}});var _view_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@deck.gl/core/dist/views/view.js"),_viewports_orthographic_viewport_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@deck.gl/core/dist/viewports/orthographic-viewport.js"),_controllers_orthographic_controller_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@deck.gl/core/dist/controllers/orthographic-controller.js");class OrthographicView extends _view_js__WEBPACK_IMPORTED_MODULE_0__.A{static{this.displayName="OrthographicView"}constructor(props={}){super(props)}get ViewportType(){return _viewports_orthographic_viewport_js__WEBPACK_IMPORTED_MODULE_1__.A}get ControllerType(){return _controllers_orthographic_controller_js__WEBPACK_IMPORTED_MODULE_2__.A}}},"./node_modules/@deck.gl/core/dist/views/view.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return View}});const PERCENT_OR_PIXELS_REGEX=/([0-9]+\.?[0-9]*)(%|px)/;function parsePosition(value){switch(typeof value){case"number":return{position:value,relative:!1};case"string":const match=PERCENT_OR_PIXELS_REGEX.exec(value);if(match&&match.length>=3){const relative="%"===match[2],position=parseFloat(match[1]);return{position:relative?position/100:position,relative:relative}}default:throw new Error(`Could not parse position string ${value}`)}}function getPosition(position,extent){return position.relative?Math.round(position.position*extent):position.position}var deep_equal=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/deep-equal.js");class View{constructor(props){const{id:id,x:x=0,y:y=0,width:width="100%",height:height="100%",padding:padding=null}=props;this.id=id||this.constructor.displayName||"view",this.props={...props,id:this.id},this._x=parsePosition(x),this._y=parsePosition(y),this._width=parsePosition(width),this._height=parsePosition(height),this._padding=padding&&{left:parsePosition(padding.left||0),right:parsePosition(padding.right||0),top:parsePosition(padding.top||0),bottom:parsePosition(padding.bottom||0)},this.equals=this.equals.bind(this),Object.seal(this)}equals(view){return this===view||this.ViewportType===view.ViewportType&&(0,deep_equal.b)(this.props,view.props,2)}makeViewport({width:width,height:height,viewState:viewState}){viewState=this.filterViewState(viewState);const viewportDimensions=this.getDimensions({width:width,height:height});return viewportDimensions.height&&viewportDimensions.width?new this.ViewportType({...viewState,...this.props,...viewportDimensions}):null}getViewStateId(){const{viewState:viewState}=this.props;return"string"==typeof viewState?viewState:viewState?.id||this.id}filterViewState(viewState){if(this.props.viewState&&"object"==typeof this.props.viewState){if(!this.props.viewState.id)return this.props.viewState;const newViewState={...viewState};for(const key in this.props.viewState)"id"!==key&&(newViewState[key]=this.props.viewState[key]);return newViewState}return viewState}getDimensions({width:width,height:height}){const dimensions={x:getPosition(this._x,width),y:getPosition(this._y,height),width:getPosition(this._width,width),height:getPosition(this._height,height)};return this._padding&&(dimensions.padding={left:getPosition(this._padding.left,width),top:getPosition(this._padding.top,height),right:getPosition(this._padding.right,width),bottom:getPosition(this._padding.bottom,height)}),dimensions}get controller(){const opts=this.props.controller;return opts?!0===opts?{type:this.ControllerType}:"function"==typeof opts?{type:opts}:{type:this.ControllerType,...opts}:null}}},"./node_modules/@deck.gl/layers/dist/icon-layer/icon-layer.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return IconLayer}});var lib_layer=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/layer.js"),project32=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/project32/project32.js"),picking=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/picking/picking.js"),constants=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/constants.js"),log=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/log.js"),model=__webpack_require__("./node_modules/@luma.gl/engine/dist/model/model.js"),geometry=__webpack_require__("./node_modules/@luma.gl/engine/dist/geometry/geometry.js"),load=__webpack_require__("./node_modules/@loaders.gl/core/dist/lib/api/load.js"),iterable_utils=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/iterable-utils.js");const noop=()=>{},DEFAULT_SAMPLER_PARAMETERS={minFilter:"linear",mipmapFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},MISSING_ICON={x:0,y:0,width:0,height:0};function resizeImage(ctx,imageData,maxWidth,maxHeight){const resizeRatio=Math.min(maxWidth/imageData.width,maxHeight/imageData.height),width=Math.floor(imageData.width*resizeRatio),height=Math.floor(imageData.height*resizeRatio);return 1===resizeRatio?{data:imageData,width:width,height:height}:(ctx.canvas.height=height,ctx.canvas.width=width,ctx.clearRect(0,0,width,height),ctx.drawImage(imageData,0,0,imageData.width,imageData.height,0,0,width,height),{data:ctx.canvas,width:width,height:height})}function getIconId(icon){return icon&&(icon.id||icon.url)}function buildRowMapping(mapping,columns,yOffset){for(let i=0;i<columns.length;i++){const{icon:icon,xOffset:xOffset}=columns[i];mapping[getIconId(icon)]={...icon,x:xOffset,y:yOffset}}}class IconManager{constructor(device,{onUpdate:onUpdate=noop,onError:onError=noop}){this._loadOptions=null,this._texture=null,this._externalTexture=null,this._mapping={},this._textureParameters=null,this._pendingCount=0,this._autoPacking=!1,this._xOffset=0,this._yOffset=0,this._rowHeight=0,this._buffer=4,this._canvasWidth=1024,this._canvasHeight=0,this._canvas=null,this.device=device,this.onUpdate=onUpdate,this.onError=onError}finalize(){this._texture?.delete()}getTexture(){return this._texture||this._externalTexture}getIconMapping(icon){const id=this._autoPacking?getIconId(icon):icon;return this._mapping[id]||MISSING_ICON}setProps({loadOptions:loadOptions,autoPacking:autoPacking,iconAtlas:iconAtlas,iconMapping:iconMapping,textureParameters:textureParameters}){loadOptions&&(this._loadOptions=loadOptions),void 0!==autoPacking&&(this._autoPacking=autoPacking),iconMapping&&(this._mapping=iconMapping),iconAtlas&&(this._texture?.delete(),this._texture=null,this._externalTexture=iconAtlas),textureParameters&&(this._textureParameters=textureParameters)}get isLoaded(){return 0===this._pendingCount}packIcons(data,getIcon){if(!this._autoPacking||"undefined"==typeof document)return;const icons=Object.values(function getDiffIcons(data,getIcon,cachedIcons){if(!data||!getIcon)return null;cachedIcons=cachedIcons||{};const icons={},{iterable:iterable,objectInfo:objectInfo}=(0,iterable_utils.X)(data);for(const object of iterable){objectInfo.index++;const icon=getIcon(object,objectInfo),id=getIconId(icon);if(!icon)throw new Error("Icon is missing.");if(!icon.url)throw new Error("Icon url is missing.");icons[id]||cachedIcons[id]&&icon.url===cachedIcons[id].url||(icons[id]={...icon,source:object,sourceIndex:objectInfo.index})}return icons}(data,getIcon,this._mapping)||{});if(icons.length>0){const{mapping:mapping,xOffset:xOffset,yOffset:yOffset,rowHeight:rowHeight,canvasHeight:canvasHeight}=function buildMapping({icons:icons,buffer:buffer,mapping:mapping={},xOffset:xOffset=0,yOffset:yOffset=0,rowHeight:rowHeight=0,canvasWidth:canvasWidth}){let columns=[];for(let i=0;i<icons.length;i++){const icon=icons[i];if(!mapping[getIconId(icon)]){const{height:height,width:width}=icon;xOffset+width+buffer>canvasWidth&&(buildRowMapping(mapping,columns,yOffset),xOffset=0,yOffset=rowHeight+yOffset+buffer,rowHeight=0,columns=[]),columns.push({icon:icon,xOffset:xOffset}),xOffset=xOffset+width+buffer,rowHeight=Math.max(rowHeight,height)}}return columns.length>0&&buildRowMapping(mapping,columns,yOffset),{mapping:mapping,rowHeight:rowHeight,xOffset:xOffset,yOffset:yOffset,canvasWidth:canvasWidth,canvasHeight:(number=rowHeight+yOffset+buffer,Math.pow(2,Math.ceil(Math.log2(number))))};var number}({icons:icons,buffer:this._buffer,canvasWidth:this._canvasWidth,mapping:this._mapping,rowHeight:this._rowHeight,xOffset:this._xOffset,yOffset:this._yOffset});this._rowHeight=rowHeight,this._mapping=mapping,this._xOffset=xOffset,this._yOffset=yOffset,this._canvasHeight=canvasHeight,this._texture||(this._texture=this.device.createTexture({format:"rgba8unorm",width:this._canvasWidth,height:this._canvasHeight,sampler:this._textureParameters||DEFAULT_SAMPLER_PARAMETERS})),this._texture.height!==this._canvasHeight&&(this._texture=function resizeTexture(texture,width,height,sampler){const{width:oldWidth,height:oldHeight,device:device}=texture,newTexture=device.createTexture({format:"rgba8unorm",width:width,height:height,sampler:sampler}),commandEncoder=device.createCommandEncoder();return commandEncoder.copyTextureToTexture({source:texture,destination:newTexture,width:oldWidth,height:oldHeight}),commandEncoder.finish(),texture.destroy(),newTexture}(this._texture,this._canvasWidth,this._canvasHeight,this._textureParameters||DEFAULT_SAMPLER_PARAMETERS)),this.onUpdate(),this._canvas=this._canvas||document.createElement("canvas"),this._loadIcons(icons)}}_loadIcons(icons){const ctx=this._canvas.getContext("2d",{willReadFrequently:!0});for(const icon of icons)this._pendingCount++,(0,load.H)(icon.url,this._loadOptions).then((imageData=>{const id=getIconId(icon),iconDef=this._mapping[id],{x:x,y:y,width:maxWidth,height:maxHeight}=iconDef,{data:data,width:width,height:height}=resizeImage(ctx,imageData,maxWidth,maxHeight);this._texture.setSubImageData({data:data,x:x+(maxWidth-width)/2,y:y+(maxHeight-height)/2,width:width,height:height}),iconDef.width=width,iconDef.height=height,this._texture.generateMipmap(),this.onUpdate()})).catch((error=>{this.onError({url:icon.url,source:icon.source,sourceIndex:icon.sourceIndex,loadOptions:this._loadOptions,error:error})})).finally((()=>{this._pendingCount--}))}}const DEFAULT_COLOR=[0,0,0,255],defaultProps={iconAtlas:{type:"image",value:null,async:!0},iconMapping:{type:"object",value:{},async:!0},sizeScale:{type:"number",value:1,min:0},billboard:!0,sizeUnits:"pixels",sizeMinPixels:{type:"number",min:0,value:0},sizeMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},alphaCutoff:{type:"number",value:.05,min:0,max:1},getPosition:{type:"accessor",value:x=>x.position},getIcon:{type:"accessor",value:x=>x.icon},getColor:{type:"accessor",value:DEFAULT_COLOR},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},onIconError:{type:"function",value:null,optional:!0},textureParameters:{type:"object",ignore:!0,value:null}};class IconLayer extends lib_layer.A{static{this.defaultProps=defaultProps}static{this.layerName="IconLayer"}getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME icon-layer-vertex-shader\nin vec2 positions;\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin float instanceSizes;\nin float instanceAngles;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin vec4 instanceIconFrames;\nin float instanceColorModes;\nin vec2 instanceOffsets;\nin vec2 instancePixelOffset;\nuniform float sizeScale;\nuniform vec2 iconsTextureDim;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform bool billboard;\nuniform int sizeUnits;\nout float vColorMode;\nout vec4 vColor;\nout vec2 vTextureCoords;\nout vec2 uv;\nvec2 rotate_by_angle(vec2 vertex, float angle) {\nfloat angle_radian = angle * PI / 180.0;\nfloat cos_angle = cos(angle_radian);\nfloat sin_angle = sin(angle_radian);\nmat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\nreturn rotationMatrix * vertex;\n}\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\ngeometry.uv = positions;\ngeometry.pickingColor = instancePickingColors;\nuv = positions;\nvec2 iconSize = instanceIconFrames.zw;\nfloat sizePixels = clamp(\nproject_size_to_pixel(instanceSizes * sizeScale, sizeUnits),\nsizeMinPixels, sizeMaxPixels\n);\nfloat instanceScale = iconSize.y == 0.0 ? 0.0 : sizePixels / iconSize.y;\nvec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;\npixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * instanceScale;\npixelOffset += instancePixelOffset;\npixelOffset.y *= -1.0;\nif (billboard)  {\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nvec3 offset = vec3(pixelOffset, 0.0);\nDECKGL_FILTER_SIZE(offset, geometry);\ngl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n} else {\nvec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\nDECKGL_FILTER_SIZE(offset_common, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n}\nvTextureCoords = mix(\ninstanceIconFrames.xy,\ninstanceIconFrames.xy + iconSize,\n(positions.xy + 1.0) / 2.0\n) / iconsTextureDim;\nvColor = instanceColors;\nDECKGL_FILTER_COLOR(vColor, geometry);\nvColorMode = instanceColorModes;\n}\n",fs:"#version 300 es\n#define SHADER_NAME icon-layer-fragment-shader\nprecision highp float;\nuniform float opacity;\nuniform sampler2D iconsTexture;\nuniform float alphaCutoff;\nin float vColorMode;\nin vec4 vColor;\nin vec2 vTextureCoords;\nin vec2 uv;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = uv;\nvec4 texColor = texture(iconsTexture, vTextureCoords);\nvec3 color = mix(texColor.rgb, vColor.rgb, vColorMode);\nfloat a = texColor.a * opacity * vColor.a;\nif (a < alphaCutoff) {\ndiscard;\n}\nfragColor = vec4(color, a);\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:[project32.A,picking.A]})}initializeState(){this.state={iconManager:new IconManager(this.context.device,{onUpdate:this._onUpdate.bind(this),onError:this._onError.bind(this)})};this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceOffsets:{size:2,accessor:"getIcon",transform:this.getInstanceOffset},instanceIconFrames:{size:4,accessor:"getIcon",transform:this.getInstanceIconFrame},instanceColorModes:{size:1,type:"uint8",accessor:"getIcon",transform:this.getInstanceColorMode},instanceColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getColor",defaultValue:DEFAULT_COLOR},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instancePixelOffset:{size:2,transition:!0,accessor:"getPixelOffset"}})}updateState(params){super.updateState(params);const{props:props,oldProps:oldProps,changeFlags:changeFlags}=params,attributeManager=this.getAttributeManager(),{iconAtlas:iconAtlas,iconMapping:iconMapping,data:data,getIcon:getIcon,textureParameters:textureParameters}=props,{iconManager:iconManager}=this.state;if("string"==typeof iconAtlas)return;const prePacked=iconAtlas||this.internalState.isAsyncPropLoading("iconAtlas");iconManager.setProps({loadOptions:props.loadOptions,autoPacking:!prePacked,iconAtlas:iconAtlas,iconMapping:prePacked?iconMapping:null,textureParameters:textureParameters}),prePacked?oldProps.iconMapping!==props.iconMapping&&attributeManager.invalidate("getIcon"):(changeFlags.dataChanged||changeFlags.updateTriggersChanged&&(changeFlags.updateTriggersChanged.all||changeFlags.updateTriggersChanged.getIcon))&&iconManager.packIcons(data,getIcon),changeFlags.extensionsChanged&&(this.state.model?.destroy(),this.state.model=this._getModel(),attributeManager.invalidateAll())}get isLoaded(){return super.isLoaded&&this.state.iconManager.isLoaded}finalizeState(context){super.finalizeState(context),this.state.iconManager.finalize()}draw({uniforms:uniforms}){const{sizeScale:sizeScale,sizeMinPixels:sizeMinPixels,sizeMaxPixels:sizeMaxPixels,sizeUnits:sizeUnits,billboard:billboard,alphaCutoff:alphaCutoff}=this.props,{iconManager:iconManager}=this.state,iconsTexture=iconManager.getTexture();if(iconsTexture){const model=this.state.model;model.setBindings({iconsTexture:iconsTexture}),model.setUniforms(uniforms),model.setUniforms({iconsTextureDim:[iconsTexture.width,iconsTexture.height],sizeUnits:constants.p5[sizeUnits],sizeScale:sizeScale,sizeMinPixels:sizeMinPixels,sizeMaxPixels:sizeMaxPixels,billboard:billboard,alphaCutoff:alphaCutoff}),model.draw(this.context.renderPass)}}_getModel(){return new model.K(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new geometry.V({topology:"triangle-strip",attributes:{positions:{size:2,value:new Float32Array([-1,-1,1,-1,-1,1,1,1])}}}),isInstanced:!0})}_onUpdate(){this.setNeedsRedraw()}_onError(evt){const onIconError=this.getCurrentLayer()?.props.onIconError;onIconError?onIconError(evt):log.A.error(evt.error.message)()}getInstanceOffset(icon){const{width:width,height:height,anchorX:anchorX=width/2,anchorY:anchorY=height/2}=this.state.iconManager.getIconMapping(icon);return[width/2-anchorX,height/2-anchorY]}getInstanceColorMode(icon){return this.state.iconManager.getIconMapping(icon).mask?1:0}getInstanceIconFrame(icon){const{x:x,y:y,width:width,height:height}=this.state.iconManager.getIconMapping(icon);return[x,y,width,height]}}},"./node_modules/@deck.gl/layers/dist/text-layer/multi-icon-layer/multi-icon-layer.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return MultiIconLayer}});var log=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/log.js"),icon_layer=__webpack_require__("./node_modules/@deck.gl/layers/dist/icon-layer/icon-layer.js");const EMPTY_ARRAY=[],defaultProps={getIconOffsets:{type:"accessor",value:x=>x.offsets},alphaCutoff:.001,smoothing:.1,outlineWidth:0,outlineColor:{type:"color",value:[0,0,0,255]}};class MultiIconLayer extends icon_layer.A{static{this.defaultProps=defaultProps}static{this.layerName="MultiIconLayer"}getShaders(){return{...super.getShaders(),fs:"#version 300 es\n#define SHADER_NAME multi-icon-layer-fragment-shader\nprecision highp float;\nuniform float opacity;\nuniform sampler2D iconsTexture;\nuniform float gamma;\nuniform bool sdf;\nuniform float alphaCutoff;\nuniform float sdfBuffer;\nuniform float outlineBuffer;\nuniform vec4 outlineColor;\nin vec4 vColor;\nin vec2 vTextureCoords;\nin vec2 uv;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = uv;\nif (!bool(picking.isActive)) {\nfloat alpha = texture(iconsTexture, vTextureCoords).a;\nvec4 color = vColor;\nif (sdf) {\nfloat distance = alpha;\nalpha = smoothstep(sdfBuffer - gamma, sdfBuffer + gamma, distance);\nif (outlineBuffer > 0.0) {\nfloat inFill = alpha;\nfloat inBorder = smoothstep(outlineBuffer - gamma, outlineBuffer + gamma, distance);\ncolor = mix(outlineColor, vColor, inFill);\nalpha = inBorder;\n}\n}\nfloat a = alpha * color.a;\nif (a < alphaCutoff) {\ndiscard;\n}\nfragColor = vec4(color.rgb, a * opacity);\n}\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n"}}initializeState(){super.initializeState();this.getAttributeManager().addInstanced({instanceOffsets:{size:2,accessor:"getIconOffsets"},instancePickingColors:{type:"uint8",size:3,accessor:(object,{index:index,target:value})=>this.encodePickingColor(index,value)}})}updateState(params){super.updateState(params);const{props:props,oldProps:oldProps}=params;let{outlineColor:outlineColor}=props;outlineColor!==oldProps.outlineColor&&(outlineColor=outlineColor.map((x=>x/255)),outlineColor[3]=Number.isFinite(outlineColor[3])?outlineColor[3]:1,this.setState({outlineColor:outlineColor})),!props.sdf&&props.outlineWidth&&log.A.warn(`${this.id}: fontSettings.sdf is required to render outline`)()}draw(params){const{sdf:sdf,smoothing:smoothing,outlineWidth:outlineWidth}=this.props,{outlineColor:outlineColor}=this.state,outlineBuffer=outlineWidth?Math.max(smoothing,.75*(1-outlineWidth)):-1;if(params.uniforms={...params.uniforms,sdfBuffer:.75,outlineBuffer:outlineBuffer,gamma:smoothing,sdf:Boolean(sdf),outlineColor:outlineColor},super.draw(params),sdf&&outlineWidth){const{iconManager:iconManager}=this.state,iconsTexture=iconManager.getTexture(),model=this.state.model;iconsTexture&&(model.setUniforms({outlineBuffer:.75}),model.draw(this.context.renderPass))}}getInstanceOffset(icons){return icons?Array.from(icons).flatMap((icon=>super.getInstanceOffset(icon))):EMPTY_ARRAY}getInstanceColorMode(icons){return 1}getInstanceIconFrame(icons){return icons?Array.from(icons).flatMap((icon=>super.getInstanceIconFrame(icon))):EMPTY_ARRAY}}},"./node_modules/@deck.gl/layers/dist/text-layer/text-background-layer/text-background-layer.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return TextBackgroundLayer}});var lib_layer=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/layer.js"),project32=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/project32/project32.js"),picking=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/picking/picking.js"),constants=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/constants.js"),geometry=__webpack_require__("./node_modules/@luma.gl/engine/dist/geometry/geometry.js"),model=__webpack_require__("./node_modules/@luma.gl/engine/dist/model/model.js");const defaultProps={billboard:!0,sizeScale:1,sizeUnits:"pixels",sizeMinPixels:0,sizeMaxPixels:Number.MAX_SAFE_INTEGER,padding:{type:"array",value:[0,0,0,0]},getPosition:{type:"accessor",value:x=>x.position},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},getBoundingRect:{type:"accessor",value:[0,0,0,0]},getFillColor:{type:"accessor",value:[0,0,0,255]},getLineColor:{type:"accessor",value:[0,0,0,255]},getLineWidth:{type:"accessor",value:1}};class TextBackgroundLayer extends lib_layer.A{static{this.defaultProps=defaultProps}static{this.layerName="TextBackgroundLayer"}getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME text-background-layer-vertex-shader\nin vec2 positions;\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec4 instanceRects;\nin float instanceSizes;\nin float instanceAngles;\nin vec2 instancePixelOffsets;\nin float instanceLineWidths;\nin vec4 instanceFillColors;\nin vec4 instanceLineColors;\nin vec3 instancePickingColors;\nuniform bool billboard;\nuniform float opacity;\nuniform float sizeScale;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform vec4 padding;\nuniform int sizeUnits;\nout vec4 vFillColor;\nout vec4 vLineColor;\nout float vLineWidth;\nout vec2 uv;\nout vec2 dimensions;\nvec2 rotate_by_angle(vec2 vertex, float angle) {\nfloat angle_radian = radians(angle);\nfloat cos_angle = cos(angle_radian);\nfloat sin_angle = sin(angle_radian);\nmat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\nreturn rotationMatrix * vertex;\n}\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\ngeometry.uv = positions;\ngeometry.pickingColor = instancePickingColors;\nuv = positions;\nvLineWidth = instanceLineWidths;\nfloat sizePixels = clamp(\nproject_size_to_pixel(instanceSizes * sizeScale, sizeUnits),\nsizeMinPixels, sizeMaxPixels\n);\ndimensions = instanceRects.zw * sizePixels + padding.xy + padding.zw;\nvec2 pixelOffset = (positions * instanceRects.zw + instanceRects.xy) * sizePixels + mix(-padding.xy, padding.zw, positions);\npixelOffset = rotate_by_angle(pixelOffset, instanceAngles);\npixelOffset += instancePixelOffsets;\npixelOffset.y *= -1.0;\nif (billboard)  {\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nvec3 offset = vec3(pixelOffset, 0.0);\nDECKGL_FILTER_SIZE(offset, geometry);\ngl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n} else {\nvec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\nDECKGL_FILTER_SIZE(offset_common, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n}\nvFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\nDECKGL_FILTER_COLOR(vFillColor, geometry);\nvLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\nDECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME text-background-layer-fragment-shader\nprecision highp float;\nuniform bool stroked;\nin vec4 vFillColor;\nin vec4 vLineColor;\nin float vLineWidth;\nin vec2 uv;\nin vec2 dimensions;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = uv;\nvec2 pixelPosition = uv * dimensions;\nif (stroked) {\nfloat distToEdge = min(\nmin(pixelPosition.x, dimensions.x - pixelPosition.x),\nmin(pixelPosition.y, dimensions.y - pixelPosition.y)\n);\nfloat isBorder = smoothedge(distToEdge, vLineWidth);\nfragColor = mix(vFillColor, vLineColor, isBorder);\n} else {\nfragColor = vFillColor;\n}\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:[project32.A,picking.A]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instanceRects:{size:4,accessor:"getBoundingRect"},instancePixelOffsets:{size:2,transition:!0,accessor:"getPixelOffset"},instanceFillColors:{size:4,transition:!0,type:"unorm8",accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:4,transition:!0,type:"unorm8",accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}updateState(params){super.updateState(params);const{changeFlags:changeFlags}=params;changeFlags.extensionsChanged&&(this.state.model?.destroy(),this.state.model=this._getModel(),this.getAttributeManager().invalidateAll())}draw({uniforms:uniforms}){const{billboard:billboard,sizeScale:sizeScale,sizeUnits:sizeUnits,sizeMinPixels:sizeMinPixels,sizeMaxPixels:sizeMaxPixels,getLineWidth:getLineWidth}=this.props;let{padding:padding}=this.props;padding.length<4&&(padding=[padding[0],padding[1],padding[0],padding[1]]);const model=this.state.model;model.setUniforms(uniforms),model.setUniforms({billboard:billboard,stroked:Boolean(getLineWidth),padding:padding,sizeUnits:constants.p5[sizeUnits],sizeScale:sizeScale,sizeMinPixels:sizeMinPixels,sizeMaxPixels:sizeMaxPixels}),model.draw(this.context.renderPass)}_getModel(){return new model.K(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new geometry.V({topology:"triangle-fan-webgl",vertexCount:4,attributes:{positions:{size:2,value:new Float32Array([0,0,1,0,1,1,0,1])}}}),isInstanced:!0})}}},"./node_modules/@deck.gl/layers/dist/text-layer/text-layer.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return TextLayer}});var composite_layer=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/composite-layer.js"),log=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/log.js"),iterable_utils=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/iterable-utils.js"),multi_icon_layer=__webpack_require__("./node_modules/@deck.gl/layers/dist/text-layer/multi-icon-layer/multi-icon-layer.js");const INF=1e20;class TinySDF{constructor({fontSize:fontSize=24,buffer:buffer=3,radius:radius=8,cutoff:cutoff=.25,fontFamily:fontFamily="sans-serif",fontWeight:fontWeight="normal",fontStyle:fontStyle="normal"}={}){this.buffer=buffer,this.cutoff=cutoff,this.radius=radius;const size=this.size=fontSize+4*buffer,canvas=this._createCanvas(size),ctx=this.ctx=canvas.getContext("2d",{willReadFrequently:!0});ctx.font=`${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`,ctx.textBaseline="alphabetic",ctx.textAlign="left",ctx.fillStyle="black",this.gridOuter=new Float64Array(size*size),this.gridInner=new Float64Array(size*size),this.f=new Float64Array(size),this.z=new Float64Array(size+1),this.v=new Uint16Array(size)}_createCanvas(size){const canvas=document.createElement("canvas");return canvas.width=canvas.height=size,canvas}draw(char){const{width:glyphAdvance,actualBoundingBoxAscent:actualBoundingBoxAscent,actualBoundingBoxDescent:actualBoundingBoxDescent,actualBoundingBoxLeft:actualBoundingBoxLeft,actualBoundingBoxRight:actualBoundingBoxRight}=this.ctx.measureText(char),glyphTop=Math.ceil(actualBoundingBoxAscent),glyphWidth=Math.max(0,Math.min(this.size-this.buffer,Math.ceil(actualBoundingBoxRight-actualBoundingBoxLeft))),glyphHeight=Math.min(this.size-this.buffer,glyphTop+Math.ceil(actualBoundingBoxDescent)),width=glyphWidth+2*this.buffer,height=glyphHeight+2*this.buffer,len=Math.max(width*height,0),data=new Uint8ClampedArray(len),glyph={data:data,width:width,height:height,glyphWidth:glyphWidth,glyphHeight:glyphHeight,glyphTop:glyphTop,glyphLeft:0,glyphAdvance:glyphAdvance};if(0===glyphWidth||0===glyphHeight)return glyph;const{ctx:ctx,buffer:buffer,gridInner:gridInner,gridOuter:gridOuter}=this;ctx.clearRect(buffer,buffer,glyphWidth,glyphHeight),ctx.fillText(char,buffer,buffer+glyphTop);const imgData=ctx.getImageData(buffer,buffer,glyphWidth,glyphHeight);gridOuter.fill(INF,0,len),gridInner.fill(0,0,len);for(let y=0;y<glyphHeight;y++)for(let x=0;x<glyphWidth;x++){const a=imgData.data[4*(y*glyphWidth+x)+3]/255;if(0===a)continue;const j=(y+buffer)*width+x+buffer;if(1===a)gridOuter[j]=0,gridInner[j]=INF;else{const d=.5-a;gridOuter[j]=d>0?d*d:0,gridInner[j]=d<0?d*d:0}}edt(gridOuter,0,0,width,height,width,this.f,this.v,this.z),edt(gridInner,buffer,buffer,glyphWidth,glyphHeight,width,this.f,this.v,this.z);for(let i=0;i<len;i++){const d=Math.sqrt(gridOuter[i])-Math.sqrt(gridInner[i]);data[i]=Math.round(255-255*(d/this.radius+this.cutoff))}return glyph}}function edt(data,x0,y0,width,height,gridSize,f,v,z){for(let x=x0;x<x0+width;x++)edt1d(data,y0*gridSize+x,gridSize,height,f,v,z);for(let y=y0;y<y0+height;y++)edt1d(data,y*gridSize+x0,1,width,f,v,z)}function edt1d(grid,offset,stride,length,f,v,z){v[0]=0,z[0]=-INF,z[1]=INF,f[0]=grid[offset];for(let q=1,k=0,s=0;q<length;q++){f[q]=grid[offset+q*stride];const q2=q*q;do{const r=v[k];s=(f[q]-f[r]+q2-r*r)/(q-r)/2}while(s<=z[k]&&--k>-1);k++,v[k]=q,z[k]=s,z[k+1]=INF}for(let q=0,k=0;q<length;q++){for(;z[k+1]<q;)k++;const r=v[k],qr=q-r;grid[offset+q*stride]=f[r]+qr*qr}}const MISSING_CHAR_WIDTH=32,SINGLE_LINE=[];function getTextWidth(text,startIndex,endIndex,mapping){let width=0;for(let i=startIndex;i<endIndex;i++){const character=text[i];width+=mapping[character]?.layoutWidth||0}return width}function breakAll(text,startIndex,endIndex,maxWidth,iconMapping,target){let rowStartCharIndex=startIndex,rowOffsetLeft=0;for(let i=startIndex;i<endIndex;i++){const textWidth=getTextWidth(text,i,i+1,iconMapping);rowOffsetLeft+textWidth>maxWidth&&(rowStartCharIndex<i&&target.push(i),rowStartCharIndex=i,rowOffsetLeft=0),rowOffsetLeft+=textWidth}return rowOffsetLeft}function autoWrapping(text,wordBreak,maxWidth,iconMapping,startIndex=0,endIndex){void 0===endIndex&&(endIndex=text.length);const result=[];return"break-all"===wordBreak?breakAll(text,startIndex,endIndex,maxWidth,iconMapping,result):function breakWord(text,startIndex,endIndex,maxWidth,iconMapping,target){let rowStartCharIndex=startIndex,groupStartCharIndex=startIndex,groupEndCharIndex=startIndex,rowOffsetLeft=0;for(let i=startIndex;i<endIndex;i++)if(" "===text[i]?groupEndCharIndex=i+1:" "!==text[i+1]&&i+1!==endIndex||(groupEndCharIndex=i+1),groupEndCharIndex>groupStartCharIndex){let groupWidth=getTextWidth(text,groupStartCharIndex,groupEndCharIndex,iconMapping);rowOffsetLeft+groupWidth>maxWidth&&(rowStartCharIndex<groupStartCharIndex&&(target.push(groupStartCharIndex),rowStartCharIndex=groupStartCharIndex,rowOffsetLeft=0),groupWidth>maxWidth&&(groupWidth=breakAll(text,groupStartCharIndex,groupEndCharIndex,maxWidth,iconMapping,target),rowStartCharIndex=target[target.length-1])),groupStartCharIndex=groupEndCharIndex,rowOffsetLeft+=groupWidth}return rowOffsetLeft}(text,startIndex,endIndex,maxWidth,iconMapping,result),result}function transformRow(line,startIndex,endIndex,iconMapping,leftOffsets,rowSize){let x=0,rowHeight=0;for(let i=startIndex;i<endIndex;i++){const character=line[i],frame=iconMapping[character];frame?(rowHeight||(rowHeight=frame.layoutHeight),leftOffsets[i]=x+frame.layoutWidth/2,x+=frame.layoutWidth):(log.A.warn(`Missing character: ${character} (${character.codePointAt(0)})`)(),leftOffsets[i]=x,x+=MISSING_CHAR_WIDTH)}rowSize[0]=x,rowSize[1]=rowHeight}class LRUCache{constructor(limit=5){this._cache={},this._order=[],this.limit=limit}get(key){const value=this._cache[key];return value&&(this._deleteOrder(key),this._appendOrder(key)),value}set(key,value){this._cache[key]?(this.delete(key),this._cache[key]=value,this._appendOrder(key)):(Object.keys(this._cache).length===this.limit&&this.delete(this._order[0]),this._cache[key]=value,this._appendOrder(key))}delete(key){this._cache[key]&&(delete this._cache[key],this._deleteOrder(key))}_deleteOrder(key){const index=this._order.indexOf(key);index>=0&&this._order.splice(index,1)}_appendOrder(key){this._order.push(key)}}const DEFAULT_FONT_SETTINGS={fontFamily:"Monaco, monospace",fontWeight:"normal",characterSet:function getDefaultCharacterSet(){const charSet=[];for(let i=32;i<128;i++)charSet.push(String.fromCharCode(i));return charSet}(),fontSize:64,buffer:4,sdf:!1,cutoff:.25,radius:12,smoothing:.1};let cache=new LRUCache(3);function populateAlphaChannel(alphaChannel,imageData){for(let i=0;i<alphaChannel.length;i++)imageData.data[4*i+3]=alphaChannel[i]}function setTextStyle(ctx,fontFamily,fontSize,fontWeight){ctx.font=`${fontWeight} ${fontSize}px ${fontFamily}`,ctx.fillStyle="#000",ctx.textBaseline="alphabetic",ctx.textAlign="left"}class FontAtlasManager{constructor(){this.props={...DEFAULT_FONT_SETTINGS}}get atlas(){return this._atlas}get mapping(){return this._atlas&&this._atlas.mapping}get scale(){const{fontSize:fontSize,buffer:buffer}=this.props;return(1.2*fontSize+2*buffer)/fontSize}setProps(props={}){Object.assign(this.props,props),this._key=this._getKey();const charSet=function getNewChars(cacheKey,characterSet){let newCharSet;newCharSet="string"==typeof characterSet?new Set(Array.from(characterSet)):new Set(characterSet);const cachedFontAtlas=cache.get(cacheKey);if(!cachedFontAtlas)return newCharSet;for(const char in cachedFontAtlas.mapping)newCharSet.has(char)&&newCharSet.delete(char);return newCharSet}(this._key,this.props.characterSet),cachedFontAtlas=cache.get(this._key);if(cachedFontAtlas&&0===charSet.size)return void(this._atlas!==cachedFontAtlas&&(this._atlas=cachedFontAtlas));const fontAtlas=this._generateFontAtlas(charSet,cachedFontAtlas);this._atlas=fontAtlas,cache.set(this._key,fontAtlas)}_generateFontAtlas(characterSet,cachedFontAtlas){const{fontFamily:fontFamily,fontWeight:fontWeight,fontSize:fontSize,buffer:buffer,sdf:sdf,radius:radius,cutoff:cutoff}=this.props;let canvas=cachedFontAtlas&&cachedFontAtlas.data;canvas||(canvas=document.createElement("canvas"),canvas.width=1024);const ctx=canvas.getContext("2d",{willReadFrequently:!0});setTextStyle(ctx,fontFamily,fontSize,fontWeight);const{mapping:mapping,canvasHeight:canvasHeight,xOffset:xOffset,yOffset:yOffset}=function buildMapping({characterSet:characterSet,getFontWidth:getFontWidth,fontHeight:fontHeight,buffer:buffer,maxCanvasWidth:maxCanvasWidth,mapping:mapping={},xOffset:xOffset=0,yOffset:yOffset=0}){let row=0,x=xOffset;const rowHeight=fontHeight+2*buffer;for(const char of characterSet)if(!mapping[char]){const width=getFontWidth(char);x+width+2*buffer>maxCanvasWidth&&(x=0,row++),mapping[char]={x:x+buffer,y:yOffset+row*rowHeight+buffer,width:width,height:rowHeight,layoutWidth:width,layoutHeight:fontHeight},x+=width+2*buffer}return{mapping:mapping,xOffset:x,yOffset:yOffset+row*rowHeight,canvasHeight:(number=yOffset+(row+1)*rowHeight,Math.pow(2,Math.ceil(Math.log2(number))))};var number}({getFontWidth:char=>ctx.measureText(char).width,fontHeight:1.2*fontSize,buffer:buffer,characterSet:characterSet,maxCanvasWidth:1024,...cachedFontAtlas&&{mapping:cachedFontAtlas.mapping,xOffset:cachedFontAtlas.xOffset,yOffset:cachedFontAtlas.yOffset}});if(canvas.height!==canvasHeight){const imageData=ctx.getImageData(0,0,canvas.width,canvas.height);canvas.height=canvasHeight,ctx.putImageData(imageData,0,0)}if(setTextStyle(ctx,fontFamily,fontSize,fontWeight),sdf){const tinySDF=new TinySDF({fontSize:fontSize,buffer:buffer,radius:radius,cutoff:cutoff,fontFamily:fontFamily,fontWeight:`${fontWeight}`});for(const char of characterSet){const{data:data,width:width,height:height,glyphTop:glyphTop}=tinySDF.draw(char);mapping[char].width=width,mapping[char].layoutOffsetY=.9*fontSize-glyphTop;const imageData=ctx.createImageData(width,height);populateAlphaChannel(data,imageData),ctx.putImageData(imageData,mapping[char].x,mapping[char].y)}}else for(const char of characterSet)ctx.fillText(char,mapping[char].x,mapping[char].y+buffer+.9*fontSize);return{xOffset:xOffset,yOffset:yOffset,mapping:mapping,data:canvas,width:canvas.width,height:canvas.height}}_getKey(){const{fontFamily:fontFamily,fontWeight:fontWeight,fontSize:fontSize,buffer:buffer,sdf:sdf,radius:radius,cutoff:cutoff}=this.props;return sdf?`${fontFamily} ${fontWeight} ${fontSize} ${buffer} ${radius} ${cutoff}`:`${fontFamily} ${fontWeight} ${fontSize} ${buffer}`}}var text_background_layer=__webpack_require__("./node_modules/@deck.gl/layers/dist/text-layer/text-background-layer/text-background-layer.js");const TEXT_ANCHOR={start:1,middle:0,end:-1},ALIGNMENT_BASELINE={top:1,center:0,bottom:-1},DEFAULT_COLOR=[0,0,0,255],defaultProps={billboard:!0,sizeScale:1,sizeUnits:"pixels",sizeMinPixels:0,sizeMaxPixels:Number.MAX_SAFE_INTEGER,background:!1,getBackgroundColor:{type:"accessor",value:[255,255,255,255]},getBorderColor:{type:"accessor",value:DEFAULT_COLOR},getBorderWidth:{type:"accessor",value:0},backgroundPadding:{type:"array",value:[0,0,0,0]},characterSet:{type:"object",value:DEFAULT_FONT_SETTINGS.characterSet},fontFamily:DEFAULT_FONT_SETTINGS.fontFamily,fontWeight:DEFAULT_FONT_SETTINGS.fontWeight,lineHeight:1,outlineWidth:{type:"number",value:0,min:0},outlineColor:{type:"color",value:DEFAULT_COLOR},fontSettings:{type:"object",value:{},compare:1},wordBreak:"break-word",maxWidth:{type:"number",value:-1},getText:{type:"accessor",value:x=>x.text},getPosition:{type:"accessor",value:x=>x.position},getColor:{type:"accessor",value:DEFAULT_COLOR},getSize:{type:"accessor",value:32},getAngle:{type:"accessor",value:0},getTextAnchor:{type:"accessor",value:"middle"},getAlignmentBaseline:{type:"accessor",value:"center"},getPixelOffset:{type:"accessor",value:[0,0]},backgroundColor:{deprecatedFor:["background","getBackgroundColor"]}};class TextLayer extends composite_layer.A{constructor(){super(...arguments),this.getBoundingRect=(object,objectInfo)=>{let{size:[width,height]}=this.transformParagraph(object,objectInfo);const{fontSize:fontSize}=this.state.fontAtlasManager.props;width/=fontSize,height/=fontSize;const{getTextAnchor:getTextAnchor,getAlignmentBaseline:getAlignmentBaseline}=this.props;return[(TEXT_ANCHOR["function"==typeof getTextAnchor?getTextAnchor(object,objectInfo):getTextAnchor]-1)*width/2,(ALIGNMENT_BASELINE["function"==typeof getAlignmentBaseline?getAlignmentBaseline(object,objectInfo):getAlignmentBaseline]-1)*height/2,width,height]},this.getIconOffsets=(object,objectInfo)=>{const{getTextAnchor:getTextAnchor,getAlignmentBaseline:getAlignmentBaseline}=this.props,{x:x,y:y,rowWidth:rowWidth,size:[width,height]}=this.transformParagraph(object,objectInfo),anchorX=TEXT_ANCHOR["function"==typeof getTextAnchor?getTextAnchor(object,objectInfo):getTextAnchor],anchorY=ALIGNMENT_BASELINE["function"==typeof getAlignmentBaseline?getAlignmentBaseline(object,objectInfo):getAlignmentBaseline],numCharacters=x.length,offsets=new Array(2*numCharacters);let index=0;for(let i=0;i<numCharacters;i++){const rowOffset=(1-anchorX)*(width-rowWidth[i])/2;offsets[index++]=(anchorX-1)*width/2+rowOffset+x[i],offsets[index++]=(anchorY-1)*height/2+y[i]}return offsets}}static{this.defaultProps=defaultProps}static{this.layerName="TextLayer"}initializeState(){this.state={styleVersion:0,fontAtlasManager:new FontAtlasManager},this.props.maxWidth>0&&log.A.warn("v8.9 breaking change: TextLayer maxWidth is now relative to text size")()}updateState(params){const{props:props,oldProps:oldProps,changeFlags:changeFlags}=params;(changeFlags.dataChanged||changeFlags.updateTriggersChanged&&(changeFlags.updateTriggersChanged.all||changeFlags.updateTriggersChanged.getText))&&this._updateText();(this._updateFontAtlas()||props.lineHeight!==oldProps.lineHeight||props.wordBreak!==oldProps.wordBreak||props.maxWidth!==oldProps.maxWidth)&&this.setState({styleVersion:this.state.styleVersion+1})}getPickingInfo({info:info}){return info.object=info.index>=0?this.props.data[info.index]:null,info}_updateFontAtlas(){const{fontSettings:fontSettings,fontFamily:fontFamily,fontWeight:fontWeight}=this.props,{fontAtlasManager:fontAtlasManager,characterSet:characterSet}=this.state,fontProps={...fontSettings,characterSet:characterSet,fontFamily:fontFamily,fontWeight:fontWeight};if(!fontAtlasManager.mapping)return fontAtlasManager.setProps(fontProps),!0;for(const key in fontProps)if(fontProps[key]!==fontAtlasManager.props[key])return fontAtlasManager.setProps(fontProps),!0;return!1}_updateText(){const{data:data,characterSet:characterSet}=this.props,textBuffer=data.attributes?.getText;let numInstances,{getText:getText}=this.props,startIndices=data.startIndices;const autoCharacterSet="auto"===characterSet&&new Set;if(textBuffer&&startIndices){const{texts:texts,characterCount:characterCount}=function getTextFromBuffer({value:value,length:length,stride:stride,offset:offset,startIndices:startIndices,characterSet:characterSet}){const bytesPerElement=value.BYTES_PER_ELEMENT,elementStride=stride?stride/bytesPerElement:1,elementOffset=offset?offset/bytesPerElement:0,characterCount=startIndices[length]||Math.ceil((value.length-elementOffset)/elementStride),autoCharacterSet=characterSet&&new Set,texts=new Array(length);let codes=value;if(elementStride>1||elementOffset>0){codes=new(0,value.constructor)(characterCount);for(let i=0;i<characterCount;i++)codes[i]=value[i*elementStride+elementOffset]}for(let index=0;index<length;index++){const startIndex=startIndices[index],endIndex=startIndices[index+1]||characterCount,codesAtIndex=codes.subarray(startIndex,endIndex);texts[index]=String.fromCodePoint.apply(null,codesAtIndex),autoCharacterSet&&codesAtIndex.forEach(autoCharacterSet.add,autoCharacterSet)}if(autoCharacterSet)for(const charCode of autoCharacterSet)characterSet.add(String.fromCodePoint(charCode));return{texts:texts,characterCount:characterCount}}({...ArrayBuffer.isView(textBuffer)?{value:textBuffer}:textBuffer,length:data.length,startIndices:startIndices,characterSet:autoCharacterSet});numInstances=characterCount,getText=(_,{index:index})=>texts[index]}else{const{iterable:iterable,objectInfo:objectInfo}=(0,iterable_utils.X)(data);startIndices=[0],numInstances=0;for(const object of iterable){objectInfo.index++;const text=Array.from(getText(object,objectInfo)||"");autoCharacterSet&&text.forEach(autoCharacterSet.add,autoCharacterSet),numInstances+=text.length,startIndices.push(numInstances)}}this.setState({getText:getText,startIndices:startIndices,numInstances:numInstances,characterSet:autoCharacterSet||characterSet})}transformParagraph(object,objectInfo){const{fontAtlasManager:fontAtlasManager}=this.state,iconMapping=fontAtlasManager.mapping,getText=this.state.getText,{wordBreak:wordBreak,lineHeight:lineHeight,maxWidth:maxWidth}=this.props;return function transformParagraph(paragraph,lineHeight,wordBreak,maxWidth,iconMapping){const characters=Array.from(paragraph),numCharacters=characters.length,x=new Array(numCharacters),y=new Array(numCharacters),rowWidth=new Array(numCharacters),autoWrappingEnabled=("break-word"===wordBreak||"break-all"===wordBreak)&&isFinite(maxWidth)&&maxWidth>0,size=[0,0],rowSize=[0,0];let rowOffsetTop=0,lineStartIndex=0,lineEndIndex=0;for(let i=0;i<=numCharacters;i++){const char=characters[i];if("\n"!==char&&i!==numCharacters||(lineEndIndex=i),lineEndIndex>lineStartIndex){const rows=autoWrappingEnabled?autoWrapping(characters,wordBreak,maxWidth,iconMapping,lineStartIndex,lineEndIndex):SINGLE_LINE;for(let rowIndex=0;rowIndex<=rows.length;rowIndex++){const rowStart=0===rowIndex?lineStartIndex:rows[rowIndex-1],rowEnd=rowIndex<rows.length?rows[rowIndex]:lineEndIndex;transformRow(characters,rowStart,rowEnd,iconMapping,x,rowSize);for(let j=rowStart;j<rowEnd;j++){const char=characters[j],layoutOffsetY=iconMapping[char]?.layoutOffsetY||0;y[j]=rowOffsetTop+rowSize[1]/2+layoutOffsetY,rowWidth[j]=rowSize[0]}rowOffsetTop+=rowSize[1]*lineHeight,size[0]=Math.max(size[0],rowSize[0])}lineStartIndex=lineEndIndex}"\n"===char&&(x[lineStartIndex]=0,y[lineStartIndex]=0,rowWidth[lineStartIndex]=0,lineStartIndex++)}return size[1]=rowOffsetTop,{x:x,y:y,rowWidth:rowWidth,size:size}}(getText(object,objectInfo)||"",lineHeight,wordBreak,maxWidth*fontAtlasManager.props.fontSize,iconMapping)}renderLayers(){const{startIndices:startIndices,numInstances:numInstances,getText:getText,fontAtlasManager:{scale:scale,atlas:atlas,mapping:mapping},styleVersion:styleVersion}=this.state,{data:data,_dataDiff:_dataDiff,getPosition:getPosition,getColor:getColor,getSize:getSize,getAngle:getAngle,getPixelOffset:getPixelOffset,getBackgroundColor:getBackgroundColor,getBorderColor:getBorderColor,getBorderWidth:getBorderWidth,backgroundPadding:backgroundPadding,background:background,billboard:billboard,fontSettings:fontSettings,outlineWidth:outlineWidth,outlineColor:outlineColor,sizeScale:sizeScale,sizeUnits:sizeUnits,sizeMinPixels:sizeMinPixels,sizeMaxPixels:sizeMaxPixels,transitions:transitions,updateTriggers:updateTriggers}=this.props,CharactersLayerClass=this.getSubLayerClass("characters",multi_icon_layer.A),BackgroundLayerClass=this.getSubLayerClass("background",text_background_layer.A);return[background&&new BackgroundLayerClass({getFillColor:getBackgroundColor,getLineColor:getBorderColor,getLineWidth:getBorderWidth,padding:backgroundPadding,getPosition:getPosition,getSize:getSize,getAngle:getAngle,getPixelOffset:getPixelOffset,billboard:billboard,sizeScale:sizeScale,sizeUnits:sizeUnits,sizeMinPixels:sizeMinPixels,sizeMaxPixels:sizeMaxPixels,transitions:transitions&&{getPosition:transitions.getPosition,getAngle:transitions.getAngle,getSize:transitions.getSize,getFillColor:transitions.getBackgroundColor,getLineColor:transitions.getBorderColor,getLineWidth:transitions.getBorderWidth,getPixelOffset:transitions.getPixelOffset}},this.getSubLayerProps({id:"background",updateTriggers:{getPosition:updateTriggers.getPosition,getAngle:updateTriggers.getAngle,getSize:updateTriggers.getSize,getFillColor:updateTriggers.getBackgroundColor,getLineColor:updateTriggers.getBorderColor,getLineWidth:updateTriggers.getBorderWidth,getPixelOffset:updateTriggers.getPixelOffset,getBoundingRect:{getText:updateTriggers.getText,getTextAnchor:updateTriggers.getTextAnchor,getAlignmentBaseline:updateTriggers.getAlignmentBaseline,styleVersion:styleVersion}}}),{data:data.attributes&&data.attributes.background?{length:data.length,attributes:data.attributes.background}:data,_dataDiff:_dataDiff,autoHighlight:!1,getBoundingRect:this.getBoundingRect}),new CharactersLayerClass({sdf:fontSettings.sdf,smoothing:Number.isFinite(fontSettings.smoothing)?fontSettings.smoothing:DEFAULT_FONT_SETTINGS.smoothing,outlineWidth:outlineWidth/(fontSettings.radius||DEFAULT_FONT_SETTINGS.radius),outlineColor:outlineColor,iconAtlas:atlas,iconMapping:mapping,getPosition:getPosition,getColor:getColor,getSize:getSize,getAngle:getAngle,getPixelOffset:getPixelOffset,billboard:billboard,sizeScale:sizeScale*scale,sizeUnits:sizeUnits,sizeMinPixels:sizeMinPixels*scale,sizeMaxPixels:sizeMaxPixels*scale,transitions:transitions&&{getPosition:transitions.getPosition,getAngle:transitions.getAngle,getColor:transitions.getColor,getSize:transitions.getSize,getPixelOffset:transitions.getPixelOffset}},this.getSubLayerProps({id:"characters",updateTriggers:{all:updateTriggers.getText,getPosition:updateTriggers.getPosition,getAngle:updateTriggers.getAngle,getColor:updateTriggers.getColor,getSize:updateTriggers.getSize,getPixelOffset:updateTriggers.getPixelOffset,getIconOffsets:{getTextAnchor:updateTriggers.getTextAnchor,getAlignmentBaseline:updateTriggers.getAlignmentBaseline,styleVersion:styleVersion}}}),{data:data,_dataDiff:_dataDiff,startIndices:startIndices,numInstances:numInstances,getIconOffsets:this.getIconOffsets,getIcon:getText})]}static set fontAtlasCacheLimit(limit){!function setFontAtlasCacheLimit(limit){log.A.assert(Number.isFinite(limit)&&limit>=3,"Invalid cache limit"),cache=new LRUCache(limit)}(limit)}}},"./node_modules/@deck.gl/react/dist/deckgl.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return deckgl}});var react=__webpack_require__("./node_modules/react/index.js");let channelHandles=1,animationHandles=1;class Timeline{time=0;channels=new Map;animations=new Map;playing=!1;lastEngineTime=-1;constructor(){}addChannel(props){const{delay:delay=0,duration:duration=Number.POSITIVE_INFINITY,rate:rate=1,repeat:repeat=1}=props,channelId=channelHandles++,channel={time:0,delay:delay,duration:duration,rate:rate,repeat:repeat};return this._setChannelTime(channel,this.time),this.channels.set(channelId,channel),channelId}removeChannel(channelId){this.channels.delete(channelId);for(const[animationHandle,animation]of this.animations)animation.channel===channelId&&this.detachAnimation(animationHandle)}isFinished(channelId){const channel=this.channels.get(channelId);return void 0!==channel&&this.time>=channel.delay+channel.duration*channel.repeat}getTime(channelId){if(void 0===channelId)return this.time;const channel=this.channels.get(channelId);return void 0===channel?-1:channel.time}setTime(time){this.time=Math.max(0,time);const channels=this.channels.values();for(const channel of channels)this._setChannelTime(channel,this.time);const animations=this.animations.values();for(const animationData of animations){const{animation:animation,channel:channel}=animationData;animation.setTime(this.getTime(channel))}}play(){this.playing=!0}pause(){this.playing=!1,this.lastEngineTime=-1}reset(){this.setTime(0)}attachAnimation(animation,channelHandle){const animationHandle=animationHandles++;return this.animations.set(animationHandle,{animation:animation,channel:channelHandle}),animation.setTime(this.getTime(channelHandle)),animationHandle}detachAnimation(channelId){this.animations.delete(channelId)}update(engineTime){this.playing&&(-1===this.lastEngineTime&&(this.lastEngineTime=engineTime),this.setTime(this.time+(engineTime-this.lastEngineTime)),this.lastEngineTime=engineTime)}_setChannelTime(channel,time){const offsetTime=time-channel.delay;offsetTime>=channel.duration*channel.repeat?channel.time=channel.duration*channel.rate:(channel.time=Math.max(0,offsetTime)%channel.duration,channel.time*=channel.rate)}}var shaderlib=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/index.js"),constants=__webpack_require__("./node_modules/@deck.gl/core/dist/lifecycle/constants.js"),log=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/log.js"),debug=__webpack_require__("./node_modules/@deck.gl/core/dist/debug/index.js"),flatten=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/flatten.js"),dist=__webpack_require__("./node_modules/@probe.gl/stats/dist/index.js"),load=__webpack_require__("./node_modules/@loaders.gl/core/dist/lib/api/load.js");class Resource{constructor(id,data,context){this._loadCount=0,this._subscribers=new Set,this.id=id,this.context=context,this.setData(data)}subscribe(consumer){this._subscribers.add(consumer)}unsubscribe(consumer){this._subscribers.delete(consumer)}inUse(){return this._subscribers.size>0}delete(){}getData(){return this.isLoaded?this._error?Promise.reject(this._error):this._content:this._loader.then((()=>this.getData()))}setData(data,forceUpdate){if(data===this._data&&!forceUpdate)return;this._data=data;const loadCount=++this._loadCount;let loader=data;"string"==typeof data&&(loader=(0,load.H)(data)),loader instanceof Promise?(this.isLoaded=!1,this._loader=loader.then((result=>{this._loadCount===loadCount&&(this.isLoaded=!0,this._error=void 0,this._content=result)})).catch((error=>{this._loadCount===loadCount&&(this.isLoaded=!0,this._error=error||!0)}))):(this.isLoaded=!0,this._error=void 0,this._content=data);for(const subscriber of this._subscribers)subscriber.onChange(this.getData())}}class ResourceManager{constructor(props){this.protocol=props.protocol||"resource://",this._context={device:props.device,gl:props.device?.gl,resourceManager:this},this._resources={},this._consumers={},this._pruneRequest=null}contains(resourceId){return!!resourceId.startsWith(this.protocol)||resourceId in this._resources}add({resourceId:resourceId,data:data,forceUpdate:forceUpdate=!1,persistent:persistent=!0}){let res=this._resources[resourceId];res?res.setData(data,forceUpdate):(res=new Resource(resourceId,data,this._context),this._resources[resourceId]=res),res.persistent=persistent}remove(resourceId){const res=this._resources[resourceId];res&&(res.delete(),delete this._resources[resourceId])}unsubscribe({consumerId:consumerId}){const consumer=this._consumers[consumerId];if(consumer){for(const requestId in consumer){const request=consumer[requestId],resource=this._resources[request.resourceId];resource&&resource.unsubscribe(request)}delete this._consumers[consumerId],this.prune()}}subscribe({resourceId:resourceId,onChange:onChange,consumerId:consumerId,requestId:requestId="default"}){const{_resources:resources,protocol:protocol}=this;resourceId.startsWith(protocol)&&(resources[resourceId=resourceId.replace(protocol,"")]||this.add({resourceId:resourceId,data:null,persistent:!1}));const res=resources[resourceId];if(this._track(consumerId,requestId,res,onChange),res)return res.getData()}prune(){this._pruneRequest||(this._pruneRequest=setTimeout((()=>this._prune()),0))}finalize(){for(const key in this._resources)this._resources[key].delete()}_track(consumerId,requestId,resource,onChange){const consumers=this._consumers,consumer=consumers[consumerId]=consumers[consumerId]||{};let request=consumer[requestId];const oldResource=request&&request.resourceId&&this._resources[request.resourceId];oldResource&&(oldResource.unsubscribe(request),this.prune()),resource&&(request?(request.onChange=onChange,request.resourceId=resource.id):request={onChange:onChange,resourceId:resource.id},consumer[requestId]=request,resource.subscribe(request))}_prune(){this._pruneRequest=null;for(const key of Object.keys(this._resources)){const res=this._resources[key];res.persistent||res.inUse()||(res.delete(),delete this._resources[key])}}}var viewports_viewport=__webpack_require__("./node_modules/@deck.gl/core/dist/viewports/viewport.js");class LayerManager{constructor(device,props){this._lastRenderedLayers=[],this._needsRedraw=!1,this._needsUpdate=!1,this._nextLayers=null,this._debug=!1,this._defaultShaderModulesChanged=!1,this.activateViewport=viewport=>{(0,debug.A)("layerManager.activateViewport",this,viewport),viewport&&(this.context.viewport=viewport)};const{deck:deck,stats:stats,viewport:viewport,timeline:timeline}=props||{};this.layers=[],this.resourceManager=new ResourceManager({device:device,protocol:"deck://"}),this.context={mousePosition:null,userData:{},layerManager:this,device:device,gl:device?.gl,deck:deck,shaderAssembler:(0,shaderlib.cN)(),defaultShaderModules:[],renderPass:void 0,stats:stats||new dist.Uz({id:"deck.gl"}),viewport:viewport||new viewports_viewport.A({id:"DEFAULT-INITIAL-VIEWPORT"}),timeline:timeline||new Timeline,resourceManager:this.resourceManager,onError:void 0},Object.seal(this)}finalize(){this.resourceManager.finalize();for(const layer of this.layers)this._finalizeLayer(layer)}needsRedraw(opts={clearRedrawFlags:!1}){let redraw=this._needsRedraw;opts.clearRedrawFlags&&(this._needsRedraw=!1);for(const layer of this.layers){const layerNeedsRedraw=layer.getNeedsRedraw(opts);redraw=redraw||layerNeedsRedraw}return redraw}needsUpdate(){return this._nextLayers&&this._nextLayers!==this._lastRenderedLayers?"layers changed":this._defaultShaderModulesChanged?"shader modules changed":this._needsUpdate}setNeedsRedraw(reason){this._needsRedraw=this._needsRedraw||reason}setNeedsUpdate(reason){this._needsUpdate=this._needsUpdate||reason}getLayers({layerIds:layerIds}={}){return layerIds?this.layers.filter((layer=>layerIds.find((layerId=>0===layer.id.indexOf(layerId))))):this.layers}setProps(props){"debug"in props&&(this._debug=props.debug),"userData"in props&&(this.context.userData=props.userData),"layers"in props&&(this._nextLayers=props.layers),"onError"in props&&(this.context.onError=props.onError)}setLayers(newLayers,reason){(0,debug.A)("layerManager.setLayers",this,reason,newLayers),this._lastRenderedLayers=newLayers;const flatLayers=(0,flatten.B)(newLayers,Boolean);for(const layer of flatLayers)layer.context=this.context;this._updateLayers(this.layers,flatLayers)}updateLayers(){const reason=this.needsUpdate();reason&&(this.setNeedsRedraw(`updating layers: ${reason}`),this.setLayers(this._nextLayers||this._lastRenderedLayers,reason)),this._nextLayers=null}addDefaultShaderModule(module){const{defaultShaderModules:defaultShaderModules}=this.context;defaultShaderModules.find((m=>m.name===module.name))||(defaultShaderModules.push(module),this._defaultShaderModulesChanged=!0)}removeDefaultShaderModule(module){const{defaultShaderModules:defaultShaderModules}=this.context,i=defaultShaderModules.findIndex((m=>m.name===module.name));i>=0&&(defaultShaderModules.splice(i,1),this._defaultShaderModulesChanged=!0)}_handleError(stage,error,layer){layer.raiseError(error,`${stage} of ${layer}`)}_updateLayers(oldLayers,newLayers){const oldLayerMap={};for(const oldLayer of oldLayers)oldLayerMap[oldLayer.id]?log.A.warn(`Multiple old layers with same id ${oldLayer.id}`)():oldLayerMap[oldLayer.id]=oldLayer;if(this._defaultShaderModulesChanged){for(const layer of oldLayers)layer.setNeedsUpdate(),layer.setChangeFlags({extensionsChanged:!0});this._defaultShaderModulesChanged=!1}const generatedLayers=[];this._updateSublayersRecursively(newLayers,oldLayerMap,generatedLayers),this._finalizeOldLayers(oldLayerMap);let needsUpdate=!1;for(const layer of generatedLayers)if(layer.hasUniformTransition()){needsUpdate=`Uniform transition in ${layer}`;break}this._needsUpdate=needsUpdate,this.layers=generatedLayers}_updateSublayersRecursively(newLayers,oldLayerMap,generatedLayers){for(const newLayer of newLayers){newLayer.context=this.context;const oldLayer=oldLayerMap[newLayer.id];null===oldLayer&&log.A.warn(`Multiple new layers with same id ${newLayer.id}`)(),oldLayerMap[newLayer.id]=null;let sublayers=null;try{this._debug&&oldLayer!==newLayer&&newLayer.validateProps(),oldLayer?(this._transferLayerState(oldLayer,newLayer),this._updateLayer(newLayer)):this._initializeLayer(newLayer),generatedLayers.push(newLayer),sublayers=newLayer.isComposite?newLayer.getSubLayers():null}catch(err){this._handleError("matching",err,newLayer)}sublayers&&this._updateSublayersRecursively(sublayers,oldLayerMap,generatedLayers)}}_finalizeOldLayers(oldLayerMap){for(const layerId in oldLayerMap){const layer=oldLayerMap[layerId];layer&&this._finalizeLayer(layer)}}_initializeLayer(layer){try{layer._initialize(),layer.lifecycle=constants.VD.INITIALIZED}catch(err){this._handleError("initialization",err,layer)}}_transferLayerState(oldLayer,newLayer){newLayer._transferState(oldLayer),newLayer.lifecycle=constants.VD.MATCHED,newLayer!==oldLayer&&(oldLayer.lifecycle=constants.VD.AWAITING_GC)}_updateLayer(layer){try{layer._update()}catch(err){this._handleError("update",err,layer)}}_finalizeLayer(layer){this._needsRedraw=this._needsRedraw||`finalized ${layer}`,layer.lifecycle=constants.VD.AWAITING_FINALIZATION;try{layer._finalize(),layer.lifecycle=constants.VD.FINALIZED}catch(err){this._handleError("finalization",err,layer)}}}var deep_equal=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/deep-equal.js");class ViewManager{constructor(props){this.views=[],this.width=100,this.height=100,this.viewState={},this.controllers={},this.timeline=props.timeline,this._viewports=[],this._viewportMap={},this._isUpdating=!1,this._needsRedraw="First render",this._needsUpdate="Initialize",this._eventManager=props.eventManager,this._eventCallbacks={onViewStateChange:props.onViewStateChange,onInteractionStateChange:props.onInteractionStateChange},Object.seal(this),this.setProps(props)}finalize(){for(const key in this.controllers){const controller=this.controllers[key];controller&&controller.finalize()}this.controllers={}}needsRedraw(opts={clearRedrawFlags:!1}){const redraw=this._needsRedraw;return opts.clearRedrawFlags&&(this._needsRedraw=!1),redraw}setNeedsUpdate(reason){this._needsUpdate=this._needsUpdate||reason,this._needsRedraw=this._needsRedraw||reason}updateViewStates(){for(const viewId in this.controllers){const controller=this.controllers[viewId];controller&&controller.updateTransition()}}getViewports(rect){return rect?this._viewports.filter((viewport=>viewport.containsPixel(rect))):this._viewports}getViews(){const viewMap={};return this.views.forEach((view=>{viewMap[view.id]=view})),viewMap}getView(viewId){return this.views.find((view=>view.id===viewId))}getViewState(viewOrViewId){const view="string"==typeof viewOrViewId?this.getView(viewOrViewId):viewOrViewId,viewState=view&&this.viewState[view.getViewStateId()]||this.viewState;return view?view.filterViewState(viewState):viewState}getViewport(viewId){return this._viewportMap[viewId]}unproject(xyz,opts){const viewports=this.getViewports(),pixel={x:xyz[0],y:xyz[1]};for(let i=viewports.length-1;i>=0;--i){const viewport=viewports[i];if(viewport.containsPixel(pixel)){const p=xyz.slice();return p[0]-=viewport.x,p[1]-=viewport.y,viewport.unproject(p,opts)}}return null}setProps(props){props.views&&this._setViews(props.views),props.viewState&&this._setViewState(props.viewState),("width"in props||"height"in props)&&this._setSize(props.width,props.height),this._isUpdating||this._update()}_update(){this._isUpdating=!0,this._needsUpdate&&(this._needsUpdate=!1,this._rebuildViewports()),this._needsUpdate&&(this._needsUpdate=!1,this._rebuildViewports()),this._isUpdating=!1}_setSize(width,height){width===this.width&&height===this.height||(this.width=width,this.height=height,this.setNeedsUpdate("Size changed"))}_setViews(views){views=(0,flatten.B)(views,Boolean);this._diffViews(views,this.views)&&this.setNeedsUpdate("views changed"),this.views=views}_setViewState(viewState){if(viewState){!(0,deep_equal.b)(viewState,this.viewState,3)&&this.setNeedsUpdate("viewState changed"),this.viewState=viewState}else log.A.warn("missing `viewState` or `initialViewState`")()}_createController(view,props){return new(0,props.type)({timeline:this.timeline,eventManager:this._eventManager,onViewStateChange:this._eventCallbacks.onViewStateChange,onStateChange:this._eventCallbacks.onInteractionStateChange,makeViewport:viewState=>this.getView(view.id)?.makeViewport({viewState:viewState,width:this.width,height:this.height})})}_updateController(view,viewState,viewport,controller){const controllerProps=view.controller;if(controllerProps&&viewport){const resolvedProps={...viewState,...controllerProps,id:view.id,x:viewport.x,y:viewport.y,width:viewport.width,height:viewport.height};return controller&&controller.constructor===controllerProps.type||(controller=this._createController(view,resolvedProps)),controller&&controller.setProps(resolvedProps),controller}return null}_rebuildViewports(){const{views:views}=this,oldControllers=this.controllers;this._viewports=[],this.controllers={};let invalidateControllers=!1;for(let i=views.length;i--;){const view=views[i],viewState=this.getViewState(view),viewport=view.makeViewport({viewState:viewState,width:this.width,height:this.height});let oldController=oldControllers[view.id];const hasController=Boolean(view.controller);hasController&&!oldController&&(invalidateControllers=!0),!invalidateControllers&&hasController||!oldController||(oldController.finalize(),oldController=null),this.controllers[view.id]=this._updateController(view,viewState,viewport,oldController),viewport&&this._viewports.unshift(viewport)}for(const id in oldControllers){const oldController=oldControllers[id];oldController&&!this.controllers[id]&&oldController.finalize()}this._buildViewportMap()}_buildViewportMap(){this._viewportMap={},this._viewports.forEach((viewport=>{viewport.id&&(this._viewportMap[viewport.id]=this._viewportMap[viewport.id]||viewport)}))}_diffViews(newViews,oldViews){return newViews.length!==oldViews.length||newViews.some(((_,i)=>!newViews[i].equals(oldViews[i])))}}var map_view=__webpack_require__("./node_modules/@deck.gl/core/dist/views/map-view.js"),lighting_effect=__webpack_require__("./node_modules/@deck.gl/core/dist/effects/lighting/lighting-effect.js");const DEFAULT_LIGHTING_EFFECT=new lighting_effect.A;class EffectManager{constructor(context){this._resolvedEffects=[],this._defaultEffects=[],this.effects=[],this._context=context,this._needsRedraw="Initial render",this._setEffects([])}addDefaultEffect(effect){const defaultEffects=this._defaultEffects;if(!defaultEffects.find((e=>e.id===effect.id))){const index=defaultEffects.findIndex((e=>function compareEffects(e1,e2){return(e1.order??1/0)-(e2.order??1/0)}(e,effect)>0));index<0?defaultEffects.push(effect):defaultEffects.splice(index,0,effect),effect.setup(this._context),this._setEffects(this.effects)}}setProps(props){"effects"in props&&((0,deep_equal.b)(props.effects,this.effects,1)||this._setEffects(props.effects))}needsRedraw(opts={clearRedrawFlags:!1}){const redraw=this._needsRedraw;return opts.clearRedrawFlags&&(this._needsRedraw=!1),redraw}getEffects(){return this._resolvedEffects}_setEffects(effects){const oldEffectsMap={};for(const effect of this.effects)oldEffectsMap[effect.id]=effect;const nextEffects=[];for(const effect of effects){const oldEffect=oldEffectsMap[effect.id];let effectToAdd=effect;oldEffect&&oldEffect!==effect?oldEffect.setProps?(oldEffect.setProps(effect.props),effectToAdd=oldEffect):oldEffect.cleanup(this._context):oldEffect||effect.setup(this._context),nextEffects.push(effectToAdd),delete oldEffectsMap[effect.id]}for(const removedEffectId in oldEffectsMap)oldEffectsMap[removedEffectId].cleanup(this._context);this.effects=nextEffects,this._resolvedEffects=nextEffects.concat(this._defaultEffects),effects.some((effect=>effect instanceof lighting_effect.A))||this._resolvedEffects.push(DEFAULT_LIGHTING_EFFECT),this._needsRedraw="effects changed"}finalize(){for(const effect of this._resolvedEffects)effect.cleanup(this._context);this.effects.length=0,this._resolvedEffects.length=0,this._defaultEffects.length=0}}var layers_pass=__webpack_require__("./node_modules/@deck.gl/core/dist/passes/layers-pass.js");class DrawLayersPass extends layers_pass.A{shouldDrawLayer(layer){const{operation:operation}=layer.props;return operation.includes("draw")||operation.includes("terrain")}}const PICKING_BLENDING={blendColorOperation:"add",blendColorSrcFactor:"one",blendColorDstFactor:"zero",blendAlphaOperation:"add",blendAlphaSrcFactor:"constant-alpha",blendAlphaDstFactor:"zero"};class PickLayersPass extends layers_pass.A{constructor(){super(...arguments),this._colorEncoderState=null}render(props){return"pickingFBO"in props?this._drawPickingBuffer(props):super.render(props)}_drawPickingBuffer({layers:layers,layerFilter:layerFilter,views:views,viewports:viewports,onViewportActive:onViewportActive,pickingFBO:pickingFBO,deviceRect:{x:x,y:y,width:width,height:height},cullRect:cullRect,effects:effects,pass:pass="picking",pickZ:pickZ,moduleParameters:moduleParameters}){this.pickZ=pickZ;const colorEncoderState=this._resetColorEncoder(pickZ),scissorRect=[x,y,width,height],renderStatus=super.render({target:pickingFBO,layers:layers,layerFilter:layerFilter,views:views,viewports:viewports,onViewportActive:onViewportActive,cullRect:cullRect,effects:effects?.filter((e=>e.useInPicking)),pass:pass,isPicking:!0,moduleParameters:moduleParameters,clearColor:[0,0,0,0],colorMask:15,scissorRect:scissorRect});this._colorEncoderState=null;return{decodePickingColor:colorEncoderState&&decodeColor.bind(null,colorEncoderState),stats:renderStatus}}shouldDrawLayer(layer){const{pickable:pickable,operation:operation}=layer.props;return pickable&&operation.includes("draw")||operation.includes("terrain")||operation.includes("mask")}getModuleParameters(){return{picking:{isActive:1,isAttribute:this.pickZ},lightSources:{}}}getLayerParameters(layer,layerIndex,viewport){const pickParameters={depthMask:!0,depthTest:!0,depthRange:[0,1],...layer.props.parameters},{pickable:pickable,operation:operation}=layer.props;return!this._colorEncoderState||operation.includes("terrain")?pickParameters.blend=!1:pickable&&operation.includes("draw")&&(Object.assign(pickParameters,PICKING_BLENDING),pickParameters.blend=!0,pickParameters.blendColor=function encodeColor(encoded,layer,viewport){const{byLayer:byLayer,byAlpha:byAlpha}=encoded;let a,entry=byLayer.get(layer);entry?(entry.viewports.push(viewport),a=entry.a):(a=byLayer.size+1,a<=255?(entry={a:a,layer:layer,viewports:[viewport]},byLayer.set(layer,entry),byAlpha[a]=entry):(log.A.warn("Too many pickable layers, only picking the first 255")(),a=0));return[0,0,0,a/255]}(this._colorEncoderState,layer,viewport)),pickParameters}_resetColorEncoder(pickZ){return this._colorEncoderState=pickZ?null:{byLayer:new Map,byAlpha:[]},this._colorEncoderState}}function decodeColor(encoded,pickedColor){const entry=encoded.byAlpha[pickedColor[3]];return entry&&{pickedLayer:entry.layer,pickedViewports:entry.viewports,pickedObjectIndex:entry.layer.decodePickingColor(pickedColor)}}class DeckRenderer{constructor(device){this.device=device,this.layerFilter=null,this.drawPickingColors=!1,this.drawLayersPass=new DrawLayersPass(device),this.pickLayersPass=new PickLayersPass(device),this.renderCount=0,this._needsRedraw="Initial render",this.renderBuffers=[],this.lastPostProcessEffect=null}setProps(props){this.layerFilter!==props.layerFilter&&(this.layerFilter=props.layerFilter,this._needsRedraw="layerFilter changed"),this.drawPickingColors!==props.drawPickingColors&&(this.drawPickingColors=props.drawPickingColors,this._needsRedraw="drawPickingColors changed")}renderLayers(opts){if(!opts.viewports.length)return;const layerPass=this.drawPickingColors?this.pickLayersPass:this.drawLayersPass,renderOpts={layerFilter:this.layerFilter,isPicking:this.drawPickingColors,...opts};renderOpts.effects&&this._preRender(renderOpts.effects,renderOpts);const outputBuffer=this.lastPostProcessEffect?this.renderBuffers[0]:renderOpts.target;this.lastPostProcessEffect&&(renderOpts.clearColor=[0,0,0,0],renderOpts.clearCanvas=!0);const renderStats=layerPass.render({...renderOpts,target:outputBuffer});renderOpts.effects&&this._postRender(renderOpts.effects,renderOpts),this.renderCount++,(0,debug.A)("deckRenderer.renderLayers",this,renderStats,opts)}needsRedraw(opts={clearRedrawFlags:!1}){const redraw=this._needsRedraw;return opts.clearRedrawFlags&&(this._needsRedraw=!1),redraw}finalize(){const{renderBuffers:renderBuffers}=this;for(const buffer of renderBuffers)buffer.delete();renderBuffers.length=0}_preRender(effects,opts){this.lastPostProcessEffect=null,opts.preRenderStats=opts.preRenderStats||{};for(const effect of effects)opts.preRenderStats[effect.id]=effect.preRender(opts),effect.postRender&&(this.lastPostProcessEffect=effect.id);this.lastPostProcessEffect&&this._resizeRenderBuffers()}_resizeRenderBuffers(){const{renderBuffers:renderBuffers}=this,size=this.device.canvasContext.getDrawingBufferSize();0===renderBuffers.length&&[0,1].map((i=>{const texture=this.device.createTexture({sampler:{minFilter:"linear",magFilter:"linear"}});renderBuffers.push(this.device.createFramebuffer({id:`deck-renderbuffer-${i}`,colorAttachments:[texture]}))}));for(const buffer of renderBuffers)buffer.resize(size)}_postRender(effects,opts){const{renderBuffers:renderBuffers}=this,params={...opts,inputBuffer:renderBuffers[0],swapBuffer:renderBuffers[1]};for(const effect of effects)if(effect.postRender){params.target=effect.id===this.lastPostProcessEffect?opts.target:void 0;const buffer=effect.postRender(params);params.inputBuffer=buffer,params.swapBuffer=buffer===renderBuffers[0]?renderBuffers[1]:renderBuffers[0]}}}const NO_PICKED_OBJECT={pickedColor:null,pickedObjectIndex:-1};function getClosestObject({pickedColors:pickedColors,decodePickingColor:decodePickingColor,deviceX:deviceX,deviceY:deviceY,deviceRadius:deviceRadius,deviceRect:deviceRect}){const{x:x,y:y,width:width,height:height}=deviceRect;let minSquareDistanceToCenter=deviceRadius*deviceRadius,closestPixelIndex=-1,i=0;for(let row=0;row<height;row++){const dy=row+y-deviceY,dy2=dy*dy;if(dy2>minSquareDistanceToCenter)i+=4*width;else for(let col=0;col<width;col++){if(pickedColors[i+3]-1>=0){const dx=col+x-deviceX,d2=dx*dx+dy2;d2<=minSquareDistanceToCenter&&(minSquareDistanceToCenter=d2,closestPixelIndex=i)}i+=4}}if(closestPixelIndex>=0){const pickedColor=pickedColors.slice(closestPixelIndex,closestPixelIndex+4),pickedObject=decodePickingColor(pickedColor);if(pickedObject){const dy=Math.floor(closestPixelIndex/4/width),dx=closestPixelIndex/4-dy*width;return{...pickedObject,pickedColor:pickedColor,pickedX:x+dx,pickedY:y+dy}}log.A.error("Picked non-existent layer. Is picking buffer corrupt?")()}return NO_PICKED_OBJECT}function getEmptyPickingInfo({pickInfo:pickInfo,viewports:viewports,pixelRatio:pixelRatio,x:x,y:y,z:z}){let coordinate,pickedViewport=viewports[0];if(viewports.length>1&&(pickedViewport=function getViewportFromCoordinates(viewports,pixel){for(let i=viewports.length-1;i>=0;i--){const viewport=viewports[i];if(viewport.containsPixel(pixel))return viewport}return viewports[0]}(pickInfo?.pickedViewports||viewports,{x:x,y:y})),pickedViewport){const point=[x-pickedViewport.x,y-pickedViewport.y];void 0!==z&&(point[2]=z),coordinate=pickedViewport.unproject(point)}return{color:null,layer:null,viewport:pickedViewport,index:-1,picked:!1,x:x,y:y,pixel:[x,y],coordinate:coordinate,devicePixel:pickInfo&&"pickedX"in pickInfo?[pickInfo.pickedX,pickInfo.pickedY]:void 0,pixelRatio:pixelRatio}}function processPickInfo(opts){const{pickInfo:pickInfo,lastPickedInfo:lastPickedInfo,mode:mode,layers:layers}=opts,{pickedColor:pickedColor,pickedLayer:pickedLayer,pickedObjectIndex:pickedObjectIndex}=pickInfo,affectedLayers=pickedLayer?[pickedLayer]:[];if("hover"===mode){const lastPickedPixelIndex=lastPickedInfo.index,lastPickedLayerId=lastPickedInfo.layerId,pickedLayerId=pickedLayer?pickedLayer.props.id:null;if(pickedLayerId!==lastPickedLayerId||pickedObjectIndex!==lastPickedPixelIndex){if(pickedLayerId!==lastPickedLayerId){const lastPickedLayer=layers.find((layer=>layer.props.id===lastPickedLayerId));lastPickedLayer&&affectedLayers.unshift(lastPickedLayer)}lastPickedInfo.layerId=pickedLayerId,lastPickedInfo.index=pickedObjectIndex,lastPickedInfo.info=null}}const baseInfo=getEmptyPickingInfo(opts),infos=new Map;return infos.set(null,baseInfo),affectedLayers.forEach((layer=>{let info={...baseInfo};layer===pickedLayer&&(info.color=pickedColor,info.index=pickedObjectIndex,info.picked=!0),info=getLayerPickingInfo({layer:layer,info:info,mode:mode});const rootLayer=info.layer;layer===pickedLayer&&"hover"===mode&&(lastPickedInfo.info=info),infos.set(rootLayer.id,info),"hover"===mode&&rootLayer.updateAutoHighlight(info)})),infos}function getLayerPickingInfo({layer:layer,info:info,mode:mode}){for(;layer&&info;){const sourceLayer=info.layer||null;info.sourceLayer=sourceLayer,info.layer=layer,info=layer.getPickingInfo({info:info,mode:mode,sourceLayer:sourceLayer}),layer=layer.parent}return info}class DeckPicker{constructor(device){this._pickable=!0,this.device=device,this.pickLayersPass=new PickLayersPass(device),this.lastPickedInfo={index:-1,layerId:null,info:null}}setProps(props){"layerFilter"in props&&(this.layerFilter=props.layerFilter),"_pickable"in props&&(this._pickable=props._pickable)}finalize(){this.pickingFBO&&this.pickingFBO.destroy(),this.depthFBO&&this.depthFBO.destroy()}pickObject(opts){return this._pickClosestObject(opts)}pickObjects(opts){return this._pickVisibleObjects(opts)}getLastPickedObject({x:x,y:y,layers:layers,viewports:viewports},lastPickedInfo=this.lastPickedInfo.info){const lastPickedLayerId=lastPickedInfo&&lastPickedInfo.layer&&lastPickedInfo.layer.id,lastPickedViewportId=lastPickedInfo&&lastPickedInfo.viewport&&lastPickedInfo.viewport.id,layer=lastPickedLayerId?layers.find((l=>l.id===lastPickedLayerId)):null,viewport=lastPickedViewportId&&viewports.find((v=>v.id===lastPickedViewportId))||viewports[0],coordinate=viewport&&viewport.unproject([x-viewport.x,y-viewport.y]),info={x:x,y:y,viewport:viewport,coordinate:coordinate,layer:layer};return{...lastPickedInfo,...info}}_resizeBuffer(){if(!this.pickingFBO&&(this.pickingFBO=this.device.createFramebuffer({colorAttachments:["rgba8unorm"],depthStencilAttachment:"depth16unorm"}),this.device.isTextureFormatRenderable("rgba32float"))){const depthFBO=this.device.createFramebuffer({colorAttachments:["rgba32float"],depthStencilAttachment:"depth16unorm"});this.depthFBO=depthFBO}const{canvas:canvas}=this.device.getCanvasContext();this.pickingFBO?.resize({width:canvas.width,height:canvas.height}),this.depthFBO?.resize({width:canvas.width,height:canvas.height})}_getPickable(layers){if(!1===this._pickable)return null;const pickableLayers=layers.filter((layer=>this.pickLayersPass.shouldDrawLayer(layer)&&!layer.isComposite));return pickableLayers.length?pickableLayers:null}_pickClosestObject({layers:layers,views:views,viewports:viewports,x:x,y:y,radius:radius=0,depth:depth=1,mode:mode="query",unproject3D:unproject3D,onViewportActive:onViewportActive,effects:effects}){const pixelRatio=this.device.canvasContext.cssToDeviceRatio(),pickableLayers=this._getPickable(layers);if(!pickableLayers||0===viewports.length)return{result:[],emptyInfo:getEmptyPickingInfo({viewports:viewports,x:x,y:y,pixelRatio:pixelRatio})};this._resizeBuffer();const devicePixelRange=this.device.canvasContext.cssToDevicePixels([x,y],!0),devicePixel=[devicePixelRange.x+Math.floor(devicePixelRange.width/2),devicePixelRange.y+Math.floor(devicePixelRange.height/2)],deviceRadius=Math.round(radius*pixelRatio),{width:width,height:height}=this.pickingFBO,deviceRect=this._getPickingRect({deviceX:devicePixel[0],deviceY:devicePixel[1],deviceRadius:deviceRadius,deviceWidth:width,deviceHeight:height}),cullRect={x:x-radius,y:y-radius,width:2*radius+1,height:2*radius+1};let infos;const result=[],affectedLayers=new Set;for(let i=0;i<depth;i++){let pickInfo,z;if(deviceRect){pickInfo=getClosestObject({...this._drawAndSample({layers:pickableLayers,views:views,viewports:viewports,onViewportActive:onViewportActive,deviceRect:deviceRect,cullRect:cullRect,effects:effects,pass:`picking:${mode}`}),deviceX:devicePixel[0],deviceY:devicePixel[1],deviceRadius:deviceRadius,deviceRect:deviceRect})}else pickInfo={pickedColor:null,pickedObjectIndex:-1};if(pickInfo.pickedLayer&&unproject3D&&this.depthFBO){const{pickedColors:pickedColors2}=this._drawAndSample({layers:[pickInfo.pickedLayer],views:views,viewports:viewports,onViewportActive:onViewportActive,deviceRect:{x:pickInfo.pickedX,y:pickInfo.pickedY,width:1,height:1},cullRect:cullRect,effects:effects,pass:`picking:${mode}:z`},!0);pickedColors2[3]&&(z=pickedColors2[0])}pickInfo.pickedLayer&&i+1<depth&&(affectedLayers.add(pickInfo.pickedLayer),pickInfo.pickedLayer.disablePickingIndex(pickInfo.pickedObjectIndex)),infos=processPickInfo({pickInfo:pickInfo,lastPickedInfo:this.lastPickedInfo,mode:mode,layers:pickableLayers,viewports:viewports,x:x,y:y,z:z,pixelRatio:pixelRatio});for(const info of infos.values())info.layer&&result.push(info);if(!pickInfo.pickedColor)break}for(const layer of affectedLayers)layer.restorePickingColors();return{result:result,emptyInfo:infos.get(null)}}_pickVisibleObjects({layers:layers,views:views,viewports:viewports,x:x,y:y,width:width=1,height:height=1,mode:mode="query",maxObjects:maxObjects=null,onViewportActive:onViewportActive,effects:effects}){const pickableLayers=this._getPickable(layers);if(!pickableLayers||0===viewports.length)return[];this._resizeBuffer();const pixelRatio=this.device.canvasContext.cssToDeviceRatio(),leftTop=this.device.canvasContext.cssToDevicePixels([x,y],!0),deviceLeft=leftTop.x,deviceTop=leftTop.y+leftTop.height,rightBottom=this.device.canvasContext.cssToDevicePixels([x+width,y+height],!0),deviceRight=rightBottom.x+rightBottom.width,deviceBottom=rightBottom.y,deviceRect={x:deviceLeft,y:deviceBottom,width:deviceRight-deviceLeft,height:deviceTop-deviceBottom},pickInfos=function getUniqueObjects({pickedColors:pickedColors,decodePickingColor:decodePickingColor}){const uniqueColors=new Map;if(pickedColors)for(let i=0;i<pickedColors.length;i+=4)if(pickedColors[i+3]-1>=0){const pickedColor=pickedColors.slice(i,i+4),colorKey=pickedColor.join(",");if(!uniqueColors.has(colorKey)){const pickedObject=decodePickingColor(pickedColor);pickedObject?uniqueColors.set(colorKey,{...pickedObject,color:pickedColor}):log.A.error("Picked non-existent layer. Is picking buffer corrupt?")()}}return Array.from(uniqueColors.values())}(this._drawAndSample({layers:pickableLayers,views:views,viewports:viewports,onViewportActive:onViewportActive,deviceRect:deviceRect,cullRect:{x:x,y:y,width:width,height:height},effects:effects,pass:`picking:${mode}`})),uniquePickedObjects=new Map,uniqueInfos=[],limitMaxObjects=Number.isFinite(maxObjects);for(let i=0;i<pickInfos.length&&!(limitMaxObjects&&uniqueInfos.length>=maxObjects);i++){const pickInfo=pickInfos[i];let info={color:pickInfo.pickedColor,layer:null,index:pickInfo.pickedObjectIndex,picked:!0,x:x,y:y,pixelRatio:pixelRatio};info=getLayerPickingInfo({layer:pickInfo.pickedLayer,info:info,mode:mode});const pickedLayerId=info.layer.id;uniquePickedObjects.has(pickedLayerId)||uniquePickedObjects.set(pickedLayerId,new Set);const uniqueObjectsInLayer=uniquePickedObjects.get(pickedLayerId),pickedObjectKey=info.object??info.index;uniqueObjectsInLayer.has(pickedObjectKey)||(uniqueObjectsInLayer.add(pickedObjectKey),uniqueInfos.push(info))}return uniqueInfos}_drawAndSample({layers:layers,views:views,viewports:viewports,onViewportActive:onViewportActive,deviceRect:deviceRect,cullRect:cullRect,effects:effects,pass:pass},pickZ=!1){const pickingFBO=pickZ?this.depthFBO:this.pickingFBO,opts={layers:layers,layerFilter:this.layerFilter,views:views,viewports:viewports,onViewportActive:onViewportActive,pickingFBO:pickingFBO,deviceRect:deviceRect,cullRect:cullRect,effects:effects,pass:pass,pickZ:pickZ,preRenderStats:{}};for(const effect of effects)effect.useInPicking&&(opts.preRenderStats[effect.id]=effect.preRender(opts));const{decodePickingColor:decodePickingColor}=this.pickLayersPass.render(opts),{x:x,y:y,width:width,height:height}=deviceRect,pickedColors=new(pickZ?Float32Array:Uint8Array)(width*height*4);return this.device.readPixelsToArrayWebGL(pickingFBO,{sourceX:x,sourceY:y,sourceWidth:width,sourceHeight:height,target:pickedColors}),{pickedColors:pickedColors,decodePickingColor:decodePickingColor}}_getPickingRect({deviceX:deviceX,deviceY:deviceY,deviceRadius:deviceRadius,deviceWidth:deviceWidth,deviceHeight:deviceHeight}){const x=Math.max(0,deviceX-deviceRadius),y=Math.max(0,deviceY-deviceRadius),width=Math.min(deviceWidth,deviceX+deviceRadius+1)-x,height=Math.min(deviceHeight,deviceY+deviceRadius+1)-y;return width<=0||height<=0?null:{x:x,y:y,width:width,height:height}}}var lib_constants=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/constants.js");const PLACEMENTS={"top-left":{top:0,left:0},"top-right":{top:0,right:0},"bottom-left":{bottom:0,left:0},"bottom-right":{bottom:0,right:0},fill:{top:0,left:0,bottom:0,right:0}},DEFAULT_PLACEMENT="top-left";class WidgetManager{constructor({deck:deck,parentElement:parentElement}){this.defaultWidgets=[],this.widgets=[],this.resolvedWidgets=[],this.containers={},this.lastViewports={},this.deck=deck,this.parentElement=parentElement}getWidgets(){return this.resolvedWidgets}setProps(props){props.widgets&&!(0,deep_equal.b)(props.widgets,this.widgets,1)&&this._setWidgets(props.widgets)}finalize(){for(const widget of this.getWidgets())this._remove(widget);this.defaultWidgets.length=0,this.resolvedWidgets.length=0;for(const id in this.containers)this.containers[id].remove()}addDefault(widget){this.defaultWidgets.find((w=>w.id===widget.id))||(this._add(widget),this.defaultWidgets.push(widget),this._setWidgets(this.widgets))}_setWidgets(nextWidgets){const oldWidgetMap={};for(const widget of this.resolvedWidgets)oldWidgetMap[widget.id]=widget;this.resolvedWidgets.length=0;for(const widget of this.defaultWidgets)oldWidgetMap[widget.id]=null,this.resolvedWidgets.push(widget);for(let widget of nextWidgets){const oldWidget=oldWidgetMap[widget.id];oldWidget?oldWidget.viewId!==widget.viewId||oldWidget.placement!==widget.placement?(this._remove(oldWidget),this._add(widget)):widget!==oldWidget&&(oldWidget.setProps(widget.props),widget=oldWidget):this._add(widget),oldWidgetMap[widget.id]=null,this.resolvedWidgets.push(widget)}for(const id in oldWidgetMap){const oldWidget=oldWidgetMap[id];oldWidget&&this._remove(oldWidget)}this.widgets=nextWidgets}_add(widget){const{viewId:viewId=null,placement:placement=DEFAULT_PLACEMENT}=widget,element=widget.onAdd({deck:this.deck,viewId:viewId});element&&this._getContainer(viewId,placement).append(element),widget._element=element}_remove(widget){widget.onRemove(),widget._element&&widget._element.remove(),widget._element=void 0}_getContainer(viewId,placement){const containerId=viewId||"__root";let viewContainer=this.containers[containerId];viewContainer||(viewContainer=document.createElement("div"),viewContainer.style.pointerEvents="none",viewContainer.style.position="absolute",viewContainer.style.overflow="hidden",this.parentElement?.append(viewContainer),this.containers[containerId]=viewContainer);let container=viewContainer.querySelector(`.${placement}`);return container||(container=document.createElement("div"),container.className=placement,container.style.position="absolute",container.style.zIndex="2",Object.assign(container.style,PLACEMENTS[placement]),viewContainer.append(container)),container}_updateContainers(){const canvasWidth=this.deck.width,canvasHeight=this.deck.height;for(const id in this.containers){const viewport=this.lastViewports[id]||null,visible="__root"===id||viewport,container=this.containers[id];visible?(container.style.display="block",container.style.left=`${viewport?viewport.x:0}px`,container.style.top=`${viewport?viewport.y:0}px`,container.style.width=`${viewport?viewport.width:canvasWidth}px`,container.style.height=`${viewport?viewport.height:canvasHeight}px`):container.style.display="none"}}onRedraw({viewports:viewports,layers:layers}){const viewportsById=viewports.reduce(((acc,v)=>(acc[v.id]=v,acc)),{}),{lastViewports:lastViewports}=this;for(const widget of this.getWidgets()){const{viewId:viewId}=widget;if(viewId){const viewport=viewportsById[viewId];viewport&&(widget.onViewportChange&&!viewport.equals(lastViewports[viewId])&&widget.onViewportChange(viewport),widget.onRedraw?.({viewports:[viewport],layers:layers}))}else{if(widget.onViewportChange)for(const viewport of viewports)viewport.equals(lastViewports[viewport.id])||widget.onViewportChange(viewport);widget.onRedraw?.({viewports:viewports,layers:layers})}}this.lastViewports=viewportsById,this._updateContainers()}onHover(info,event){for(const widget of this.getWidgets()){const{viewId:viewId}=widget;viewId&&viewId!==info.viewport?.id||widget.onHover?.(info,event)}}onEvent(info,event){const eventOptions=lib_constants.qY[event.type];if(eventOptions)for(const widget of this.getWidgets()){const{viewId:viewId}=widget;viewId&&viewId!==info.viewport?.id||widget[eventOptions.handler]?.(info,event)}}}const defaultStyle={zIndex:"1",position:"absolute",pointerEvents:"none",color:"#a0a7b4",backgroundColor:"#29323c",padding:"10px",top:"0",left:"0",display:"none"};class Tooltip{constructor(){this.id="default-tooltip",this.placement="fill",this.props={},this.isVisible=!1}onAdd({deck:deck}){const el=document.createElement("div");return el.className="deck-tooltip",Object.assign(el.style,defaultStyle),this.deck=deck,this.element=el,el}onRemove(){this.deck=void 0,this.element=void 0}setProps(){}onViewportChange(viewport){this.isVisible&&viewport.id===this.lastViewport?.id&&viewport!==this.lastViewport&&this.setTooltip(null)}onHover(info){const{deck:deck}=this,getTooltip=deck&&deck.props.getTooltip;if(!getTooltip)return;const displayInfo=getTooltip(info);this.lastViewport=info.viewport,this.setTooltip(displayInfo,info.x,info.y)}setTooltip(displayInfo,x,y){const el=this.element;if(el){if("string"==typeof displayInfo)el.innerText=displayInfo;else{if(!displayInfo)return this.isVisible=!1,void(el.style.display="none");displayInfo.text&&(el.innerText=displayInfo.text),displayInfo.html&&(el.innerHTML=displayInfo.html),displayInfo.className&&(el.className=displayInfo.className)}this.isVisible=!0,el.style.display="block",el.style.transform=`translate(${x}px, ${y}px)`,displayInfo&&"object"==typeof displayInfo&&"style"in displayInfo&&Object.assign(el.style,displayInfo.style)}}}var typed_array_manager=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/typed-array-manager.js"),register_loaders=__webpack_require__("./node_modules/@loaders.gl/core/dist/lib/api/register-loaders.js"),image_loader=__webpack_require__("./node_modules/@loaders.gl/images/dist/image-loader.js");var json_loader={dataType:null,batchType:null,id:"JSON",name:"JSON",module:"",version:"",options:{},extensions:["json","geojson"],mimeTypes:["application/json","application/geo+json"],testText:function isJSON(text){const firstChar=text[0],lastChar=text[text.length-1];return"{"===firstChar&&"}"===lastChar||"["===firstChar&&"]"===lastChar},parseTextSync:JSON.parse};const VERSION=function checkVersion(){const existingVersion=globalThis.deck&&globalThis.deck.VERSION;if(existingVersion&&"9.0.30"!==existingVersion)throw new Error(`deck.gl - multiple versions detected: ${existingVersion} vs 9.0.30`);return existingVersion||(log.A.log(1,"deck.gl 9.0.30")(),globalThis.deck={...globalThis.deck,VERSION:"9.0.30",version:"9.0.30",log:log.A,_registerLoggers:debug.k},(0,register_loaders.mk)([json_loader,[image_loader.$,{imagebitmap:{premultiplyAlpha:"none"}}]])),"9.0.30"}();var is_browser=__webpack_require__("./node_modules/@probe.gl/env/dist/lib/is-browser.js"),utils_log=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/log.js");const lumaStats=new class StatsManager{stats=new Map;getStats(name){return this.get(name)}get(name){return this.stats.has(name)||this.stats.set(name,new dist.Uz({id:name})),this.stats.get(name)}};const init_VERSION=function initializeLuma(){if(globalThis.luma&&"9.0.27"!==globalThis.luma.VERSION)throw new Error(`luma.gl - multiple VERSIONs detected: ${globalThis.luma.VERSION} vs 9.0.27`);return globalThis.luma||((0,is_browser.B)()&&utils_log.R.log(1,"9.0.27 - set luma.log.level=1 (or higher) to trace rendering")(),globalThis.luma=globalThis.luma||{VERSION:"9.0.27",version:"9.0.27",log:utils_log.R,stats:lumaStats}),"9.0.27"}();var utils=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/utils.js"),buffer=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/buffer.js"),decode_data_type=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/type-utils/decode-data-type.js");const COMPRESSED_TEXTURE_FORMAT_PREFIXES=["bc1","bc2","bc3","bc4","bc5","bc6","bc7","etc1","etc2","eac","atc","astc","pvrtc"],REGEX=/^(rg?b?a?)([0-9]*)([a-z]*)(-srgb)?(-webgl|-unsized)?$/;function decodeTextureFormat(format){const matches=REGEX.exec(format);if(matches){const[,format,length,type,srgb,suffix]=matches;if(format){const dataType=`${type}${length}`,decodedType=(0,decode_data_type.l)(dataType);return{format:format,components:format.length,srgb:"-srgb"===srgb,unsized:"-unsized"===suffix,webgl:"-webgl"===suffix,...decodedType}}}return function decodeNonStandardFormat(format){const data=EXCEPTIONS[format];if(!data)throw new Error(`Unknown format ${format}`);return{format:data.format||"",components:data.components||data.format?.length||1,byteLength:data.bpp||1,srgb:!1,unsized:!1}}(format)}const EXCEPTIONS={"rgba4unorm-webgl":{format:"rgba",bpp:2},"rgb565unorm-webgl":{format:"rgb",bpp:2},"rgb5a1unorm-webgl":{format:"rgba",bbp:2},rgb9e5ufloat:{format:"rgb",bbp:4},rg11b10ufloat:{format:"rgb",bbp:4},rgb10a2unorm:{format:"rgba",bbp:4},"rgb10a2uint-webgl":{format:"rgba",bbp:4},stencil8:{components:1,bpp:1,a:"stencil"},depth16unorm:{components:1,bpp:2,a:"depth"},depth24plus:{components:1,bpp:3,a:"depth"},depth32float:{components:1,bpp:4,a:"depth"},"depth24plus-stencil8":{components:2,bpp:4,a:"depth-stencil"},"depth24unorm-stencil8":{components:2,bpp:4,a:"depth-stencil"},"depth32float-stencil8":{components:2,bpp:4,a:"depth-stencil"}};class DeviceLimits{}class DeviceFeatures{features;disabledFeatures;constructor(features=[],disabledFeatures){this.features=new Set(features),this.disabledFeatures=disabledFeatures||{}}*[Symbol.iterator](){yield*this.features}has(feature){return!this.disabledFeatures[feature]&&this.features.has(feature)}}class Device{static defaultProps={id:null,canvas:null,container:null,manageState:!0,width:800,height:600,requestMaxLimits:!0,debug:Boolean(utils_log.R.get("debug")),spector:Boolean(utils_log.R.get("spector")||utils_log.R.get("spectorjs")),break:[],initalizeFeatures:!0,disabledFeatures:{"compilation-status-async-webgl":!0},gl:null,onError:error=>utils_log.R.error(error.message)};get[Symbol.toStringTag](){return"Device"}static VERSION=init_VERSION;constructor(props){this.props={...Device.defaultProps,...props},this.id=this.props.id||(0,utils.L)(this[Symbol.toStringTag].toLowerCase())}id;props;userData={};statsManager=lumaStats;_lumaData={};isTextureFormatCompressed(format){return function isTextureFormatCompressed(textureFormat){return COMPRESSED_TEXTURE_FORMAT_PREFIXES.some((prefix=>textureFormat.startsWith(prefix)))}(format)}loseDevice(){return!1}getCanvasContext(){if(!this.canvasContext)throw new Error("Device has no CanvasContext");return this.canvasContext}createTexture(props){return(props instanceof Promise||"string"==typeof props)&&(props={data:props}),this._createTexture(props)}createCommandEncoder(props={}){throw new Error("not implemented")}readPixelsToArrayWebGL(source,options){throw new Error("not implemented")}readPixelsToBufferWebGL(source,options){throw new Error("not implemented")}setParametersWebGL(parameters){throw new Error("not implemented")}getParametersWebGL(parameters){throw new Error("not implemented")}withParametersWebGL(parameters,func){throw new Error("not implemented")}clearWebGL(options){throw new Error("not implemented")}resetWebGL(){throw new Error("not implemented")}timestamp=0;incrementTimestamp(){return this.timestamp++}onError(error){this.props.onError(error)}_getBufferProps(props){(props instanceof ArrayBuffer||ArrayBuffer.isView(props))&&(props={data:props});const newProps={...props};return(props.usage||0)&buffer.h.INDEX&&!props.indexType&&(props.data instanceof Uint32Array?newProps.indexType="uint32":props.data instanceof Uint16Array?newProps.indexType="uint16":utils_log.R.warn("indices buffer content must be of integer type")()),newProps}}var utils_assert=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/assert.js");const deviceMap=new Map;class luma{static defaultProps={...Device.defaultProps,type:"best-available",devices:void 0};static stats=lumaStats;static log=utils_log.R;static registerDevices(deviceClasses){for(const deviceClass of deviceClasses)(0,utils_assert.v)(deviceClass.type&&deviceClass.isSupported&&deviceClass.create),deviceMap.set(deviceClass.type,deviceClass)}static getAvailableDevices(){return Array.from(deviceMap).map((Device=>Device.type))}static getSupportedDevices(){return Array.from(deviceMap).filter((Device=>Device.isSupported())).map((Device=>Device.type))}static setDefaultDeviceProps(props){Object.assign(Device.defaultProps,props)}static async attachDevice(props){const devices=getDeviceMap(props.devices)||deviceMap;if(props.handle instanceof WebGL2RenderingContext){const WebGLDevice=devices.get("webgl");if(WebGLDevice)return await WebGLDevice.attach(props.handle)}if(null===props.handle){const UnknownDevice=devices.get("unknown");if(UnknownDevice)return await UnknownDevice.attach(null)}throw new Error("Failed to attach device. Ensure `@luma.gl/webgl` and/or `@luma.gl/webgpu` modules are imported.")}static async createDevice(props={}){(props={...luma.defaultProps,...props}).gl&&(props.type="webgl");const devices=getDeviceMap(props.devices)||deviceMap;let WebGPUDevice,WebGLDevice;switch(props.type){case"webgpu":if(WebGPUDevice=devices.get("webgpu"),WebGPUDevice)return await WebGPUDevice.create(props);break;case"webgl":if(WebGLDevice=devices.get("webgl"),WebGLDevice)return await WebGLDevice.create(props);break;case"unknown":const UnknownDevice=devices.get("unknown");if(UnknownDevice)return await UnknownDevice.create(props);break;case"best-available":if(WebGPUDevice=devices.get("webgpu"),WebGPUDevice?.isSupported?.())return await WebGPUDevice.create(props);if(WebGLDevice=devices.get("webgl"),WebGLDevice?.isSupported?.())return await WebGLDevice.create(props)}throw new Error("No matching device found. Ensure `@luma.gl/webgl` and/or `@luma.gl/webgpu` modules are imported.")}static enforceWebGL2(enforce=!0){const prototype=HTMLCanvasElement.prototype;if(!enforce&&prototype.originalGetContext)return prototype.getContext=prototype.originalGetContext,void(prototype.originalGetContext=void 0);prototype.originalGetContext=prototype.getContext,prototype.getContext=function(contextId,options){return"webgl"===contextId||"experimental-webgl"===contextId?this.originalGetContext("webgl2",options):this.originalGetContext(contextId,options)}}}function getDeviceMap(deviceClasses){if(!deviceClasses||0===deviceClasses?.length)return null;const map=new Map;for(const deviceClass of deviceClasses)map.set(deviceClass.type,deviceClass);return map}const isPage=(0,is_browser.B)()&&"undefined"!=typeof document,isPageLoaded=()=>isPage&&"complete"===document.readyState,DEFAULT_CANVAS_CONTEXT_PROPS={canvas:null,width:800,height:600,useDevicePixels:!0,autoResize:!0,container:null,visible:!0,colorSpace:"srgb",alphaMode:"opaque"};class CanvasContext{id;props;canvas;htmlCanvas;offscreenCanvas;type;width=1;height=1;resizeObserver;_canvasSizeInfo={clientWidth:0,clientHeight:0,devicePixelRatio:1};static get isPageLoaded(){return isPageLoaded()}static pageLoaded=function getPageLoadPromise(){if(isPageLoaded()||"undefined"==typeof window)return Promise.resolve();return new Promise((resolve=>{window.addEventListener("load",(()=>resolve()))}))}();constructor(props){if(this.props={...DEFAULT_CANVAS_CONTEXT_PROPS,...props},props=this.props,!(0,is_browser.B)())return this.id="node-canvas-context",this.type="node",this.width=this.props.width,this.height=this.props.height,void(this.canvas=null);if(props.canvas)"string"==typeof props.canvas?this.canvas=function getCanvasFromDOM(canvasId){const canvas=document.getElementById(canvasId);if(!canvas&&!isPageLoaded())throw new Error(`Accessing '${canvasId}' before page was loaded`);if(!(canvas instanceof HTMLCanvasElement))throw new Error("Object is not a canvas element");return canvas}(props.canvas):this.canvas=props.canvas;else{const canvas=function createCanvas(props){const{width:width,height:height}=props,targetCanvas=document.createElement("canvas");return targetCanvas.id="lumagl-auto-created-canvas",targetCanvas.width=width||1,targetCanvas.height=height||1,targetCanvas.style.width=Number.isFinite(width)?`${width}px`:"100%",targetCanvas.style.height=Number.isFinite(height)?`${height}px`:"100%",targetCanvas}(props),container=function getContainer(container){if("string"==typeof container){const element=document.getElementById(container);if(!element&&!isPageLoaded())throw new Error(`Accessing '${container}' before page was loaded`);if(!element)throw new Error(`${container} is not an HTML element`);return element}if(container)return container;return document.body}(props?.container||null);container.insertBefore(canvas,container.firstChild),this.canvas=canvas,props?.visible||(this.canvas.style.visibility="hidden")}this.canvas instanceof HTMLCanvasElement?(this.id=this.canvas.id,this.type="html-canvas",this.htmlCanvas=this.canvas):(this.id="offscreen-canvas",this.type="offscreen-canvas",this.offscreenCanvas=this.canvas),this.canvas instanceof HTMLCanvasElement&&props.autoResize&&(this.resizeObserver=new ResizeObserver((entries=>{for(const entry of entries)entry.target===this.canvas&&this.update()})),this.resizeObserver.observe(this.canvas))}getDevicePixelRatio(useDevicePixels){if("undefined"!=typeof OffscreenCanvas&&this.canvas instanceof OffscreenCanvas)return 1;if(!(useDevicePixels=void 0===useDevicePixels?this.props.useDevicePixels:useDevicePixels)||useDevicePixels<=0)return 1;if(!0===useDevicePixels){return"undefined"!=typeof window&&window.devicePixelRatio||1}return useDevicePixels}getPixelSize(){switch(this.type){case"node":return[this.width,this.height];case"offscreen-canvas":return[this.canvas.width,this.canvas.height];case"html-canvas":const dpr=this.getDevicePixelRatio(),canvas=this.canvas;return canvas.parentElement?[canvas.clientWidth*dpr,canvas.clientHeight*dpr]:[this.canvas.width,this.canvas.height];default:throw new Error(this.type)}}getAspect(){const[width,height]=this.getPixelSize();return width/height}cssToDeviceRatio(){try{const[drawingBufferWidth]=this.getDrawingBufferSize(),{clientWidth:clientWidth}=this._canvasSizeInfo;return clientWidth?drawingBufferWidth/clientWidth:1}catch{return 1}}cssToDevicePixels(cssPixel,yInvert=!0){const ratio=this.cssToDeviceRatio(),[width,height]=this.getDrawingBufferSize();return function scalePixels(pixel,ratio,width,height,yInvert){const point=pixel,x=scaleX(point[0],ratio,width);let y=scaleY(point[1],ratio,height,yInvert),t=scaleX(point[0]+1,ratio,width);const xHigh=t===width-1?t:t-1;let yHigh;t=scaleY(point[1]+1,ratio,height,yInvert),yInvert?(t=0===t?t:t+1,yHigh=y,y=t):yHigh=t===height-1?t:t-1;return{x:x,y:y,width:Math.max(xHigh-x+1,1),height:Math.max(yHigh-y+1,1)}}(cssPixel,ratio,width,height,yInvert)}setDevicePixelRatio(devicePixelRatio,options={}){if(!this.htmlCanvas)return;let clientWidth="width"in options?options.width:this.htmlCanvas.clientWidth,clientHeight="height"in options?options.height:this.htmlCanvas.clientHeight;clientWidth&&clientHeight||(utils_log.R.log(1,"Canvas clientWidth/clientHeight is 0")(),devicePixelRatio=1,clientWidth=this.htmlCanvas.width||1,clientHeight=this.htmlCanvas.height||1);const cachedSize=this._canvasSizeInfo;if(cachedSize.clientWidth!==clientWidth||cachedSize.clientHeight!==clientHeight||cachedSize.devicePixelRatio!==devicePixelRatio){let clampedPixelRatio=devicePixelRatio;const canvasWidth=Math.floor(clientWidth*clampedPixelRatio),canvasHeight=Math.floor(clientHeight*clampedPixelRatio);this.htmlCanvas.width=canvasWidth,this.htmlCanvas.height=canvasHeight;const[drawingBufferWidth,drawingBufferHeight]=this.getDrawingBufferSize();drawingBufferWidth===canvasWidth&&drawingBufferHeight===canvasHeight||(clampedPixelRatio=Math.min(drawingBufferWidth/clientWidth,drawingBufferHeight/clientHeight),this.htmlCanvas.width=Math.floor(clientWidth*clampedPixelRatio),this.htmlCanvas.height=Math.floor(clientHeight*clampedPixelRatio),utils_log.R.warn("Device pixel ratio clamped")()),this._canvasSizeInfo.clientWidth=clientWidth,this._canvasSizeInfo.clientHeight=clientHeight,this._canvasSizeInfo.devicePixelRatio=devicePixelRatio}}getDrawingBufferSize(){const gl=this.device.gl;if(!gl)throw new Error("canvas size");return[gl.drawingBufferWidth,gl.drawingBufferHeight]}_setAutoCreatedCanvasId(id){"lumagl-auto-created-canvas"===this.htmlCanvas?.id&&(this.htmlCanvas.id=id)}}function scaleX(x,ratio,width){return Math.min(Math.round(x*ratio),width-1)}function scaleY(y,ratio,height,yInvert){return yInvert?Math.max(0,height-1-Math.round(y*ratio)):Math.min(Math.round(y*ratio),height-1)}const GL_PARAMETER_DEFAULTS={3042:!1,32773:new Float32Array([0,0,0,0]),32777:32774,34877:32774,32969:1,32968:0,32971:1,32970:0,3106:new Float32Array([0,0,0,0]),3107:[!0,!0,!0,!0],2884:!1,2885:1029,2929:!1,2931:1,2932:513,2928:new Float32Array([0,1]),2930:!0,3024:!0,35725:null,36006:null,36007:null,34229:null,34964:null,2886:2305,33170:4352,2849:1,32823:!1,32824:0,10752:0,32926:!1,32928:!1,32938:1,32939:!1,3089:!1,3088:new Int32Array([0,0,1024,1024]),2960:!1,2961:0,2968:4294967295,36005:4294967295,2962:519,2967:0,2963:4294967295,34816:519,36003:0,36004:4294967295,2964:7680,2965:7680,2966:7680,34817:7680,34818:7680,34819:7680,2978:[0,0,1024,1024],36389:null,36662:null,36663:null,35053:null,35055:null,35723:4352,36010:null,35977:!1,3333:4,3317:4,37440:!1,37441:!1,37443:37444,3330:0,3332:0,3331:0,3314:0,32878:0,3316:0,3315:0,32877:0},enable=(gl,value,key)=>value?gl.enable(key):gl.disable(key),hint=(gl,value,key)=>gl.hint(key,value),pixelStorei=(gl,value,key)=>gl.pixelStorei(key,value),bindFramebuffer=(gl,value,key)=>{const target=36006===key?36009:36008;return gl.bindFramebuffer(target,value)},bindBuffer=(gl,value,key)=>{const glTarget={34964:34962,36662:36662,36663:36663,35053:35051,35055:35052}[key];gl.bindBuffer(glTarget,value)};function isArray(array){return Array.isArray(array)||ArrayBuffer.isView(array)&&!(array instanceof DataView)}const GL_PARAMETER_SETTERS={3042:enable,32773:(gl,value)=>gl.blendColor(...value),32777:"blendEquation",34877:"blendEquation",32969:"blendFunc",32968:"blendFunc",32971:"blendFunc",32970:"blendFunc",3106:(gl,value)=>gl.clearColor(...value),3107:(gl,value)=>gl.colorMask(...value),2884:enable,2885:(gl,value)=>gl.cullFace(value),2929:enable,2931:(gl,value)=>gl.clearDepth(value),2932:(gl,value)=>gl.depthFunc(value),2928:(gl,value)=>gl.depthRange(...value),2930:(gl,value)=>gl.depthMask(value),3024:enable,35723:hint,35725:(gl,value)=>gl.useProgram(value),36007:(gl,value)=>gl.bindRenderbuffer(36161,value),36389:(gl,value)=>gl.bindTransformFeedback?.(36386,value),34229:(gl,value)=>gl.bindVertexArray(value),36006:bindFramebuffer,36010:bindFramebuffer,34964:bindBuffer,36662:bindBuffer,36663:bindBuffer,35053:bindBuffer,35055:bindBuffer,2886:(gl,value)=>gl.frontFace(value),33170:hint,2849:(gl,value)=>gl.lineWidth(value),32823:enable,32824:"polygonOffset",10752:"polygonOffset",35977:enable,32926:enable,32928:enable,32938:"sampleCoverage",32939:"sampleCoverage",3089:enable,3088:(gl,value)=>gl.scissor(...value),2960:enable,2961:(gl,value)=>gl.clearStencil(value),2968:(gl,value)=>gl.stencilMaskSeparate(1028,value),36005:(gl,value)=>gl.stencilMaskSeparate(1029,value),2962:"stencilFuncFront",2967:"stencilFuncFront",2963:"stencilFuncFront",34816:"stencilFuncBack",36003:"stencilFuncBack",36004:"stencilFuncBack",2964:"stencilOpFront",2965:"stencilOpFront",2966:"stencilOpFront",34817:"stencilOpBack",34818:"stencilOpBack",34819:"stencilOpBack",2978:(gl,value)=>gl.viewport(...value),34383:enable,10754:enable,12288:enable,12289:enable,12290:enable,12291:enable,12292:enable,12293:enable,12294:enable,12295:enable,3333:pixelStorei,3317:pixelStorei,37440:pixelStorei,37441:pixelStorei,37443:pixelStorei,3330:pixelStorei,3332:pixelStorei,3331:pixelStorei,3314:pixelStorei,32878:pixelStorei,3316:pixelStorei,3315:pixelStorei,32877:pixelStorei,framebuffer:(gl,framebuffer)=>{const handle=framebuffer&&"handle"in framebuffer?framebuffer.handle:framebuffer;return gl.bindFramebuffer(36160,handle)},blend:(gl,value)=>value?gl.enable(3042):gl.disable(3042),blendColor:(gl,value)=>gl.blendColor(...value),blendEquation:(gl,args)=>{const separateModes="number"==typeof args?[args,args]:args;gl.blendEquationSeparate(...separateModes)},blendFunc:(gl,args)=>{const separateFuncs=2===args?.length?[...args,...args]:args;gl.blendFuncSeparate(...separateFuncs)},clearColor:(gl,value)=>gl.clearColor(...value),clearDepth:(gl,value)=>gl.clearDepth(value),clearStencil:(gl,value)=>gl.clearStencil(value),colorMask:(gl,value)=>gl.colorMask(...value),cull:(gl,value)=>value?gl.enable(2884):gl.disable(2884),cullFace:(gl,value)=>gl.cullFace(value),depthTest:(gl,value)=>value?gl.enable(2929):gl.disable(2929),depthFunc:(gl,value)=>gl.depthFunc(value),depthMask:(gl,value)=>gl.depthMask(value),depthRange:(gl,value)=>gl.depthRange(...value),dither:(gl,value)=>value?gl.enable(3024):gl.disable(3024),derivativeHint:(gl,value)=>{gl.hint(35723,value)},frontFace:(gl,value)=>gl.frontFace(value),mipmapHint:(gl,value)=>gl.hint(33170,value),lineWidth:(gl,value)=>gl.lineWidth(value),polygonOffsetFill:(gl,value)=>value?gl.enable(32823):gl.disable(32823),polygonOffset:(gl,value)=>gl.polygonOffset(...value),sampleCoverage:(gl,value)=>gl.sampleCoverage(...value),scissorTest:(gl,value)=>value?gl.enable(3089):gl.disable(3089),scissor:(gl,value)=>gl.scissor(...value),stencilTest:(gl,value)=>value?gl.enable(2960):gl.disable(2960),stencilMask:(gl,value)=>{value=isArray(value)?value:[value,value];const[mask,backMask]=value;gl.stencilMaskSeparate(1028,mask),gl.stencilMaskSeparate(1029,backMask)},stencilFunc:(gl,args)=>{args=isArray(args)&&3===args.length?[...args,...args]:args;const[func,ref,mask,backFunc,backRef,backMask]=args;gl.stencilFuncSeparate(1028,func,ref,mask),gl.stencilFuncSeparate(1029,backFunc,backRef,backMask)},stencilOp:(gl,args)=>{args=isArray(args)&&3===args.length?[...args,...args]:args;const[sfail,dpfail,dppass,backSfail,backDpfail,backDppass]=args;gl.stencilOpSeparate(1028,sfail,dpfail,dppass),gl.stencilOpSeparate(1029,backSfail,backDpfail,backDppass)},viewport:(gl,value)=>gl.viewport(...value)};function getValue(glEnum,values,cache){return void 0!==values[glEnum]?values[glEnum]:cache[glEnum]}const GL_COMPOSITE_PARAMETER_SETTERS={blendEquation:(gl,values,cache)=>gl.blendEquationSeparate(getValue(32777,values,cache),getValue(34877,values,cache)),blendFunc:(gl,values,cache)=>gl.blendFuncSeparate(getValue(32969,values,cache),getValue(32968,values,cache),getValue(32971,values,cache),getValue(32970,values,cache)),polygonOffset:(gl,values,cache)=>gl.polygonOffset(getValue(32824,values,cache),getValue(10752,values,cache)),sampleCoverage:(gl,values,cache)=>gl.sampleCoverage(getValue(32938,values,cache),getValue(32939,values,cache)),stencilFuncFront:(gl,values,cache)=>gl.stencilFuncSeparate(1028,getValue(2962,values,cache),getValue(2967,values,cache),getValue(2963,values,cache)),stencilFuncBack:(gl,values,cache)=>gl.stencilFuncSeparate(1029,getValue(34816,values,cache),getValue(36003,values,cache),getValue(36004,values,cache)),stencilOpFront:(gl,values,cache)=>gl.stencilOpSeparate(1028,getValue(2964,values,cache),getValue(2965,values,cache),getValue(2966,values,cache)),stencilOpBack:(gl,values,cache)=>gl.stencilOpSeparate(1029,getValue(34817,values,cache),getValue(34818,values,cache),getValue(34819,values,cache))},GL_HOOKED_SETTERS={enable:(update,capability)=>update({[capability]:!0}),disable:(update,capability)=>update({[capability]:!1}),pixelStorei:(update,pname,value)=>update({[pname]:value}),hint:(update,pname,hint)=>update({[pname]:hint}),useProgram:(update,value)=>update({35725:value}),bindRenderbuffer:(update,target,value)=>update({36007:value}),bindTransformFeedback:(update,target,value)=>update({36389:value}),bindVertexArray:(update,value)=>update({34229:value}),bindFramebuffer:(update,target,framebuffer)=>{switch(target){case 36160:return update({36006:framebuffer,36010:framebuffer});case 36009:return update({36006:framebuffer});case 36008:return update({36010:framebuffer});default:return null}},bindBuffer:(update,target,buffer)=>{const pname={34962:[34964],36662:[36662],36663:[36663],35051:[35053],35052:[35055]}[target];return pname?update({[pname]:buffer}):{valueChanged:!0}},blendColor:(update,r,g,b,a)=>update({32773:new Float32Array([r,g,b,a])}),blendEquation:(update,mode)=>update({32777:mode,34877:mode}),blendEquationSeparate:(update,modeRGB,modeAlpha)=>update({32777:modeRGB,34877:modeAlpha}),blendFunc:(update,src,dst)=>update({32969:src,32968:dst,32971:src,32970:dst}),blendFuncSeparate:(update,srcRGB,dstRGB,srcAlpha,dstAlpha)=>update({32969:srcRGB,32968:dstRGB,32971:srcAlpha,32970:dstAlpha}),clearColor:(update,r,g,b,a)=>update({3106:new Float32Array([r,g,b,a])}),clearDepth:(update,depth)=>update({2931:depth}),clearStencil:(update,s)=>update({2961:s}),colorMask:(update,r,g,b,a)=>update({3107:[r,g,b,a]}),cullFace:(update,mode)=>update({2885:mode}),depthFunc:(update,func)=>update({2932:func}),depthRange:(update,zNear,zFar)=>update({2928:new Float32Array([zNear,zFar])}),depthMask:(update,mask)=>update({2930:mask}),frontFace:(update,face)=>update({2886:face}),lineWidth:(update,width)=>update({2849:width}),polygonOffset:(update,factor,units)=>update({32824:factor,10752:units}),sampleCoverage:(update,value,invert)=>update({32938:value,32939:invert}),scissor:(update,x,y,width,height)=>update({3088:new Int32Array([x,y,width,height])}),stencilMask:(update,mask)=>update({2968:mask,36005:mask}),stencilMaskSeparate:(update,face,mask)=>update({[1028===face?2968:36005]:mask}),stencilFunc:(update,func,ref,mask)=>update({2962:func,2967:ref,2963:mask,34816:func,36003:ref,36004:mask}),stencilFuncSeparate:(update,face,func,ref,mask)=>update({[1028===face?2962:34816]:func,[1028===face?2967:36003]:ref,[1028===face?2963:36004]:mask}),stencilOp:(update,fail,zfail,zpass)=>update({2964:fail,2965:zfail,2966:zpass,34817:fail,34818:zfail,34819:zpass}),stencilOpSeparate:(update,face,fail,zfail,zpass)=>update({[1028===face?2964:34817]:fail,[1028===face?2965:34818]:zfail,[1028===face?2966:34819]:zpass}),viewport:(update,x,y,width,height)=>update({2978:[x,y,width,height]})},isEnabled=(gl,key)=>gl.isEnabled(key),GL_PARAMETER_GETTERS={3042:isEnabled,2884:isEnabled,2929:isEnabled,3024:isEnabled,32823:isEnabled,32926:isEnabled,32928:isEnabled,3089:isEnabled,2960:isEnabled,35977:isEnabled},NON_CACHE_PARAMETERS=new Set([34016,36388,36387,35983,35368,34965,35739,35738,3074,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34866,34867,34868,35097,32873,35869,32874,34068]);function unified_parameter_api_setGLParameters(gl,parameters){if(function unified_parameter_api_isObjectEmpty(object){for(const key in object)return!1;return!0}(parameters))return;const compositeSetters={};for(const key in parameters){const glConstant=Number(key),setter=GL_PARAMETER_SETTERS[key];setter&&("string"==typeof setter?compositeSetters[setter]=!0:setter(gl,parameters[key],glConstant))}const cache=gl.state&&gl.state.cache;if(cache)for(const key in compositeSetters){(0,GL_COMPOSITE_PARAMETER_SETTERS[key])(gl,parameters,cache)}}function getGLParameters(gl,parameters=GL_PARAMETER_DEFAULTS){if("number"==typeof parameters){const key=parameters,getter=GL_PARAMETER_GETTERS[key];return getter?getter(gl,key):gl.getParameter(key)}const parameterKeys=Array.isArray(parameters)?parameters:Object.keys(parameters),state={};for(const key of parameterKeys){const getter=GL_PARAMETER_GETTERS[key];state[key]=getter?getter(gl,Number(key)):gl.getParameter(Number(key))}return state}function deepArrayEqual(x,y){if(x===y)return!0;const isArrayX=Array.isArray(x)||ArrayBuffer.isView(x),isArrayY=Array.isArray(y)||ArrayBuffer.isView(y);if(isArrayX&&isArrayY&&x.length===y.length){for(let i=0;i<x.length;++i)if(x[i]!==y[i])return!1;return!0}return!1}class GLState{gl;program=null;stateStack=[];enable=!0;cache;log;constructor(gl,{copyState:copyState=!1,log:log=(()=>{})}={}){this.gl=gl,this.cache=copyState?getGLParameters(gl):Object.assign({},GL_PARAMETER_DEFAULTS),this.log=log,this._updateCache=this._updateCache.bind(this),Object.seal(this)}push(values={}){this.stateStack.push({})}pop(){(0,utils_assert.v)(this.stateStack.length>0);const oldValues=this.stateStack[this.stateStack.length-1];unified_parameter_api_setGLParameters(this.gl,oldValues),this.stateStack.pop()}_updateCache(values){let oldValue,valueChanged=!1;const oldValues=this.stateStack.length>0?this.stateStack[this.stateStack.length-1]:null;for(const key in values){(0,utils_assert.v)(void 0!==key);const value=values[key],cached=this.cache[key];deepArrayEqual(value,cached)||(valueChanged=!0,oldValue=cached,oldValues&&!(key in oldValues)&&(oldValues[key]=cached),this.cache[key]=value)}return{valueChanged:valueChanged,oldValue:oldValue}}}function getContextState(gl){return gl.state}function trackContextState(gl,options){const{enable:enable=!0,copyState:copyState}=options;if((0,utils_assert.v)(void 0!==copyState),!gl.state){gl.state=new GLState(gl,{copyState:copyState}),function installProgramSpy(gl){const originalUseProgram=gl.useProgram.bind(gl);gl.useProgram=function useProgramLuma(handle){const glState=getContextState(gl);glState.program!==handle&&(originalUseProgram(handle),glState.program=handle)}}(gl);for(const key in GL_HOOKED_SETTERS){installSetterSpy(gl,key,GL_HOOKED_SETTERS[key])}installGetterOverride(gl,"getParameter"),installGetterOverride(gl,"isEnabled")}return getContextState(gl).enable=enable,gl}function track_context_state_pushContextState(gl){let glState=getContextState(gl);glState||(trackContextState(gl,{copyState:!1}),glState=getContextState(gl)),glState.push()}function track_context_state_popContextState(gl){const glState=getContextState(gl);(0,utils_assert.v)(glState),glState.pop()}function installGetterOverride(gl,functionName){const originalGetterFunc=gl[functionName].bind(gl);gl[functionName]=function get(pname){if(void 0===pname||NON_CACHE_PARAMETERS.has(pname))return originalGetterFunc(pname);const glState=getContextState(gl);return pname in glState.cache||(glState.cache[pname]=originalGetterFunc(pname)),glState.enable?glState.cache[pname]:originalGetterFunc(pname)},Object.defineProperty(gl[functionName],"name",{value:`${functionName}-from-cache`,configurable:!1})}function installSetterSpy(gl,functionName,setter){if(!gl[functionName])return;const originalSetterFunc=gl[functionName].bind(gl);gl[functionName]=function set(...params){const glState=getContextState(gl),{valueChanged:valueChanged,oldValue:oldValue}=setter(glState._updateCache,...params);return valueChanged&&originalSetterFunc(...params),oldValue},Object.defineProperty(gl[functionName],"name",{value:`${functionName}-to-cache`,configurable:!1})}const DEFAULT_CONTEXT_PROPS={powerPreference:"high-performance",onContextLost:()=>console.error("WebGL context lost"),onContextRestored:()=>console.info("WebGL context restored")};function getWebGLExtension(gl,name,extensions){return void 0===extensions[name]&&(extensions[name]=gl.getExtension(name)||null),extensions[name]}function getDeviceInfo(gl,extensions){const vendorMasked=gl.getParameter(7936),rendererMasked=gl.getParameter(7937);getWebGLExtension(gl,"WEBGL_debug_renderer_info",extensions);const ext=extensions.WEBGL_debug_renderer_info,vendor=gl.getParameter(ext?ext.UNMASKED_VENDOR_WEBGL:7936)||vendorMasked,renderer=gl.getParameter(ext?ext.UNMASKED_RENDERER_WEBGL:7937)||rendererMasked,version=gl.getParameter(7938),gpu=identifyGPUVendor(vendor,renderer),gpuBackend=function identifyGPUBackend(vendor,renderer){if(/Metal/i.exec(vendor)||/Metal/i.exec(renderer))return"metal";if(/ANGLE/i.exec(vendor)||/ANGLE/i.exec(renderer))return"opengl";return"unknown"}(vendor,renderer),gpuType=function identifyGPUType(vendor,renderer){if(/SwiftShader/i.exec(vendor)||/SwiftShader/i.exec(renderer))return"cpu";switch(identifyGPUVendor(vendor,renderer)){case"intel":return"integrated";case"software":return"cpu";case"unknown":return"unknown";default:return"discrete"}}(vendor,renderer);return{type:"webgl",gpu:gpu,gpuType:gpuType,gpuBackend:gpuBackend,vendor:vendor,renderer:renderer,version:version,shadingLanguage:"glsl",shadingLanguageVersion:300}}function identifyGPUVendor(vendor,renderer){return/NVIDIA/i.exec(vendor)||/NVIDIA/i.exec(renderer)?"nvidia":/INTEL/i.exec(vendor)||/INTEL/i.exec(renderer)?"intel":/Apple/i.exec(vendor)||/Apple/i.exec(renderer)?"apple":/AMD/i.exec(vendor)||/AMD/i.exec(renderer)||/ATI/i.exec(vendor)||/ATI/i.exec(renderer)?"amd":/SwiftShader/i.exec(vendor)||/SwiftShader/i.exec(renderer)?"software":"unknown"}function getGLFromVertexType(dataType){switch(dataType){case"uint8":case"unorm8":return 5121;case"sint8":case"snorm8":return 5120;case"uint16":case"unorm16":return 5123;case"sint16":case"snorm16":return 5122;case"uint32":return 5125;case"sint32":return 5124;case"float16":return 5131;case"float32":return 5126}throw new Error(String(dataType))}const texture_compression_astc="texture-compression-astc",X_S3TC="WEBGL_compressed_texture_s3tc",X_S3TC_SRGB="WEBGL_compressed_texture_s3tc_srgb",X_RGTC="EXT_texture_compression_rgtc",X_BPTC="EXT_texture_compression_bptc",TEXTURE_FEATURES={"float32-renderable-webgl":["EXT_color_buffer_float"],"float16-renderable-webgl":["EXT_color_buffer_half_float"],"rgb9e5ufloat_renderable-webgl":["WEBGL_render_shared_exponent"],"snorm8-renderable-webgl":["EXT_render_snorm"],"norm16-renderable-webgl":["EXT_texture_norm16"],"snorm16-renderable-webgl":["EXT_texture_norm16","EXT_render_snorm"],"float32-filterable":["OES_texture_float_linear"],"float16-filterable-webgl":["OES_texture_half_float_linear"],"texture-filterable-anisotropic-webgl":["EXT_texture_filter_anisotropic"],"texture-blend-float-webgl":["EXT_float_blend"],"texture-compression-bc":[X_S3TC,X_S3TC_SRGB,X_RGTC,X_BPTC],"texture-compression-bc5-webgl":[X_RGTC],"texture-compression-bc7-webgl":[X_BPTC],"texture-compression-etc2":["WEBGL_compressed_texture_etc"],"texture-compression-astc":["WEBGL_compressed_texture_astc"],"texture-compression-etc1-webgl":["WEBGL_compressed_texture_etc1"],"texture-compression-pvrtc-webgl":["WEBGL_compressed_texture_pvrtc"],"texture-compression-atc-webgl":["WEBGL_compressed_texture_atc"]};function checkTextureFeature(gl,feature,extensions){return(TEXTURE_FEATURES[feature]||[]).every((extension=>getWebGLExtension(gl,extension,extensions)))}const TEXTURE_FORMATS={"rgb8unorm-unsized":{gl:6407,b:4,c:2,bpp:4,dataFormat:6407,types:[5121,33635]},"rgba8unorm-unsized":{gl:6408,b:4,c:2,bpp:4,dataFormat:6408,types:[5121,32819,32820]},r8unorm:{gl:33321,b:1,c:1,rb:!0},r8snorm:{gl:36756,b:1,c:1,render:"snorm8-renderable-webgl"},r8uint:{gl:33330,b:1,c:1,rb:!0},r8sint:{gl:33329,b:1,c:1,rb:!0},rg8unorm:{gl:33323,b:2,c:2,rb:!0},rg8snorm:{gl:36757,b:2,c:2,render:"snorm8-renderable-webgl"},rg8uint:{gl:33336,b:2,c:2,rb:!0},rg8sint:{gl:33335,b:2,c:2,rb:!0},r16uint:{gl:33332,b:2,c:1,rb:!0},r16sint:{gl:33331,b:2,c:1,rb:!0},r16float:{gl:33325,b:2,c:1,render:"float16-renderable-webgl",filter:"float16-filterable-webgl",rb:!0},"r16unorm-webgl":{gl:33322,b:2,c:1,f:"norm16-renderable-webgl",rb:!0},"r16snorm-webgl":{gl:36760,b:2,c:1,f:"snorm16-renderable-webgl"},"rgba4unorm-webgl":{gl:32854,b:2,c:4,wgpu:!1,rb:!0},"rgb565unorm-webgl":{gl:36194,b:2,c:4,wgpu:!1,rb:!0},"rgb5a1unorm-webgl":{gl:32855,b:2,c:4,wgpu:!1,rb:!0},"rgb8unorm-webgl":{gl:32849,b:3,c:3,wgpu:!1},"rgb8snorm-webgl":{gl:36758,b:3,c:3,wgpu:!1},rgba8unorm:{gl:32856,b:4,c:2,bpp:4},"rgba8unorm-srgb":{gl:35907,b:4,c:4,bpp:4},rgba8snorm:{gl:36759,b:4,c:4,render:"snorm8-renderable-webgl"},rgba8uint:{gl:36220,b:4,c:4,bpp:4},rgba8sint:{gl:36238,b:4,c:4,bpp:4},bgra8unorm:{b:4,c:4},"bgra8unorm-srgb":{b:4,c:4},rg16uint:{gl:33338,b:4,c:1,bpp:4},rg16sint:{gl:33337,b:4,c:2,bpp:4},rg16float:{gl:33327,bpp:4,b:4,c:2,render:"float16-renderable-webgl",filter:"float16-filterable-webgl",rb:!0},"rg16unorm-webgl":{gl:33324,b:2,c:2,render:"norm16-renderable-webgl"},"rg16snorm-webgl":{gl:36761,b:2,c:2,render:"snorm16-renderable-webgl"},r32uint:{gl:33334,b:4,c:1,bpp:4,rb:!0},r32sint:{gl:33333,b:4,c:1,bpp:4,rb:!0},r32float:{gl:33326,bpp:4,b:4,c:1,render:"float32-renderable-webgl",filter:"float32-filterable"},rgb9e5ufloat:{gl:35901,b:4,c:3,p:1,render:"rgb9e5ufloat_renderable-webgl"},rg11b10ufloat:{gl:35898,b:4,c:3,p:1,render:"float32-renderable-webgl",rb:!0},rgb10a2unorm:{gl:32857,b:4,c:4,p:1,rb:!0},"rgb10a2uint-webgl":{b:4,c:4,gl:36975,p:1,wgpu:!1,bpp:4,rb:!0},"rgb16unorm-webgl":{gl:32852,b:2,c:3,f:"norm16-renderable-webgl"},"rgb16snorm-webgl":{gl:36762,b:2,c:3,f:"norm16-renderable-webgl"},rg32uint:{gl:33340,b:8,c:2,rb:!0},rg32sint:{gl:33339,b:8,c:2,rb:!0},rg32float:{gl:33328,b:8,c:2,render:"float32-renderable-webgl",filter:"float32-filterable",rb:!0},rgba16uint:{gl:36214,b:8,c:4,rb:!0},rgba16sint:{gl:36232,b:8,c:4,rb:!0},rgba16float:{gl:34842,b:8,c:4,render:"float16-renderable-webgl",filter:"float16-filterable-webgl"},"rgba16unorm-webgl":{gl:32859,b:2,c:4,render:"norm16-renderable-webgl",rb:!0},"rgba16snorm-webgl":{gl:36763,b:2,c:4,render:"snorm16-renderable-webgl"},"rgb32float-webgl":{gl:34837,render:"float32-renderable-webgl",filter:"float32-filterable",gl2ext:"EXT_color_buffer_float",dataFormat:6407,types:[5126]},rgba32uint:{gl:36208,b:16,c:4,rb:!0},rgba32sint:{gl:36226,b:16,c:4,rb:!0},rgba32float:{gl:34836,b:16,c:4,render:"float32-renderable-webgl",filter:"float32-filterable",rb:!0},stencil8:{gl:36168,b:1,c:1,attachment:36128,rb:!0},depth16unorm:{gl:33189,b:2,c:1,attachment:36096,dataFormat:6402,types:[5123],rb:!0},depth24plus:{gl:33190,b:3,c:1,attachment:36096,dataFormat:6402,types:[5125]},depth32float:{gl:36012,b:4,c:1,attachment:36096,dataFormat:6402,types:[5126],rb:!0},"depth24plus-stencil8":{gl:35056,b:4,c:2,p:1,attachment:33306,rb:!0,depthTexture:!0,dataFormat:34041,types:[34042]},"depth24unorm-stencil8":{gl:35056,b:4,c:2,p:1,attachment:33306,dataFormat:34041,types:[34042],rb:!0},"depth32float-stencil8":{gl:36013,b:5,c:2,p:1,attachment:33306,dataFormat:34041,types:[36269],rb:!0},"bc1-rgb-unorm-webgl":{gl:33776,x:X_S3TC,f:"texture-compression-bc"},"bc1-rgb-unorm-srgb-webgl":{gl:35916,x:X_S3TC_SRGB,f:"texture-compression-bc"},"bc1-rgba-unorm":{gl:33777,x:X_S3TC,f:"texture-compression-bc"},"bc1-rgba-unorm-srgb":{gl:35916,x:X_S3TC_SRGB,f:"texture-compression-bc"},"bc2-rgba-unorm":{gl:33778,x:X_S3TC,f:"texture-compression-bc"},"bc2-rgba-unorm-srgb":{gl:35918,x:X_S3TC_SRGB,f:"texture-compression-bc"},"bc3-rgba-unorm":{gl:33779,x:X_S3TC,f:"texture-compression-bc"},"bc3-rgba-unorm-srgb":{gl:35919,x:X_S3TC_SRGB,f:"texture-compression-bc"},"bc4-r-unorm":{gl:36283,x:X_RGTC,f:"texture-compression-bc"},"bc4-r-snorm":{gl:36284,x:X_RGTC,f:"texture-compression-bc"},"bc5-rg-unorm":{gl:36285,x:X_RGTC,f:"texture-compression-bc"},"bc5-rg-snorm":{gl:36286,x:X_RGTC,f:"texture-compression-bc"},"bc6h-rgb-ufloat":{gl:36495,x:X_BPTC,f:"texture-compression-bc"},"bc6h-rgb-float":{gl:36494,x:X_BPTC,f:"texture-compression-bc"},"bc7-rgba-unorm":{gl:36492,x:X_BPTC,f:"texture-compression-bc"},"bc7-rgba-unorm-srgb":{gl:36493,x:X_BPTC,f:"texture-compression-bc"},"etc2-rgb8unorm":{gl:37492,f:"texture-compression-etc2"},"etc2-rgb8unorm-srgb":{gl:37494,f:"texture-compression-etc2"},"etc2-rgb8a1unorm":{gl:37496,f:"texture-compression-etc2"},"etc2-rgb8a1unorm-srgb":{gl:37497,f:"texture-compression-etc2"},"etc2-rgba8unorm":{gl:37493,f:"texture-compression-etc2"},"etc2-rgba8unorm-srgb":{gl:37495,f:"texture-compression-etc2"},"eac-r11unorm":{gl:37488,f:"texture-compression-etc2"},"eac-r11snorm":{gl:37489,f:"texture-compression-etc2"},"eac-rg11unorm":{gl:37490,f:"texture-compression-etc2"},"eac-rg11snorm":{gl:37491,f:"texture-compression-etc2"},"astc-4x4-unorm":{gl:37808,f:texture_compression_astc},"astc-4x4-unorm-srgb":{gl:37840,f:texture_compression_astc},"astc-5x4-unorm":{gl:37809,f:texture_compression_astc},"astc-5x4-unorm-srgb":{gl:37841,f:texture_compression_astc},"astc-5x5-unorm":{gl:37810,f:texture_compression_astc},"astc-5x5-unorm-srgb":{gl:37842,f:texture_compression_astc},"astc-6x5-unorm":{gl:37811,f:texture_compression_astc},"astc-6x5-unorm-srgb":{gl:37843,f:texture_compression_astc},"astc-6x6-unorm":{gl:37812,f:texture_compression_astc},"astc-6x6-unorm-srgb":{gl:37844,f:texture_compression_astc},"astc-8x5-unorm":{gl:37813,f:texture_compression_astc},"astc-8x5-unorm-srgb":{gl:37845,f:texture_compression_astc},"astc-8x6-unorm":{gl:37814,f:texture_compression_astc},"astc-8x6-unorm-srgb":{gl:37846,f:texture_compression_astc},"astc-8x8-unorm":{gl:37815,f:texture_compression_astc},"astc-8x8-unorm-srgb":{gl:37847,f:texture_compression_astc},"astc-10x5-unorm":{gl:37819,f:texture_compression_astc},"astc-10x5-unorm-srgb":{gl:37851,f:texture_compression_astc},"astc-10x6-unorm":{gl:37817,f:texture_compression_astc},"astc-10x6-unorm-srgb":{gl:37849,f:texture_compression_astc},"astc-10x8-unorm":{gl:37818,f:texture_compression_astc},"astc-10x8-unorm-srgb":{gl:37850,f:texture_compression_astc},"astc-10x10-unorm":{gl:37819,f:texture_compression_astc},"astc-10x10-unorm-srgb":{gl:37851,f:texture_compression_astc},"astc-12x10-unorm":{gl:37820,f:texture_compression_astc},"astc-12x10-unorm-srgb":{gl:37852,f:texture_compression_astc},"astc-12x12-unorm":{gl:37821,f:texture_compression_astc},"astc-12x12-unorm-srgb":{gl:37853,f:texture_compression_astc},"pvrtc-rgb4unorm-webgl":{gl:35840,f:"texture-compression-pvrtc-webgl"},"pvrtc-rgba4unorm-webgl":{gl:35842,f:"texture-compression-pvrtc-webgl"},"pvrtc-rbg2unorm-webgl":{gl:35841,f:"texture-compression-pvrtc-webgl"},"pvrtc-rgba2unorm-webgl":{gl:35843,f:"texture-compression-pvrtc-webgl"},"etc1-rbg-unorm-webgl":{gl:36196,f:"texture-compression-etc1-webgl"},"atc-rgb-unorm-webgl":{gl:35986,f:"texture-compression-atc-webgl"},"atc-rgba-unorm-webgl":{gl:35986,f:"texture-compression-atc-webgl"},"atc-rgbai-unorm-webgl":{gl:34798,f:"texture-compression-atc-webgl"}},DATA_FORMAT_CHANNELS={6403:1,36244:1,33319:2,33320:2,6407:3,36248:3,6408:4,36249:4,6402:1,34041:1,6406:1,6409:1,6410:2},TYPE_SIZES={5126:4,5125:4,5124:4,5123:2,5122:2,5131:2,5120:1,5121:1};function isTextureFormatSupported(gl,format,extensions){const info=TEXTURE_FORMATS[format];if(!info)return!1;if(void 0===info.gl)return!1;const extension=info.x||info.gl2ext;return!extension||Boolean(getWebGLExtension(gl,extension,extensions))}function convertTextureFormatToGL(format){const formatInfo=TEXTURE_FORMATS[format],webglFormat=formatInfo?.gl;if(void 0===webglFormat)throw new Error(`Unsupported texture format ${format}`);return webglFormat}function getWebGLTextureParameters(format){const formatData=TEXTURE_FORMATS[format],webglFormat=convertTextureFormatToGL(format),decoded=decodeTextureFormat(format);return{format:webglFormat,dataFormat:formatData?.dataFormat||getWebGLPixelDataFormat(decoded.format,decoded.integer,decoded.normalized,webglFormat),type:decoded.dataType?getGLFromVertexType(decoded.dataType):formatData?.types?.[0]||5121,compressed:decoded.compressed}}function getTextureFormatBytesPerPixel(format){const params=getWebGLTextureParameters(format);return(DATA_FORMAT_CHANNELS[params.dataFormat]||4)*(TYPE_SIZES[params.type]||1)}function getWebGLPixelDataFormat(dataFormat,integer,normalized,format){if(6408===format||6407===format)return format;switch(dataFormat){case"r":return integer&&!normalized?36244:6403;case"rg":return integer&&!normalized?33320:33319;case"rgb":return integer&&!normalized?36248:6407;case"rgba":return integer&&!normalized?36249:6408;default:return 6408}}const WEBGL_FEATURES={"depth-clip-control":"EXT_depth_clamp","timer-query-webgl":"EXT_disjoint_timer_query_webgl2","compilation-status-async-webgl":"KHR_parallel_shader_compile","polygon-mode-webgl":"WEBGL_polygon_mode","provoking-vertex-webgl":"WEBGL_provoking_vertex","shader-clip-cull-distance-webgl":"WEBGL_clip_cull_distance","shader-noperspective-interpolation-webgl":"NV_shader_noperspective_interpolation","shader-conservative-depth-webgl":"EXT_conservative_depth"};class WebGLDeviceFeatures extends DeviceFeatures{gl;extensions;testedFeatures=new Set;constructor(gl,extensions,disabledFeatures){super([],disabledFeatures),this.gl=gl,this.extensions=extensions,getWebGLExtension(gl,"EXT_color_buffer_float",extensions)}*[Symbol.iterator](){const features=this.getFeatures();for(const feature of features)this.has(feature)&&(yield feature);return[]}has(feature){return!this.disabledFeatures[feature]&&(this.testedFeatures.has(feature)||(this.testedFeatures.add(feature),function isTextureFeature(feature){return feature in TEXTURE_FEATURES}(feature)&&checkTextureFeature(this.gl,feature,this.extensions)&&this.features.add(feature),this.getWebGLFeature(feature)&&this.features.add(feature)),this.features.has(feature))}initializeFeatures(){const features=this.getFeatures().filter((feature=>"polygon-mode-webgl"!==feature));for(const feature of features)this.has(feature)}getFeatures(){return[...Object.keys(WEBGL_FEATURES),...Object.keys(TEXTURE_FEATURES)]}getWebGLFeature(feature){const featureInfo=WEBGL_FEATURES[feature];return"string"==typeof featureInfo?Boolean(getWebGLExtension(this.gl,featureInfo,this.extensions)):Boolean(featureInfo)}}class WebGLDeviceLimits extends DeviceLimits{get maxTextureDimension1D(){return 0}get maxTextureDimension2D(){return this.getParameter(3379)}get maxTextureDimension3D(){return this.getParameter(32883)}get maxTextureArrayLayers(){return this.getParameter(35071)}get maxBindGroups(){return 0}get maxDynamicUniformBuffersPerPipelineLayout(){return 0}get maxDynamicStorageBuffersPerPipelineLayout(){return 0}get maxSampledTexturesPerShaderStage(){return this.getParameter(35660)}get maxSamplersPerShaderStage(){return this.getParameter(35661)}get maxStorageBuffersPerShaderStage(){return 0}get maxStorageTexturesPerShaderStage(){return 0}get maxUniformBuffersPerShaderStage(){return this.getParameter(35375)}get maxUniformBufferBindingSize(){return this.getParameter(35376)}get maxStorageBufferBindingSize(){return 0}get minUniformBufferOffsetAlignment(){return this.getParameter(35380)}get minStorageBufferOffsetAlignment(){return 0}get maxVertexBuffers(){return 16}get maxVertexAttributes(){return this.getParameter(34921)}get maxVertexBufferArrayStride(){return 2048}get maxInterStageShaderComponents(){return this.getParameter(35659)}get maxComputeWorkgroupStorageSize(){return 0}get maxComputeInvocationsPerWorkgroup(){return 0}get maxComputeWorkgroupSizeX(){return 0}get maxComputeWorkgroupSizeY(){return 0}get maxComputeWorkgroupSizeZ(){return 0}get maxComputeWorkgroupsPerDimension(){return 0}gl;limits={};constructor(gl){super(),this.gl=gl}getParameter(parameter){return void 0===this.limits[parameter]&&(this.limits[parameter]=this.gl.getParameter(parameter)),this.limits[parameter]}}var resource=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/resource.js"),texture=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/texture.js");class Framebuffer extends resource.F{static defaultProps={...resource.F.defaultProps,width:1,height:1,colorAttachments:[],depthStencilAttachment:null};get[Symbol.toStringTag](){return"Framebuffer"}width;height;colorAttachments=[];depthStencilAttachment=null;constructor(device,props={}){super(device,props,Framebuffer.defaultProps),this.width=this.props.width,this.height=this.props.height}resize(size){let updateSize=!size;if(size){const[width,height]=Array.isArray(size)?size:[size.width,size.height];updateSize=updateSize||height!==this.height||width!==this.width,this.width=width,this.height=height}updateSize&&(utils_log.R.log(2,`Resizing framebuffer ${this.id} to ${this.width}x${this.height}`)(),this.resizeAttachments(this.width,this.height))}autoCreateAttachmentTextures(){if(0===this.props.colorAttachments.length&&!this.props.depthStencilAttachment)throw new Error("Framebuffer has noattachments");this.colorAttachments=this.props.colorAttachments.map((attachment=>{if("string"==typeof attachment){const texture=this.createColorTexture(attachment);return this.attachResource(texture),texture.view}return attachment instanceof texture.g?attachment.view:attachment}));const attachment=this.props.depthStencilAttachment;if(attachment)if("string"==typeof attachment){const texture=this.createDepthStencilTexture(attachment);this.attachResource(texture),this.depthStencilAttachment=texture.view}else attachment instanceof texture.g?this.depthStencilAttachment=attachment.view:this.depthStencilAttachment=attachment}createColorTexture(format){return this.device.createTexture({id:"color-attachment",usage:texture.g.RENDER_ATTACHMENT,format:format,width:this.width,height:this.height})}createDepthStencilTexture(format){return this.device.createTexture({id:"depth-stencil-attachment",usage:texture.g.RENDER_ATTACHMENT,format:format,width:this.width,height:this.height})}resizeAttachments(width,height){for(let i=0;i<this.colorAttachments.length;++i)if(this.colorAttachments[i]){const resizedTexture=this.device._createTexture({...this.colorAttachments[i].props,width:width,height:height});this.destroyAttachedResource(this.colorAttachments[i]),this.colorAttachments[i]=resizedTexture.view,this.attachResource(resizedTexture.view)}if(this.depthStencilAttachment){const resizedTexture=this.device._createTexture({...this.depthStencilAttachment.props,width:width,height:height});this.destroyAttachedResource(this.depthStencilAttachment),this.depthStencilAttachment=resizedTexture.view,this.attachResource(resizedTexture)}}}let pathPrefix="";async function loadImage(url,opts){return await new Promise(((resolve,reject)=>{try{const image=new Image;image.onload=()=>resolve(image),image.onerror=()=>reject(new Error(`Could not load image ${url}.`)),image.crossOrigin=opts?.crossOrigin||"anonymous",image.src=url.startsWith("http")?url:pathPrefix+url}catch(error){reject(error)}}))}async function loadScript(scriptUrl,scriptId){const head=document.getElementsByTagName("head")[0];if(!head)throw new Error("loadScript");const script=document.createElement("script");return script.setAttribute("type","text/javascript"),script.setAttribute("src",scriptUrl),scriptId&&(script.id=scriptId),new Promise(((resolve,reject)=>{script.onload=resolve,script.onerror=error=>reject(new Error(`Unable to load script '${scriptUrl}': ${error}`)),head.appendChild(script)}))}function with_parameters_withGLParameters(gl,parameters,func){if(function with_parameters_isObjectEmpty(object){for(const key in object)return!1;return!0}(parameters))return func(gl);const{nocatch:nocatch=!0}=parameters;let value;if(track_context_state_pushContextState(gl),unified_parameter_api_setGLParameters(gl,parameters),nocatch)value=func(gl),track_context_state_popContextState(gl);else try{value=func(gl)}finally{track_context_state_popContextState(gl)}return value}function setDeviceParameters(device,parameters){const webglDevice=device,{gl:gl}=webglDevice;if(parameters.cullMode)switch(parameters.cullMode){case"none":gl.disable(2884);break;case"front":gl.enable(2884),gl.cullFace(1028);break;case"back":gl.enable(2884),gl.cullFace(1029)}if(parameters.frontFace&&gl.frontFace(map("frontFace",parameters.frontFace,{ccw:2305,cw:2304})),parameters.unclippedDepth&&device.features.has("depth-clip-control")&&gl.enable(34383),void 0!==parameters.depthBias&&(gl.enable(32823),gl.polygonOffset(parameters.depthBias,parameters.depthBiasSlopeScale||0)),parameters.provokingVertex&&device.features.has("provoking-vertex-webgl")){const ext=webglDevice.getExtension("WEBGL_provoking_vertex").WEBGL_provoking_vertex,vertex=map("provokingVertex",parameters.provokingVertex,{first:36429,last:36430});ext?.provokingVertexWEBGL(vertex)}if((parameters.polygonMode||parameters.polygonOffsetLine)&&device.features.has("polygon-mode-webgl")){if(parameters.polygonMode){const ext=webglDevice.getExtension("WEBGL_polygon_mode").WEBGL_polygon_mode,mode=map("polygonMode",parameters.polygonMode,{fill:6914,line:6913});ext?.polygonModeWEBGL(1028,mode),ext?.polygonModeWEBGL(1029,mode)}parameters.polygonOffsetLine&&gl.enable(10754)}if(device.features.has("shader-clip-cull-distance-webgl")&&(parameters.clipDistance0&&gl.enable(12288),parameters.clipDistance1&&gl.enable(12289),parameters.clipDistance2&&gl.enable(12290),parameters.clipDistance3&&gl.enable(12291),parameters.clipDistance4&&gl.enable(12292),parameters.clipDistance5&&gl.enable(12293),parameters.clipDistance6&&gl.enable(12294),parameters.clipDistance7&&gl.enable(12295)),void 0!==parameters.depthWriteEnabled&&gl.depthMask(function mapBoolean(parameter,value){return value}(0,parameters.depthWriteEnabled)),parameters.depthCompare&&("always"!==parameters.depthCompare?gl.enable(2929):gl.disable(2929),gl.depthFunc(convertCompareFunction("depthCompare",parameters.depthCompare))),parameters.stencilWriteMask){const mask=parameters.stencilWriteMask;gl.stencilMaskSeparate(1028,mask),gl.stencilMaskSeparate(1029,mask)}if(parameters.stencilReadMask&&utils_log.R.warn("stencilReadMask not supported under WebGL"),parameters.stencilCompare){const mask=parameters.stencilReadMask||4294967295,glValue=convertCompareFunction("depthCompare",parameters.stencilCompare);"always"!==parameters.stencilCompare?gl.enable(2960):gl.disable(2960),gl.stencilFuncSeparate(1028,glValue,0,mask),gl.stencilFuncSeparate(1029,glValue,0,mask)}if(parameters.stencilPassOperation&&parameters.stencilFailOperation&&parameters.stencilDepthFailOperation){const dppass=convertStencilOperation("stencilPassOperation",parameters.stencilPassOperation),sfail=convertStencilOperation("stencilFailOperation",parameters.stencilFailOperation),dpfail=convertStencilOperation("stencilDepthFailOperation",parameters.stencilDepthFailOperation);gl.stencilOpSeparate(1028,sfail,dpfail,dppass),gl.stencilOpSeparate(1029,sfail,dpfail,dppass)}if(parameters.blendColorOperation||parameters.blendAlphaOperation){gl.enable(3042);const colorEquation=convertBlendOperationToEquation("blendColorOperation",parameters.blendColorOperation||"add"),alphaEquation=convertBlendOperationToEquation("blendAlphaOperation",parameters.blendAlphaOperation||"add");gl.blendEquationSeparate(colorEquation,alphaEquation);const colorSrcFactor=convertBlendFactorToFunction("blendColorSrcFactor",parameters.blendColorSrcFactor||"one"),colorDstFactor=convertBlendFactorToFunction("blendColorDstFactor",parameters.blendColorDstFactor||"zero"),alphaSrcFactor=convertBlendFactorToFunction("blendAlphaSrcFactor",parameters.blendAlphaSrcFactor||"one"),alphaDstFactor=convertBlendFactorToFunction("blendAlphaDstFactor",parameters.blendAlphaDstFactor||"zero");gl.blendFuncSeparate(colorSrcFactor,colorDstFactor,alphaSrcFactor,alphaDstFactor)}}function convertCompareFunction(parameter,value){return map(parameter,value,{never:512,less:513,equal:514,"less-equal":515,greater:516,"not-equal":517,"greater-equal":518,always:519})}function convertStencilOperation(parameter,value){return map(parameter,value,{keep:7680,zero:0,replace:7681,invert:5386,"increment-clamp":7682,"decrement-clamp":7683,"increment-wrap":34055,"decrement-wrap":34056})}function convertBlendOperationToEquation(parameter,value){return map(parameter,value,{add:32774,subtract:32778,"reverse-subtract":32779,min:32775,max:32776})}function convertBlendFactorToFunction(parameter,value){return map(parameter,value,{one:1,zero:0,"src-color":768,"one-minus-src-color":769,"dst-color":774,"one-minus-dst-color":775,"src-alpha":770,"one-minus-src-alpha":771,"dst-alpha":772,"one-minus-dst-alpha":773,"src-alpha-saturated":776,"constant-color":32769,"one-minus-constant-color":32770,"constant-alpha":32771,"one-minus-constant-alpha":32772})}function map(parameter,value,valueMap){if(!(value in valueMap))throw new Error(function message(parameter,value){return`Illegal parameter ${value} for ${parameter}`}(parameter,value));return valueMap[value]}function convertSamplerParametersToWebGL(props){const params={};return props.addressModeU&&(params[10242]=convertAddressMode(props.addressModeU)),props.addressModeV&&(params[10243]=convertAddressMode(props.addressModeV)),props.addressModeW&&(params[32882]=convertAddressMode(props.addressModeW)),props.magFilter&&(params[10240]=convertMaxFilterMode(props.magFilter)),(props.minFilter||props.mipmapFilter)&&(params[10241]=function convertMinFilterMode(minFilter,mipmapFilter){if(!mipmapFilter)return convertMaxFilterMode(minFilter);switch(minFilter){case"nearest":return"nearest"===mipmapFilter?9984:9986;case"linear":return"nearest"===mipmapFilter?9985:9987}}(props.minFilter||"linear",props.mipmapFilter)),void 0!==props.lodMinClamp&&(params[33082]=props.lodMinClamp),void 0!==props.lodMaxClamp&&(params[33083]=props.lodMaxClamp),"comparison-sampler"===props.type&&(params[34892]=34894),props.compare&&(params[34893]=convertCompareFunction("compare",props.compare)),props.maxAnisotropy&&(params[34046]=props.maxAnisotropy),params}function convertAddressMode(addressMode){switch(addressMode){case"clamp-to-edge":return 33071;case"repeat":return 10497;case"mirror-repeat":return 33648}}function convertMaxFilterMode(maxFilter){switch(maxFilter){case"nearest":return 9728;case"linear":return 9729}}class WEBGLBuffer extends buffer.h{device;gl;handle;glTarget;glUsage;glIndexType=5123;byteLength;bytesUsed;constructor(device,props={}){super(device,props),this.device=device,this.gl=this.device.gl;const handle="object"==typeof props?props.handle:void 0;this.handle=handle||this.gl.createBuffer(),device.setSpectorMetadata(this.handle,{...this.props,data:typeof this.props.data}),this.glTarget=function getWebGLTarget(usage){if(usage&buffer.h.INDEX)return 34963;if(usage&buffer.h.VERTEX)return 34962;if(usage&buffer.h.UNIFORM)return 35345;return 34962}(this.props.usage),this.glUsage=function getWebGLUsage(usage){if(usage&buffer.h.INDEX)return 35044;if(usage&buffer.h.VERTEX)return 35044;if(usage&buffer.h.UNIFORM)return 35048;return 35044}(this.props.usage),this.glIndexType="uint32"===this.props.indexType?5125:5123,props.data?this._initWithData(props.data,props.byteOffset,props.byteLength):this._initWithByteLength(props.byteLength||0)}_initWithData(data,byteOffset=0,byteLength=data.byteLength+byteOffset){const glTarget=this.glTarget;this.gl.bindBuffer(glTarget,this.handle),this.gl.bufferData(glTarget,byteLength,this.glUsage),this.gl.bufferSubData(glTarget,byteOffset,data),this.gl.bindBuffer(glTarget,null),this.bytesUsed=byteLength,this.byteLength=byteLength,this._setDebugData(data,byteOffset,byteLength),this.trackAllocatedMemory(byteLength)}_initWithByteLength(byteLength){(0,utils_assert.v)(byteLength>=0);let data=byteLength;0===byteLength&&(data=new Float32Array(0));const glTarget=this.glTarget;return this.gl.bindBuffer(glTarget,this.handle),this.gl.bufferData(glTarget,data,this.glUsage),this.gl.bindBuffer(glTarget,null),this.bytesUsed=byteLength,this.byteLength=byteLength,this._setDebugData(null,0,byteLength),this.trackAllocatedMemory(byteLength),this}destroy(){!this.destroyed&&this.handle&&(this.removeStats(),this.trackDeallocatedMemory(),this.gl.deleteBuffer(this.handle),this.destroyed=!0,this.handle=null)}write(data,byteOffset=0){this.gl.bindBuffer(36663,this.handle),this.gl.bufferSubData(36663,byteOffset,data),this.gl.bindBuffer(36663,null),this._setDebugData(data,byteOffset,data.byteLength)}async readAsync(byteOffset=0,byteLength){return this.readSyncWebGL(byteOffset,byteLength)}readSyncWebGL(byteOffset=0,byteLength){byteLength=byteLength??this.byteLength-byteOffset;const data=new Uint8Array(byteLength);return this.gl.bindBuffer(36662,this.handle),this.gl.getBufferSubData(36662,byteOffset,data,0,byteLength),this.gl.bindBuffer(36662,null),this._setDebugData(data,byteOffset,byteLength),data}}var sampler=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/sampler.js");class WEBGLSampler extends sampler.L{device;handle;parameters;constructor(device,props){super(device,props),this.device=device,this.parameters=convertSamplerParametersToWebGL(props),this.handle=this.handle||this.device.gl.createSampler(),this._setSamplerParameters(this.parameters)}destroy(){this.handle&&(this.device.gl.deleteSampler(this.handle),this.handle=void 0)}toString(){return`Sampler(${this.id},${JSON.stringify(this.props)})`}_setSamplerParameters(parameters){for(const[pname,value]of Object.entries(parameters)){const param=Number(pname);switch(param){case 33082:case 33083:this.device.gl.samplerParameterf(this.handle,param,value);break;default:this.device.gl.samplerParameteri(this.handle,param,value)}}}}var texture_view=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/texture-view.js");class WEBGLTextureView extends texture_view.X{device;gl;handle;texture;constructor(device,props){super(device,{...texture.g.defaultProps,...props}),this.device=device,this.gl=this.device.gl,this.handle=null,this.texture=props.texture}}const DEFAULT_WEBGL_TEXTURE_PROPS={parameters:{},pixelStore:{},pixels:null,border:0,dataFormat:void 0,textureUnit:void 0,target:void 0};class WEBGLTexture extends texture.g{static FACES=[34069,34070,34071,34072,34073,34074];MAX_ATTRIBUTES;device;gl;handle;sampler=void 0;view=void 0;glFormat=void 0;type=void 0;dataFormat=void 0;mipmaps=void 0;target;textureUnit=void 0;loaded=!1;_video;constructor(device,props){super(device,{...DEFAULT_WEBGL_TEXTURE_PROPS,format:"rgba8unorm",...props}),this.device=device,this.gl=this.device.gl,this.handle=this.props.handle||this.gl.createTexture(),this.device.setSpectorMetadata(this.handle,{...this.props,data:typeof this.props.data}),this.glFormat=6408,this.target=function getWebGLTextureTarget(props){switch(props.dimension){case"2d":return 3553;case"cube":return 34067;case"2d-array":return 35866;case"3d":return 32879;default:throw new Error(props.dimension)}}(this.props),this.loaded=!1,"string"==typeof this.props?.data&&Object.assign(this.props,{data:loadImage(this.props.data)}),this.initialize(this.props),Object.seal(this)}destroy(){this.handle&&(this.gl.deleteTexture(this.handle),this.removeStats(),this.trackDeallocatedMemory("Texture"),this.destroyed=!0)}toString(){return`Texture(${this.id},${this.width}x${this.height})`}createView(props){return new WEBGLTextureView(this.device,{...props,texture:this})}initialize(props={}){if("cube"===this.props.dimension)return this.initializeCube(props);let data=props.data;if(data instanceof Promise)return data.then((resolvedImageData=>this.initialize(Object.assign({},props,{pixels:resolvedImageData,data:resolvedImageData})))),this;const isVideo="undefined"!=typeof HTMLVideoElement&&data instanceof HTMLVideoElement;if(isVideo&&data.readyState<HTMLVideoElement.HAVE_METADATA)return this._video=null,data.addEventListener("loadeddata",(()=>this.initialize(props))),this;const{parameters:parameters={}}=props,{pixels:pixels=null,pixelStore:pixelStore={},textureUnit:textureUnit,mipmaps:mipmaps=!0}=props;data||(data=pixels);let{width:width,height:height,dataFormat:dataFormat,type:type,compressed:compressed=!1}=props;const{depth:depth=0}=props,glFormat=convertTextureFormatToGL(props.format);return({width:width,height:height,compressed:compressed,dataFormat:dataFormat,type:type}=this._deduceParameters({format:props.format,type:type,dataFormat:dataFormat,compressed:compressed,data:data,width:width,height:height})),this.width=width,this.height=height,this.glFormat=glFormat,this.type=type,this.dataFormat=dataFormat,this.textureUnit=textureUnit,Number.isFinite(this.textureUnit)&&(this.gl.activeTexture(33984+this.textureUnit),this.gl.bindTexture(this.target,this.handle)),this.mipmaps=mipmaps,this.setImageData({data:data,width:width,height:height,depth:depth,format:props.format,type:type,dataFormat:dataFormat,parameters:pixelStore,compressed:compressed}),this.setSampler(props.sampler),this._setSamplerParameters(parameters),this.view=this.createView({...this.props,mipLevelCount:1,arrayLayerCount:1}),mipmaps&&this.device.isTextureFormatFilterable(props.format)&&this.generateMipmap(),isVideo&&(this._video={video:data,parameters:parameters,lastTime:data.readyState>=HTMLVideoElement.HAVE_CURRENT_DATA?data.currentTime:-1}),this}initializeCube(props){const{mipmaps:mipmaps=!0,parameters:parameters={}}=props;return this.setCubeMapImageData(props).then((()=>{this.loaded=!0,mipmaps&&this.generateMipmap(props),this.setSampler(props.sampler),this._setSamplerParameters(parameters)})),this}setSampler(sampler={}){let samplerProps;sampler instanceof WEBGLSampler?(this.sampler=sampler,samplerProps=sampler.props):(this.sampler=new WEBGLSampler(this.device,sampler),samplerProps=sampler);const parameters=convertSamplerParametersToWebGL(samplerProps);return this._setSamplerParameters(parameters),this}resize(options){const{height:height,width:width,mipmaps:mipmaps=!1}=options;return width!==this.width||height!==this.height?this.initialize({width:width,height:height,format:this.format,type:this.type,dataFormat:this.dataFormat,mipmaps:mipmaps}):this}update(){if(this._video){const{video:video,parameters:parameters,lastTime:lastTime}=this._video;if(lastTime===video.currentTime||video.readyState<HTMLVideoElement.HAVE_CURRENT_DATA)return;this.setSubImageData({data:video,parameters:parameters}),this.mipmaps&&this.generateMipmap(),this._video.lastTime=video.currentTime}}generateMipmap(params={}){return this.mipmaps=!0,this.gl.bindTexture(this.target,this.handle),with_parameters_withGLParameters(this.gl,params,(()=>{this.gl.generateMipmap(this.target)})),this.gl.bindTexture(this.target,null),this}setImageData(options){if("3d"===this.props.dimension||"2d-array"===this.props.dimension)return this.setImageData3D(options);this.trackDeallocatedMemory("Texture");const{target:target=this.target,pixels:pixels=null,level:level=0,glFormat:glFormat=this.glFormat,offset:offset=0,parameters:parameters={}}=options;let{data:data=null,type:type=this.type,width:width=this.width,height:height=this.height,dataFormat:dataFormat=this.dataFormat,compressed:compressed=!1}=options;data||(data=pixels),({type:type,dataFormat:dataFormat,compressed:compressed,width:width,height:height}=this._deduceParameters({format:this.props.format,type:type,dataFormat:dataFormat,compressed:compressed,data:data,width:width,height:height}));const{gl:gl}=this;gl.bindTexture(this.target,this.handle);let dataType=null;if(({data:data,dataType:dataType}=this._getDataType({data:data,compressed:compressed})),with_parameters_withGLParameters(this.gl,parameters,(()=>{switch(dataType){case"null":case"browser-object":gl.texImage2D(target,level,glFormat,width,height,0,dataFormat,type,data);break;case"typed-array":gl.texImage2D(target,level,glFormat,width,height,0,dataFormat,type,data,offset);break;case"buffer":this.device.gl.bindBuffer(35052,data.handle||data),this.device.gl.texImage2D(target,level,glFormat,width,height,0,dataFormat,type,offset),this.device.gl.bindBuffer(35052,null);break;case"compressed":for(const[levelIndex,levelData]of data.entries())gl.compressedTexImage2D(target,levelIndex,levelData.format,levelData.width,levelData.height,0,levelData.data);break;default:(0,utils_assert.v)(!1,"Unknown image data type")}})),data&&data.byteLength)this.trackAllocatedMemory(data.byteLength,"Texture");else{const bytesPerPixel=getTextureFormatBytesPerPixel(this.props.format);this.trackAllocatedMemory(this.width*this.height*bytesPerPixel,"Texture")}return this.loaded=!0,this}setSubImageData({target:target=this.target,pixels:pixels=null,data:data=null,x:x=0,y:y=0,width:width=this.width,height:height=this.height,level:level=0,glFormat:glFormat=this.glFormat,type:type=this.type,dataFormat:dataFormat=this.dataFormat,compressed:compressed=!1,offset:offset=0,parameters:parameters={}}){if(({type:type,dataFormat:dataFormat,compressed:compressed,width:width,height:height}=this._deduceParameters({format:this.props.format,type:type,dataFormat:dataFormat,compressed:compressed,data:data,width:width,height:height})),(0,utils_assert.v)(1===this.depth,"texSubImage not supported for 3D textures"),data||(data=pixels),data&&data.data){const ndarray=data;data=ndarray.data,width=ndarray.shape[0],height=ndarray.shape[1]}data instanceof WEBGLBuffer&&(data=data.handle),this.gl.bindTexture(this.target,this.handle),with_parameters_withGLParameters(this.gl,parameters,(()=>{compressed?this.gl.compressedTexSubImage2D(target,level,x,y,width,height,glFormat,data):null===data?this.gl.texSubImage2D(target,level,x,y,width,height,dataFormat,type,null):ArrayBuffer.isView(data)?this.gl.texSubImage2D(target,level,x,y,width,height,dataFormat,type,data,offset):"undefined"!=typeof WebGLBuffer&&data instanceof WebGLBuffer?(this.device.gl.bindBuffer(35052,data),this.device.gl.texSubImage2D(target,level,x,y,width,height,dataFormat,type,offset),this.device.gl.bindBuffer(35052,null)):this.device.gl.texSubImage2D(target,level,x,y,width,height,dataFormat,type,data)})),this.gl.bindTexture(this.target,null)}copyFramebuffer(opts={}){return utils_log.R.error("Texture.copyFramebuffer({...}) is no logner supported, use copyToTexture(source, target, opts})")(),null}getActiveUnit(){return this.gl.getParameter(34016)-33984}bind(textureUnit=this.textureUnit){const{gl:gl}=this;return void 0!==textureUnit&&(this.textureUnit=textureUnit,gl.activeTexture(33984+textureUnit)),gl.bindTexture(this.target,this.handle),textureUnit}unbind(textureUnit=this.textureUnit){const{gl:gl}=this;return void 0!==textureUnit&&(this.textureUnit=textureUnit,gl.activeTexture(33984+textureUnit)),gl.bindTexture(this.target,null),textureUnit}_getDataType({data:data,compressed:compressed=!1}){return compressed?{data:data,dataType:"compressed"}:null===data?{data:data,dataType:"null"}:ArrayBuffer.isView(data)?{data:data,dataType:"typed-array"}:data instanceof WEBGLBuffer?{data:data.handle,dataType:"buffer"}:"undefined"!=typeof WebGLBuffer&&data instanceof WebGLBuffer?{data:data,dataType:"buffer"}:{data:data,dataType:"browser-object"}}_deduceParameters(opts){const{format:format,data:data}=opts;let{width:width,height:height,dataFormat:dataFormat,type:type,compressed:compressed}=opts;const parameters=getWebGLTextureParameters(format);return dataFormat=dataFormat||parameters.dataFormat,type=type||parameters.type,compressed=compressed||parameters.compressed,({width:width,height:height}=this._deduceImageSize(data,width,height)),{dataFormat:dataFormat,type:type,compressed:compressed,width:width,height:height,format:format,data:data}}_deduceImageSize(data,width,height){let size;return size="undefined"!=typeof ImageData&&data instanceof ImageData?{width:data.width,height:data.height}:"undefined"!=typeof HTMLImageElement&&data instanceof HTMLImageElement?{width:data.naturalWidth,height:data.naturalHeight}:"undefined"!=typeof HTMLCanvasElement&&data instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&data instanceof ImageBitmap?{width:data.width,height:data.height}:"undefined"!=typeof HTMLVideoElement&&data instanceof HTMLVideoElement?{width:data.videoWidth,height:data.videoHeight}:data?{width:width,height:height}:{width:width>=0?width:1,height:height>=0?height:1},(0,utils_assert.v)(size,"Could not deduced texture size"),(0,utils_assert.v)(void 0===width||size.width===width,"Deduced texture width does not match supplied width"),(0,utils_assert.v)(void 0===height||size.height===height,"Deduced texture height does not match supplied height"),size}async setCubeMapImageData(options){const{gl:gl}=this,{width:width,height:height,pixels:pixels,data:data,format:format=6408,type:type=5121}=options,imageDataMap=pixels||data,resolvedFaces=await Promise.all(WEBGLTexture.FACES.map((face=>{const facePixels=imageDataMap[face];return Promise.all(Array.isArray(facePixels)?facePixels:[facePixels])})));this.bind(),WEBGLTexture.FACES.forEach(((face,index)=>{resolvedFaces[index].length>1&&!1!==this.props.mipmaps&&utils_log.R.warn(`${this.id} has mipmap and multiple LODs.`)(),resolvedFaces[index].forEach(((image,lodLevel)=>{width&&height?gl.texImage2D(face,lodLevel,format,width,height,0,format,type,image):gl.texImage2D(face,lodLevel,format,format,type,image)}))})),this.unbind()}setImageDataForFace(options){const{face:face,width:width,height:height,pixels:pixels,data:data,format:format=6408,type:type=5121}=options,{gl:gl}=this,imageData=pixels||data;return this.bind(),imageData instanceof Promise?imageData.then((resolvedImageData=>this.setImageDataForFace(Object.assign({},options,{face:face,data:resolvedImageData,pixels:resolvedImageData})))):this.width||this.height?gl.texImage2D(face,0,format,width,height,0,format,type,imageData):gl.texImage2D(face,0,format,format,type,imageData),this}setImageData3D(options){const{level:level=0,dataFormat:dataFormat,format:format,type:type,width:width,height:height,depth:depth=1,offset:offset=0,data:data,parameters:parameters={}}=options;this.trackDeallocatedMemory("Texture"),this.gl.bindTexture(this.target,this.handle);const webglTextureFormat=getWebGLTextureParameters(format);if(with_parameters_withGLParameters(this.gl,parameters,(()=>{ArrayBuffer.isView(data)&&this.gl.texImage3D(this.target,level,webglTextureFormat.format,width,height,depth,0,webglTextureFormat.dataFormat,webglTextureFormat.type,data),data instanceof WEBGLBuffer&&(this.gl.bindBuffer(35052,data.handle),this.gl.texImage3D(this.target,level,dataFormat,width,height,depth,0,format,type,offset))})),data&&data.byteLength)this.trackAllocatedMemory(data.byteLength,"Texture");else{const bytesPerPixel=getTextureFormatBytesPerPixel(this.props.format);this.trackAllocatedMemory(this.width*this.height*this.depth*bytesPerPixel,"Texture")}return this.loaded=!0,this}_setSamplerParameters(parameters){if(!(0,utils.Z)(parameters)){!function logParameters(parameters){utils_log.R.log(1,"texture sampler parameters",parameters)()}(parameters),this.gl.bindTexture(this.target,this.handle);for(const[pname,pvalue]of Object.entries(parameters)){const param=Number(pname),value=pvalue;switch(param){case 33082:case 33083:this.gl.texParameterf(this.target,param,value);break;default:this.gl.texParameteri(this.target,param,value)}}this.gl.bindTexture(this.target,null)}}}class WEBGLFramebuffer extends Framebuffer{device;gl;handle;get texture(){return this.colorAttachments[0]}constructor(device,props){super(device,props);const isDefaultFramebuffer=null===props.handle;if(this.device=device,this.gl=device.gl,this.handle=this.props.handle||isDefaultFramebuffer?this.props.handle:this.gl.createFramebuffer(),!isDefaultFramebuffer){device.setSpectorMetadata(this.handle,{id:this.props.id,props:this.props}),this.autoCreateAttachmentTextures();const prevHandle=this.gl.bindFramebuffer(36160,this.handle);for(let i=0;i<this.colorAttachments.length;++i){const attachment=this.colorAttachments[i],attachmentPoint=36064+i;attachment&&this._attachOne(attachmentPoint,attachment)}if(this.depthStencilAttachment&&this._attachOne(function getDepthStencilAttachmentWebGL(format){const info=TEXTURE_FORMATS[format];if(!info?.attachment)throw new Error(`${format} is not a depth stencil format`);return info.attachment}(this.depthStencilAttachment.props.format),this.depthStencilAttachment),!1!==props.check){const status=this.gl.checkFramebufferStatus(36160);if(36053!==status)throw new Error(`Framebuffer ${function _getFrameBufferStatus(status){switch(status){case 36053:return"success";case 36054:return"Mismatched attachments";case 36055:return"No attachments";case 36057:return"Height/width mismatch";case 36061:return"Unsupported or split attachments";case 36182:return"Samples mismatch";default:return`${status}`}}(status)}`)}this.gl.bindFramebuffer(36160,prevHandle)}}destroy(){super.destroy(),this.destroyed||null===this.handle||this.gl.deleteFramebuffer(this.handle)}createDepthStencilTexture(format){return new WEBGLTexture(this.device,{id:`${this.id}-depth-stencil`,format:format,width:this.width,height:this.height,mipmaps:!1})}resizeAttachments(width,height){if(null===this.handle)return this.width=this.gl.drawingBufferWidth,this.height=this.gl.drawingBufferHeight,this;void 0===width&&(width=this.gl.drawingBufferWidth),void 0===height&&(height=this.gl.drawingBufferHeight);for(const colorAttachment of this.colorAttachments)colorAttachment.texture.resize({width:width,height:height});return this.depthStencilAttachment&&this.depthStencilAttachment.texture.resize({width:width,height:height}),this}_attachOne(attachmentPoint,attachment){if(Array.isArray(attachment)){const[texture,layer=0,level=0]=attachment;return this._attachTexture(attachmentPoint,texture,layer,level),texture}if(attachment instanceof WEBGLTexture)return this._attachTexture(attachmentPoint,attachment,0,0),attachment;if(attachment instanceof WEBGLTextureView){const textureView=attachment;return this._attachTexture(attachmentPoint,textureView.texture,textureView.props.baseMipLevel,textureView.props.baseArrayLayer),attachment.texture}throw new Error("attach")}_attachTexture(attachment,texture,layer,level){const{gl:gl}=this.device;switch(gl.bindTexture(texture.target,texture.handle),texture.target){case 35866:case 32879:gl.framebufferTextureLayer(36160,attachment,texture.target,level,layer);break;case 34067:const face=function mapIndexToCubeMapFace(layer){return layer<34069?layer+34069:layer}(layer);gl.framebufferTexture2D(36160,attachment,face,texture.handle,level);break;case 3553:gl.framebufferTexture2D(36160,attachment,3553,texture.handle,level);break;default:(0,utils_assert.v)(!1,"Illegal texture type")}gl.bindTexture(texture.target,null)}}class WebGLCanvasContext extends CanvasContext{device;presentationSize;_framebuffer=null;constructor(device,props){super(props),this.device=device,this.presentationSize=[-1,-1],this._setAutoCreatedCanvasId(`${this.device.id}-canvas`),this.update()}getCurrentFramebuffer(){return this.update(),this._framebuffer=this._framebuffer||new WEBGLFramebuffer(this.device,{handle:null}),this._framebuffer}update(){const size=this.getPixelSize();(size[0]!==this.presentationSize[0]||size[1]!==this.presentationSize[1])&&(this.presentationSize=size,this.resize())}resize(options){if(this.device.gl)if(this.canvas){const devicePixelRatio=this.getDevicePixelRatio(options?.useDevicePixels);this.setDevicePixelRatio(devicePixelRatio,options)}else;}commit(){}}const DEFAULT_SPECTOR_PROPS={spector:utils_log.R.get("spector")||utils_log.R.get("spectorjs")};let spector=null,initialized=!1;var webgl_constants=__webpack_require__("./node_modules/@luma.gl/constants/dist/webgl-constants.js");function getWebGLContextData(gl){return gl.luma=gl.luma||{},gl.luma}function makeDebugContext(gl,props={}){return gl?props.debug?function getDebugContext(gl,props){if(!globalThis.WebGLDebugUtils)return utils_log.R.warn("webgl-debug not loaded")(),gl;const data=getWebGLContextData(gl);if(data.debugContext)return data.debugContext;globalThis.WebGLDebugUtils.init({...webgl_constants.GL,...gl});const glDebug=globalThis.WebGLDebugUtils.makeDebugContext(gl,onGLError.bind(null,props),onValidateGLFunc.bind(null,props));for(const key in webgl_constants.GL)key in glDebug||"number"!=typeof webgl_constants.GL[key]||(glDebug[key]=webgl_constants.GL[key]);class WebGLDebugContext{}Object.setPrototypeOf(glDebug,Object.getPrototypeOf(gl)),Object.setPrototypeOf(WebGLDebugContext,glDebug);const debugContext=Object.create(WebGLDebugContext);return data.realContext=gl,data.debugContext=debugContext,debugContext.debug=!0,debugContext}(gl,props):function getRealContext(gl){const data=getWebGLContextData(gl);return data.realContext?data.realContext:gl}(gl):null}function getFunctionString(functionName,functionArgs){functionArgs=Array.from(functionArgs).map((arg=>void 0===arg?"undefined":arg));let args=globalThis.WebGLDebugUtils.glFunctionArgsToString(functionName,functionArgs);return args=`${args.slice(0,100)}${args.length>100?"...":""}`,`gl.${functionName}(${args})`}function onGLError(props,err,functionName,args){args=Array.from(args).map((arg=>void 0===arg?"undefined":arg));const message=`${globalThis.WebGLDebugUtils.glEnumToString(err)} in gl.${functionName}(${globalThis.WebGLDebugUtils.glFunctionArgsToString(functionName,args)})`;if(utils_log.R.error(message)(),props.throwOnError)throw new Error(message)}function onValidateGLFunc(props,functionName,functionArgs){let functionString="";if(utils_log.R.level>=1&&(functionString=getFunctionString(functionName,functionArgs),utils_log.R.log(1,functionString)()),props.break&&props.break.length>0){functionString=functionString||getFunctionString(functionName,functionArgs);props.break.every((breakOn=>-1!==functionString.indexOf(breakOn)))}for(const arg of functionArgs)if(void 0===arg){if(functionString=functionString||getFunctionString(functionName,functionArgs),props.throwOnError)throw new Error(`Undefined argument: ${functionString}`);utils_log.R.error(`Undefined argument: ${functionString}`)()}}var shader=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/shader.js");function getMessageType(messageType){const lowerCaseType=messageType.toLowerCase();return["warning","error","info"].includes(lowerCaseType)?lowerCaseType:"info"}class WEBGLShader extends shader.M{device;handle;constructor(device,props){switch(super(device,props),this.device=device,this.props.stage){case"vertex":this.handle=this.props.handle||this.device.gl.createShader(35633);break;case"fragment":this.handle=this.props.handle||this.device.gl.createShader(35632);break;default:throw new Error(this.props.stage)}this._compile(this.source)}destroy(){this.handle&&(this.removeStats(),this.device.gl.deleteShader(this.handle),this.destroyed=!0)}async getCompilationInfo(){return await this._waitForCompilationComplete(),this.getCompilationInfoSync()}getCompilationInfoSync(){return function parseShaderCompilerLog(errLog){const lines=errLog.split(/\r?\n/),messages=[];for(const line of lines){if(line.length<=1)continue;const segments=line.split(":");if(2===segments.length){const[messageType,message]=segments;messages.push({message:message.trim(),type:getMessageType(messageType),lineNum:0,linePos:0});continue}const[messageType,linePosition,lineNumber,...rest]=segments;let lineNum=parseInt(lineNumber,10);isNaN(lineNum)&&(lineNum=0);let linePos=parseInt(linePosition,10);isNaN(linePos)&&(linePos=0),messages.push({message:rest.join(":").trim(),type:getMessageType(messageType),lineNum:lineNum,linePos:linePos})}return messages}(this.device.gl.getShaderInfoLog(this.handle))}getTranslatedSource(){const ext=this.device.getExtension("WEBGL_debug_shaders").WEBGL_debug_shaders;return ext?.getTranslatedShaderSource(this.handle)}async _compile(source){source=(source=>source.startsWith("#version ")?source:`#version 100\n${source}`)(source);const{gl:gl}=this.device;if(gl.shaderSource(this.handle,source),gl.compileShader(this.handle),0!==utils_log.R.level){if(this.device.features.has("compilation-status-async-webgl"))utils_log.R.once(1,"Shader compilation is asynchronous")(),await this._waitForCompilationComplete(),utils_log.R.info(2,`Shader ${this.id} - async compilation complete: ${this.compilationStatus}`)(),this._getCompilationStatus(),this.debugShader();else if(this._getCompilationStatus(),this.debugShader(),"error"===this.compilationStatus)throw new Error(`GLSL compilation errors in ${this.props.stage} shader ${this.props.id}`)}else this.compilationStatus="pending"}async _waitForCompilationComplete(){const waitMs=async ms=>await new Promise((resolve=>setTimeout(resolve,ms)));if(!this.device.features.has("compilation-status-async-webgl"))return void await waitMs(10);const{gl:gl}=this.device;for(;;){if(gl.getShaderParameter(this.handle,37297))return;await waitMs(10)}}_getCompilationStatus(){this.compilationStatus=this.device.gl.getShaderParameter(this.handle,35713)?"success":"error"}}class RenderPass extends resource.F{static defaultProps={...resource.F.defaultProps,framebuffer:null,parameters:void 0,clearColor:[0,0,0,0],clearDepth:1,clearStencil:0,depthReadOnly:!1,stencilReadOnly:!1,discard:!1,occlusionQuerySet:void 0,timestampQuerySet:void 0,beginTimestampIndex:void 0,endTimestampIndex:void 0};get[Symbol.toStringTag](){return"RenderPass"}constructor(device,props){super(device,props,RenderPass.defaultProps)}}const COLOR_CHANNELS=[1,2,4,8];class WEBGLRenderPass extends RenderPass{device;glParameters;constructor(device,props){super(device,props),this.device=device,track_context_state_pushContextState(this.device.gl),this.setParameters(this.props.parameters),this.clear()}end(){track_context_state_popContextState(this.device.gl)}pushDebugGroup(groupLabel){}popDebugGroup(){}insertDebugMarker(markerLabel){}setParameters(parameters={}){const glParameters={...this.glParameters};this.props.framebuffer&&(glParameters.framebuffer=this.props.framebuffer),this.props.depthReadOnly&&(glParameters.depthMask=!this.props.depthReadOnly),glParameters.stencilMask=this.props.stencilReadOnly?0:1,glParameters[35977]=this.props.discard,parameters.viewport&&(parameters.viewport.length>=6?(glParameters.viewport=parameters.viewport.slice(0,4),glParameters.depthRange=[parameters.viewport[4],parameters.viewport[5]]):glParameters.viewport=parameters.viewport),parameters.scissorRect&&(glParameters.scissorTest=!0,glParameters.scissor=parameters.scissorRect),parameters.blendConstant&&(glParameters.blendColor=parameters.blendConstant),parameters.stencilReference&&(console.warn("RenderPassParameters.stencilReference not yet implemented in WebGL"),parameters[2967]=parameters.stencilReference),parameters.colorMask&&(glParameters.colorMask=COLOR_CHANNELS.map((channel=>Boolean(channel&parameters.colorMask)))),this.glParameters=glParameters,unified_parameter_api_setGLParameters(this.device.gl,glParameters)}beginOcclusionQuery(queryIndex){const webglQuerySet=this.props.occlusionQuerySet;webglQuerySet?.beginOcclusionQuery()}endOcclusionQuery(){const webglQuerySet=this.props.occlusionQuerySet;webglQuerySet?.endOcclusionQuery()}clear(){const glParameters={...this.glParameters};let clearMask=0;!1!==this.props.clearColor&&(clearMask|=16384,glParameters.clearColor=this.props.clearColor),!1!==this.props.clearDepth&&(clearMask|=256,glParameters.clearDepth=this.props.clearDepth),!1!==this.props.clearStencil&&(clearMask|=1024,glParameters.clearStencil=this.props.clearStencil),0!==clearMask&&with_parameters_withGLParameters(this.device.gl,glParameters,(()=>{this.device.gl.clear(clearMask)}))}clearColorBuffer(drawBuffer=0,value=[0,0,0,0]){with_parameters_withGLParameters(this.device.gl,{framebuffer:this.props.framebuffer},(()=>{switch(value.constructor){case Int32Array:this.device.gl.clearBufferiv(6144,drawBuffer,value);break;case Uint32Array:this.device.gl.clearBufferuiv(6144,drawBuffer,value);break;case Float32Array:default:this.device.gl.clearBufferfv(6144,drawBuffer,value)}}))}}var render_pipeline=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/render-pipeline.js");var uniform=__webpack_require__("./node_modules/@luma.gl/core/dist/lib/uniforms/uniform.js"),get_attribute_from_layouts=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/attribute-utils/get-attribute-from-layouts.js");const ERR_TYPE_DEDUCTION="Failed to deduce GL constant from typed array";function getTypedArrayFromGLType(glType,options){const{clamped:clamped=!0}=options||{};switch(glType){case 5126:return Float32Array;case 5123:case 33635:case 32819:case 32820:return Uint16Array;case 5125:return Uint32Array;case 5121:return clamped?Uint8ClampedArray:Uint8Array;case 5120:return Int8Array;case 5122:return Int16Array;case 5124:return Int32Array;default:throw new Error("Failed to deduce typed array type from GL constant")}}const DEFAULT_ACCESSOR_VALUES={offset:0,stride:0,type:5126,size:1,divisor:0,normalized:!1,integer:!1},PROP_CHECKS={deprecatedProps:{instanced:"divisor",isInstanced:"divisor"}};class Accessor{offset;stride;type;size;divisor;normalized;integer;buffer;index;static getBytesPerElement(accessor){return getTypedArrayFromGLType(accessor.type||5126).BYTES_PER_ELEMENT}static getBytesPerVertex(accessor){(0,utils_assert.v)(accessor.size);return getTypedArrayFromGLType(accessor.type||5126).BYTES_PER_ELEMENT*accessor.size}static resolve(...accessors){return new Accessor(...[DEFAULT_ACCESSOR_VALUES,...accessors])}constructor(...accessors){accessors.forEach((accessor=>this._assign(accessor))),Object.freeze(this)}toString(){return JSON.stringify(this)}get BYTES_PER_ELEMENT(){return Accessor.getBytesPerElement(this)}get BYTES_PER_VERTEX(){return Accessor.getBytesPerVertex(this)}_assign(props={}){return void 0!==(props=function checkProps(className,props,propChecks){const{removedProps:removedProps={},deprecatedProps:deprecatedProps={},replacedProps:replacedProps={}}=propChecks;for(const propName in removedProps)if(propName in props){const replacement=removedProps[propName]?`${className}.${removedProps[propName]}`:"N/A";utils_log.R.removed(`${className}.${propName}`,replacement)()}for(const propName in deprecatedProps)if(propName in props){const replacementProp=deprecatedProps[propName];utils_log.R.deprecated(`${className}.${propName}`,`${className}.${replacementProp}`)()}let newProps=null;for(const[propName,replacementProp]of Object.entries(replacedProps))propName in props&&(utils_log.R.deprecated(`${className}.${propName}`,`${className}.${replacementProp}`)(),newProps=newProps||Object.assign({},props),newProps[replacementProp]=props[propName],delete newProps[propName]);return newProps||props}("Accessor",props,PROP_CHECKS)).type&&(this.type=props.type,5124!==props.type&&5125!==props.type||(this.integer=!0)),void 0!==props.size&&(this.size=props.size),void 0!==props.offset&&(this.offset=props.offset),void 0!==props.stride&&(this.stride=props.stride),void 0!==props.normalize&&(this.normalized=props.normalize),void 0!==props.normalized&&(this.normalized=props.normalized),void 0!==props.integer&&(this.integer=props.integer),void 0!==props.divisor&&(this.divisor=props.divisor),void 0!==props.buffer&&(this.buffer=props.buffer),void 0!==props.index&&("boolean"==typeof props.index?this.index=props.index?1:0:this.index=props.index),void 0!==props.instanced&&(this.divisor=props.instanced?1:0),void 0!==props.isInstanced&&(this.divisor=props.isInstanced?1:0),void 0===this.offset&&delete this.offset,void 0===this.stride&&delete this.stride,void 0===this.type&&delete this.type,void 0===this.size&&delete this.size,void 0===this.divisor&&delete this.divisor,void 0===this.normalized&&delete this.normalized,void 0===this.integer&&delete this.integer,void 0===this.buffer&&delete this.buffer,void 0===this.index&&delete this.index,this}}const SAMPLER_TYPES=[35678,35680,35679,35682,36289,36292,36293,36298,36299,36300,36303,36306,36307,36308,36311],COMPOSITE_GL_TYPES={5126:[5126,1,"float","f32","float32"],35664:[5126,2,"vec2","vec2<f32>","float32x2"],35665:[5126,3,"vec3","vec3<f32>","float32x3"],35666:[5126,4,"vec4","vec4<f32>","float32x4"],5124:[5124,1,"int","i32","sint32"],35667:[5124,2,"ivec2","vec2<i32>","sint32x2"],35668:[5124,3,"ivec3","vec3<i32>","sint32x3"],35669:[5124,4,"ivec4","vec4<i32>","sint32x4"],5125:[5125,1,"uint","u32","uint32"],36294:[5125,2,"uvec2","vec2<u32>","uint32x2"],36295:[5125,3,"uvec3","vec3<u32>","uint32x3"],36296:[5125,4,"uvec4","vec4<u32>","uint32x4"],35670:[5126,1,"bool","f32","float32"],35671:[5126,2,"bvec2","vec2<f32>","float32x2"],35672:[5126,3,"bvec3","vec3<f32>","float32x3"],35673:[5126,4,"bvec4","vec4<f32>","float32x4"],35674:[5126,8,"mat2","mat2x2<f32>"],35685:[5126,8,"mat2x3","mat2x3<f32>"],35686:[5126,8,"mat2x4","mat2x4<f32>"],35687:[5126,12,"mat3x2","mat3x2<f32>"],35675:[5126,12,"mat3","mat3x3<f32>"],35688:[5126,12,"mat3x4","mat3x4<f32>"],35689:[5126,16,"mat4x2","mat4x2<f32>"],35690:[5126,16,"mat4x3","mat4x3<f32>"],35676:[5126,16,"mat4","mat4x4<f32>"]};function decodeGLUniformType(glUniformType){const typeAndSize=COMPOSITE_GL_TYPES[glUniformType];if(!typeAndSize)throw new Error("uniform");const[glType,components,,format]=typeAndSize;return{format:format,components:components,glType:glType}}function decodeGLAttributeType(glAttributeType){const typeAndSize=COMPOSITE_GL_TYPES[glAttributeType];if(!typeAndSize)throw new Error("attribute");const[,components,,shaderType,vertexFormat]=typeAndSize;return{attributeType:shaderType,vertexFormat:vertexFormat,components:components}}function getShaderLayout(gl,program){const shaderLayout={attributes:[],bindings:[]};shaderLayout.attributes=function readAttributeDeclarations(gl,program){const attributes=[],count=gl.getProgramParameter(program,35721);for(let index=0;index<count;index++){const activeInfo=gl.getActiveAttrib(program,index);if(!activeInfo)throw new Error("activeInfo");const{name:name,type:compositeType}=activeInfo,location=gl.getAttribLocation(program,name);if(location>=0){const{attributeType:attributeType}=decodeGLAttributeType(compositeType),stepMode=/instance/i.test(name)?"instance":"vertex";attributes.push({name:name,location:location,stepMode:stepMode,type:attributeType})}}return attributes.sort(((a,b)=>a.location-b.location)),attributes}(gl,program);const uniformBlocks=function readUniformBlocks(gl,program){const getBlockParameter=(blockIndex,pname)=>gl.getActiveUniformBlockParameter(program,blockIndex,pname),uniformBlocks=[],blockCount=gl.getProgramParameter(program,35382);for(let blockIndex=0;blockIndex<blockCount;blockIndex++){const blockInfo={name:gl.getActiveUniformBlockName(program,blockIndex)||"",location:getBlockParameter(blockIndex,35391),byteLength:getBlockParameter(blockIndex,35392),vertex:getBlockParameter(blockIndex,35396),fragment:getBlockParameter(blockIndex,35398),uniformCount:getBlockParameter(blockIndex,35394),uniforms:[]},uniformIndices=getBlockParameter(blockIndex,35395)||[],uniformType=gl.getActiveUniforms(program,uniformIndices,35383),uniformArrayLength=gl.getActiveUniforms(program,uniformIndices,35384),uniformOffset=gl.getActiveUniforms(program,uniformIndices,35387),uniformStride=gl.getActiveUniforms(program,uniformIndices,35388);for(let i=0;i<blockInfo.uniformCount;++i){const activeInfo=gl.getActiveUniform(program,uniformIndices[i]);if(!activeInfo)throw new Error("activeInfo");blockInfo.uniforms.push({name:activeInfo.name,format:decodeGLUniformType(uniformType[i]).format,type:uniformType[i],arrayLength:uniformArrayLength[i],byteOffset:uniformOffset[i],byteStride:uniformStride[i]})}uniformBlocks.push(blockInfo)}return uniformBlocks.sort(((a,b)=>a.location-b.location)),uniformBlocks}(gl,program);for(const uniformBlock of uniformBlocks){const uniforms=uniformBlock.uniforms.map((uniform=>({name:uniform.name,format:uniform.format,byteOffset:uniform.byteOffset,byteStride:uniform.byteStride,arrayLength:uniform.arrayLength})));shaderLayout.bindings.push({type:"uniform",name:uniformBlock.name,location:uniformBlock.location,visibility:(uniformBlock.vertex?1:0)&(uniformBlock.fragment?2:0),minBindingSize:uniformBlock.byteLength,uniforms:uniforms})}const uniforms=function readUniformBindings(gl,program){const uniforms=[],uniformCount=gl.getProgramParameter(program,35718);for(let i=0;i<uniformCount;i++){const activeInfo=gl.getActiveUniform(program,i);if(!activeInfo)throw new Error("activeInfo");const{name:rawName,size:size,type:type}=activeInfo,{name:name,isArray:isArray}=parseUniformName(rawName);let webglLocation=gl.getUniformLocation(program,name);const uniformInfo={location:webglLocation,name:name,size:size,type:type,isArray:isArray};if(uniforms.push(uniformInfo),uniformInfo.size>1)for(let j=0;j<uniformInfo.size;j++){const elementName=`${name}[${j}]`;webglLocation=gl.getUniformLocation(program,elementName);const arrayElementUniformInfo={...uniformInfo,name:elementName,location:webglLocation};uniforms.push(arrayElementUniformInfo)}}return uniforms}(gl,program);let textureUnit=0;for(const uniform of uniforms)if(type=uniform.type,SAMPLER_TYPES.includes(type)){const{viewDimension:viewDimension,sampleType:sampleType}=getSamplerInfo(uniform.type);shaderLayout.bindings.push({type:"texture",name:uniform.name,location:textureUnit,viewDimension:viewDimension,sampleType:sampleType}),uniform.textureUnit=textureUnit,textureUnit+=1}var type;uniforms.length&&(shaderLayout.uniforms=uniforms);const varyings=function readVaryings(gl,program){const varyings=[],count=gl.getProgramParameter(program,35971);for(let location=0;location<count;location++){const activeInfo=gl.getTransformFeedbackVarying(program,location);if(!activeInfo)throw new Error("activeInfo");const{name:name,type:compositeType,size:size}=activeInfo,{glType:glType,components:components}=decodeGLUniformType(compositeType),varying={location:location,name:name,accessor:new Accessor({type:glType,size:size*components})};varyings.push(varying)}return varyings.sort(((a,b)=>a.location-b.location)),varyings}(gl,program);return varyings?.length&&(shaderLayout.varyings=varyings),shaderLayout}const SAMPLER_UNIFORMS_GL_TO_GPU={35678:["2d","float"],35680:["cube","float"],35679:["3d","float"],35682:["3d","depth"],36289:["2d-array","float"],36292:["2d-array","depth"],36293:["cube","float"],36298:["2d","sint"],36299:["3d","sint"],36300:["cube","sint"],36303:["2d-array","uint"],36306:["2d","uint"],36307:["3d","uint"],36308:["cube","uint"],36311:["2d-array","uint"]};function getSamplerInfo(type){const sampler=SAMPLER_UNIFORMS_GL_TO_GPU[type];if(!sampler)throw new Error("sampler");const[viewDimension,sampleType]=sampler;return{viewDimension:viewDimension,sampleType:sampleType}}function parseUniformName(name){if("]"!==name[name.length-1])return{name:name,length:1,isArray:!1};const matches=/([^[]*)(\[[0-9]+\])?/.exec(name);if(!matches||matches.length<2)throw new Error(`Failed to parse GLSL uniform name ${name}`);return{name:matches[1],length:matches[2]?1:0,isArray:Boolean(matches[2])}}function setUniform(gl,location,type,value){const gl2=gl;let uniformValue=value;!0===uniformValue&&(uniformValue=1),!1===uniformValue&&(uniformValue=0);const arrayValue="number"==typeof uniformValue?[uniformValue]:uniformValue;switch(type){case 35678:case 35680:case 35679:case 35682:case 36289:case 36292:case 36293:case 36298:case 36299:case 36300:case 36303:case 36306:case 36307:case 36308:case 36311:if("number"!=typeof value)throw new Error("samplers must be set to integers");return gl.uniform1i(location,value);case 5126:return gl.uniform1fv(location,arrayValue);case 35664:return gl.uniform2fv(location,arrayValue);case 35665:return gl.uniform3fv(location,arrayValue);case 35666:return gl.uniform4fv(location,arrayValue);case 5124:case 35670:return gl.uniform1iv(location,arrayValue);case 35667:case 35671:return gl.uniform2iv(location,arrayValue);case 35668:case 35672:return gl.uniform3iv(location,arrayValue);case 35669:case 35673:return gl.uniform4iv(location,arrayValue);case 5125:return gl2.uniform1uiv(location,arrayValue,1);case 36294:return gl2.uniform2uiv(location,arrayValue,2);case 36295:return gl2.uniform3uiv(location,arrayValue,3);case 36296:return gl2.uniform4uiv(location,arrayValue,4);case 35674:return gl.uniformMatrix2fv(location,!1,arrayValue);case 35675:return gl.uniformMatrix3fv(location,!1,arrayValue);case 35676:return gl.uniformMatrix4fv(location,!1,arrayValue);case 35685:return gl2.uniformMatrix2x3fv(location,!1,arrayValue);case 35686:return gl2.uniformMatrix2x4fv(location,!1,arrayValue);case 35687:return gl2.uniformMatrix3x2fv(location,!1,arrayValue);case 35688:return gl2.uniformMatrix3x4fv(location,!1,arrayValue);case 35689:return gl2.uniformMatrix4x2fv(location,!1,arrayValue);case 35690:return gl2.uniformMatrix4x3fv(location,!1,arrayValue)}throw new Error("Illegal uniform")}class WEBGLRenderPipeline extends render_pipeline.r{device;handle;vs;fs;introspectedLayout;uniforms={};bindings={};varyings=null;_uniformCount=0;_uniformSetters={};constructor(device,props){super(device,props),this.device=device,this.handle=this.props.handle||this.device.gl.createProgram(),this.device.setSpectorMetadata(this.handle,{id:this.props.id}),this.vs=props.vs,this.fs=props.fs;const{varyings:varyings,bufferMode:bufferMode=35981}=props;switch(varyings&&varyings.length>0&&(this.varyings=varyings,this.device.gl.transformFeedbackVaryings(this.handle,varyings,bufferMode)),this._linkShaders(),utils_log.R.time(1,`RenderPipeline ${this.id} - shaderLayout introspection`)(),this.introspectedLayout=getShaderLayout(this.device.gl,this.handle),utils_log.R.timeEnd(1,`RenderPipeline ${this.id} - shaderLayout introspection`)(),this.shaderLayout=(0,get_attribute_from_layouts.GE)(this.introspectedLayout,props.shaderLayout),this.props.topology){case"triangle-fan-webgl":case"line-loop-webgl":utils_log.R.warn(`Primitive topology ${this.props.topology} is deprecated and will be removed in v9.1`)}}destroy(){this.handle&&(this.device.gl.deleteProgram(this.handle),this.destroyed=!0)}setBindings(bindings,options){for(const[name,value]of Object.entries(bindings)){const binding=this.shaderLayout.bindings.find((binding=>binding.name===name))||this.shaderLayout.bindings.find((binding=>binding.name===`${name}Uniforms`));if(binding){switch(value||utils_log.R.warn(`Unsetting binding "${name}" in render pipeline "${this.id}"`)(),binding.type){case"uniform":if(!(value instanceof WEBGLBuffer||value.buffer instanceof WEBGLBuffer))throw new Error("buffer value");break;case"texture":if(!(value instanceof WEBGLTextureView||value instanceof WEBGLTexture||value instanceof WEBGLFramebuffer))throw new Error("texture value");break;case"sampler":utils_log.R.warn(`Ignoring sampler ${name}`)();break;default:throw new Error(binding.type)}this.bindings[name]=value}else{const validBindings=this.shaderLayout.bindings.map((binding=>`"${binding.name}"`)).join(", ");options?.disableWarnings||utils_log.R.warn(`Unknown binding "${name}" in render pipeline "${this.id}", expected one of ${validBindings}`)()}}}draw(options){const{renderPass:renderPass,parameters:parameters=this.props.parameters,topology:topology=this.props.topology,vertexArray:vertexArray,vertexCount:vertexCount,instanceCount:instanceCount,isInstanced:isInstanced=!1,firstVertex:firstVertex=0,transformFeedback:transformFeedback}=options,glDrawMode=function getGLDrawMode(topology){switch(topology){case"point-list":return 0;case"line-list":return 1;case"line-strip":return 3;case"line-loop-webgl":return 2;case"triangle-list":return 4;case"triangle-strip":return 5;case"triangle-fan-webgl":return 6;default:throw new Error(topology)}}(topology),isIndexed=Boolean(vertexArray.indexBuffer),glIndexType=vertexArray.indexBuffer?.glIndexType;if("success"!==this.linkStatus)return utils_log.R.info(2,`RenderPipeline:${this.id}.draw() aborted - waiting for shader linking`)(),!1;if(!this._areTexturesRenderable()||0===vertexCount)return utils_log.R.info(2,`RenderPipeline:${this.id}.draw() aborted - textures not yet loaded`)(),!1;if(0===vertexCount)return utils_log.R.info(2,`RenderPipeline:${this.id}.draw() aborted - no vertices to draw`)(),!0;this.device.gl.useProgram(this.handle),vertexArray.bindBeforeRender(renderPass),transformFeedback&&transformFeedback.begin(this.props.topology),this._applyBindings(),this._applyUniforms();const webglRenderPass=renderPass;return function withDeviceAndGLParameters(device,parameters,glParameters,func){if((0,utils.Z)(parameters))return func(device);const webglDevice=device;track_context_state_pushContextState(webglDevice.gl);try{return setDeviceParameters(device,parameters),unified_parameter_api_setGLParameters(webglDevice.gl,glParameters),func(device)}finally{track_context_state_popContextState(webglDevice.gl)}}(this.device,parameters,webglRenderPass.glParameters,(()=>{isIndexed&&isInstanced?this.device.gl.drawElementsInstanced(glDrawMode,vertexCount||0,glIndexType,firstVertex,instanceCount||0):isIndexed?this.device.gl.drawElements(glDrawMode,vertexCount||0,glIndexType,firstVertex):isInstanced?this.device.gl.drawArraysInstanced(glDrawMode,firstVertex,vertexCount||0,instanceCount||0):this.device.gl.drawArrays(glDrawMode,firstVertex,vertexCount||0),transformFeedback&&transformFeedback.end()})),vertexArray.unbindAfterRender(renderPass),!0}setUniformsWebGL(uniforms){const{bindings:bindings}=(0,uniform.l)(uniforms);Object.keys(bindings).forEach((name=>{utils_log.R.warn(`Unsupported value "${JSON.stringify(bindings[name])}" used in setUniforms() for key ${name}. Use setBindings() instead?`)()})),Object.assign(this.uniforms,uniforms)}async _linkShaders(){const{gl:gl}=this.device;if(gl.attachShader(this.handle,this.vs.handle),gl.attachShader(this.handle,this.fs.handle),utils_log.R.time(4,`linkProgram for ${this.id}`)(),gl.linkProgram(this.handle),utils_log.R.timeEnd(4,`linkProgram for ${this.id}`)(),utils_log.R.level,!this.device.features.has("compilation-status-async-webgl")){const status=this._getLinkStatus();return void this._reportLinkStatus(status)}utils_log.R.once(1,"RenderPipeline linking is asynchronous")(),await this._waitForLinkComplete(),utils_log.R.info(2,`RenderPipeline ${this.id} - async linking complete: ${this.linkStatus}`)();const status=this._getLinkStatus();this._reportLinkStatus(status)}_reportLinkStatus(status){if("success"!==status){if("error"===this.vs.compilationStatus)throw this.vs.debugShader(),new Error(`Error during compilation of shader ${this.vs.id}`);if("error"===this.fs?.compilationStatus)throw this.fs.debugShader(),new Error(`Error during compilation of shader ${this.fs.id}`);throw new Error(`Error during ${status}: ${this.device.gl.getProgramInfoLog(this.handle)}`)}}_getLinkStatus(){const{gl:gl}=this.device;if(!gl.getProgramParameter(this.handle,35714))return this.linkStatus="error","linking";gl.validateProgram(this.handle);return gl.getProgramParameter(this.handle,35715)?(this.linkStatus="success","success"):(this.linkStatus="error","validation")}async _waitForLinkComplete(){const waitMs=async ms=>await new Promise((resolve=>setTimeout(resolve,ms)));if(!this.device.features.has("compilation-status-async-webgl"))return void await waitMs(10);const{gl:gl}=this.device;for(;;){if(gl.getProgramParameter(this.handle,37297))return;await waitMs(10)}}_areTexturesRenderable(){let texturesRenderable=!0;for(const[,texture]of Object.entries(this.bindings))texture instanceof WEBGLTexture&&(texture.update(),texturesRenderable=texturesRenderable&&texture.loaded);return texturesRenderable}_applyBindings(){if("success"!==this.linkStatus)return;const{gl:gl}=this.device;gl.useProgram(this.handle);let textureUnit=0,uniformBufferIndex=0;for(const binding of this.shaderLayout.bindings){const value=this.bindings[binding.name]||this.bindings[binding.name.replace(/Uniforms$/,"")];if(!value)throw new Error(`No value for binding ${binding.name} in ${this.id}`);switch(binding.type){case"uniform":const{name:name}=binding,location=gl.getUniformBlockIndex(this.handle,name);if(4294967295===location)throw new Error(`Invalid uniform block name ${name}`);gl.uniformBlockBinding(this.handle,uniformBufferIndex,location),value instanceof WEBGLBuffer?gl.bindBufferBase(35345,uniformBufferIndex,value.handle):gl.bindBufferRange(35345,uniformBufferIndex,value.buffer.handle,value.offset||0,value.size||value.buffer.byteLength-value.offset),uniformBufferIndex+=1;break;case"texture":if(!(value instanceof WEBGLTextureView||value instanceof WEBGLTexture||value instanceof WEBGLFramebuffer))throw new Error("texture");let texture;if(value instanceof WEBGLTextureView)texture=value.texture;else if(value instanceof WEBGLTexture)texture=value;else{if(!(value instanceof WEBGLFramebuffer&&value.colorAttachments[0]instanceof WEBGLTextureView))throw new Error("No texture");utils_log.R.warn("Passing framebuffer in texture binding may be deprecated. Use fbo.colorAttachments[0] instead")(),texture=value.colorAttachments[0].texture}gl.activeTexture(33984+textureUnit),gl.bindTexture(texture.target,texture.handle),textureUnit+=1;break;case"sampler":break;case"storage":case"read-only-storage":throw new Error(`binding type '${binding.type}' not supported in WebGL`)}}}_applyUniforms(){for(const uniformLayout of this.shaderLayout.uniforms||[]){const{name:name,location:location,type:type,textureUnit:textureUnit}=uniformLayout,value=this.uniforms[name]??textureUnit;void 0!==value&&setUniform(this.device.gl,location,type,value)}}}class CommandEncoder extends resource.F{static defaultProps={...resource.F.defaultProps,measureExecutionTime:void 0};get[Symbol.toStringTag](){return"CommandEncoder"}constructor(device,props){super(device,props,CommandEncoder.defaultProps)}}class CommandBuffer extends resource.F{static defaultProps={...resource.F.defaultProps};get[Symbol.toStringTag](){return"CommandBuffer"}constructor(device,props){super(device,props,CommandBuffer.defaultProps)}}class WEBGLCommandBuffer extends CommandBuffer{device;commands=[];constructor(device){super(device,{}),this.device=device}submitCommands(commands=this.commands){for(const command of commands)switch(command.name){case"copy-buffer-to-buffer":_copyBufferToBuffer(this.device,command.options);break;case"copy-buffer-to-texture":_copyBufferToTexture(this.device,command.options);break;case"copy-texture-to-buffer":_copyTextureToBuffer(this.device,command.options);break;case"copy-texture-to-texture":_copyTextureToTexture(this.device,command.options)}}}function _copyBufferToBuffer(device,options){const source=options.source,destination=options.destination;device.gl.bindBuffer(36662,source.handle),device.gl.bindBuffer(36663,destination.handle),device.gl.copyBufferSubData(36662,36663,options.sourceOffset??0,options.destinationOffset??0,options.size),device.gl.bindBuffer(36662,null),device.gl.bindBuffer(36663,null)}function _copyBufferToTexture(device,options){throw new Error("Not implemented")}function _copyTextureToBuffer(device,options){const{source:source,mipLevel:mipLevel=0,aspect:aspect="all",width:width=options.source.width,height:height=options.source.height,depthOrArrayLayers:depthOrArrayLayers=0,origin:origin=[0,0],destination:destination,byteOffset:byteOffset=0,bytesPerRow:bytesPerRow,rowsPerImage:rowsPerImage}=options;if("all"!==aspect)throw new Error("not supported");if(0!==mipLevel||0!==depthOrArrayLayers||bytesPerRow||rowsPerImage)throw new Error("not implemented");const{framebuffer:framebuffer,destroyFramebuffer:destroyFramebuffer}=getFramebuffer(source);let prevHandle;try{const webglBuffer=destination,sourceWidth=width||framebuffer.width,sourceHeight=height||framebuffer.height,sourceParams=getWebGLTextureParameters(framebuffer.texture.props.format),sourceFormat=sourceParams.dataFormat,sourceType=sourceParams.type;device.gl.bindBuffer(35051,webglBuffer.handle),prevHandle=device.gl.bindFramebuffer(36160,framebuffer.handle),device.gl.readPixels(origin[0],origin[1],sourceWidth,sourceHeight,sourceFormat,sourceType,byteOffset)}finally{device.gl.bindBuffer(35051,null),void 0!==prevHandle&&device.gl.bindFramebuffer(36160,prevHandle),destroyFramebuffer&&framebuffer.destroy()}}function _copyTextureToTexture(device,options){const{source:source,destinationMipLevel:destinationMipLevel=0,origin:origin=[0,0],destinationOrigin:destinationOrigin=[0,0],destination:destination}=options;let{width:width=options.destination.width,height:height=options.destination.height}=options;const{framebuffer:framebuffer,destroyFramebuffer:destroyFramebuffer}=getFramebuffer(source),[sourceX,sourceY]=origin,[destinationX,destinationY,destinationZ]=destinationOrigin,prevHandle=device.gl.bindFramebuffer(36160,framebuffer.handle);let textureTarget,texture=null;if(!(destination instanceof WEBGLTexture))throw new Error("invalid destination");switch(texture=destination,width=Number.isFinite(width)?width:texture.width,height=Number.isFinite(height)?height:texture.height,texture.bind(0),textureTarget=texture.target,textureTarget){case 3553:case 34067:device.gl.copyTexSubImage2D(textureTarget,destinationMipLevel,destinationX,destinationY,sourceX,sourceY,width,height);break;case 35866:case 32879:device.gl.copyTexSubImage3D(textureTarget,destinationMipLevel,destinationX,destinationY,destinationZ,sourceX,sourceY,width,height)}texture&&texture.unbind(),device.gl.bindFramebuffer(36160,prevHandle),destroyFramebuffer&&framebuffer.destroy()}function getFramebuffer(source){if(source instanceof texture.g){const{width:width,height:height,id:id}=source;return{framebuffer:source.device.createFramebuffer({id:`framebuffer-for-${id}`,width:width,height:height,colorAttachments:[source]}),destroyFramebuffer:!0}}return{framebuffer:source,destroyFramebuffer:!1}}class WEBGLCommandEncoder extends CommandEncoder{device;commandBuffer;constructor(device,props){super(device,props),this.device=device,this.commandBuffer=new WEBGLCommandBuffer(device)}destroy(){}finish(){this.commandBuffer.submitCommands()}copyBufferToBuffer(options){this.commandBuffer.commands.push({name:"copy-buffer-to-buffer",options:options})}copyBufferToTexture(options){this.commandBuffer.commands.push({name:"copy-buffer-to-texture",options:options})}copyTextureToBuffer(options){this.commandBuffer.commands.push({name:"copy-texture-to-buffer",options:options})}copyTextureToTexture(options){this.commandBuffer.commands.push({name:"copy-texture-to-texture",options:options})}pushDebugGroup(groupLabel){}popDebugGroup(){}insertDebugMarker(markerLabel){}resolveQuerySet(querySet,destination,options){}}class VertexArray extends resource.F{static defaultProps={...resource.F.defaultProps,renderPipeline:null};get[Symbol.toStringTag](){return"VertexArray"}maxVertexAttributes;attributeInfos;indexBuffer=null;attributes;constructor(device,props){super(device,props,VertexArray.defaultProps),this.maxVertexAttributes=device.limits.maxVertexAttributes,this.attributes=new Array(this.maxVertexAttributes).fill(null),this.attributeInfos=(0,get_attribute_from_layouts.Mr)(props.renderPipeline.shaderLayout,props.renderPipeline.bufferLayout,this.maxVertexAttributes)}setConstantWebGL(location,value){throw new Error("constant attributes not supported")}}var array_utils_flat=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/array-utils-flat.js"),is_electron=__webpack_require__("./node_modules/@probe.gl/env/dist/lib/is-electron.js"),globals=__webpack_require__("./node_modules/@probe.gl/env/dist/lib/globals.js");class WEBGLVertexArray extends VertexArray{get[Symbol.toStringTag](){return"VertexArray"}device;handle;buffer=null;bufferValue=null;static isConstantAttributeZeroSupported(device){return"Chrome"===function getBrowser(mockUserAgent){return mockUserAgent||(0,is_browser.B)()?(0,is_electron.b)(mockUserAgent)?"Electron":(mockUserAgent||globals.gM.userAgent||"").indexOf("Edge")>-1?"Edge":globalThis.chrome?"Chrome":globalThis.safari?"Safari":globalThis.mozInnerScreenX?"Firefox":"Unknown":"Node"}()}constructor(device,props){super(device,props),this.device=device,this.handle=this.device.gl.createVertexArray()}destroy(){super.destroy(),this.buffer&&this.buffer?.destroy(),this.handle&&(this.device.gl.deleteVertexArray(this.handle),this.handle=void 0)}setIndexBuffer(indexBuffer){const buffer=indexBuffer;if(buffer&&34963!==buffer.glTarget)throw new Error("Use .setBuffer()");this.device.gl.bindVertexArray(this.handle),this.device.gl.bindBuffer(34963,buffer?buffer.handle:null),this.indexBuffer=buffer,this.device.gl.bindVertexArray(null)}setBuffer(location,attributeBuffer){const buffer=attributeBuffer;if(34963===buffer.glTarget)throw new Error("Use .setIndexBuffer()");const{size:size,type:type,stride:stride,offset:offset,normalized:normalized,integer:integer,divisor:divisor}=this._getAccessor(location);this.device.gl.bindVertexArray(this.handle),this.device.gl.bindBuffer(34962,buffer.handle),integer?this.device.gl.vertexAttribIPointer(location,size,type,stride,offset):this.device.gl.vertexAttribPointer(location,size,type,normalized,stride,offset),this.device.gl.bindBuffer(34962,null),this.device.gl.enableVertexAttribArray(location),this.device.gl.vertexAttribDivisor(location,divisor||0),this.attributes[location]=buffer,this.device.gl.bindVertexArray(null)}setConstantWebGL(location,value){this._enable(location,!1),this.attributes[location]=value}bindBeforeRender(){this.device.gl.bindVertexArray(this.handle),this._applyConstantAttributes()}unbindAfterRender(){this.device.gl.bindVertexArray(null)}_applyConstantAttributes(){for(let location=0;location<this.maxVertexAttributes;++location){const constant=this.attributes[location];ArrayBuffer.isView(constant)&&this.device.setConstantAttributeWebGL(location,constant)}}_getAccessor(location){const attributeInfo=this.attributeInfos[location];if(!attributeInfo)throw new Error(`Unknown attribute location ${location}`);const glType=getGLFromVertexType(attributeInfo.bufferDataType);return{size:attributeInfo.bufferComponents,type:glType,stride:attributeInfo.byteStride,offset:attributeInfo.byteOffset,normalized:attributeInfo.normalized,integer:attributeInfo.integer,divisor:"instance"===attributeInfo.stepMode?1:0}}_enable(location,enable=!0){const canDisableAttributeZero=WEBGLVertexArray.isConstantAttributeZeroSupported(this.device);(enable||(canDisableAttributeZero||0!==location))&&(location=Number(location),this.device.gl.bindVertexArray(this.handle),enable?this.device.gl.enableVertexAttribArray(location):this.device.gl.disableVertexAttribArray(location),this.device.gl.bindVertexArray(null))}getConstantBuffer(elementCount,value){const constantValue=function normalizeConstantArrayValue(arrayValue){if(Array.isArray(arrayValue))return new Float32Array(arrayValue);return arrayValue}(value),byteLength=constantValue.byteLength*elementCount,length=constantValue.length*elementCount;if(this.buffer&&byteLength!==this.buffer.byteLength)throw new Error(`Buffer size is immutable, byte length ${byteLength} !== ${this.buffer.byteLength}.`);let updateNeeded=!this.buffer;if(this.buffer=this.buffer||this.device.createBuffer({byteLength:byteLength}),updateNeeded=updateNeeded||!function compareConstantArrayValues(v1,v2){if(!v1||!v2||v1.length!==v2.length||v1.constructor!==v2.constructor)return!1;for(let i=0;i<v1.length;++i)if(v1[i]!==v2[i])return!1;return!0}(constantValue,this.bufferValue),updateNeeded){const typedArray=(0,array_utils_flat.oF)(value.constructor,length);(0,array_utils_flat.R2)({target:typedArray,source:constantValue,start:0,count:length}),this.buffer.write(typedArray),this.bufferValue=value}return this.buffer}}class TransformFeedback extends resource.F{static defaultProps={...resource.F.defaultProps,layout:void 0,buffers:{}};get[Symbol.toStringTag](){return"TransformFeedback"}constructor(device,props){super(device,props,TransformFeedback.defaultProps)}}class WEBGLTransformFeedback extends TransformFeedback{device;gl;handle;layout;buffers={};unusedBuffers={};bindOnUse=!0;_bound=!1;constructor(device,props){super(device,props),this.device=device,this.gl=device.gl,this.handle=this.props.handle||this.gl.createTransformFeedback(),this.layout=this.props.layout,props.buffers&&this.setBuffers(props.buffers),Object.seal(this)}destroy(){this.gl.deleteTransformFeedback(this.handle),super.destroy()}begin(topology="point-list"){this.gl.bindTransformFeedback(36386,this.handle),this.bindOnUse&&this._bindBuffers(),this.gl.beginTransformFeedback(function getGLPrimitive(topology){switch(topology){case"point-list":return 0;case"line-list":case"line-strip":case"line-loop-webgl":return 1;case"triangle-list":case"triangle-strip":case"triangle-fan-webgl":return 4;default:throw new Error(topology)}}(topology))}end(){this.gl.endTransformFeedback(),this.bindOnUse&&this._unbindBuffers(),this.gl.bindTransformFeedback(36386,null)}setBuffers(buffers){this.buffers={},this.unusedBuffers={},this.bind((()=>{for(const bufferName in buffers)this.setBuffer(bufferName,buffers[bufferName])}))}setBuffer(locationOrName,bufferOrRange){const location=this._getVaryingIndex(locationOrName),{buffer:buffer,byteLength:byteLength,byteOffset:byteOffset}=this._getBufferRange(bufferOrRange);if(location<0)return this.unusedBuffers[locationOrName]=buffer,void utils_log.R.warn(`${this.id} unusedBuffers varying buffer ${locationOrName}`)();this.buffers[location]={buffer:buffer,byteLength:byteLength,byteOffset:byteOffset},this.bindOnUse||this._bindBuffer(location,buffer,byteOffset,byteLength)}getBuffer(locationOrName){if(isIndex(locationOrName))return this.buffers[locationOrName]||null;const location=this._getVaryingIndex(locationOrName);return location>=0?this.buffers[location]:null}bind(funcOrHandle=this.handle){if("function"!=typeof funcOrHandle)return this.gl.bindTransformFeedback(36386,funcOrHandle),this;let value;return this._bound?value=funcOrHandle():(this.gl.bindTransformFeedback(36386,this.handle),this._bound=!0,value=funcOrHandle(),this._bound=!1,this.gl.bindTransformFeedback(36386,null)),value}unbind(){this.bind(null)}_getBufferRange(bufferOrRange){if(bufferOrRange instanceof WEBGLBuffer)return{buffer:bufferOrRange,byteOffset:0,byteLength:bufferOrRange.byteLength};const{buffer:buffer,byteOffset:byteOffset=0,byteLength:byteLength=bufferOrRange.buffer.byteLength}=bufferOrRange;return{buffer:buffer,byteOffset:byteOffset,byteLength:byteLength}}_getVaryingIndex(locationOrName){if(isIndex(locationOrName))return Number(locationOrName);for(const varying of this.layout.varyings)if(locationOrName===varying.name)return varying.location;return-1}_bindBuffers(){for(const bufferIndex in this.buffers){const{buffer:buffer,byteLength:byteLength,byteOffset:byteOffset}=this._getBufferRange(this.buffers[bufferIndex]);this._bindBuffer(Number(bufferIndex),buffer,byteOffset,byteLength)}}_unbindBuffers(){for(const bufferIndex in this.buffers)this.gl.bindBufferBase(35982,Number(bufferIndex),null)}_bindBuffer(index,buffer,byteOffset=0,byteLength){const handle=buffer&&buffer.handle;handle&&void 0!==byteLength?this.gl.bindBufferRange(35982,index,handle,byteOffset,byteLength):this.gl.bindBufferBase(35982,index,handle)}}function isIndex(value){return"number"==typeof value?Number.isInteger(value):/^\d+$/.test(value)}class QuerySet extends resource.F{static defaultProps={...resource.F.defaultProps,type:void 0,count:void 0};get[Symbol.toStringTag](){return"QuerySet"}constructor(device,props){super(device,props,QuerySet.defaultProps)}}class WEBGLQuerySet extends QuerySet{device;handle;target=null;_queryPending=!1;_pollingPromise=null;get[Symbol.toStringTag](){return"Query"}constructor(device,props){if(super(device,props),this.device=device,props.count>1)throw new Error("WebGL QuerySet can only have one value");this.handle=this.device.gl.createQuery(),Object.seal(this)}destroy(){this.device.gl.deleteQuery(this.handle)}beginTimestampQuery(){return this._begin(35007)}endTimestampQuery(){this._end()}beginOcclusionQuery(options){return this._begin(options?.conservative?36202:35887)}endOcclusionQuery(){this._end()}beginTransformFeedbackQuery(){return this._begin(35976)}endTransformFeedbackQuery(){this._end()}async resolveQuery(){return[await this.pollQuery()]}_begin(target){this._queryPending||(this.target=target,this.device.gl.beginQuery(this.target,this.handle))}_end(){this._queryPending||this.target&&(this.device.gl.endQuery(this.target),this.target=null,this._queryPending=!0)}isResultAvailable(){if(!this._queryPending)return!1;const resultAvailable=this.device.gl.getQueryParameter(this.handle,34919);return resultAvailable&&(this._queryPending=!1),resultAvailable}isTimerDisjoint(){return this.device.gl.getParameter(36795)}getResult(){return this.device.gl.getQueryParameter(this.handle,34918)}getTimerMilliseconds(){return this.getResult()/1e6}pollQuery(limit=Number.POSITIVE_INFINITY){if(this._pollingPromise)return this._pollingPromise;let counter=0;return this._pollingPromise=new Promise(((resolve,reject)=>{const poll=()=>{this.isResultAvailable()?(resolve(this.getResult()),this._pollingPromise=null):counter++>limit?(reject("Timed out"),this._pollingPromise=null):requestAnimationFrame(poll)};requestAnimationFrame(poll)})),this._pollingPromise}}function format_utils_glFormatToComponents(format){switch(format){case 6406:case 33326:case 6403:return 1;case 33328:case 33319:return 2;case 6407:case 34837:return 3;case 6408:case 34836:return 4;default:return(0,utils_assert.v)(!1),0}}function readPixelsToArray(source,options){const{sourceX:sourceX=0,sourceY:sourceY=0,sourceFormat:sourceFormat=6408,sourceAttachment:sourceAttachment=36064}=options||{};let{target:target=null,sourceWidth:sourceWidth,sourceHeight:sourceHeight,sourceType:sourceType}=options||{};const{framebuffer:framebuffer,deleteFramebuffer:deleteFramebuffer}=copy_and_blit_getFramebuffer(source);(0,utils_assert.v)(framebuffer);const{gl:gl,handle:handle}=framebuffer;sourceWidth=sourceWidth||framebuffer.width,sourceHeight=sourceHeight||framebuffer.height;const attachment=sourceAttachment-36064;sourceType=sourceType||framebuffer.colorAttachments[attachment]?.texture?.type||5121,target=function getPixelArray(pixelArray,type,format,width,height){if(pixelArray)return pixelArray;const ArrayType=getTypedArrayFromGLType(type=type||5121,{clamped:!1}),components=format_utils_glFormatToComponents(format);return new ArrayType(width*height*components)}(target,sourceType,sourceFormat,sourceWidth,sourceHeight),sourceType=sourceType||function getGLTypeFromTypedArray(arrayOrType){switch(ArrayBuffer.isView(arrayOrType)?arrayOrType.constructor:arrayOrType){case Float32Array:return 5126;case Uint16Array:return 5123;case Uint32Array:return 5125;case Uint8Array:case Uint8ClampedArray:return 5121;case Int8Array:return 5120;case Int16Array:return 5122;case Int32Array:return 5124;default:throw new Error(ERR_TYPE_DEDUCTION)}}(target);const prevHandle=gl.bindFramebuffer(36160,handle);return gl.readPixels(sourceX,sourceY,sourceWidth,sourceHeight,sourceFormat,sourceType,target),gl.bindFramebuffer(36160,prevHandle||null),deleteFramebuffer&&framebuffer.destroy(),target}function readPixelsToBuffer(source,options){const{target:target,sourceX:sourceX=0,sourceY:sourceY=0,sourceFormat:sourceFormat=6408,targetByteOffset:targetByteOffset=0}=options||{};let{sourceWidth:sourceWidth,sourceHeight:sourceHeight,sourceType:sourceType}=options||{};const{framebuffer:framebuffer,deleteFramebuffer:deleteFramebuffer}=copy_and_blit_getFramebuffer(source);(0,utils_assert.v)(framebuffer),sourceWidth=sourceWidth||framebuffer.width,sourceHeight=sourceHeight||framebuffer.height;const webglFramebuffer=framebuffer;sourceType=sourceType||5121;let webglBufferTarget=target;if(!webglBufferTarget){const byteLength=targetByteOffset+sourceWidth*sourceHeight*format_utils_glFormatToComponents(sourceFormat)*function format_utils_glTypeToBytes(type){switch(type){case 5121:return 1;case 33635:case 32819:case 32820:return 2;case 5126:return 4;default:return(0,utils_assert.v)(!1),0}}(sourceType);webglBufferTarget=webglFramebuffer.device.createBuffer({byteLength:byteLength})}const commandEncoder=source.device.createCommandEncoder();return commandEncoder.copyTextureToBuffer({source:source,width:sourceWidth,height:sourceHeight,origin:[sourceX,sourceY],destination:webglBufferTarget,byteOffset:targetByteOffset}),commandEncoder.destroy(),deleteFramebuffer&&framebuffer.destroy(),webglBufferTarget}function copy_and_blit_getFramebuffer(source){return source instanceof Framebuffer?{framebuffer:source,deleteFramebuffer:!1}:{framebuffer:toFramebuffer(source),deleteFramebuffer:!0}}function toFramebuffer(texture,props){const{device:device,width:width,height:height,id:id}=texture;return device.createFramebuffer({...props,id:`framebuffer-for-${id}`,width:width,height:height,colorAttachments:[texture]})}class WebGLDevice extends Device{static type="webgl";type="webgl";handle;features;limits;info;canvasContext;lost;_resolveContextLost;static isSupported(){return"undefined"!=typeof WebGL2RenderingContext}static attach(gl){if(gl instanceof WebGLDevice)return gl;if(gl?.device instanceof Device)return gl.device;if(!function isWebGL(gl){if("undefined"!=typeof WebGL2RenderingContext&&gl instanceof WebGL2RenderingContext)return!0;return Boolean(gl&&Number.isFinite(gl._version))}(gl))throw new Error("Invalid WebGL2RenderingContext");return new WebGLDevice({gl:gl})}static async create(props={}){utils_log.R.groupCollapsed(1,"WebGLDevice created")();const promises=[];props.debug&&promises.push(async function loadWebGLDeveloperTools(){(0,is_browser.B)()&&!globalThis.WebGLDebugUtils&&(globalThis.global=globalThis.global||globalThis,globalThis.global.module={},await loadScript("https://unpkg.com/webgl-debug@2.0.1/index.js"))}()),props.spector&&promises.push(async function loadSpectorJS(props){if(!globalThis.SPECTOR)try{await loadScript("https://cdn.jsdelivr.net/npm/spectorjs@0.9.30/dist/spector.bundle.js")}catch(error){utils_log.R.warn(String(error))}}()),"string"==typeof props.canvas&&promises.push(CanvasContext.pageLoaded);const results=await Promise.allSettled(promises);for(const result of results)"rejected"===result.status&&utils_log.R.error(`Failed to initialize debug libraries ${result.reason}`)();if(utils_log.R.probe(2,"DOM is loaded")(),props.gl?.device)return utils_log.R.warn("reattaching existing device")(),WebGLDevice.attach(props.gl);const device=new WebGLDevice(props),message=`Created ${device.type}${device.debug?" debug":""} context: ${device.info.vendor}, ${device.info.renderer} for canvas: ${device.canvasContext.id}`;return utils_log.R.probe(1,message)(),utils_log.R.table(1,device.info)(),utils_log.R.groupEnd(1)(),device}constructor(props){super({...props,id:props.id||(0,utils.L)("webgl-device")});const device=props.gl?.device;if(device)throw new Error(`WebGL context already attached to device ${device.id}`);const canvas=props.gl?.canvas||props.canvas;this.canvasContext=new WebGLCanvasContext(this,{...props,canvas:canvas}),this.lost=new Promise((resolve=>{this._resolveContextLost=resolve}));let gl=props.gl||null;if(gl||=function createBrowserContext(canvas,props){props={...DEFAULT_CONTEXT_PROPS,...props};let errorMessage=null;const onCreateError=error=>errorMessage=error.statusMessage||errorMessage;canvas.addEventListener("webglcontextcreationerror",onCreateError,!1);let gl=null;if(gl||=canvas.getContext("webgl2",props),canvas.removeEventListener("webglcontextcreationerror",onCreateError,!1),!gl)throw new Error(`Failed to create WebGL context: ${errorMessage||"Unknown error"}`);if(props.onContextLost){const{onContextLost:onContextLost}=props;canvas.addEventListener("webglcontextlost",(event=>onContextLost(event)),!1)}if(props.onContextRestored){const{onContextRestored:onContextRestored}=props;canvas.addEventListener("webglcontextrestored",(event=>onContextRestored(event)),!1)}return gl}(this.canvasContext.canvas,{...props,onContextLost:event=>this._resolveContextLost?.({reason:"destroyed",message:"Entered sleep mode, or too many apps or browser tabs are using the GPU."})}),!gl)throw new Error("WebGL context creation failed");this.handle=gl,this.gl=gl,this.gl.device=this,this.gl._version=2,props.spector&&(this.spectorJS=function initializeSpectorJS(props){if(props={...DEFAULT_SPECTOR_PROPS,...props},!props?.spector)return null;if(!spector&&globalThis.SPECTOR&&(utils_log.R.probe(1,"SPECTOR found and initialized")(),spector=new globalThis.SPECTOR.Spector,globalThis.luma&&(globalThis.luma.spector=spector)),!spector)return null;if(initialized||(initialized=!0,spector.spyCanvases(),spector?.onCaptureStarted.add((capture=>utils_log.R.info("Spector capture started:",capture)())),spector?.onCapture.add((capture=>{utils_log.R.info("Spector capture complete:",capture)(),spector?.getResultUI(),spector?.resultView.display(),spector?.resultView.addCapture(capture)}))),props?.canvas){if("string"==typeof props.spector&&props.spector!==props.canvas.id)return spector;spector?.startCapture(props?.canvas,500),new Promise((resolve=>setTimeout(resolve,2e3))).then((_=>{utils_log.R.info("Spector capture stopped after 2 seconds")(),spector?.stopCapture()}))}return spector}({...this.props,canvas:this.handle.canvas})),this.info=getDeviceInfo(this.gl,this._extensions),this.limits=new WebGLDeviceLimits(this.gl),this.features=new WebGLDeviceFeatures(this.gl,this._extensions,this.props.disabledFeatures),this.props.initalizeFeatures&&this.features.initializeFeatures(),this.canvasContext.resize();const{enable:enable=!0,copyState:copyState=!1}=props;trackContextState(this.gl,{enable:enable,copyState:copyState,log:(...args)=>utils_log.R.log(1,...args)()}),props.debug&&(this.gl=makeDebugContext(this.gl,{...props,throwOnError:!0}),this.debug=!0,utils_log.R.level=Math.max(utils_log.R.level,1),utils_log.R.warn("WebGL debug mode activated. Performance reduced.")())}destroy(){}get isLost(){return this.gl.isContextLost()}getSize(){return[this.gl.drawingBufferWidth,this.gl.drawingBufferHeight]}isTextureFormatSupported(format){return isTextureFormatSupported(this.gl,format,this._extensions)}isTextureFormatFilterable(format){return function isTextureFormatFilterable(gl,format,extensions){if(!isTextureFormatSupported(gl,format,extensions))return!1;if(format.startsWith("depth")||format.startsWith("stencil"))return!1;try{if(decodeTextureFormat(format).signed)return!1}catch{return!1}return format.endsWith("32float")?Boolean(getWebGLExtension(gl,"OES_texture_float_linear, extensions",extensions)):!format.endsWith("16float")||Boolean(getWebGLExtension(gl,"OES_texture_half_float_linear, extensions",extensions))}(this.gl,format,this._extensions)}isTextureFormatRenderable(format){return function isTextureFormatRenderable(gl,format,extensions){return!!isTextureFormatSupported(gl,format,extensions)&&"number"!=typeof format}(this.gl,format,this._extensions)}createCanvasContext(props){throw new Error("WebGL only supports a single canvas")}createBuffer(props){const newProps=this._getBufferProps(props);return new WEBGLBuffer(this,newProps)}_createTexture(props){return new WEBGLTexture(this,props)}createExternalTexture(props){throw new Error("createExternalTexture() not implemented")}createSampler(props){return new WEBGLSampler(this,props)}createShader(props){return new WEBGLShader(this,props)}createFramebuffer(props){return new WEBGLFramebuffer(this,props)}createVertexArray(props){return new WEBGLVertexArray(this,props)}createTransformFeedback(props){return new WEBGLTransformFeedback(this,props)}createQuerySet(props){return new WEBGLQuerySet(this,props)}createRenderPipeline(props){return new WEBGLRenderPipeline(this,props)}beginRenderPass(props){return new WEBGLRenderPass(this,props)}createComputePipeline(props){throw new Error("ComputePipeline not supported in WebGL")}beginComputePass(props){throw new Error("ComputePass not supported in WebGL")}renderPass=null;createCommandEncoder(props){return new WEBGLCommandEncoder(this,props)}submit(){this.renderPass?.end(),this.renderPass=null}readPixelsToArrayWebGL(source,options){return readPixelsToArray(source,options)}readPixelsToBufferWebGL(source,options){return readPixelsToBuffer(source,options)}setParametersWebGL(parameters){unified_parameter_api_setGLParameters(this.gl,parameters)}getParametersWebGL(parameters){return getGLParameters(this.gl,parameters)}withParametersWebGL(parameters,func){return with_parameters_withGLParameters(this.gl,parameters,func)}clearWebGL(options){!function clear(device,options){const{framebuffer:framebuffer=null,color:color=null,depth:depth=null,stencil:stencil=null}=options||{},parameters={};framebuffer&&(parameters.framebuffer=framebuffer);let clearFlags=0;color&&(clearFlags|=16384,!0!==color&&(parameters.clearColor=color)),depth&&(clearFlags|=256,!0!==depth&&(parameters.clearDepth=depth)),stencil&&(clearFlags|=1024,!0!==depth&&(parameters.clearStencil=depth)),(0,utils_assert.v)(0!==clearFlags,"clear: bad arguments");const gl=device.gl;with_parameters_withGLParameters(gl,parameters,(()=>{gl.clear(clearFlags)}))}(this,options)}resetWebGL(){utils_log.R.warn("WebGLDevice.resetWebGL is deprecated, use only for debugging")(),function resetGLParameters(gl){unified_parameter_api_setGLParameters(gl,GL_PARAMETER_DEFAULTS)}(this.gl)}gl;debug=!1;_canvasSizeInfo={clientWidth:0,clientHeight:0,devicePixelRatio:1};_extensions={};_polyfilled=!1;spectorJS;loseDevice(){let deviceLossTriggered=!1;const ext=this.getExtension("WEBGL_lose_context").WEBGL_lose_context;return ext&&(deviceLossTriggered=!0,ext.loseContext()),this._resolveContextLost?.({reason:"destroyed",message:"Application triggered context loss"}),deviceLossTriggered}pushState(){track_context_state_pushContextState(this.gl)}popState(){track_context_state_popContextState(this.gl)}setSpectorMetadata(handle,props){handle.__SPECTOR_Metadata=props}getGLKey(value,gl){gl=gl||this.gl2||this.gl;const number=Number(value);for(const key in gl)if(gl[key]===number)return`GL.${key}`;return String(value)}_constants;setConstantAttributeWebGL(location,constant){const maxVertexAttributes=this.limits.maxVertexAttributes;this._constants=this._constants||new Array(maxVertexAttributes).fill(null);const currentConstant=this._constants[location];switch(currentConstant&&function webgl_device_compareConstantArrayValues(v1,v2){if(!v1||!v2||v1.length!==v2.length||v1.constructor!==v2.constructor)return!1;for(let i=0;i<v1.length;++i)if(v1[i]!==v2[i])return!1;return!0}(currentConstant,constant)&&utils_log.R.info(1,`setConstantAttributeWebGL(${location}) could have been skipped, value unchanged`)(),this._constants[location]=constant,constant.constructor){case Float32Array:!function setConstantFloatArray(device,location,array){switch(array.length){case 1:device.gl.vertexAttrib1fv(location,array);break;case 2:device.gl.vertexAttrib2fv(location,array);break;case 3:device.gl.vertexAttrib3fv(location,array);break;case 4:device.gl.vertexAttrib4fv(location,array);break;default:(0,utils_assert.v)(!1)}}(this,location,constant);break;case Int32Array:!function setConstantIntArray(device,location,array){device.gl.vertexAttribI4iv(location,array)}(this,location,constant);break;case Uint32Array:!function setConstantUintArray(device,location,array){device.gl.vertexAttribI4uiv(location,array)}(this,location,constant);break;default:(0,utils_assert.v)(!1)}}getExtension(name){return getWebGLExtension(this.gl,name,this._extensions),this._extensions}}let statIdCounter=0;const DEFAULT_ANIMATION_LOOP_PROPS={device:null,onAddHTML:()=>"",onInitialize:async()=>null,onRender:()=>{},onFinalize:()=>{},onError:error=>console.error(error),stats:luma.stats.get("animation-loop-"+statIdCounter++),useDevicePixels:!0,autoResizeViewport:!1,autoResizeDrawingBuffer:!1};class AnimationLoop{device=null;canvas=null;props;animationProps=null;timeline=null;stats;cpuTime;gpuTime;frameRate;display;needsRedraw="initialized";_initialized=!1;_running=!1;_animationFrameId=null;_nextFramePromise=null;_resolveNextFrame=null;_cpuStartTime=0;constructor(props){if(this.props={...DEFAULT_ANIMATION_LOOP_PROPS,...props},!(props=this.props).device)throw new Error("No device provided");const{useDevicePixels:useDevicePixels=!0}=this.props;this.stats=props.stats||new dist.Uz({id:"animation-loop-stats"}),this.cpuTime=this.stats.get("CPU Time"),this.gpuTime=this.stats.get("GPU Time"),this.frameRate=this.stats.get("Frame Rate"),this.setProps({autoResizeViewport:props.autoResizeViewport,autoResizeDrawingBuffer:props.autoResizeDrawingBuffer,useDevicePixels:useDevicePixels}),this.start=this.start.bind(this),this.stop=this.stop.bind(this),this._onMousemove=this._onMousemove.bind(this),this._onMouseleave=this._onMouseleave.bind(this)}destroy(){this.stop(),this._setDisplay(null)}delete(){this.destroy()}setNeedsRedraw(reason){return this.needsRedraw=this.needsRedraw||reason,this}setProps(props){return"autoResizeViewport"in props&&(this.props.autoResizeViewport=props.autoResizeViewport||!1),"autoResizeDrawingBuffer"in props&&(this.props.autoResizeDrawingBuffer=props.autoResizeDrawingBuffer||!1),"useDevicePixels"in props&&(this.props.useDevicePixels=props.useDevicePixels||!1),this}async start(){if(this._running)return this;this._running=!0;try{let appContext;return this._initialized||(this._initialized=!0,await this._initDevice(),this._initialize(),await this.props.onInitialize(this._getAnimationProps())),this._running?(!1!==appContext&&(this._cancelAnimationFrame(),this._requestAnimationFrame()),this):null}catch(err){const error=err instanceof Error?err:new Error("Unknown error");throw this.props.onError(error),error}}stop(){return this._running&&(this.animationProps&&this.props.onFinalize(this.animationProps),this._cancelAnimationFrame(),this._nextFramePromise=null,this._resolveNextFrame=null,this._running=!1),this}redraw(){return this.device?.isLost||(this._beginFrameTimers(),this._setupFrame(),this._updateAnimationProps(),this._renderFrame(this._getAnimationProps()),this._clearNeedsRedraw(),this._resolveNextFrame&&(this._resolveNextFrame(this),this._nextFramePromise=null,this._resolveNextFrame=null),this._endFrameTimers()),this}attachTimeline(timeline){return this.timeline=timeline,this.timeline}detachTimeline(){this.timeline=null}waitForRender(){return this.setNeedsRedraw("waitForRender"),this._nextFramePromise||(this._nextFramePromise=new Promise((resolve=>{this._resolveNextFrame=resolve}))),this._nextFramePromise}async toDataURL(){if(this.setNeedsRedraw("toDataURL"),await this.waitForRender(),this.canvas instanceof HTMLCanvasElement)return this.canvas.toDataURL();throw new Error("OffscreenCanvas")}_initialize(){this._startEventHandling(),this._initializeAnimationProps(),this._updateAnimationProps(),this._resizeCanvasDrawingBuffer(),this._resizeViewport()}_setDisplay(display){this.display&&(this.display.destroy(),this.display.animationLoop=null),display&&(display.animationLoop=this),this.display=display}_requestAnimationFrame(){this._running&&(this._animationFrameId=function request_animation_frame_requestAnimationFrame(callback){return"undefined"!=typeof window&&window.requestAnimationFrame?window.requestAnimationFrame(callback):setTimeout(callback,1e3/60)}(this._animationFrame.bind(this)))}_cancelAnimationFrame(){null!==this._animationFrameId&&(!function cancelAnimationFrame(timerId){return"undefined"!=typeof window&&window.cancelAnimationFrame?window.cancelAnimationFrame(timerId):clearTimeout(timerId)}(this._animationFrameId),this._animationFrameId=null)}_animationFrame(){this._running&&(this.redraw(),this._requestAnimationFrame())}_renderFrame(animationProps){this.display?this.display._renderFrame(animationProps):(this.props.onRender(this._getAnimationProps()),this.device.submit())}_clearNeedsRedraw(){this.needsRedraw=!1}_setupFrame(){this._resizeCanvasDrawingBuffer(),this._resizeViewport()}_initializeAnimationProps(){if(!this.device)throw new Error("loop");this.animationProps={animationLoop:this,device:this.device,canvas:this.device?.canvasContext?.canvas,timeline:this.timeline,useDevicePixels:this.props.useDevicePixels,needsRedraw:!1,width:1,height:1,aspect:1,time:0,startTime:Date.now(),engineTime:0,tick:0,tock:0,_mousePosition:null}}_getAnimationProps(){if(!this.animationProps)throw new Error("animationProps");return this.animationProps}_updateAnimationProps(){if(!this.animationProps)return;const{width:width,height:height,aspect:aspect}=this._getSizeAndAspect();width===this.animationProps.width&&height===this.animationProps.height||this.setNeedsRedraw("drawing buffer resized"),aspect!==this.animationProps.aspect&&this.setNeedsRedraw("drawing buffer aspect changed"),this.animationProps.width=width,this.animationProps.height=height,this.animationProps.aspect=aspect,this.animationProps.needsRedraw=this.needsRedraw,this.animationProps.engineTime=Date.now()-this.animationProps.startTime,this.timeline&&this.timeline.update(this.animationProps.engineTime),this.animationProps.tick=Math.floor(this.animationProps.time/1e3*60),this.animationProps.tock++,this.animationProps.time=this.timeline?this.timeline.getTime():this.animationProps.engineTime}async _initDevice(){if(this.device=await this.props.device,!this.device)throw new Error("No device provided");this.canvas=this.device.canvasContext?.canvas||null}_createInfoDiv(){if(this.canvas&&this.props.onAddHTML){const wrapperDiv=document.createElement("div");document.body.appendChild(wrapperDiv),wrapperDiv.style.position="relative";const div=document.createElement("div");div.style.position="absolute",div.style.left="10px",div.style.bottom="10px",div.style.width="300px",div.style.background="white",this.canvas instanceof HTMLCanvasElement&&wrapperDiv.appendChild(this.canvas),wrapperDiv.appendChild(div);const html=this.props.onAddHTML(div);html&&(div.innerHTML=html)}}_getSizeAndAspect(){if(!this.device)return{width:1,height:1,aspect:1};const[width,height]=this.device?.canvasContext?.getPixelSize()||[1,1];let aspect=1;const canvas=this.device?.canvasContext?.canvas;return canvas&&canvas.clientHeight?aspect=canvas.clientWidth/canvas.clientHeight:width>0&&height>0&&(aspect=width/height),{width:width,height:height,aspect:aspect}}_resizeViewport(){this.props.autoResizeViewport&&this.device.gl&&this.device.gl.viewport(0,0,this.device.gl.drawingBufferWidth,this.device.gl.drawingBufferHeight)}_resizeCanvasDrawingBuffer(){this.props.autoResizeDrawingBuffer&&this.device?.canvasContext?.resize({useDevicePixels:this.props.useDevicePixels})}_beginFrameTimers(){this.frameRate.timeEnd(),this.frameRate.timeStart(),this.cpuTime.timeStart()}_endFrameTimers(){this.cpuTime.timeEnd()}_startEventHandling(){this.canvas&&(this.canvas.addEventListener("mousemove",this._onMousemove.bind(this)),this.canvas.addEventListener("mouseleave",this._onMouseleave.bind(this)))}_onMousemove(event){event instanceof MouseEvent&&(this._getAnimationProps()._mousePosition=[event.offsetX,event.offsetY])}_onMouseleave(event){this._getAnimationProps()._mousePosition=null}}var hammer=__webpack_require__("./node_modules/hammerjs/hammer.js");const MOUSE_INPUT_MAP={mousedown:1,mousemove:2,mouseup:4};!function enhancePointerEventInput(PointerEventInput){const oldHandler=PointerEventInput.prototype.handler;PointerEventInput.prototype.handler=function handler(ev){const store=this.store;ev.button>0&&"pointerdown"===ev.type&&(function some(array,predict){for(let i=0;i<array.length;i++)if(predict(array[i]))return!0;return!1}(store,(e=>e.pointerId===ev.pointerId))||store.push(ev)),oldHandler.call(this,ev)}}(hammer.PointerEventInput),function enhanceMouseInput(MouseInput){MouseInput.prototype.handler=function handler(ev){let eventType=MOUSE_INPUT_MAP[ev.type];1&eventType&&ev.button>=0&&(this.pressed=!0),2&eventType&&0===ev.buttons&&(eventType=4),this.pressed&&(4&eventType&&(this.pressed=!1),this.callback(this.manager,eventType,{pointers:[ev],changedPointers:[ev],pointerType:"mouse",srcEvent:ev}))}}(hammer.MouseInput);const Manager=hammer.Manager;var hammer_browser=hammer;class Input{constructor(element,callback,options){this.element=element,this.callback=callback,this.options={enable:!0,...options}}}const RECOGNIZERS=hammer_browser?[[hammer_browser.Pan,{event:"tripan",pointers:3,threshold:0,enable:!1}],[hammer_browser.Rotate,{enable:!1}],[hammer_browser.Pinch,{enable:!1}],[hammer_browser.Swipe,{enable:!1}],[hammer_browser.Pan,{threshold:0,enable:!1}],[hammer_browser.Press,{enable:!1}],[hammer_browser.Tap,{event:"doubletap",taps:2,enable:!1}],[hammer_browser.Tap,{event:"anytap",enable:!1}],[hammer_browser.Tap,{enable:!1}]]:null,RECOGNIZER_COMPATIBLE_MAP={tripan:["rotate","pinch","pan"],rotate:["pinch"],pinch:["pan"],pan:["press","doubletap","anytap","tap"],doubletap:["anytap"],anytap:["tap"]},RECOGNIZER_FALLBACK_MAP={doubletap:["tap"]},BASIC_EVENT_ALIASES={pointerdown:"pointerdown",pointermove:"pointermove",pointerup:"pointerup",touchstart:"pointerdown",touchmove:"pointermove",touchend:"pointerup",mousedown:"pointerdown",mousemove:"pointermove",mouseup:"pointerup"},INPUT_EVENT_TYPES={KEY_EVENTS:["keydown","keyup"],MOUSE_EVENTS:["mousedown","mousemove","mouseup","mouseover","mouseout","mouseleave"],WHEEL_EVENTS:["wheel","mousewheel"]},EVENT_RECOGNIZER_MAP={tap:"tap",anytap:"anytap",doubletap:"doubletap",press:"press",pinch:"pinch",pinchin:"pinch",pinchout:"pinch",pinchstart:"pinch",pinchmove:"pinch",pinchend:"pinch",pinchcancel:"pinch",rotate:"rotate",rotatestart:"rotate",rotatemove:"rotate",rotateend:"rotate",rotatecancel:"rotate",tripan:"tripan",tripanstart:"tripan",tripanmove:"tripan",tripanup:"tripan",tripandown:"tripan",tripanleft:"tripan",tripanright:"tripan",tripanend:"tripan",tripancancel:"tripan",pan:"pan",panstart:"pan",panmove:"pan",panup:"pan",pandown:"pan",panleft:"pan",panright:"pan",panend:"pan",pancancel:"pan",swipe:"swipe",swipeleft:"swipe",swiperight:"swipe",swipeup:"swipe",swipedown:"swipe"},GESTURE_EVENT_ALIASES={click:"tap",anyclick:"anytap",dblclick:"doubletap",mousedown:"pointerdown",mousemove:"pointermove",mouseup:"pointerup",mouseover:"pointerover",mouseout:"pointerout",mouseleave:"pointerleave"},userAgent="undefined"!=typeof navigator&&navigator.userAgent?navigator.userAgent.toLowerCase():"",window_="undefined"!=typeof window?window:__webpack_require__.g;void 0!==__webpack_require__.g?__webpack_require__.g:window,"undefined"!=typeof document&&document;let passiveSupported=!1;try{const options={get passive(){return passiveSupported=!0,!0}};window_.addEventListener("test",null,options),window_.removeEventListener("test",null)}catch(err){passiveSupported=!1}const firefox=-1!==userAgent.indexOf("firefox"),{WHEEL_EVENTS:WHEEL_EVENTS}=INPUT_EVENT_TYPES;class WheelInput extends Input{constructor(element,callback,options){super(element,callback,options),this.handleEvent=event=>{if(!this.options.enable)return;let value=event.deltaY;window_.WheelEvent&&(firefox&&event.deltaMode===window_.WheelEvent.DOM_DELTA_PIXEL&&(value/=window_.devicePixelRatio),event.deltaMode===window_.WheelEvent.DOM_DELTA_LINE&&(value*=40)),0!==value&&value%4.000244140625==0&&(value=Math.floor(value/4.000244140625)),event.shiftKey&&value&&(value*=.25),this.callback({type:"wheel",center:{x:event.clientX,y:event.clientY},delta:-value,srcEvent:event,pointerType:"mouse",target:event.target})},this.events=(this.options.events||[]).concat(WHEEL_EVENTS),this.events.forEach((event=>element.addEventListener(event,this.handleEvent,!!passiveSupported&&{passive:!1})))}destroy(){this.events.forEach((event=>this.element.removeEventListener(event,this.handleEvent)))}enableEventType(eventType,enabled){"wheel"===eventType&&(this.options.enable=enabled)}}const{MOUSE_EVENTS:MOUSE_EVENTS}=INPUT_EVENT_TYPES;class MoveInput extends Input{constructor(element,callback,options){super(element,callback,options),this.handleEvent=event=>{this.handleOverEvent(event),this.handleOutEvent(event),this.handleEnterEvent(event),this.handleLeaveEvent(event),this.handleMoveEvent(event)},this.pressed=!1;const{enable:enable}=this.options;this.enableMoveEvent=enable,this.enableLeaveEvent=enable,this.enableEnterEvent=enable,this.enableOutEvent=enable,this.enableOverEvent=enable,this.events=(this.options.events||[]).concat(MOUSE_EVENTS),this.events.forEach((event=>element.addEventListener(event,this.handleEvent)))}destroy(){this.events.forEach((event=>this.element.removeEventListener(event,this.handleEvent)))}enableEventType(eventType,enabled){"pointermove"===eventType&&(this.enableMoveEvent=enabled),"pointerover"===eventType&&(this.enableOverEvent=enabled),"pointerout"===eventType&&(this.enableOutEvent=enabled),"pointerenter"===eventType&&(this.enableEnterEvent=enabled),"pointerleave"===eventType&&(this.enableLeaveEvent=enabled)}handleOverEvent(event){this.enableOverEvent&&"mouseover"===event.type&&this._emit("pointerover",event)}handleOutEvent(event){this.enableOutEvent&&"mouseout"===event.type&&this._emit("pointerout",event)}handleEnterEvent(event){this.enableEnterEvent&&"mouseenter"===event.type&&this._emit("pointerenter",event)}handleLeaveEvent(event){this.enableLeaveEvent&&"mouseleave"===event.type&&this._emit("pointerleave",event)}handleMoveEvent(event){if(this.enableMoveEvent)switch(event.type){case"mousedown":event.button>=0&&(this.pressed=!0);break;case"mousemove":0===event.buttons&&(this.pressed=!1),this.pressed||this._emit("pointermove",event);break;case"mouseup":this.pressed=!1}}_emit(type,event){this.callback({type:type,center:{x:event.clientX,y:event.clientY},srcEvent:event,pointerType:"mouse",target:event.target})}}const{KEY_EVENTS:KEY_EVENTS}=INPUT_EVENT_TYPES;class KeyInput extends Input{constructor(element,callback,options){super(element,callback,options),this.handleEvent=event=>{const targetElement=event.target||event.srcElement;"INPUT"===targetElement.tagName&&"text"===targetElement.type||"TEXTAREA"===targetElement.tagName||(this.enableDownEvent&&"keydown"===event.type&&this.callback({type:"keydown",srcEvent:event,key:event.key,target:event.target}),this.enableUpEvent&&"keyup"===event.type&&this.callback({type:"keyup",srcEvent:event,key:event.key,target:event.target}))},this.enableDownEvent=this.options.enable,this.enableUpEvent=this.options.enable,this.events=(this.options.events||[]).concat(KEY_EVENTS),element.tabIndex=this.options.tabIndex||0,element.style.outline="none",this.events.forEach((event=>element.addEventListener(event,this.handleEvent)))}destroy(){this.events.forEach((event=>this.element.removeEventListener(event,this.handleEvent)))}enableEventType(eventType,enabled){"keydown"===eventType&&(this.enableDownEvent=enabled),"keyup"===eventType&&(this.enableUpEvent=enabled)}}class ContextmenuInput extends Input{constructor(element,callback,options){super(element,callback,options),this.handleEvent=event=>{this.options.enable&&this.callback({type:"contextmenu",center:{x:event.clientX,y:event.clientY},srcEvent:event,pointerType:"mouse",target:event.target})},element.addEventListener("contextmenu",this.handleEvent)}destroy(){this.element.removeEventListener("contextmenu",this.handleEvent)}enableEventType(eventType,enabled){"contextmenu"===eventType&&(this.options.enable=enabled)}}const event_utils_MOUSE_EVENTS={pointerdown:1,pointermove:2,pointerup:4,mousedown:1,mousemove:2,mouseup:4};function whichButtons(event){const eventType=event_utils_MOUSE_EVENTS[event.srcEvent.type];if(!eventType)return null;const{buttons:buttons,button:button}=event.srcEvent;let leftButton=!1,middleButton=!1,rightButton=!1;return 2===eventType?(leftButton=Boolean(1&buttons),middleButton=Boolean(4&buttons),rightButton=Boolean(2&buttons)):(leftButton=0===button,middleButton=1===button,rightButton=2===button),{leftButton:leftButton,middleButton:middleButton,rightButton:rightButton}}function getOffsetPosition(event,rootElement){const center=event.center;if(!center)return null;const rect=rootElement.getBoundingClientRect(),scaleX=rect.width/rootElement.offsetWidth||1,scaleY=rect.height/rootElement.offsetHeight||1;return{center:center,offsetCenter:{x:(center.x-rect.left-rootElement.clientLeft)/scaleX,y:(center.y-rect.top-rootElement.clientTop)/scaleY}}}const DEFAULT_OPTIONS={srcElement:"root",priority:0};class EventRegistrar{constructor(eventManager){this.handleEvent=event=>{if(this.isEmpty())return;const mjolnirEvent=this._normalizeEvent(event);let target=event.srcEvent.target;for(;target&&target!==mjolnirEvent.rootElement;){if(this._emit(mjolnirEvent,target),mjolnirEvent.handled)return;target=target.parentNode}this._emit(mjolnirEvent,"root")},this.eventManager=eventManager,this.handlers=[],this.handlersByElement=new Map,this._active=!1}isEmpty(){return!this._active}add(type,handler,options,once=!1,passive=!1){const{handlers:handlers,handlersByElement:handlersByElement}=this;let opts=DEFAULT_OPTIONS;"string"==typeof options||options&&options.addEventListener?opts={...DEFAULT_OPTIONS,srcElement:options}:options&&(opts={...DEFAULT_OPTIONS,...options});let entries=handlersByElement.get(opts.srcElement);entries||(entries=[],handlersByElement.set(opts.srcElement,entries));const entry={type:type,handler:handler,srcElement:opts.srcElement,priority:opts.priority};once&&(entry.once=!0),passive&&(entry.passive=!0),handlers.push(entry),this._active=this._active||!entry.passive;let insertPosition=entries.length-1;for(;insertPosition>=0&&!(entries[insertPosition].priority>=entry.priority);)insertPosition--;entries.splice(insertPosition+1,0,entry)}remove(type,handler){const{handlers:handlers,handlersByElement:handlersByElement}=this;for(let i=handlers.length-1;i>=0;i--){const entry=handlers[i];if(entry.type===type&&entry.handler===handler){handlers.splice(i,1);const entries=handlersByElement.get(entry.srcElement);entries.splice(entries.indexOf(entry),1),0===entries.length&&handlersByElement.delete(entry.srcElement)}}this._active=handlers.some((entry=>!entry.passive))}_emit(event,srcElement){const entries=this.handlersByElement.get(srcElement);if(entries){let immediatePropagationStopped=!1;const stopPropagation=()=>{event.handled=!0},stopImmediatePropagation=()=>{event.handled=!0,immediatePropagationStopped=!0},entriesToRemove=[];for(let i=0;i<entries.length;i++){const{type:type,handler:handler,once:once}=entries[i];if(handler({...event,type:type,stopPropagation:stopPropagation,stopImmediatePropagation:stopImmediatePropagation}),once&&entriesToRemove.push(entries[i]),immediatePropagationStopped)break}for(let i=0;i<entriesToRemove.length;i++){const{type:type,handler:handler}=entriesToRemove[i];this.remove(type,handler)}}}_normalizeEvent(event){const rootElement=this.eventManager.getElement();return{...event,...whichButtons(event),...getOffsetPosition(event,rootElement),preventDefault:()=>{event.srcEvent.preventDefault()},stopImmediatePropagation:null,stopPropagation:null,handled:!1,rootElement:rootElement}}}const event_manager_DEFAULT_OPTIONS={events:null,recognizers:null,recognizerOptions:{},Manager:Manager,touchAction:"none",tabIndex:0};class EventManager{constructor(element=null,options){this._onBasicInput=event=>{const{srcEvent:srcEvent}=event,alias=BASIC_EVENT_ALIASES[srcEvent.type];alias&&this.manager.emit(alias,event)},this._onOtherEvent=event=>{this.manager.emit(event.type,event)},this.options={...event_manager_DEFAULT_OPTIONS,...options},this.events=new Map,this.setElement(element);const{events:events}=this.options;events&&this.on(events)}getElement(){return this.element}setElement(element){if(this.element&&this.destroy(),this.element=element,!element)return;const{options:options}=this,ManagerClass=options.Manager;this.manager=new ManagerClass(element,{touchAction:options.touchAction,recognizers:options.recognizers||RECOGNIZERS}).on("hammer.input",this._onBasicInput),options.recognizers||Object.keys(RECOGNIZER_COMPATIBLE_MAP).forEach((name=>{const recognizer=this.manager.get(name);recognizer&&RECOGNIZER_COMPATIBLE_MAP[name].forEach((otherName=>{recognizer.recognizeWith(otherName)}))}));for(const recognizerName in options.recognizerOptions){const recognizer=this.manager.get(recognizerName);if(recognizer){const recognizerOption=options.recognizerOptions[recognizerName];delete recognizerOption.enable,recognizer.set(recognizerOption)}}this.wheelInput=new WheelInput(element,this._onOtherEvent,{enable:!1}),this.moveInput=new MoveInput(element,this._onOtherEvent,{enable:!1}),this.keyInput=new KeyInput(element,this._onOtherEvent,{enable:!1,tabIndex:options.tabIndex}),this.contextmenuInput=new ContextmenuInput(element,this._onOtherEvent,{enable:!1});for(const[eventAlias,eventRegistrar]of this.events)eventRegistrar.isEmpty()||(this._toggleRecognizer(eventRegistrar.recognizerName,!0),this.manager.on(eventAlias,eventRegistrar.handleEvent))}destroy(){this.element&&(this.wheelInput.destroy(),this.moveInput.destroy(),this.keyInput.destroy(),this.contextmenuInput.destroy(),this.manager.destroy(),this.wheelInput=null,this.moveInput=null,this.keyInput=null,this.contextmenuInput=null,this.manager=null,this.element=null)}on(event,handler,opts){this._addEventHandler(event,handler,opts,!1)}once(event,handler,opts){this._addEventHandler(event,handler,opts,!0)}watch(event,handler,opts){this._addEventHandler(event,handler,opts,!1,!0)}off(event,handler){this._removeEventHandler(event,handler)}_toggleRecognizer(name,enabled){const{manager:manager}=this;if(!manager)return;const recognizer=manager.get(name);if(recognizer&&recognizer.options.enable!==enabled){recognizer.set({enable:enabled});const fallbackRecognizers=RECOGNIZER_FALLBACK_MAP[name];fallbackRecognizers&&!this.options.recognizers&&fallbackRecognizers.forEach((otherName=>{const otherRecognizer=manager.get(otherName);enabled?(otherRecognizer.requireFailure(name),recognizer.dropRequireFailure(otherName)):otherRecognizer.dropRequireFailure(name)}))}this.wheelInput.enableEventType(name,enabled),this.moveInput.enableEventType(name,enabled),this.keyInput.enableEventType(name,enabled),this.contextmenuInput.enableEventType(name,enabled)}_addEventHandler(event,handler,opts,once,passive){if("string"!=typeof event){opts=handler;for(const eventName in event)this._addEventHandler(eventName,event[eventName],opts,once,passive);return}const{manager:manager,events:events}=this,eventAlias=GESTURE_EVENT_ALIASES[event]||event;let eventRegistrar=events.get(eventAlias);eventRegistrar||(eventRegistrar=new EventRegistrar(this),events.set(eventAlias,eventRegistrar),eventRegistrar.recognizerName=EVENT_RECOGNIZER_MAP[eventAlias]||eventAlias,manager&&manager.on(eventAlias,eventRegistrar.handleEvent)),eventRegistrar.add(event,handler,opts,once,passive),eventRegistrar.isEmpty()||this._toggleRecognizer(eventRegistrar.recognizerName,!0)}_removeEventHandler(event,handler){if("string"!=typeof event){for(const eventName in event)this._removeEventHandler(eventName,event[eventName]);return}const{events:events}=this,eventAlias=GESTURE_EVENT_ALIASES[event]||event,eventRegistrar=events.get(eventAlias);if(eventRegistrar&&(eventRegistrar.remove(event,handler),eventRegistrar.isEmpty())){const{recognizerName:recognizerName}=eventRegistrar;let isRecognizerUsed=!1;for(const eh of events.values())if(eh.recognizerName===recognizerName&&!eh.isEmpty()){isRecognizerUsed=!0;break}isRecognizerUsed||this._toggleRecognizer(recognizerName,!1)}}}var dist_utils_assert=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/assert.js");function noop(){}const defaultProps={id:"",width:"100%",height:"100%",style:null,viewState:null,initialViewState:null,pickingRadius:0,layerFilter:null,parameters:{},parent:null,device:null,deviceProps:{type:"webgl"},gl:null,glOptions:{},canvas:null,layers:[],effects:[],views:null,controller:null,useDevicePixels:!0,touchAction:"none",eventRecognizerOptions:{},_framebuffer:null,_animate:!1,_pickable:!0,_typedArrayManagerProps:{},_customRender:null,widgets:[],onDeviceInitialized:noop,onWebGLInitialized:noop,onResize:noop,onViewStateChange:noop,onInteractionStateChange:noop,onBeforeRender:noop,onAfterRender:noop,onLoad:noop,onError:error=>log.A.error(error.message,error.cause)(),onHover:null,onClick:null,onDragStart:null,onDrag:null,onDragEnd:null,_onMetrics:null,getCursor:({isDragging:isDragging})=>isDragging?"grabbing":"grab",getTooltip:null,debug:!1,drawPickingColors:!1};class Deck{static{this.defaultProps=defaultProps}static{this.VERSION=VERSION}constructor(props){this.width=0,this.height=0,this.userData={},this.device=null,this.canvas=null,this.viewManager=null,this.layerManager=null,this.effectManager=null,this.deckRenderer=null,this.deckPicker=null,this.eventManager=null,this.widgetManager=null,this.tooltip=null,this.animationLoop=null,this.cursorState={isHovering:!1,isDragging:!1},this.stats=new dist.Uz({id:"deck.gl"}),this.metrics={fps:0,setPropsTime:0,updateAttributesTime:0,framesRedrawn:0,pickTime:0,pickCount:0,gpuTime:0,gpuTimePerFrame:0,cpuTime:0,cpuTimePerFrame:0,bufferMemory:0,textureMemory:0,renderbufferMemory:0,gpuMemory:0},this._metricsCounter=0,this._needsRedraw="Initial render",this._pickRequest={mode:"hover",x:-1,y:-1,radius:0,event:null},this._lastPointerDownInfo=null,this._onPointerMove=event=>{const{_pickRequest:_pickRequest}=this;if("pointerleave"===event.type)_pickRequest.x=-1,_pickRequest.y=-1,_pickRequest.radius=0;else{if(event.leftButton||event.rightButton)return;{const pos=event.offsetCenter;if(!pos)return;_pickRequest.x=pos.x,_pickRequest.y=pos.y,_pickRequest.radius=this.props.pickingRadius}}this.layerManager&&(this.layerManager.context.mousePosition={x:_pickRequest.x,y:_pickRequest.y}),_pickRequest.event=event},this._onEvent=event=>{const eventOptions=lib_constants.qY[event.type],pos=event.offsetCenter;if(!eventOptions||!pos||!this.layerManager)return;const layers=this.layerManager.getLayers(),info=this.deckPicker.getLastPickedObject({x:pos.x,y:pos.y,layers:layers,viewports:this.getViewports(pos)},this._lastPointerDownInfo),{layer:layer}=info,layerHandler=layer&&(layer[eventOptions.handler]||layer.props[eventOptions.handler]),rootHandler=this.props[eventOptions.handler];let handled=!1;layerHandler&&(handled=layerHandler.call(layer,info,event)),handled||(rootHandler?.(info,event),this.widgetManager.onEvent(info,event))},this._onPointerDown=event=>{const pos=event.offsetCenter,pickedInfo=this._pick("pickObject","pickObject Time",{x:pos.x,y:pos.y,radius:this.props.pickingRadius});this._lastPointerDownInfo=pickedInfo.result[0]||pickedInfo.emptyInfo},this.props={...defaultProps,...props},(props=this.props).viewState&&props.initialViewState&&log.A.warn("View state tracking is disabled. Use either `initialViewState` for auto update or `viewState` for manual update.")(),this.viewState=this.props.initialViewState,props.device?this.device=props.device:props.gl&&(props.gl instanceof WebGLRenderingContext&&log.A.error("WebGL1 context not supported.")(),this.device=WebGLDevice.attach(props.gl));let deviceOrPromise=this.device;deviceOrPromise||(luma.registerDevices([WebGLDevice]),deviceOrPromise=luma.createDevice({...props.deviceProps,canvas:this._createCanvas(props)})),this.animationLoop=this._createAnimationLoop(deviceOrPromise,props),this.setProps(props),props._typedArrayManagerProps&&typed_array_manager.A.setOptions(props._typedArrayManagerProps),this.animationLoop.start()}finalize(){this.animationLoop?.stop(),this.animationLoop?.destroy(),this.animationLoop=null,this._lastPointerDownInfo=null,this.layerManager?.finalize(),this.layerManager=null,this.viewManager?.finalize(),this.viewManager=null,this.effectManager?.finalize(),this.effectManager=null,this.deckRenderer?.finalize(),this.deckRenderer=null,this.deckPicker?.finalize(),this.deckPicker=null,this.eventManager?.destroy(),this.eventManager=null,this.widgetManager?.finalize(),this.widgetManager=null,this.props.canvas||this.props.device||this.props.gl||!this.canvas||(this.canvas.parentElement?.removeChild(this.canvas),this.canvas=null)}setProps(props){this.stats.get("setProps Time").timeStart(),"onLayerHover"in props&&log.A.removed("onLayerHover","onHover")(),"onLayerClick"in props&&log.A.removed("onLayerClick","onClick")(),props.initialViewState&&!(0,deep_equal.b)(this.props.initialViewState,props.initialViewState,3)&&(this.viewState=props.initialViewState),Object.assign(this.props,props),this._setCanvasSize(this.props);const resolvedProps=Object.create(this.props);Object.assign(resolvedProps,{views:this._getViews(),width:this.width,height:this.height,viewState:this._getViewState()}),this.animationLoop?.setProps(resolvedProps),this.layerManager&&(this.viewManager.setProps(resolvedProps),this.layerManager.activateViewport(this.getViewports()[0]),this.layerManager.setProps(resolvedProps),this.effectManager.setProps(resolvedProps),this.deckRenderer.setProps(resolvedProps),this.deckPicker.setProps(resolvedProps),this.widgetManager.setProps(resolvedProps)),this.stats.get("setProps Time").timeEnd()}needsRedraw(opts={clearRedrawFlags:!1}){if(!this.layerManager)return!1;if(this.props._animate)return"Deck._animate";let redraw=this._needsRedraw;opts.clearRedrawFlags&&(this._needsRedraw=!1);const viewManagerNeedsRedraw=this.viewManager.needsRedraw(opts),layerManagerNeedsRedraw=this.layerManager.needsRedraw(opts),effectManagerNeedsRedraw=this.effectManager.needsRedraw(opts),deckRendererNeedsRedraw=this.deckRenderer.needsRedraw(opts);return redraw=redraw||viewManagerNeedsRedraw||layerManagerNeedsRedraw||effectManagerNeedsRedraw||deckRendererNeedsRedraw,redraw}redraw(reason){if(!this.layerManager)return;let redrawReason=this.needsRedraw({clearRedrawFlags:!0});redrawReason=reason||redrawReason,redrawReason&&(this.stats.get("Redraw Count").incrementCount(),this.props._customRender?this.props._customRender(redrawReason):this._drawLayers(redrawReason))}get isInitialized(){return null!==this.viewManager}getViews(){return(0,dist_utils_assert.A)(this.viewManager),this.viewManager.views}getViewports(rect){return(0,dist_utils_assert.A)(this.viewManager),this.viewManager.getViewports(rect)}getCanvas(){return this.canvas}pickObject(opts){const infos=this._pick("pickObject","pickObject Time",opts).result;return infos.length?infos[0]:null}pickMultipleObjects(opts){return opts.depth=opts.depth||10,this._pick("pickObject","pickMultipleObjects Time",opts).result}pickObjects(opts){return this._pick("pickObjects","pickObjects Time",opts)}_addResources(resources,forceUpdate=!1){for(const id in resources)this.layerManager.resourceManager.add({resourceId:id,data:resources[id],forceUpdate:forceUpdate})}_removeResources(resourceIds){for(const id of resourceIds)this.layerManager.resourceManager.remove(id)}_addDefaultEffect(effect){this.effectManager.addDefaultEffect(effect)}_addDefaultShaderModule(module){this.layerManager.addDefaultShaderModule(module)}_removeDefaultShaderModule(module){this.layerManager?.removeDefaultShaderModule(module)}_pick(method,statKey,opts){(0,dist_utils_assert.A)(this.deckPicker);const{stats:stats}=this;stats.get("Pick Count").incrementCount(),stats.get(statKey).timeStart();const infos=this.deckPicker[method]({layers:this.layerManager.getLayers(opts),views:this.viewManager.getViews(),viewports:this.getViewports(opts),onViewportActive:this.layerManager.activateViewport,effects:this.effectManager.getEffects(),...opts});return stats.get(statKey).timeEnd(),infos}_createCanvas(props){let canvas=props.canvas;if("string"==typeof canvas&&(canvas=document.getElementById(canvas),(0,dist_utils_assert.A)(canvas)),!canvas){canvas=document.createElement("canvas"),canvas.id=props.id||"deckgl-overlay";(props.parent||document.body).appendChild(canvas)}return Object.assign(canvas.style,props.style),canvas}_setCanvasSize(props){if(!this.canvas)return;const{width:width,height:height}=props;if(width||0===width){const cssWidth=Number.isFinite(width)?`${width}px`:width;this.canvas.style.width=cssWidth}if(height||0===height){const cssHeight=Number.isFinite(height)?`${height}px`:height;this.canvas.style.position=props.style?.position||"absolute",this.canvas.style.height=cssHeight}}_updateCanvasSize(){const{canvas:canvas}=this;if(!canvas)return;const newWidth=canvas.clientWidth??canvas.width,newHeight=canvas.clientHeight??canvas.height;newWidth===this.width&&newHeight===this.height||(this.width=newWidth,this.height=newHeight,this.viewManager?.setProps({width:newWidth,height:newHeight}),this.layerManager?.activateViewport(this.getViewports()[0]),this.props.onResize({width:newWidth,height:newHeight}))}_createAnimationLoop(deviceOrPromise,props){const{gl:gl,onError:onError,useDevicePixels:useDevicePixels}=props;return new AnimationLoop({device:deviceOrPromise,useDevicePixels:useDevicePixels,autoResizeDrawingBuffer:!gl,autoResizeViewport:!1,onInitialize:context=>this._setDevice(context.device),onRender:this._onRenderFrame.bind(this),onError:onError})}_getViewState(){return this.props.viewState||this.viewState}_getViews(){const{views:views}=this.props,normalizedViews=Array.isArray(views)?views:views?[views]:[new map_view.A({id:"default-view"})];return normalizedViews.length&&this.props.controller&&(normalizedViews[0].props.controller=this.props.controller),normalizedViews}_onContextLost(){const{onError:onError}=this.props;this.animationLoop&&onError&&onError(new Error("WebGL context is lost"))}_pickAndCallback(){const{_pickRequest:_pickRequest}=this;if(_pickRequest.event){const{result:result,emptyInfo:emptyInfo}=this._pick("pickObject","pickObject Time",_pickRequest);this.cursorState.isHovering=result.length>0;let pickedInfo=emptyInfo,handled=!1;for(const info of result)pickedInfo=info,handled=info.layer?.onHover(info,_pickRequest.event)||handled;handled||(this.props.onHover?.(pickedInfo,_pickRequest.event),this.widgetManager.onHover(pickedInfo,_pickRequest.event)),_pickRequest.event=null}}_updateCursor(){const container=this.props.parent||this.canvas;container&&(container.style.cursor=this.props.getCursor(this.cursorState))}_setDevice(device){if(this.device=device,!this.animationLoop)return;this.canvas||(this.canvas=this.device.canvasContext?.canvas),this.device.setParametersWebGL({blend:!0,blendFunc:[770,771,1,771],polygonOffsetFill:!0,depthTest:!0,depthFunc:515}),this.props.onDeviceInitialized(this.device),this.device instanceof WebGLDevice&&this.props.onWebGLInitialized(this.device.gl);const timeline=new Timeline;timeline.play(),this.animationLoop.attachTimeline(timeline),this.eventManager=new EventManager(this.props.parent||this.canvas,{touchAction:this.props.touchAction,recognizerOptions:this.props.eventRecognizerOptions,events:{pointerdown:this._onPointerDown,pointermove:this._onPointerMove,pointerleave:this._onPointerMove}});for(const eventType in lib_constants.qY)this.eventManager.on(eventType,this._onEvent);this.viewManager=new ViewManager({timeline:timeline,eventManager:this.eventManager,onViewStateChange:this._onViewStateChange.bind(this),onInteractionStateChange:this._onInteractionStateChange.bind(this),views:this._getViews(),viewState:this._getViewState(),width:this.width,height:this.height});const viewport=this.viewManager.getViewports()[0];this.layerManager=new LayerManager(this.device,{deck:this,stats:this.stats,viewport:viewport,timeline:timeline}),this.effectManager=new EffectManager({deck:this,device:this.device}),this.deckRenderer=new DeckRenderer(this.device),this.deckPicker=new DeckPicker(this.device),this.widgetManager=new WidgetManager({deck:this,parentElement:this.canvas?.parentElement}),this.widgetManager.addDefault(new Tooltip),this.setProps(this.props),this._updateCanvasSize(),this.props.onLoad()}_drawLayers(redrawReason,renderOptions){const{device:device,gl:gl}=this.layerManager.context;this.props.onBeforeRender({device:device,gl:gl});const opts={target:this.props._framebuffer,layers:this.layerManager.getLayers(),viewports:this.viewManager.getViewports(),onViewportActive:this.layerManager.activateViewport,views:this.viewManager.getViews(),pass:"screen",effects:this.effectManager.getEffects(),...renderOptions};this.deckRenderer?.renderLayers(opts),"screen"===opts.pass&&this.widgetManager.onRedraw({viewports:opts.viewports,layers:opts.layers}),this.props.onAfterRender({device:device,gl:gl})}_onRenderFrame(){this._getFrameStats(),this._metricsCounter++%60==0&&(this._getMetrics(),this.stats.reset(),log.A.table(4,this.metrics)(),this.props._onMetrics&&this.props._onMetrics(this.metrics)),this._updateCanvasSize(),this._updateCursor(),this.layerManager.updateLayers(),this._pickAndCallback(),this.redraw(),this.viewManager&&this.viewManager.updateViewStates()}_onViewStateChange(params){const viewState=this.props.onViewStateChange(params)||params.viewState;this.viewState&&(this.viewState={...this.viewState,[params.viewId]:viewState},this.props.viewState||this.viewManager&&this.viewManager.setProps({viewState:this.viewState}))}_onInteractionStateChange(interactionState){this.cursorState.isDragging=interactionState.isDragging||!1,this.props.onInteractionStateChange(interactionState)}_getFrameStats(){const{stats:stats}=this;stats.get("frameRate").timeEnd(),stats.get("frameRate").timeStart();const animationLoopStats=this.animationLoop.stats;stats.get("GPU Time").addTime(animationLoopStats.get("GPU Time").lastTiming),stats.get("CPU Time").addTime(animationLoopStats.get("CPU Time").lastTiming)}_getMetrics(){const{metrics:metrics,stats:stats}=this;metrics.fps=stats.get("frameRate").getHz(),metrics.setPropsTime=stats.get("setProps Time").time,metrics.updateAttributesTime=stats.get("Update Attributes").time,metrics.framesRedrawn=stats.get("Redraw Count").count,metrics.pickTime=stats.get("pickObject Time").time+stats.get("pickMultipleObjects Time").time+stats.get("pickObjects Time").time,metrics.pickCount=stats.get("Pick Count").count,metrics.gpuTime=stats.get("GPU Time").time,metrics.cpuTime=stats.get("CPU Time").time,metrics.gpuTimePerFrame=stats.get("GPU Time").getAverageTime(),metrics.cpuTimePerFrame=stats.get("CPU Time").getAverageTime();const memoryStats=luma.stats.get("Memory Usage");metrics.bufferMemory=memoryStats.get("Buffer Memory").count,metrics.textureMemory=memoryStats.get("Texture Memory").count,metrics.renderbufferMemory=memoryStats.get("Renderbuffer Memory").count,metrics.gpuMemory=memoryStats.get("GPU Memory").count}}var use_isomorphic_layout_effect="undefined"!=typeof window?react.useLayoutEffect:react.useEffect;function inheritsFrom(Type,ParentType){for(;Type;){if(Type===ParentType)return!0;Type=Object.getPrototypeOf(Type)}return!1}var view=__webpack_require__("./node_modules/@deck.gl/core/dist/views/view.js"),lib_layer=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/layer.js");const MAP_STYLE={position:"absolute",zIndex:-1};function evaluateChildren(children,childProps){if("function"==typeof children)return children(childProps);if(Array.isArray(children))return children.map((child=>evaluateChildren(child,childProps)));if(isComponent(children)){if(function isReactMap(child){return child.props?.mapStyle}(children))return childProps.style=MAP_STYLE,(0,react.cloneElement)(children,childProps);if(function needsDeckGLViewProps(child){const componentClass=child.type;return componentClass&&componentClass.deckGLViewProps}(children))return(0,react.cloneElement)(children,childProps)}return children}function isComponent(child){return child&&"object"==typeof child&&"type"in child||!1}function wrapInView(node){if("function"==typeof node)return(0,react.createElement)(view.A,{},node);if(Array.isArray(node))return node.map(wrapInView);if(isComponent(node)){if(node.type===react.Fragment)return wrapInView(node.props.children);if(inheritsFrom(node.type,view.A))return node}return node}const CANVAS_ONLY_STYLES={mixBlendMode:null};function redrawDeck(thisRef){thisRef.redrawReason&&(thisRef.deck._drawLayers(thisRef.redrawReason),thisRef.redrawReason=null)}const DeckGL=react.forwardRef((function DeckGLWithRef(props,ref){const[version,setVersion]=(0,react.useState)(0),thisRef=(0,react.useRef)({control:null,version:version,forceUpdate:()=>setVersion((v=>v+1))}).current,containerRef=(0,react.useRef)(null),canvasRef=(0,react.useRef)(null),jsxProps=(0,react.useMemo)((()=>function extractJSXLayers({children:children,layers:layers=[],views:views=null}){const reactChildren=[],jsxLayers=[],jsxViews={};return react.Children.forEach(wrapInView(children),(reactElement=>{if(isComponent(reactElement)){const ElementType=reactElement.type;if(inheritsFrom(ElementType,lib_layer.A)){const layer=function createLayer(LayerType,reactProps){const props={},defaultProps=LayerType.defaultProps||{};for(const key in reactProps)defaultProps[key]!==reactProps[key]&&(props[key]=reactProps[key]);return new LayerType(props)}(ElementType,reactElement.props);jsxLayers.push(layer)}else reactChildren.push(reactElement);if(inheritsFrom(ElementType,view.A)&&ElementType!==view.A&&reactElement.props.id){const view=new ElementType(reactElement.props);jsxViews[view.id]=view}}else reactElement&&reactChildren.push(reactElement)})),Object.keys(jsxViews).length>0&&(Array.isArray(views)?views.forEach((view=>{jsxViews[view.id]=view})):views&&(jsxViews[views.id]=views),views=Object.values(jsxViews)),{layers:layers=jsxLayers.length>0?[...jsxLayers,...layers]:layers,children:reactChildren,views:views}}(props)),[props.layers,props.views,props.children]);let inRender=!0;const handleViewStateChange=params=>inRender&&props.viewState?(thisRef.viewStateUpdateRequested=params,null):(thisRef.viewStateUpdateRequested=null,props.onViewStateChange?.(params)),handleInteractionStateChange=params=>{inRender?thisRef.interactionStateUpdateRequested=params:(thisRef.interactionStateUpdateRequested=null,props.onInteractionStateChange?.(params))},deckProps=(0,react.useMemo)((()=>{const forwardProps={...props,style:null,width:"100%",height:"100%",parent:containerRef.current,canvas:canvasRef.current,layers:jsxProps.layers,views:jsxProps.views,onViewStateChange:handleViewStateChange,onInteractionStateChange:handleInteractionStateChange};return delete forwardProps._customRender,thisRef.deck&&thisRef.deck.setProps(forwardProps),forwardProps}),[props]);(0,react.useEffect)((()=>{const DeckClass=props.Deck||Deck;return thisRef.deck=function createDeckInstance(thisRef,DeckClass,props){const deck=new DeckClass({...props,_customRender:redrawReason=>{thisRef.redrawReason=redrawReason;const viewports=deck.getViewports();thisRef.lastRenderedViewports!==viewports?thisRef.forceUpdate():redrawDeck(thisRef)}});return deck}(thisRef,DeckClass,{...deckProps,parent:containerRef.current,canvas:canvasRef.current}),()=>thisRef.deck?.finalize()}),[]),use_isomorphic_layout_effect((()=>{redrawDeck(thisRef);const{viewStateUpdateRequested:viewStateUpdateRequested,interactionStateUpdateRequested:interactionStateUpdateRequested}=thisRef;viewStateUpdateRequested&&handleViewStateChange(viewStateUpdateRequested),interactionStateUpdateRequested&&handleInteractionStateChange(interactionStateUpdateRequested)})),(0,react.useImperativeHandle)(ref,(()=>function getRefHandles(thisRef){return{get deck(){return thisRef.deck},pickObject:opts=>thisRef.deck.pickObject(opts),pickMultipleObjects:opts=>thisRef.deck.pickMultipleObjects(opts),pickObjects:opts=>thisRef.deck.pickObjects(opts)}}(thisRef)),[]);const currentViewports=thisRef.deck&&thisRef.deck.isInitialized?thisRef.deck.getViewports():void 0,{ContextProvider:ContextProvider,width:width="100%",height:height="100%",id:id,style:style}=props,{containerStyle:containerStyle,canvasStyle:canvasStyle}=(0,react.useMemo)((()=>function extractStyles({width:width,height:height,style:style}){const containerStyle={position:"absolute",zIndex:0,left:0,top:0,width:width,height:height},canvasStyle={left:0,top:0};if(style)for(const key in style)key in CANVAS_ONLY_STYLES?canvasStyle[key]=style[key]:containerStyle[key]=style[key];return{containerStyle:containerStyle,canvasStyle:canvasStyle}}({width:width,height:height,style:style})),[width,height,style]);if(!thisRef.viewStateUpdateRequested&&thisRef.lastRenderedViewports===currentViewports||thisRef.version!==version){thisRef.lastRenderedViewports=currentViewports,thisRef.version=version;const childrenUnderViews=function positionChildrenUnderViews({children:children,deck:deck,ContextProvider:ContextProvider}){const{viewManager:viewManager}=deck||{};if(!viewManager||!viewManager.views.length)return[];const views={},defaultViewId=viewManager.views[0].id;for(const child of children){let viewId=defaultViewId,viewChildren=child;isComponent(child)&&inheritsFrom(child.type,view.A)&&(viewId=child.props.id||defaultViewId,viewChildren=child.props.children);const viewport=viewManager.getViewport(viewId),viewState=viewManager.getViewState(viewId);if(viewport){viewState.padding=viewport.padding;const{x:x,y:y,width:width,height:height}=viewport;viewChildren=evaluateChildren(viewChildren,{x:x,y:y,width:width,height:height,viewport:viewport,viewState:viewState}),views[viewId]||(views[viewId]={viewport:viewport,children:[]}),views[viewId].children.push(viewChildren)}}return Object.keys(views).map((viewId=>{const{viewport:viewport,children:viewChildren}=views[viewId],{x:x,y:y,width:width,height:height}=viewport,style={position:"absolute",left:x,top:y,width:width,height:height},key=`view-${viewId}`,viewElement=(0,react.createElement)("div",{key:key,id:key,style:style},...viewChildren);if(ContextProvider){const contextValue={viewport:viewport,container:deck.canvas.offsetParent,eventManager:deck.eventManager,onViewStateChange:params=>{params.viewId=viewId,deck._onViewStateChange(params)}};return(0,react.createElement)(ContextProvider,{key:key,value:contextValue},viewElement)}return viewElement}))}({children:jsxProps.children,deck:thisRef.deck,ContextProvider:ContextProvider}),canvas=(0,react.createElement)("canvas",{key:"canvas",id:id||"deckgl-overlay",ref:canvasRef,style:canvasStyle});thisRef.control=(0,react.createElement)("div",{id:`${id||"deckgl"}-wrapper`,ref:containerRef,style:containerStyle},[canvas,childrenUnderViews])}return inRender=!1,thisRef.control}));var deckgl=DeckGL},"./node_modules/@loaders.gl/core/dist/javascript-utils/is-type.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{Gv:function(){return isObject},H1:function(){return isReadableStream},Pe:function(){return isBuffer},Sv:function(){return isResponse},Td:function(){return isAsyncIterable},aC:function(){return isPureObject},qf:function(){return isBlob},xZ:function(){return isIterable}});const isBoolean=x=>"boolean"==typeof x,isFunction=x=>"function"==typeof x,isObject=x=>null!==x&&"object"==typeof x,isPureObject=x=>isObject(x)&&x.constructor==={}.constructor,isIterable=x=>Boolean(x)&&"function"==typeof x[Symbol.iterator],isAsyncIterable=x=>x&&"function"==typeof x[Symbol.asyncIterator],isResponse=x=>"undefined"!=typeof Response&&x instanceof Response||x&&x.arrayBuffer&&x.text&&x.json,isBlob=x=>"undefined"!=typeof Blob&&x instanceof Blob,isBuffer=x=>x&&"object"==typeof x&&x.isBuffer,isReadableStream=x=>(x=>"undefined"!=typeof ReadableStream&&x instanceof ReadableStream||isObject(x)&&isFunction(x.tee)&&isFunction(x.cancel)&&isFunction(x.getReader))(x)||(x=>isObject(x)&&isFunction(x.read)&&isFunction(x.pipe)&&isBoolean(x.readable))(x)},"./node_modules/@loaders.gl/core/dist/lib/api/load.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{H:function(){return load}});var is_type=__webpack_require__("./node_modules/@loaders.gl/core/dist/javascript-utils/is-type.js"),normalize_loader=__webpack_require__("./node_modules/@loaders.gl/core/dist/lib/loader-utils/normalize-loader.js");let pathPrefix="";const fileAliases={};class FetchError extends Error{constructor(message,info){super(message),this.reason=info.reason,this.url=info.url,this.response=info.response}reason;url;response}const DATA_URL_PATTERN=/^data:([-\w.]+\/[-\w.+]+)(;|,)/,MIME_TYPE_PATTERN=/^([-\w.]+\/[-\w.+]+)/;function compareMIMETypes(mimeType1,mimeType2){return mimeType1.toLowerCase()===mimeType2.toLowerCase()}function parseMIMETypeFromURL(url){const matches=DATA_URL_PATTERN.exec(url);return matches?matches[1]:""}const QUERY_STRING_PATTERN=/\?.*/;function stripQueryString(url){return url.replace(QUERY_STRING_PATTERN,"")}function getResourceUrl(resource){if((0,is_type.Sv)(resource)){return resource.url}if((0,is_type.qf)(resource)){return resource.name||""}return"string"==typeof resource?resource:""}function getResourceMIMEType(resource){if((0,is_type.Sv)(resource)){const response=resource,contentTypeHeader=response.headers.get("content-type")||"",noQueryUrl=stripQueryString(response.url);return function parseMIMEType(mimeString){const matches=MIME_TYPE_PATTERN.exec(mimeString);return matches?matches[1]:mimeString}(contentTypeHeader)||parseMIMETypeFromURL(noQueryUrl)}if((0,is_type.qf)(resource)){return resource.type||""}return"string"==typeof resource?parseMIMETypeFromURL(resource):""}async function response_utils_makeResponse(resource){if((0,is_type.Sv)(resource))return resource;const headers={},contentLength=function getResourceContentLength(resource){if((0,is_type.Sv)(resource))return resource.headers["content-length"]||-1;if((0,is_type.qf)(resource))return resource.size;return"string"==typeof resource?resource.length:resource instanceof ArrayBuffer||ArrayBuffer.isView(resource)?resource.byteLength:-1}(resource);contentLength>=0&&(headers["content-length"]=String(contentLength));const url=getResourceUrl(resource),type=getResourceMIMEType(resource);type&&(headers["content-type"]=type);const initialDataUrl=await async function getInitialDataUrl(resource){const INITIAL_DATA_LENGTH=5;if("string"==typeof resource)return`data:,${resource.slice(0,INITIAL_DATA_LENGTH)}`;if(resource instanceof Blob){const blobSlice=resource.slice(0,5);return await new Promise((resolve=>{const reader=new FileReader;reader.onload=event=>resolve(event?.target?.result),reader.readAsDataURL(blobSlice)}))}if(resource instanceof ArrayBuffer){return`data:base64,${function arrayBufferToBase64(buffer){let binary="";const bytes=new Uint8Array(buffer);for(let i=0;i<bytes.byteLength;i++)binary+=String.fromCharCode(bytes[i]);return btoa(binary)}(resource.slice(0,INITIAL_DATA_LENGTH))}`}return null}(resource);initialDataUrl&&(headers["x-first-bytes"]=initialDataUrl),"string"==typeof resource&&(resource=(new TextEncoder).encode(resource));const response=new Response(resource,{headers:headers});return Object.defineProperty(response,"url",{value:url}),response}async function response_utils_checkResponse(response){if(!response.ok){const error=await async function getResponseError(response){const shortUrl=function shortenUrlForDisplay(url){if(url.length<50)return url;const urlEnd=url.slice(url.length-15);return`${url.substr(0,32)}...${urlEnd}`}(response.url);let message=`Failed to fetch resource (${response.status}) ${response.statusText}: ${shortUrl}`;message=message.length>100?`${message.slice(0,100)}...`:message;const info={reason:response.statusText,url:response.url,response:response};try{const contentType=response.headers.get("Content-Type");info.reason=contentType?.includes("application/json")?await response.json():response.text()}catch(error){}return new FetchError(message,info)}(response);throw error}}async function fetchFile(urlOrData,fetchOptions){if("string"==typeof urlOrData){const url=function resolvePath(filename){for(const alias in fileAliases)if(filename.startsWith(alias)){const replacement=fileAliases[alias];filename=filename.replace(alias,replacement)}return filename.startsWith("http://")||filename.startsWith("https://")||(filename=`${pathPrefix}${filename}`),filename}(urlOrData);return function isNodePath(url){return!function isRequestURL(url){return url.startsWith("http:")||url.startsWith("https:")}(url)&&!function isDataURL(url){return url.startsWith("data:")}(url)}(url)&&globalThis.loaders?.fetchNode?globalThis.loaders?.fetchNode(url,fetchOptions):await fetch(url,fetchOptions)}return await response_utils_makeResponse(urlOrData)}var option_utils=__webpack_require__("./node_modules/@loaders.gl/core/dist/lib/loader-utils/option-utils.js");function getFetchFunction(options,context){const globalOptions=(0,option_utils.pp)(),loaderOptions=options||globalOptions;return"function"==typeof loaderOptions.fetch?loaderOptions.fetch:(0,is_type.Gv)(loaderOptions.fetch)?url=>fetchFile(url,loaderOptions.fetch):context?.fetch?context?.fetch:fetchFile}var globals=__webpack_require__("./node_modules/@loaders.gl/worker-utils/dist/lib/env-utils/globals.js");class NodeWorker{terminate(){}}var assert=__webpack_require__("./node_modules/@loaders.gl/worker-utils/dist/lib/env-utils/assert.js");const workerURLCache=new Map;function getLoadableWorkerURL(props){(0,assert.v)(props.source&&!props.url||!props.source&&props.url);let workerURL=workerURLCache.get(props.source||props.url);return workerURL||(props.url&&(workerURL=function getLoadableWorkerURLFromURL(url){if(!url.startsWith("http"))return url;return getLoadableWorkerURLFromSource(function buildScriptSource(workerUrl){return`try {\n  importScripts('${workerUrl}');\n} catch (error) {\n  console.error(error);\n  throw error;\n}`}(url))}(props.url),workerURLCache.set(props.url,workerURL)),props.source&&(workerURL=getLoadableWorkerURLFromSource(props.source),workerURLCache.set(props.source,workerURL))),(0,assert.v)(workerURL),workerURL}function getLoadableWorkerURLFromSource(workerSource){const blob=new Blob([workerSource],{type:"application/javascript"});return URL.createObjectURL(blob)}function getTransferList(object,recursive=!0,transfers){const transfersSet=transfers||new Set;if(object){if(isTransferable(object))transfersSet.add(object);else if(isTransferable(object.buffer))transfersSet.add(object.buffer);else if(ArrayBuffer.isView(object));else if(recursive&&"object"==typeof object)for(const key in object)getTransferList(object[key],recursive,transfersSet)}else;return void 0===transfers?Array.from(transfersSet):[]}function isTransferable(object){return!!object&&(object instanceof ArrayBuffer||("undefined"!=typeof MessagePort&&object instanceof MessagePort||("undefined"!=typeof ImageBitmap&&object instanceof ImageBitmap||"undefined"!=typeof OffscreenCanvas&&object instanceof OffscreenCanvas)))}const NOOP=()=>{};class WorkerThread{name;source;url;terminated=!1;worker;onMessage;onError;_loadableURL="";static isSupported(){return"undefined"!=typeof Worker&&globals.Bd||void 0!==NodeWorker&&!globals.Bd}constructor(props){const{name:name,source:source,url:url}=props;(0,assert.v)(source||url),this.name=name,this.source=source,this.url=url,this.onMessage=NOOP,this.onError=error=>console.log(error),this.worker=globals.Bd?this._createBrowserWorker():this._createNodeWorker()}destroy(){this.onMessage=NOOP,this.onError=NOOP,this.worker.terminate(),this.terminated=!0}get isRunning(){return Boolean(this.onMessage)}postMessage(data,transferList){transferList=transferList||getTransferList(data),this.worker.postMessage(data,transferList)}_getErrorFromErrorEvent(event){let message="Failed to load ";return message+=`worker ${this.name} from ${this.url}. `,event.message&&(message+=`${event.message} in `),event.lineno&&(message+=`:${event.lineno}:${event.colno}`),new Error(message)}_createBrowserWorker(){this._loadableURL=getLoadableWorkerURL({source:this.source,url:this.url});const worker=new Worker(this._loadableURL,{name:this.name});return worker.onmessage=event=>{event.data?this.onMessage(event.data):this.onError(new Error("No data received"))},worker.onerror=error=>{this.onError(this._getErrorFromErrorEvent(error)),this.terminated=!0},worker.onmessageerror=event=>console.error(event),worker}_createNodeWorker(){let worker;if(this.url){const url=this.url.includes(":/")||this.url.startsWith("/")?this.url:`./${this.url}`;worker=new NodeWorker(url,{eval:!1})}else{if(!this.source)throw new Error("no worker");worker=new NodeWorker(this.source,{eval:!0})}return worker.on("message",(data=>{this.onMessage(data)})),worker.on("error",(error=>{this.onError(error)})),worker.on("exit",(code=>{})),worker}}class WorkerJob{name;workerThread;isRunning=!0;result;_resolve=()=>{};_reject=()=>{};constructor(jobName,workerThread){this.name=jobName,this.workerThread=workerThread,this.result=new Promise(((resolve,reject)=>{this._resolve=resolve,this._reject=reject}))}postMessage(type,payload){this.workerThread.postMessage({source:"loaders.gl",type:type,payload:payload})}done(value){(0,assert.v)(this.isRunning),this.isRunning=!1,this._resolve(value)}error(error){(0,assert.v)(this.isRunning),this.isRunning=!1,this._reject(error)}}class WorkerPool{name="unnamed";source;url;maxConcurrency=1;maxMobileConcurrency=1;onDebug=()=>{};reuseWorkers=!0;props={};jobQueue=[];idleQueue=[];count=0;isDestroyed=!1;static isSupported(){return WorkerThread.isSupported()}constructor(props){this.source=props.source,this.url=props.url,this.setProps(props)}destroy(){this.idleQueue.forEach((worker=>worker.destroy())),this.isDestroyed=!0}setProps(props){this.props={...this.props,...props},void 0!==props.name&&(this.name=props.name),void 0!==props.maxConcurrency&&(this.maxConcurrency=props.maxConcurrency),void 0!==props.maxMobileConcurrency&&(this.maxMobileConcurrency=props.maxMobileConcurrency),void 0!==props.reuseWorkers&&(this.reuseWorkers=props.reuseWorkers),void 0!==props.onDebug&&(this.onDebug=props.onDebug)}async startJob(name,onMessage=((job,type,data)=>job.done(data)),onError=((job,error)=>job.error(error))){const startPromise=new Promise((onStart=>(this.jobQueue.push({name:name,onMessage:onMessage,onError:onError,onStart:onStart}),this)));return this._startQueuedJob(),await startPromise}async _startQueuedJob(){if(!this.jobQueue.length)return;const workerThread=this._getAvailableWorker();if(!workerThread)return;const queuedJob=this.jobQueue.shift();if(queuedJob){this.onDebug({message:"Starting job",name:queuedJob.name,workerThread:workerThread,backlog:this.jobQueue.length});const job=new WorkerJob(queuedJob.name,workerThread);workerThread.onMessage=data=>queuedJob.onMessage(job,data.type,data.payload),workerThread.onError=error=>queuedJob.onError(job,error),queuedJob.onStart(job);try{await job.result}catch(error){console.error(`Worker exception: ${error}`)}finally{this.returnWorkerToQueue(workerThread)}}}returnWorkerToQueue(worker){!globals.Bd||this.isDestroyed||!this.reuseWorkers||this.count>this._getMaxConcurrency()?(worker.destroy(),this.count--):this.idleQueue.push(worker),this.isDestroyed||this._startQueuedJob()}_getAvailableWorker(){if(this.idleQueue.length>0)return this.idleQueue.shift()||null;if(this.count<this._getMaxConcurrency()){this.count++;const name=`${this.name.toLowerCase()} (#${this.count} of ${this.maxConcurrency})`;return new WorkerThread({name:name,source:this.source,url:this.url})}return null}_getMaxConcurrency(){return globals.Fr?this.maxMobileConcurrency:this.maxConcurrency}}const DEFAULT_PROPS={maxConcurrency:3,maxMobileConcurrency:1,reuseWorkers:!0,onDebug:()=>{}};class WorkerFarm{props;workerPools=new Map;static _workerFarm;static isSupported(){return WorkerThread.isSupported()}static getWorkerFarm(props={}){return WorkerFarm._workerFarm=WorkerFarm._workerFarm||new WorkerFarm({}),WorkerFarm._workerFarm.setProps(props),WorkerFarm._workerFarm}constructor(props){this.props={...DEFAULT_PROPS},this.setProps(props),this.workerPools=new Map}destroy(){for(const workerPool of this.workerPools.values())workerPool.destroy();this.workerPools=new Map}setProps(props){this.props={...this.props,...props};for(const workerPool of this.workerPools.values())workerPool.setProps(this._getWorkerPoolProps())}getWorkerPool(options){const{name:name,source:source,url:url}=options;let workerPool=this.workerPools.get(name);return workerPool||(workerPool=new WorkerPool({name:name,source:source,url:url}),workerPool.setProps(this._getWorkerPoolProps()),this.workerPools.set(name,workerPool)),workerPool}_getWorkerPoolProps(){return{maxConcurrency:this.props.maxConcurrency,maxMobileConcurrency:this.props.maxMobileConcurrency,reuseWorkers:this.props.reuseWorkers,onDebug:this.props.onDebug}}}var env_utils_version=__webpack_require__("./node_modules/@loaders.gl/worker-utils/dist/lib/env-utils/version.js");async function parseWithWorker(loader,data,options,context,parseOnMainThread){const name=loader.id,url=function getWorkerURL(worker,options={}){const workerOptions=options[worker.id]||{},workerFile=globals.Bd?`${worker.id}-worker.js`:`${worker.id}-worker-node.js`;let url=workerOptions.workerUrl;if(url||"compression"!==worker.id||(url=options.workerUrl),"test"===options._workerType&&(url=globals.Bd?`modules/${worker.module}/dist/${workerFile}`:`modules/${worker.module}/src/workers/${worker.id}-worker-node.ts`),!url){let version=worker.version;"latest"===version&&(version=env_utils_version.x);const versionTag=version?`@${version}`:"";url=`https://unpkg.com/@loaders.gl/${worker.module}${versionTag}/dist/${workerFile}`}return(0,assert.v)(url),url}(loader,options),workerPool=WorkerFarm.getWorkerFarm(options).getWorkerPool({name:name,url:url});options=JSON.parse(JSON.stringify(options)),context=JSON.parse(JSON.stringify(context||{}));const job=await workerPool.startJob("process-on-worker",onMessage.bind(null,parseOnMainThread));job.postMessage("process",{input:data,options:options,context:context});const result=await job.result;return await result.result}async function onMessage(parseOnMainThread,job,type,payload){switch(type){case"done":job.done(payload);break;case"error":job.error(new Error(payload.error));break;case"process":const{id:id,input:input,options:options}=payload;try{const result=await parseOnMainThread(input,options);job.postMessage("done",{id:id,result:result})}catch(error){const message=error instanceof Error?error.message:"unknown error";job.postMessage("error",{id:id,error:message})}break;default:console.warn(`parse-with-worker unknown message ${type}`)}}var merge_loader_options=__webpack_require__("./node_modules/@loaders.gl/loader-utils/dist/lib/option-utils/merge-loader-options.js"),array_buffer_utils=__webpack_require__("./node_modules/@loaders.gl/loader-utils/dist/lib/binary-utils/array-buffer-utils.js");const DEFAULT_CHUNK_SIZE=262144;const make_array_buffer_iterator_DEFAULT_CHUNK_SIZE=262144;const make_blob_iterator_DEFAULT_CHUNK_SIZE=1048576;var env_utils_globals=__webpack_require__("./node_modules/@loaders.gl/loader-utils/dist/lib/env-utils/globals.js");function memory_conversion_utils_toArrayBuffer(data){if(function isBuffer(value){return value&&"object"==typeof value&&value.isBuffer}(data))return data;if(data instanceof ArrayBuffer)return data;if(ArrayBuffer.isView(data))return 0===data.byteOffset&&data.byteLength===data.buffer.byteLength?data.buffer:data.buffer.slice(data.byteOffset,data.byteOffset+data.byteLength);if("string"==typeof data){const text=data;return(new TextEncoder).encode(text).buffer}if(data&&"object"==typeof data&&data._toArrayBuffer)return data._toArrayBuffer();throw new Error("toArrayBuffer")}function makeStreamIterator(stream,options){return env_utils_globals.Bd?async function*makeBrowserStreamIterator(stream,options){const reader=stream.getReader();let nextBatchPromise;try{for(;;){const currentBatchPromise=nextBatchPromise||reader.read();options?._streamReadAhead&&(nextBatchPromise=reader.read());const{done:done,value:value}=await currentBatchPromise;if(done)return;yield memory_conversion_utils_toArrayBuffer(value)}}catch(error){reader.releaseLock()}}(stream,options):async function*makeNodeStreamIterator(stream,options){for await(const chunk of stream)yield memory_conversion_utils_toArrayBuffer(chunk)}(stream)}function make_iterator_makeIterator(data,options){if("string"==typeof data)return function*makeStringIterator(string,options){const chunkSize=options?.chunkSize||DEFAULT_CHUNK_SIZE;let offset=0;const textEncoder=new TextEncoder;for(;offset<string.length;){const chunkLength=Math.min(string.length-offset,chunkSize),chunk=string.slice(offset,offset+chunkLength);offset+=chunkLength,yield textEncoder.encode(chunk)}}(data,options);if(data instanceof ArrayBuffer)return function*makeArrayBufferIterator(arrayBuffer,options={}){const{chunkSize:chunkSize=make_array_buffer_iterator_DEFAULT_CHUNK_SIZE}=options;let byteOffset=0;for(;byteOffset<arrayBuffer.byteLength;){const chunkByteLength=Math.min(arrayBuffer.byteLength-byteOffset,chunkSize),chunk=new ArrayBuffer(chunkByteLength),sourceArray=new Uint8Array(arrayBuffer,byteOffset,chunkByteLength);new Uint8Array(chunk).set(sourceArray),byteOffset+=chunkByteLength,yield chunk}}(data,options);if((0,is_type.qf)(data))return async function*makeBlobIterator(blob,options){const chunkSize=options?.chunkSize||make_blob_iterator_DEFAULT_CHUNK_SIZE;let offset=0;for(;offset<blob.size;){const end=offset+chunkSize,chunk=await blob.slice(offset,end).arrayBuffer();offset=end,yield chunk}}(data,options);if((0,is_type.H1)(data))return makeStreamIterator(data,options);if((0,is_type.Sv)(data)){return makeStreamIterator(data.body,options)}throw new Error("makeIterator")}const ERR_DATA="Cannot convert supplied data type";async function getArrayBufferOrStringFromData(data,loader,options){const isArrayBuffer=data instanceof ArrayBuffer||ArrayBuffer.isView(data);if("string"==typeof data||isArrayBuffer)return function getArrayBufferOrStringFromDataSync(data,loader,options){if(loader.text&&"string"==typeof data)return data;if((0,is_type.Pe)(data)&&(data=data.buffer),data instanceof ArrayBuffer){const arrayBuffer=data;return loader.text&&!loader.binary?new TextDecoder("utf8").decode(arrayBuffer):arrayBuffer}if(ArrayBuffer.isView(data)){if(loader.text&&!loader.binary)return new TextDecoder("utf8").decode(data);let arrayBuffer=data.buffer;const byteLength=data.byteLength||data.length;return 0===data.byteOffset&&byteLength===arrayBuffer.byteLength||(arrayBuffer=arrayBuffer.slice(data.byteOffset,data.byteOffset+byteLength)),arrayBuffer}throw new Error(ERR_DATA)}(data,loader);if((0,is_type.qf)(data)&&(data=await response_utils_makeResponse(data)),(0,is_type.Sv)(data)){const response=data;return await response_utils_checkResponse(response),loader.binary?await response.arrayBuffer():await response.text()}if((0,is_type.H1)(data)&&(data=make_iterator_makeIterator(data,options)),(0,is_type.xZ)(data)||(0,is_type.Td)(data))return async function concatenateArrayBuffersAsync(asyncIterator){const arrayBuffers=[];for await(const chunk of asyncIterator)arrayBuffers.push(chunk);return(0,array_buffer_utils.AQ)(...arrayBuffers)}(data);throw new Error(ERR_DATA)}var path=__webpack_require__("./node_modules/@loaders.gl/loader-utils/dist/lib/path-utils/path.js");function getLoaderContext(context,options,parentContext){if(parentContext)return parentContext;const newContext={fetch:getFetchFunction(options,context),...context};if(newContext.url){const baseUrl=stripQueryString(newContext.url);newContext.baseUrl=baseUrl,newContext.queryString=function extractQueryString(url){const matches=url.match(QUERY_STRING_PATTERN);return matches&&matches[0]}(newContext.url),newContext.filename=path.iW(baseUrl),newContext.baseUrl=path.pD(baseUrl)}return Array.isArray(newContext.loaders)||(newContext.loaders=null),newContext}const log_log=new(__webpack_require__("./node_modules/@probe.gl/log/dist/log.js").t)({id:"loaders.gl"});var register_loaders=__webpack_require__("./node_modules/@loaders.gl/core/dist/lib/api/register-loaders.js");const EXT_PATTERN=/\.([^.]+)$/;function selectLoaderSync(data,loaders=[],options,context){if(!validHTTPResponse(data))return null;if(loaders&&!Array.isArray(loaders))return(0,normalize_loader.D)(loaders);let candidateLoaders=[];loaders&&(candidateLoaders=candidateLoaders.concat(loaders)),options?.ignoreRegisteredLoaders||candidateLoaders.push(...(0,register_loaders.Ph)()),function normalizeLoaders(loaders){for(const loader of loaders)(0,normalize_loader.D)(loader)}(candidateLoaders);const loader=function selectLoaderInternal(data,loaders,options,context){const url=getResourceUrl(data),type=getResourceMIMEType(data),testUrl=stripQueryString(url)||context?.url;let loader=null,reason="";options?.mimeType&&(loader=findLoaderByMIMEType(loaders,options?.mimeType),reason=`match forced by supplied MIME type ${options?.mimeType}`);loader=loader||function findLoaderByUrl(loaders,url){const match=url&&EXT_PATTERN.exec(url),extension=match&&match[1];return extension?function findLoaderByExtension(loaders,extension){extension=extension.toLowerCase();for(const loader of loaders)for(const loaderExtension of loader.extensions)if(loaderExtension.toLowerCase()===extension)return loader;return null}(loaders,extension):null}(loaders,testUrl),reason=reason||(loader?`matched url ${testUrl}`:""),loader=loader||findLoaderByMIMEType(loaders,type),reason=reason||(loader?`matched MIME type ${type}`:""),loader=loader||function findLoaderByInitialBytes(loaders,data){if(!data)return null;for(const loader of loaders)if("string"==typeof data){if(testDataAgainstText(data,loader))return loader}else if(ArrayBuffer.isView(data)){if(testDataAgainstBinary(data.buffer,data.byteOffset,loader))return loader}else if(data instanceof ArrayBuffer){if(testDataAgainstBinary(data,0,loader))return loader}return null}(loaders,data),reason=reason||(loader?`matched initial data ${getFirstCharacters(data)}`:""),options?.fallbackMimeType&&(loader=loader||findLoaderByMIMEType(loaders,options?.fallbackMimeType),reason=reason||(loader?`matched fallback MIME type ${type}`:""));reason&&log_log.log(1,`selectLoader selected ${loader?.name}: ${reason}.`);return loader}(data,candidateLoaders,options,context);if(!loader&&!options?.nothrow)throw new Error(getNoValidLoaderMessage(data));return loader}function validHTTPResponse(data){return!(data instanceof Response&&204===data.status)}function getNoValidLoaderMessage(data){const url=getResourceUrl(data),type=getResourceMIMEType(data);let message="No valid loader found (";message+=url?`${path.iW(url)}, `:"no url provided, ",message+=`MIME type: ${type?`"${type}"`:"not provided"}, `;const firstCharacters=data?getFirstCharacters(data):"";return message+=firstCharacters?` first bytes: "${firstCharacters}"`:"first bytes: not available",message+=")",message}function findLoaderByMIMEType(loaders,mimeType){for(const loader of loaders){if(loader.mimeTypes?.some((mimeType1=>compareMIMETypes(mimeType,mimeType1))))return loader;if(compareMIMETypes(mimeType,`application/x.${loader.id}`))return loader}return null}function testDataAgainstText(data,loader){if(loader.testText)return loader.testText(data);return(Array.isArray(loader.tests)?loader.tests:[loader.tests]).some((test=>data.startsWith(test)))}function testDataAgainstBinary(data,byteOffset,loader){return(Array.isArray(loader.tests)?loader.tests:[loader.tests]).some((test=>function testBinary(data,byteOffset,loader,test){if(test instanceof ArrayBuffer)return(0,array_buffer_utils.YV)(test,data,test.byteLength);switch(typeof test){case"function":return test(data);case"string":return test===getMagicString(data,byteOffset,test.length);default:return!1}}(data,byteOffset,0,test)))}function getFirstCharacters(data,length=5){if("string"==typeof data)return data.slice(0,length);if(ArrayBuffer.isView(data))return getMagicString(data.buffer,data.byteOffset,length);if(data instanceof ArrayBuffer){return getMagicString(data,0,length)}return""}function getMagicString(arrayBuffer,byteOffset,length){if(arrayBuffer.byteLength<byteOffset+length)return"";const dataView=new DataView(arrayBuffer);let magic="";for(let i=0;i<length;i++)magic+=String.fromCharCode(dataView.getUint8(byteOffset+i));return magic}async function parse(data,loaders,options,context){!loaders||Array.isArray(loaders)||(0,normalize_loader.l)(loaders)||(context=void 0,options=loaders,loaders=void 0),options=options||{};const url=getResourceUrl(data=await data),candidateLoaders=function getLoadersFromContext(loaders,context){if(loaders&&!Array.isArray(loaders))return loaders;let candidateLoaders;if(loaders&&(candidateLoaders=Array.isArray(loaders)?loaders:[loaders]),context&&context.loaders){const contextLoaders=Array.isArray(context.loaders)?context.loaders:[context.loaders];candidateLoaders=candidateLoaders?[...candidateLoaders,...contextLoaders]:contextLoaders}return candidateLoaders&&candidateLoaders.length?candidateLoaders:void 0}(loaders,context),loader=await async function selectLoader(data,loaders=[],options,context){if(!validHTTPResponse(data))return null;let loader=selectLoaderSync(data,loaders,{...options,nothrow:!0},context);if(loader)return loader;if((0,is_type.qf)(data)&&(loader=selectLoaderSync(data=await data.slice(0,10).arrayBuffer(),loaders,options,context)),!loader&&!options?.nothrow)throw new Error(getNoValidLoaderMessage(data));return loader}(data,candidateLoaders,options);return loader?(context=getLoaderContext({url:url,_parse:parse,loaders:candidateLoaders},options=(0,option_utils.a5)(options,loader,candidateLoaders,url),context||null),await async function parseWithLoader(loader,data,options,context){if(function validateWorkerVersion(worker,coreVersion=env_utils_version.Q){(0,assert.v)(worker,"no worker provided");const workerVersion=worker.version;return!(!coreVersion||!workerVersion)}(loader),options=(0,merge_loader_options.y)(loader.options,options),(0,is_type.Sv)(data)){const response=data,{ok:ok,redirected:redirected,status:status,statusText:statusText,type:type,url:url}=response,headers=Object.fromEntries(response.headers.entries());context.response={headers:headers,ok:ok,redirected:redirected,status:status,statusText:statusText,type:type,url:url}}data=await getArrayBufferOrStringFromData(data,loader,options);const loaderWithParser=loader;if(loaderWithParser.parseTextSync&&"string"==typeof data)return loaderWithParser.parseTextSync(data,options,context);if(function canParseWithWorker(loader,options){return!!WorkerFarm.isSupported()&&!(!globals.Bd&&!options?._nodeWorkers)&&loader.worker&&options?.worker}(loader,options))return await parseWithWorker(loader,data,options,context,parse);if(loaderWithParser.parseText&&"string"==typeof data)return await loaderWithParser.parseText(data,options,context);if(loaderWithParser.parse)return await loaderWithParser.parse(data,options,context);throw(0,assert.v)(!loaderWithParser.parseSync),new Error(`${loader.id} loader - no parser found and worker is disabled`)}(loader,data,options,context)):null}async function load(url,loaders,options,context){let resolvedLoaders,resolvedOptions;Array.isArray(loaders)||(0,normalize_loader.l)(loaders)?(resolvedLoaders=loaders,resolvedOptions=options):(resolvedLoaders=[],resolvedOptions=loaders);const fetch=getFetchFunction(resolvedOptions);let data=url;return"string"==typeof url&&(data=await fetch(url)),(0,is_type.qf)(url)&&(data=await fetch(url)),Array.isArray(resolvedLoaders),await parse(data,resolvedLoaders,resolvedOptions)}},"./node_modules/@loaders.gl/core/dist/lib/api/register-loaders.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{Ph:function(){return getRegisteredLoaders},mk:function(){return registerLoaders}});var _loader_utils_normalize_loader_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@loaders.gl/core/dist/lib/loader-utils/normalize-loader.js"),_loader_utils_option_utils_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@loaders.gl/core/dist/lib/loader-utils/option-utils.js");const getGlobalLoaderRegistry=()=>{const state=(0,_loader_utils_option_utils_js__WEBPACK_IMPORTED_MODULE_0__.K2)();return state.loaderRegistry=state.loaderRegistry||[],state.loaderRegistry};function registerLoaders(loaders){const loaderRegistry=getGlobalLoaderRegistry();loaders=Array.isArray(loaders)?loaders:[loaders];for(const loader of loaders){const normalizedLoader=(0,_loader_utils_normalize_loader_js__WEBPACK_IMPORTED_MODULE_1__.D)(loader);loaderRegistry.find((registeredLoader=>normalizedLoader===registeredLoader))||loaderRegistry.unshift(normalizedLoader)}}function getRegisteredLoaders(){return getGlobalLoaderRegistry()}},"./node_modules/@loaders.gl/core/dist/lib/loader-utils/normalize-loader.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{D:function(){return normalizeLoader},l:function(){return isLoaderObject}});var _loaders_gl_loader_utils__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@loaders.gl/loader-utils/dist/lib/env-utils/assert.js");function isLoaderObject(loader){if(!loader)return!1;Array.isArray(loader)&&(loader=loader[0]);return Array.isArray(loader?.extensions)}function normalizeLoader(loader){let options;return(0,_loaders_gl_loader_utils__WEBPACK_IMPORTED_MODULE_0__.v)(loader,"null loader"),(0,_loaders_gl_loader_utils__WEBPACK_IMPORTED_MODULE_0__.v)(isLoaderObject(loader),"invalid loader"),Array.isArray(loader)&&(options=loader[1],loader=loader[0],loader={...loader,options:{...loader.options,...options}}),(loader?.parseTextSync||loader?.parseText)&&(loader.text=!0),loader.text||(loader.binary=!0),loader}},"./node_modules/@loaders.gl/core/dist/lib/loader-utils/option-utils.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{pp:function(){return getGlobalLoaderOptions},K2:function(){return getGlobalLoaderState},a5:function(){return normalizeOptions}});var is_type=__webpack_require__("./node_modules/@loaders.gl/core/dist/javascript-utils/is-type.js");const probeLog=new(__webpack_require__("./node_modules/@probe.gl/log/dist/log.js").t)({id:"loaders.gl"});class NullLog{log(){return()=>{}}info(){return()=>{}}warn(){return()=>{}}error(){return()=>{}}}var globals=__webpack_require__("./node_modules/@loaders.gl/loader-utils/dist/lib/env-utils/globals.js");const DEFAULT_LOADER_OPTIONS={fetch:null,mimeType:void 0,nothrow:!1,log:new class ConsoleLog{console;constructor(){this.console=console}log(...args){return this.console.log.bind(this.console,...args)}info(...args){return this.console.info.bind(this.console,...args)}warn(...args){return this.console.warn.bind(this.console,...args)}error(...args){return this.console.error.bind(this.console,...args)}},useLocalLibraries:!1,CDN:"https://unpkg.com/@loaders.gl",worker:!0,maxConcurrency:3,maxMobileConcurrency:1,reuseWorkers:globals.Bd,_nodeWorkers:!1,_workerType:"",limit:0,_limitMB:0,batchSize:"auto",batchDebounceMs:0,metadata:!1,transforms:[]},REMOVED_LOADER_OPTIONS={throws:"nothrow",dataType:"(no longer used)",uri:"baseUri",method:"fetch.method",headers:"fetch.headers",body:"fetch.body",mode:"fetch.mode",credentials:"fetch.credentials",cache:"fetch.cache",redirect:"fetch.redirect",referrer:"fetch.referrer",referrerPolicy:"fetch.referrerPolicy",integrity:"fetch.integrity",keepalive:"fetch.keepalive",signal:"fetch.signal"};function getGlobalLoaderState(){globalThis.loaders=globalThis.loaders||{};const{loaders:loaders}=globalThis;return loaders._state||(loaders._state={}),loaders._state}function getGlobalLoaderOptions(){const state=getGlobalLoaderState();return state.globalOptions=state.globalOptions||{...DEFAULT_LOADER_OPTIONS},state.globalOptions}function normalizeOptions(options,loader,loaders,url){return loaders=loaders||[],function validateOptions(options,loaders){validateOptionsObject(options,null,DEFAULT_LOADER_OPTIONS,REMOVED_LOADER_OPTIONS,loaders);for(const loader of loaders){const idOptions=options&&options[loader.id]||{},loaderOptions=loader.options&&loader.options[loader.id]||{},deprecatedOptions=loader.deprecatedOptions&&loader.deprecatedOptions[loader.id]||{};validateOptionsObject(idOptions,loader.id,loaderOptions,deprecatedOptions,loaders)}}(options,loaders=Array.isArray(loaders)?loaders:[loaders]),normalizeOptionsInternal(loader,options,url)}function validateOptionsObject(options,id,defaultOptions,deprecatedOptions,loaders){const loaderName=id||"Top level",prefix=id?`${id}.`:"";for(const key in options){const isSubOptions=!id&&(0,is_type.Gv)(options[key]);if(!(key in defaultOptions)&&!("baseUri"===key&&!id)&&!("workerUrl"===key&&id))if(key in deprecatedOptions)probeLog.warn(`${loaderName} loader option '${prefix}${key}' no longer supported, use '${deprecatedOptions[key]}'`)();else if(!isSubOptions){const suggestion=findSimilarOption(key,loaders);probeLog.warn(`${loaderName} loader option '${prefix}${key}' not recognized. ${suggestion}`)()}}}function findSimilarOption(optionKey,loaders){const lowerCaseOptionKey=optionKey.toLowerCase();let bestSuggestion="";for(const loader of loaders)for(const key in loader.options){if(optionKey===key)return`Did you mean '${loader.id}.${key}'?`;const lowerCaseKey=key.toLowerCase();(lowerCaseOptionKey.startsWith(lowerCaseKey)||lowerCaseKey.startsWith(lowerCaseOptionKey))&&(bestSuggestion=bestSuggestion||`Did you mean '${loader.id}.${key}'?`)}return bestSuggestion}function normalizeOptionsInternal(loader,options,url){const mergedOptions={...loader.options||{}};return function addUrlOptions(options,url){url&&!("baseUri"in options)&&(options.baseUri=url)}(mergedOptions,url),null===mergedOptions.log&&(mergedOptions.log=new NullLog),mergeNestedFields(mergedOptions,getGlobalLoaderOptions()),mergeNestedFields(mergedOptions,options),mergedOptions}function mergeNestedFields(mergedOptions,options){for(const key in options)if(key in options){const value=options[key];(0,is_type.aC)(value)&&(0,is_type.aC)(mergedOptions[key])?mergedOptions[key]={...mergedOptions[key],...options[key]}:mergedOptions[key]=options[key]}}},"./node_modules/@loaders.gl/images/dist/image-loader.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{$:function(){return ImageLoader}});var assert=__webpack_require__("./node_modules/@loaders.gl/loader-utils/dist/lib/env-utils/assert.js"),globals=__webpack_require__("./node_modules/@loaders.gl/loader-utils/dist/lib/env-utils/globals.js");const parseImageNode=globalThis.loaders?.parseImageNode,IMAGE_SUPPORTED="undefined"!=typeof Image,IMAGE_BITMAP_SUPPORTED="undefined"!=typeof ImageBitmap,NODE_IMAGE_SUPPORTED=Boolean(parseImageNode),DATA_SUPPORTED=!!globals.Bd||NODE_IMAGE_SUPPORTED;var parsed_image_api=__webpack_require__("./node_modules/@loaders.gl/images/dist/lib/category-api/parsed-image-api.js");const SVG_DATA_URL_PATTERN=/^data:image\/svg\+xml/,SVG_URL_PATTERN=/\.svg((\?|#).*)?$/;function isSVG(url){return url&&(SVG_DATA_URL_PATTERN.test(url)||SVG_URL_PATTERN.test(url))}function getBlob(arrayBuffer,url){if(isSVG(url))throw new Error("SVG cannot be parsed directly to imagebitmap");return new Blob([new Uint8Array(arrayBuffer)])}async function parseToImage(arrayBuffer,options,url){const blobOrDataUrl=function getBlobOrSVGDataUrl(arrayBuffer,url){if(isSVG(url)){let xmlText=(new TextDecoder).decode(arrayBuffer);try{"function"==typeof unescape&&"function"==typeof encodeURIComponent&&(xmlText=unescape(encodeURIComponent(xmlText)))}catch(error){throw new Error(error.message)}return`data:image/svg+xml;base64,${btoa(xmlText)}`}return getBlob(arrayBuffer,url)}(arrayBuffer,url),URL=self.URL||self.webkitURL,objectUrl="string"!=typeof blobOrDataUrl&&URL.createObjectURL(blobOrDataUrl);try{return await async function loadToImage(url,options){const image=new Image;if(image.src=url,options.image&&options.image.decode&&image.decode)return await image.decode(),image;return await new Promise(((resolve,reject)=>{try{image.onload=()=>resolve(image),image.onerror=error=>{const message=error instanceof Error?error.message:"error";reject(new Error(message))}}catch(error){reject(error)}}))}(objectUrl||blobOrDataUrl,options)}finally{objectUrl&&URL.revokeObjectURL(objectUrl)}}const EMPTY_OBJECT={};let imagebitmapOptionsSupported=!0;async function parseToImageBitmap(arrayBuffer,options,url){let blob;if(isSVG(url)){blob=await parseToImage(arrayBuffer,options,url)}else blob=getBlob(arrayBuffer,url);const imagebitmapOptions=options&&options.imagebitmap;return await async function safeCreateImageBitmap(blob,imagebitmapOptions=null){!function isEmptyObject(object){for(const key in object||EMPTY_OBJECT)return!1;return!0}(imagebitmapOptions)&&imagebitmapOptionsSupported||(imagebitmapOptions=null);if(imagebitmapOptions)try{return await createImageBitmap(blob,imagebitmapOptions)}catch(error){console.warn(error),imagebitmapOptionsSupported=!1}return await createImageBitmap(blob)}(blob,imagebitmapOptions)}var binary_image_api=__webpack_require__("./node_modules/@loaders.gl/images/dist/lib/category-api/binary-image-api.js");const ImageLoader={dataType:null,batchType:null,id:"image",module:"images",name:"Images",version:"4.2.2",mimeTypes:["image/png","image/jpeg","image/gif","image/webp","image/avif","image/bmp","image/vnd.microsoft.icon","image/svg+xml"],extensions:["png","jpg","jpeg","gif","webp","bmp","ico","svg","avif"],parse:async function parseImage(arrayBuffer,options,context){const imageType=((options=options||{}).image||{}).type||"auto",{url:url}=context||{};let image;switch(function getLoadableImageType(type){switch(type){case"auto":case"data":return function getDefaultImageType(){if(IMAGE_BITMAP_SUPPORTED)return"imagebitmap";if(IMAGE_SUPPORTED)return"image";if(DATA_SUPPORTED)return"data";throw new Error("Install '@loaders.gl/polyfills' to parse images under Node.js")}();default:return function isImageTypeSupported(type){switch(type){case"auto":return IMAGE_BITMAP_SUPPORTED||IMAGE_SUPPORTED||DATA_SUPPORTED;case"imagebitmap":return IMAGE_BITMAP_SUPPORTED;case"image":return IMAGE_SUPPORTED;case"data":return DATA_SUPPORTED;default:throw new Error(`@loaders.gl/images: image ${type} not supported in this environment`)}}(type),type}}(imageType)){case"imagebitmap":image=await parseToImageBitmap(arrayBuffer,options,url);break;case"image":image=await parseToImage(arrayBuffer,options,url);break;case"data":image=await async function parseToNodeImage(arrayBuffer,options){const{mimeType:mimeType}=(0,binary_image_api.m)(arrayBuffer)||{},parseImageNode=globalThis.loaders?.parseImageNode;return(0,assert.v)(parseImageNode),await parseImageNode(arrayBuffer,mimeType)}(arrayBuffer);break;default:(0,assert.v)(!1)}return"data"===imageType&&(image=(0,parsed_image_api.M5)(image)),image},tests:[arrayBuffer=>Boolean((0,binary_image_api.m)(new DataView(arrayBuffer)))],options:{image:{type:"auto",decode:!0}}}},"./node_modules/@loaders.gl/images/dist/lib/category-api/binary-image-api.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function getISOBMFFMediaType(buffer){return function checkString(buffer,header,offset=0){const headerBytes=function stringToBytes(string){return[...string].map((character=>character.charCodeAt(0)))}(header);for(let i=0;i<headerBytes.length;++i)if(headerBytes[i]!==buffer[i+offset])return!1;return!0}(buffer,"ftyp",4)?0==(96&buffer[8])?null:function decodeMajorBrand(buffer){switch(function getUTF8String(array,start,end){return String.fromCharCode(...array.slice(start,end))}(buffer,8,12).replace("\0"," ").trim()){case"avif":case"avis":return{extension:"avif",mimeType:"image/avif"};default:return null}}(buffer):null}__webpack_require__.d(__webpack_exports__,{m:function(){return getBinaryImageMetadata}});const BIG_ENDIAN=!1,LITTLE_ENDIAN=!0;function getBinaryImageMetadata(binaryData){const dataView=toDataView(binaryData);return function getPngMetadata(binaryData){const dataView=toDataView(binaryData),isPng=dataView.byteLength>=24&&2303741511===dataView.getUint32(0,BIG_ENDIAN);if(!isPng)return null;return{mimeType:"image/png",width:dataView.getUint32(16,BIG_ENDIAN),height:dataView.getUint32(20,BIG_ENDIAN)}}(dataView)||function getJpegMetadata(binaryData){const dataView=toDataView(binaryData),isJpeg=dataView.byteLength>=3&&65496===dataView.getUint16(0,BIG_ENDIAN)&&255===dataView.getUint8(2);if(!isJpeg)return null;const{tableMarkers:tableMarkers,sofMarkers:sofMarkers}=function getJpegMarkers(){const tableMarkers=new Set([65499,65476,65484,65501,65534]);for(let i=65504;i<65520;++i)tableMarkers.add(i);const sofMarkers=new Set([65472,65473,65474,65475,65477,65478,65479,65481,65482,65483,65485,65486,65487,65502]);return{tableMarkers:tableMarkers,sofMarkers:sofMarkers}}();let i=2;for(;i+9<dataView.byteLength;){const marker=dataView.getUint16(i,BIG_ENDIAN);if(sofMarkers.has(marker))return{mimeType:"image/jpeg",height:dataView.getUint16(i+5,BIG_ENDIAN),width:dataView.getUint16(i+7,BIG_ENDIAN)};if(!tableMarkers.has(marker))return null;i+=2,i+=dataView.getUint16(i,BIG_ENDIAN)}return null}(dataView)||function getGifMetadata(binaryData){const dataView=toDataView(binaryData),isGif=dataView.byteLength>=10&&1195984440===dataView.getUint32(0,BIG_ENDIAN);if(!isGif)return null;return{mimeType:"image/gif",width:dataView.getUint16(6,LITTLE_ENDIAN),height:dataView.getUint16(8,LITTLE_ENDIAN)}}(dataView)||function getBmpMetadata(binaryData){const dataView=toDataView(binaryData),isBmp=dataView.byteLength>=14&&16973===dataView.getUint16(0,BIG_ENDIAN)&&dataView.getUint32(2,LITTLE_ENDIAN)===dataView.byteLength;if(!isBmp)return null;return{mimeType:"image/bmp",width:dataView.getUint32(18,LITTLE_ENDIAN),height:dataView.getUint32(22,LITTLE_ENDIAN)}}(dataView)||function getISOBMFFMetadata(binaryData){const buffer=new Uint8Array(binaryData instanceof DataView?binaryData.buffer:binaryData),mediaType=getISOBMFFMediaType(buffer);if(!mediaType)return null;return{mimeType:mediaType.mimeType,width:0,height:0}}(dataView)}function toDataView(data){if(data instanceof DataView)return data;if(ArrayBuffer.isView(data))return new DataView(data.buffer);if(data instanceof ArrayBuffer)return new DataView(data);throw new Error("toDataView")}},"./node_modules/@loaders.gl/images/dist/lib/category-api/parsed-image-api.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function getImageType(image){const format=getImageTypeOrNull(image);if(!format)throw new Error("Not an image");return format}function getImageData(image){switch(getImageType(image)){case"data":return image;case"image":case"imagebitmap":const canvas=document.createElement("canvas"),context=canvas.getContext("2d");if(!context)throw new Error("getImageData");return canvas.width=image.width,canvas.height=image.height,context.drawImage(image,0,0),context.getImageData(0,0,image.width,image.height);default:throw new Error("getImageData")}}function getImageTypeOrNull(image){return"undefined"!=typeof ImageBitmap&&image instanceof ImageBitmap?"imagebitmap":"undefined"!=typeof Image&&image instanceof Image?"image":image&&"object"==typeof image&&image.data&&image.width&&image.height?"data":null}__webpack_require__.d(__webpack_exports__,{M5:function(){return getImageData}})},"./node_modules/@loaders.gl/loader-utils/dist/lib/binary-utils/array-buffer-utils.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function compareArrayBuffers(arrayBuffer1,arrayBuffer2,byteLength){if(byteLength=byteLength||arrayBuffer1.byteLength,arrayBuffer1.byteLength<byteLength||arrayBuffer2.byteLength<byteLength)return!1;const array1=new Uint8Array(arrayBuffer1),array2=new Uint8Array(arrayBuffer2);for(let i=0;i<array1.length;++i)if(array1[i]!==array2[i])return!1;return!0}function concatenateArrayBuffers(...sources){return function concatenateArrayBuffersFromArray(sources){const sourceArrays=sources.map((source2=>source2 instanceof ArrayBuffer?new Uint8Array(source2):source2)),byteLength=sourceArrays.reduce(((length,typedArray)=>length+typedArray.byteLength),0),result=new Uint8Array(byteLength);let offset=0;for(const sourceArray of sourceArrays)result.set(sourceArray,offset),offset+=sourceArray.byteLength;return result.buffer}(sources)}function sliceArrayBuffer(arrayBuffer,byteOffset,byteLength){const subArray=void 0!==byteLength?new Uint8Array(arrayBuffer).subarray(byteOffset,byteOffset+byteLength):new Uint8Array(arrayBuffer).subarray(byteOffset);return new Uint8Array(subArray).buffer}__webpack_require__.d(__webpack_exports__,{AQ:function(){return concatenateArrayBuffers},YV:function(){return compareArrayBuffers},_m:function(){return sliceArrayBuffer}})},"./node_modules/@loaders.gl/loader-utils/dist/lib/env-utils/assert.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function assert(condition,message){if(!condition)throw new Error(message||"loader assertion failed.")}__webpack_require__.d(__webpack_exports__,{v:function(){return assert}})},"./node_modules/@loaders.gl/loader-utils/dist/lib/env-utils/globals.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{Bd:function(){return isBrowser}});var process=__webpack_require__("./node_modules/process/browser.js");"undefined"!=typeof self&&self,"undefined"!=typeof window&&window,void 0!==__webpack_require__.g&&__webpack_require__.g,"undefined"!=typeof document&&document;const isBrowser=Boolean("object"!=typeof process||"[object process]"!==String(process)||process.browser),matches=void 0!==process&&process.version&&/v([0-9]*)/.exec(process.version);matches&&parseFloat(matches[1])},"./node_modules/@loaders.gl/loader-utils/dist/lib/option-utils/merge-loader-options.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function mergeLoaderOptions(baseOptions,newOptions){return mergeOptionsRecursively(baseOptions||{},newOptions)}function mergeOptionsRecursively(baseOptions,newOptions,level=0){if(level>3)return newOptions;const options={...baseOptions};for(const[key,newValue]of Object.entries(newOptions))newValue&&"object"==typeof newValue&&!Array.isArray(newValue)?options[key]=mergeOptionsRecursively(options[key]||{},newOptions[key],level+1):options[key]=newOptions[key];return options}__webpack_require__.d(__webpack_exports__,{y:function(){return mergeLoaderOptions}})},"./node_modules/@loaders.gl/loader-utils/dist/lib/path-utils/path.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{pD:function(){return dirname},iW:function(){return filename},hd:function(){return resolve}});var process=__webpack_require__("./node_modules/process/browser.js");function getCWD(){if(void 0!==process&&void 0!==process.cwd)return process.cwd();const pathname=window.location?.pathname;return pathname?.slice(0,pathname.lastIndexOf("/")+1)||""}function filename(url){const slashIndex=url?url.lastIndexOf("/"):-1;return slashIndex>=0?url.substr(slashIndex+1):""}function dirname(url){const slashIndex=url?url.lastIndexOf("/"):-1;return slashIndex>=0?url.substr(0,slashIndex):""}function resolve(...components){const paths=[];for(let _i=0;_i<components.length;_i++)paths[_i]=components[_i];let cwd,resolvedPath="",resolvedAbsolute=!1;for(let i=paths.length-1;i>=-1&&!resolvedAbsolute;i--){let path;i>=0?path=paths[i]:(void 0===cwd&&(cwd=getCWD()),path=cwd),0!==path.length&&(resolvedPath=`${path}/${resolvedPath}`,resolvedAbsolute=path.charCodeAt(0)===SLASH)}return resolvedPath=function normalizeStringPosix(path,allowAboveRoot){let code,res="",lastSlash=-1,dots=0,isAboveRoot=!1;for(let i=0;i<=path.length;++i){if(i<path.length)code=path.charCodeAt(i);else{if(code===SLASH)break;code=SLASH}if(code===SLASH){if(lastSlash===i-1||1===dots);else if(lastSlash!==i-1&&2===dots){if(res.length<2||!isAboveRoot||res.charCodeAt(res.length-1)!==DOT||res.charCodeAt(res.length-2)!==DOT)if(res.length>2){const start=res.length-1;let j=start;for(;j>=0&&res.charCodeAt(j)!==SLASH;--j);if(j!==start){res=-1===j?"":res.slice(0,j),lastSlash=i,dots=0,isAboveRoot=!1;continue}}else if(2===res.length||1===res.length){res="",lastSlash=i,dots=0,isAboveRoot=!1;continue}allowAboveRoot&&(res.length>0?res+="/..":res="..",isAboveRoot=!0)}else{const slice=path.slice(lastSlash+1,i);res.length>0?res+=`/${slice}`:res=slice,isAboveRoot=!1}lastSlash=i,dots=0}else code===DOT&&-1!==dots?++dots:dots=-1}return res}(resolvedPath,!resolvedAbsolute),resolvedAbsolute?`/${resolvedPath}`:resolvedPath.length>0?resolvedPath:"."}const SLASH=47,DOT=46},"./node_modules/@loaders.gl/worker-utils/dist/lib/env-utils/assert.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function assert(condition,message){if(!condition)throw new Error(message||"loaders.gl assertion failed.")}__webpack_require__.d(__webpack_exports__,{v:function(){return assert}})},"./node_modules/@loaders.gl/worker-utils/dist/lib/env-utils/globals.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{Bd:function(){return isBrowser},Fr:function(){return isMobile},xD:function(){return isWorker}});var process=__webpack_require__("./node_modules/process/browser.js");"undefined"!=typeof self&&self,"undefined"!=typeof window&&window,void 0!==__webpack_require__.g&&__webpack_require__.g,"undefined"!=typeof document&&document;const isBrowser="object"!=typeof process||"[object process]"!==String(process)||process.browser,isWorker="function"==typeof importScripts,isMobile="undefined"!=typeof window&&void 0!==window.orientation,matches=void 0!==process&&process.version&&/v([0-9]*)/.exec(process.version);matches&&parseFloat(matches[1])},"./node_modules/@loaders.gl/worker-utils/dist/lib/env-utils/version.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{Q:function(){return VERSION},x:function(){return NPM_TAG}});const NPM_TAG="latest";const VERSION=function getVersion(){return globalThis._loadersgl_?.version||(globalThis._loadersgl_=globalThis._loadersgl_||{},globalThis._loadersgl_.version="4.2.2"),globalThis._loadersgl_.version}()},"./node_modules/@luma.gl/constants/dist/webgl-constants.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var GLEnum;__webpack_require__.d(__webpack_exports__,{GL:function(){return GLEnum}}),function(GLEnum){GLEnum[GLEnum.DEPTH_BUFFER_BIT=256]="DEPTH_BUFFER_BIT",GLEnum[GLEnum.STENCIL_BUFFER_BIT=1024]="STENCIL_BUFFER_BIT",GLEnum[GLEnum.COLOR_BUFFER_BIT=16384]="COLOR_BUFFER_BIT",GLEnum[GLEnum.POINTS=0]="POINTS",GLEnum[GLEnum.LINES=1]="LINES",GLEnum[GLEnum.LINE_LOOP=2]="LINE_LOOP",GLEnum[GLEnum.LINE_STRIP=3]="LINE_STRIP",GLEnum[GLEnum.TRIANGLES=4]="TRIANGLES",GLEnum[GLEnum.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",GLEnum[GLEnum.TRIANGLE_FAN=6]="TRIANGLE_FAN",GLEnum[GLEnum.ZERO=0]="ZERO",GLEnum[GLEnum.ONE=1]="ONE",GLEnum[GLEnum.SRC_COLOR=768]="SRC_COLOR",GLEnum[GLEnum.ONE_MINUS_SRC_COLOR=769]="ONE_MINUS_SRC_COLOR",GLEnum[GLEnum.SRC_ALPHA=770]="SRC_ALPHA",GLEnum[GLEnum.ONE_MINUS_SRC_ALPHA=771]="ONE_MINUS_SRC_ALPHA",GLEnum[GLEnum.DST_ALPHA=772]="DST_ALPHA",GLEnum[GLEnum.ONE_MINUS_DST_ALPHA=773]="ONE_MINUS_DST_ALPHA",GLEnum[GLEnum.DST_COLOR=774]="DST_COLOR",GLEnum[GLEnum.ONE_MINUS_DST_COLOR=775]="ONE_MINUS_DST_COLOR",GLEnum[GLEnum.SRC_ALPHA_SATURATE=776]="SRC_ALPHA_SATURATE",GLEnum[GLEnum.CONSTANT_COLOR=32769]="CONSTANT_COLOR",GLEnum[GLEnum.ONE_MINUS_CONSTANT_COLOR=32770]="ONE_MINUS_CONSTANT_COLOR",GLEnum[GLEnum.CONSTANT_ALPHA=32771]="CONSTANT_ALPHA",GLEnum[GLEnum.ONE_MINUS_CONSTANT_ALPHA=32772]="ONE_MINUS_CONSTANT_ALPHA",GLEnum[GLEnum.FUNC_ADD=32774]="FUNC_ADD",GLEnum[GLEnum.FUNC_SUBTRACT=32778]="FUNC_SUBTRACT",GLEnum[GLEnum.FUNC_REVERSE_SUBTRACT=32779]="FUNC_REVERSE_SUBTRACT",GLEnum[GLEnum.BLEND_EQUATION=32777]="BLEND_EQUATION",GLEnum[GLEnum.BLEND_EQUATION_RGB=32777]="BLEND_EQUATION_RGB",GLEnum[GLEnum.BLEND_EQUATION_ALPHA=34877]="BLEND_EQUATION_ALPHA",GLEnum[GLEnum.BLEND_DST_RGB=32968]="BLEND_DST_RGB",GLEnum[GLEnum.BLEND_SRC_RGB=32969]="BLEND_SRC_RGB",GLEnum[GLEnum.BLEND_DST_ALPHA=32970]="BLEND_DST_ALPHA",GLEnum[GLEnum.BLEND_SRC_ALPHA=32971]="BLEND_SRC_ALPHA",GLEnum[GLEnum.BLEND_COLOR=32773]="BLEND_COLOR",GLEnum[GLEnum.ARRAY_BUFFER_BINDING=34964]="ARRAY_BUFFER_BINDING",GLEnum[GLEnum.ELEMENT_ARRAY_BUFFER_BINDING=34965]="ELEMENT_ARRAY_BUFFER_BINDING",GLEnum[GLEnum.LINE_WIDTH=2849]="LINE_WIDTH",GLEnum[GLEnum.ALIASED_POINT_SIZE_RANGE=33901]="ALIASED_POINT_SIZE_RANGE",GLEnum[GLEnum.ALIASED_LINE_WIDTH_RANGE=33902]="ALIASED_LINE_WIDTH_RANGE",GLEnum[GLEnum.CULL_FACE_MODE=2885]="CULL_FACE_MODE",GLEnum[GLEnum.FRONT_FACE=2886]="FRONT_FACE",GLEnum[GLEnum.DEPTH_RANGE=2928]="DEPTH_RANGE",GLEnum[GLEnum.DEPTH_WRITEMASK=2930]="DEPTH_WRITEMASK",GLEnum[GLEnum.DEPTH_CLEAR_VALUE=2931]="DEPTH_CLEAR_VALUE",GLEnum[GLEnum.DEPTH_FUNC=2932]="DEPTH_FUNC",GLEnum[GLEnum.STENCIL_CLEAR_VALUE=2961]="STENCIL_CLEAR_VALUE",GLEnum[GLEnum.STENCIL_FUNC=2962]="STENCIL_FUNC",GLEnum[GLEnum.STENCIL_FAIL=2964]="STENCIL_FAIL",GLEnum[GLEnum.STENCIL_PASS_DEPTH_FAIL=2965]="STENCIL_PASS_DEPTH_FAIL",GLEnum[GLEnum.STENCIL_PASS_DEPTH_PASS=2966]="STENCIL_PASS_DEPTH_PASS",GLEnum[GLEnum.STENCIL_REF=2967]="STENCIL_REF",GLEnum[GLEnum.STENCIL_VALUE_MASK=2963]="STENCIL_VALUE_MASK",GLEnum[GLEnum.STENCIL_WRITEMASK=2968]="STENCIL_WRITEMASK",GLEnum[GLEnum.STENCIL_BACK_FUNC=34816]="STENCIL_BACK_FUNC",GLEnum[GLEnum.STENCIL_BACK_FAIL=34817]="STENCIL_BACK_FAIL",GLEnum[GLEnum.STENCIL_BACK_PASS_DEPTH_FAIL=34818]="STENCIL_BACK_PASS_DEPTH_FAIL",GLEnum[GLEnum.STENCIL_BACK_PASS_DEPTH_PASS=34819]="STENCIL_BACK_PASS_DEPTH_PASS",GLEnum[GLEnum.STENCIL_BACK_REF=36003]="STENCIL_BACK_REF",GLEnum[GLEnum.STENCIL_BACK_VALUE_MASK=36004]="STENCIL_BACK_VALUE_MASK",GLEnum[GLEnum.STENCIL_BACK_WRITEMASK=36005]="STENCIL_BACK_WRITEMASK",GLEnum[GLEnum.VIEWPORT=2978]="VIEWPORT",GLEnum[GLEnum.SCISSOR_BOX=3088]="SCISSOR_BOX",GLEnum[GLEnum.COLOR_CLEAR_VALUE=3106]="COLOR_CLEAR_VALUE",GLEnum[GLEnum.COLOR_WRITEMASK=3107]="COLOR_WRITEMASK",GLEnum[GLEnum.UNPACK_ALIGNMENT=3317]="UNPACK_ALIGNMENT",GLEnum[GLEnum.PACK_ALIGNMENT=3333]="PACK_ALIGNMENT",GLEnum[GLEnum.MAX_TEXTURE_SIZE=3379]="MAX_TEXTURE_SIZE",GLEnum[GLEnum.MAX_VIEWPORT_DIMS=3386]="MAX_VIEWPORT_DIMS",GLEnum[GLEnum.SUBPIXEL_BITS=3408]="SUBPIXEL_BITS",GLEnum[GLEnum.RED_BITS=3410]="RED_BITS",GLEnum[GLEnum.GREEN_BITS=3411]="GREEN_BITS",GLEnum[GLEnum.BLUE_BITS=3412]="BLUE_BITS",GLEnum[GLEnum.ALPHA_BITS=3413]="ALPHA_BITS",GLEnum[GLEnum.DEPTH_BITS=3414]="DEPTH_BITS",GLEnum[GLEnum.STENCIL_BITS=3415]="STENCIL_BITS",GLEnum[GLEnum.POLYGON_OFFSET_UNITS=10752]="POLYGON_OFFSET_UNITS",GLEnum[GLEnum.POLYGON_OFFSET_FACTOR=32824]="POLYGON_OFFSET_FACTOR",GLEnum[GLEnum.TEXTURE_BINDING_2D=32873]="TEXTURE_BINDING_2D",GLEnum[GLEnum.SAMPLE_BUFFERS=32936]="SAMPLE_BUFFERS",GLEnum[GLEnum.SAMPLES=32937]="SAMPLES",GLEnum[GLEnum.SAMPLE_COVERAGE_VALUE=32938]="SAMPLE_COVERAGE_VALUE",GLEnum[GLEnum.SAMPLE_COVERAGE_INVERT=32939]="SAMPLE_COVERAGE_INVERT",GLEnum[GLEnum.COMPRESSED_TEXTURE_FORMATS=34467]="COMPRESSED_TEXTURE_FORMATS",GLEnum[GLEnum.VENDOR=7936]="VENDOR",GLEnum[GLEnum.RENDERER=7937]="RENDERER",GLEnum[GLEnum.VERSION=7938]="VERSION",GLEnum[GLEnum.IMPLEMENTATION_COLOR_READ_TYPE=35738]="IMPLEMENTATION_COLOR_READ_TYPE",GLEnum[GLEnum.IMPLEMENTATION_COLOR_READ_FORMAT=35739]="IMPLEMENTATION_COLOR_READ_FORMAT",GLEnum[GLEnum.BROWSER_DEFAULT_WEBGL=37444]="BROWSER_DEFAULT_WEBGL",GLEnum[GLEnum.STATIC_DRAW=35044]="STATIC_DRAW",GLEnum[GLEnum.STREAM_DRAW=35040]="STREAM_DRAW",GLEnum[GLEnum.DYNAMIC_DRAW=35048]="DYNAMIC_DRAW",GLEnum[GLEnum.ARRAY_BUFFER=34962]="ARRAY_BUFFER",GLEnum[GLEnum.ELEMENT_ARRAY_BUFFER=34963]="ELEMENT_ARRAY_BUFFER",GLEnum[GLEnum.BUFFER_SIZE=34660]="BUFFER_SIZE",GLEnum[GLEnum.BUFFER_USAGE=34661]="BUFFER_USAGE",GLEnum[GLEnum.CURRENT_VERTEX_ATTRIB=34342]="CURRENT_VERTEX_ATTRIB",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_ENABLED=34338]="VERTEX_ATTRIB_ARRAY_ENABLED",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_SIZE=34339]="VERTEX_ATTRIB_ARRAY_SIZE",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_STRIDE=34340]="VERTEX_ATTRIB_ARRAY_STRIDE",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_TYPE=34341]="VERTEX_ATTRIB_ARRAY_TYPE",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_NORMALIZED=34922]="VERTEX_ATTRIB_ARRAY_NORMALIZED",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_POINTER=34373]="VERTEX_ATTRIB_ARRAY_POINTER",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING=34975]="VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",GLEnum[GLEnum.CULL_FACE=2884]="CULL_FACE",GLEnum[GLEnum.FRONT=1028]="FRONT",GLEnum[GLEnum.BACK=1029]="BACK",GLEnum[GLEnum.FRONT_AND_BACK=1032]="FRONT_AND_BACK",GLEnum[GLEnum.BLEND=3042]="BLEND",GLEnum[GLEnum.DEPTH_TEST=2929]="DEPTH_TEST",GLEnum[GLEnum.DITHER=3024]="DITHER",GLEnum[GLEnum.POLYGON_OFFSET_FILL=32823]="POLYGON_OFFSET_FILL",GLEnum[GLEnum.SAMPLE_ALPHA_TO_COVERAGE=32926]="SAMPLE_ALPHA_TO_COVERAGE",GLEnum[GLEnum.SAMPLE_COVERAGE=32928]="SAMPLE_COVERAGE",GLEnum[GLEnum.SCISSOR_TEST=3089]="SCISSOR_TEST",GLEnum[GLEnum.STENCIL_TEST=2960]="STENCIL_TEST",GLEnum[GLEnum.NO_ERROR=0]="NO_ERROR",GLEnum[GLEnum.INVALID_ENUM=1280]="INVALID_ENUM",GLEnum[GLEnum.INVALID_VALUE=1281]="INVALID_VALUE",GLEnum[GLEnum.INVALID_OPERATION=1282]="INVALID_OPERATION",GLEnum[GLEnum.OUT_OF_MEMORY=1285]="OUT_OF_MEMORY",GLEnum[GLEnum.CONTEXT_LOST_WEBGL=37442]="CONTEXT_LOST_WEBGL",GLEnum[GLEnum.CW=2304]="CW",GLEnum[GLEnum.CCW=2305]="CCW",GLEnum[GLEnum.DONT_CARE=4352]="DONT_CARE",GLEnum[GLEnum.FASTEST=4353]="FASTEST",GLEnum[GLEnum.NICEST=4354]="NICEST",GLEnum[GLEnum.GENERATE_MIPMAP_HINT=33170]="GENERATE_MIPMAP_HINT",GLEnum[GLEnum.BYTE=5120]="BYTE",GLEnum[GLEnum.UNSIGNED_BYTE=5121]="UNSIGNED_BYTE",GLEnum[GLEnum.SHORT=5122]="SHORT",GLEnum[GLEnum.UNSIGNED_SHORT=5123]="UNSIGNED_SHORT",GLEnum[GLEnum.INT=5124]="INT",GLEnum[GLEnum.UNSIGNED_INT=5125]="UNSIGNED_INT",GLEnum[GLEnum.FLOAT=5126]="FLOAT",GLEnum[GLEnum.DOUBLE=5130]="DOUBLE",GLEnum[GLEnum.DEPTH_COMPONENT=6402]="DEPTH_COMPONENT",GLEnum[GLEnum.ALPHA=6406]="ALPHA",GLEnum[GLEnum.RGB=6407]="RGB",GLEnum[GLEnum.RGBA=6408]="RGBA",GLEnum[GLEnum.LUMINANCE=6409]="LUMINANCE",GLEnum[GLEnum.LUMINANCE_ALPHA=6410]="LUMINANCE_ALPHA",GLEnum[GLEnum.UNSIGNED_SHORT_4_4_4_4=32819]="UNSIGNED_SHORT_4_4_4_4",GLEnum[GLEnum.UNSIGNED_SHORT_5_5_5_1=32820]="UNSIGNED_SHORT_5_5_5_1",GLEnum[GLEnum.UNSIGNED_SHORT_5_6_5=33635]="UNSIGNED_SHORT_5_6_5",GLEnum[GLEnum.FRAGMENT_SHADER=35632]="FRAGMENT_SHADER",GLEnum[GLEnum.VERTEX_SHADER=35633]="VERTEX_SHADER",GLEnum[GLEnum.COMPILE_STATUS=35713]="COMPILE_STATUS",GLEnum[GLEnum.DELETE_STATUS=35712]="DELETE_STATUS",GLEnum[GLEnum.LINK_STATUS=35714]="LINK_STATUS",GLEnum[GLEnum.VALIDATE_STATUS=35715]="VALIDATE_STATUS",GLEnum[GLEnum.ATTACHED_SHADERS=35717]="ATTACHED_SHADERS",GLEnum[GLEnum.ACTIVE_ATTRIBUTES=35721]="ACTIVE_ATTRIBUTES",GLEnum[GLEnum.ACTIVE_UNIFORMS=35718]="ACTIVE_UNIFORMS",GLEnum[GLEnum.MAX_VERTEX_ATTRIBS=34921]="MAX_VERTEX_ATTRIBS",GLEnum[GLEnum.MAX_VERTEX_UNIFORM_VECTORS=36347]="MAX_VERTEX_UNIFORM_VECTORS",GLEnum[GLEnum.MAX_VARYING_VECTORS=36348]="MAX_VARYING_VECTORS",GLEnum[GLEnum.MAX_COMBINED_TEXTURE_IMAGE_UNITS=35661]="MAX_COMBINED_TEXTURE_IMAGE_UNITS",GLEnum[GLEnum.MAX_VERTEX_TEXTURE_IMAGE_UNITS=35660]="MAX_VERTEX_TEXTURE_IMAGE_UNITS",GLEnum[GLEnum.MAX_TEXTURE_IMAGE_UNITS=34930]="MAX_TEXTURE_IMAGE_UNITS",GLEnum[GLEnum.MAX_FRAGMENT_UNIFORM_VECTORS=36349]="MAX_FRAGMENT_UNIFORM_VECTORS",GLEnum[GLEnum.SHADER_TYPE=35663]="SHADER_TYPE",GLEnum[GLEnum.SHADING_LANGUAGE_VERSION=35724]="SHADING_LANGUAGE_VERSION",GLEnum[GLEnum.CURRENT_PROGRAM=35725]="CURRENT_PROGRAM",GLEnum[GLEnum.NEVER=512]="NEVER",GLEnum[GLEnum.LESS=513]="LESS",GLEnum[GLEnum.EQUAL=514]="EQUAL",GLEnum[GLEnum.LEQUAL=515]="LEQUAL",GLEnum[GLEnum.GREATER=516]="GREATER",GLEnum[GLEnum.NOTEQUAL=517]="NOTEQUAL",GLEnum[GLEnum.GEQUAL=518]="GEQUAL",GLEnum[GLEnum.ALWAYS=519]="ALWAYS",GLEnum[GLEnum.KEEP=7680]="KEEP",GLEnum[GLEnum.REPLACE=7681]="REPLACE",GLEnum[GLEnum.INCR=7682]="INCR",GLEnum[GLEnum.DECR=7683]="DECR",GLEnum[GLEnum.INVERT=5386]="INVERT",GLEnum[GLEnum.INCR_WRAP=34055]="INCR_WRAP",GLEnum[GLEnum.DECR_WRAP=34056]="DECR_WRAP",GLEnum[GLEnum.NEAREST=9728]="NEAREST",GLEnum[GLEnum.LINEAR=9729]="LINEAR",GLEnum[GLEnum.NEAREST_MIPMAP_NEAREST=9984]="NEAREST_MIPMAP_NEAREST",GLEnum[GLEnum.LINEAR_MIPMAP_NEAREST=9985]="LINEAR_MIPMAP_NEAREST",GLEnum[GLEnum.NEAREST_MIPMAP_LINEAR=9986]="NEAREST_MIPMAP_LINEAR",GLEnum[GLEnum.LINEAR_MIPMAP_LINEAR=9987]="LINEAR_MIPMAP_LINEAR",GLEnum[GLEnum.TEXTURE_MAG_FILTER=10240]="TEXTURE_MAG_FILTER",GLEnum[GLEnum.TEXTURE_MIN_FILTER=10241]="TEXTURE_MIN_FILTER",GLEnum[GLEnum.TEXTURE_WRAP_S=10242]="TEXTURE_WRAP_S",GLEnum[GLEnum.TEXTURE_WRAP_T=10243]="TEXTURE_WRAP_T",GLEnum[GLEnum.TEXTURE_2D=3553]="TEXTURE_2D",GLEnum[GLEnum.TEXTURE=5890]="TEXTURE",GLEnum[GLEnum.TEXTURE_CUBE_MAP=34067]="TEXTURE_CUBE_MAP",GLEnum[GLEnum.TEXTURE_BINDING_CUBE_MAP=34068]="TEXTURE_BINDING_CUBE_MAP",GLEnum[GLEnum.TEXTURE_CUBE_MAP_POSITIVE_X=34069]="TEXTURE_CUBE_MAP_POSITIVE_X",GLEnum[GLEnum.TEXTURE_CUBE_MAP_NEGATIVE_X=34070]="TEXTURE_CUBE_MAP_NEGATIVE_X",GLEnum[GLEnum.TEXTURE_CUBE_MAP_POSITIVE_Y=34071]="TEXTURE_CUBE_MAP_POSITIVE_Y",GLEnum[GLEnum.TEXTURE_CUBE_MAP_NEGATIVE_Y=34072]="TEXTURE_CUBE_MAP_NEGATIVE_Y",GLEnum[GLEnum.TEXTURE_CUBE_MAP_POSITIVE_Z=34073]="TEXTURE_CUBE_MAP_POSITIVE_Z",GLEnum[GLEnum.TEXTURE_CUBE_MAP_NEGATIVE_Z=34074]="TEXTURE_CUBE_MAP_NEGATIVE_Z",GLEnum[GLEnum.MAX_CUBE_MAP_TEXTURE_SIZE=34076]="MAX_CUBE_MAP_TEXTURE_SIZE",GLEnum[GLEnum.TEXTURE0=33984]="TEXTURE0",GLEnum[GLEnum.ACTIVE_TEXTURE=34016]="ACTIVE_TEXTURE",GLEnum[GLEnum.REPEAT=10497]="REPEAT",GLEnum[GLEnum.CLAMP_TO_EDGE=33071]="CLAMP_TO_EDGE",GLEnum[GLEnum.MIRRORED_REPEAT=33648]="MIRRORED_REPEAT",GLEnum[GLEnum.TEXTURE_WIDTH=4096]="TEXTURE_WIDTH",GLEnum[GLEnum.TEXTURE_HEIGHT=4097]="TEXTURE_HEIGHT",GLEnum[GLEnum.FLOAT_VEC2=35664]="FLOAT_VEC2",GLEnum[GLEnum.FLOAT_VEC3=35665]="FLOAT_VEC3",GLEnum[GLEnum.FLOAT_VEC4=35666]="FLOAT_VEC4",GLEnum[GLEnum.INT_VEC2=35667]="INT_VEC2",GLEnum[GLEnum.INT_VEC3=35668]="INT_VEC3",GLEnum[GLEnum.INT_VEC4=35669]="INT_VEC4",GLEnum[GLEnum.BOOL=35670]="BOOL",GLEnum[GLEnum.BOOL_VEC2=35671]="BOOL_VEC2",GLEnum[GLEnum.BOOL_VEC3=35672]="BOOL_VEC3",GLEnum[GLEnum.BOOL_VEC4=35673]="BOOL_VEC4",GLEnum[GLEnum.FLOAT_MAT2=35674]="FLOAT_MAT2",GLEnum[GLEnum.FLOAT_MAT3=35675]="FLOAT_MAT3",GLEnum[GLEnum.FLOAT_MAT4=35676]="FLOAT_MAT4",GLEnum[GLEnum.SAMPLER_2D=35678]="SAMPLER_2D",GLEnum[GLEnum.SAMPLER_CUBE=35680]="SAMPLER_CUBE",GLEnum[GLEnum.LOW_FLOAT=36336]="LOW_FLOAT",GLEnum[GLEnum.MEDIUM_FLOAT=36337]="MEDIUM_FLOAT",GLEnum[GLEnum.HIGH_FLOAT=36338]="HIGH_FLOAT",GLEnum[GLEnum.LOW_INT=36339]="LOW_INT",GLEnum[GLEnum.MEDIUM_INT=36340]="MEDIUM_INT",GLEnum[GLEnum.HIGH_INT=36341]="HIGH_INT",GLEnum[GLEnum.FRAMEBUFFER=36160]="FRAMEBUFFER",GLEnum[GLEnum.RENDERBUFFER=36161]="RENDERBUFFER",GLEnum[GLEnum.RGBA4=32854]="RGBA4",GLEnum[GLEnum.RGB5_A1=32855]="RGB5_A1",GLEnum[GLEnum.RGB565=36194]="RGB565",GLEnum[GLEnum.DEPTH_COMPONENT16=33189]="DEPTH_COMPONENT16",GLEnum[GLEnum.STENCIL_INDEX=6401]="STENCIL_INDEX",GLEnum[GLEnum.STENCIL_INDEX8=36168]="STENCIL_INDEX8",GLEnum[GLEnum.DEPTH_STENCIL=34041]="DEPTH_STENCIL",GLEnum[GLEnum.RENDERBUFFER_WIDTH=36162]="RENDERBUFFER_WIDTH",GLEnum[GLEnum.RENDERBUFFER_HEIGHT=36163]="RENDERBUFFER_HEIGHT",GLEnum[GLEnum.RENDERBUFFER_INTERNAL_FORMAT=36164]="RENDERBUFFER_INTERNAL_FORMAT",GLEnum[GLEnum.RENDERBUFFER_RED_SIZE=36176]="RENDERBUFFER_RED_SIZE",GLEnum[GLEnum.RENDERBUFFER_GREEN_SIZE=36177]="RENDERBUFFER_GREEN_SIZE",GLEnum[GLEnum.RENDERBUFFER_BLUE_SIZE=36178]="RENDERBUFFER_BLUE_SIZE",GLEnum[GLEnum.RENDERBUFFER_ALPHA_SIZE=36179]="RENDERBUFFER_ALPHA_SIZE",GLEnum[GLEnum.RENDERBUFFER_DEPTH_SIZE=36180]="RENDERBUFFER_DEPTH_SIZE",GLEnum[GLEnum.RENDERBUFFER_STENCIL_SIZE=36181]="RENDERBUFFER_STENCIL_SIZE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE=36048]="FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME=36049]="FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL=36050]="FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE=36051]="FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",GLEnum[GLEnum.COLOR_ATTACHMENT0=36064]="COLOR_ATTACHMENT0",GLEnum[GLEnum.DEPTH_ATTACHMENT=36096]="DEPTH_ATTACHMENT",GLEnum[GLEnum.STENCIL_ATTACHMENT=36128]="STENCIL_ATTACHMENT",GLEnum[GLEnum.DEPTH_STENCIL_ATTACHMENT=33306]="DEPTH_STENCIL_ATTACHMENT",GLEnum[GLEnum.NONE=0]="NONE",GLEnum[GLEnum.FRAMEBUFFER_COMPLETE=36053]="FRAMEBUFFER_COMPLETE",GLEnum[GLEnum.FRAMEBUFFER_INCOMPLETE_ATTACHMENT=36054]="FRAMEBUFFER_INCOMPLETE_ATTACHMENT",GLEnum[GLEnum.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT=36055]="FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",GLEnum[GLEnum.FRAMEBUFFER_INCOMPLETE_DIMENSIONS=36057]="FRAMEBUFFER_INCOMPLETE_DIMENSIONS",GLEnum[GLEnum.FRAMEBUFFER_UNSUPPORTED=36061]="FRAMEBUFFER_UNSUPPORTED",GLEnum[GLEnum.FRAMEBUFFER_BINDING=36006]="FRAMEBUFFER_BINDING",GLEnum[GLEnum.RENDERBUFFER_BINDING=36007]="RENDERBUFFER_BINDING",GLEnum[GLEnum.READ_FRAMEBUFFER=36008]="READ_FRAMEBUFFER",GLEnum[GLEnum.DRAW_FRAMEBUFFER=36009]="DRAW_FRAMEBUFFER",GLEnum[GLEnum.MAX_RENDERBUFFER_SIZE=34024]="MAX_RENDERBUFFER_SIZE",GLEnum[GLEnum.INVALID_FRAMEBUFFER_OPERATION=1286]="INVALID_FRAMEBUFFER_OPERATION",GLEnum[GLEnum.UNPACK_FLIP_Y_WEBGL=37440]="UNPACK_FLIP_Y_WEBGL",GLEnum[GLEnum.UNPACK_PREMULTIPLY_ALPHA_WEBGL=37441]="UNPACK_PREMULTIPLY_ALPHA_WEBGL",GLEnum[GLEnum.UNPACK_COLORSPACE_CONVERSION_WEBGL=37443]="UNPACK_COLORSPACE_CONVERSION_WEBGL",GLEnum[GLEnum.READ_BUFFER=3074]="READ_BUFFER",GLEnum[GLEnum.UNPACK_ROW_LENGTH=3314]="UNPACK_ROW_LENGTH",GLEnum[GLEnum.UNPACK_SKIP_ROWS=3315]="UNPACK_SKIP_ROWS",GLEnum[GLEnum.UNPACK_SKIP_PIXELS=3316]="UNPACK_SKIP_PIXELS",GLEnum[GLEnum.PACK_ROW_LENGTH=3330]="PACK_ROW_LENGTH",GLEnum[GLEnum.PACK_SKIP_ROWS=3331]="PACK_SKIP_ROWS",GLEnum[GLEnum.PACK_SKIP_PIXELS=3332]="PACK_SKIP_PIXELS",GLEnum[GLEnum.TEXTURE_BINDING_3D=32874]="TEXTURE_BINDING_3D",GLEnum[GLEnum.UNPACK_SKIP_IMAGES=32877]="UNPACK_SKIP_IMAGES",GLEnum[GLEnum.UNPACK_IMAGE_HEIGHT=32878]="UNPACK_IMAGE_HEIGHT",GLEnum[GLEnum.MAX_3D_TEXTURE_SIZE=32883]="MAX_3D_TEXTURE_SIZE",GLEnum[GLEnum.MAX_ELEMENTS_VERTICES=33e3]="MAX_ELEMENTS_VERTICES",GLEnum[GLEnum.MAX_ELEMENTS_INDICES=33001]="MAX_ELEMENTS_INDICES",GLEnum[GLEnum.MAX_TEXTURE_LOD_BIAS=34045]="MAX_TEXTURE_LOD_BIAS",GLEnum[GLEnum.MAX_FRAGMENT_UNIFORM_COMPONENTS=35657]="MAX_FRAGMENT_UNIFORM_COMPONENTS",GLEnum[GLEnum.MAX_VERTEX_UNIFORM_COMPONENTS=35658]="MAX_VERTEX_UNIFORM_COMPONENTS",GLEnum[GLEnum.MAX_ARRAY_TEXTURE_LAYERS=35071]="MAX_ARRAY_TEXTURE_LAYERS",GLEnum[GLEnum.MIN_PROGRAM_TEXEL_OFFSET=35076]="MIN_PROGRAM_TEXEL_OFFSET",GLEnum[GLEnum.MAX_PROGRAM_TEXEL_OFFSET=35077]="MAX_PROGRAM_TEXEL_OFFSET",GLEnum[GLEnum.MAX_VARYING_COMPONENTS=35659]="MAX_VARYING_COMPONENTS",GLEnum[GLEnum.FRAGMENT_SHADER_DERIVATIVE_HINT=35723]="FRAGMENT_SHADER_DERIVATIVE_HINT",GLEnum[GLEnum.RASTERIZER_DISCARD=35977]="RASTERIZER_DISCARD",GLEnum[GLEnum.VERTEX_ARRAY_BINDING=34229]="VERTEX_ARRAY_BINDING",GLEnum[GLEnum.MAX_VERTEX_OUTPUT_COMPONENTS=37154]="MAX_VERTEX_OUTPUT_COMPONENTS",GLEnum[GLEnum.MAX_FRAGMENT_INPUT_COMPONENTS=37157]="MAX_FRAGMENT_INPUT_COMPONENTS",GLEnum[GLEnum.MAX_SERVER_WAIT_TIMEOUT=37137]="MAX_SERVER_WAIT_TIMEOUT",GLEnum[GLEnum.MAX_ELEMENT_INDEX=36203]="MAX_ELEMENT_INDEX",GLEnum[GLEnum.RED=6403]="RED",GLEnum[GLEnum.RGB8=32849]="RGB8",GLEnum[GLEnum.RGBA8=32856]="RGBA8",GLEnum[GLEnum.RGB10_A2=32857]="RGB10_A2",GLEnum[GLEnum.TEXTURE_3D=32879]="TEXTURE_3D",GLEnum[GLEnum.TEXTURE_WRAP_R=32882]="TEXTURE_WRAP_R",GLEnum[GLEnum.TEXTURE_MIN_LOD=33082]="TEXTURE_MIN_LOD",GLEnum[GLEnum.TEXTURE_MAX_LOD=33083]="TEXTURE_MAX_LOD",GLEnum[GLEnum.TEXTURE_BASE_LEVEL=33084]="TEXTURE_BASE_LEVEL",GLEnum[GLEnum.TEXTURE_MAX_LEVEL=33085]="TEXTURE_MAX_LEVEL",GLEnum[GLEnum.TEXTURE_COMPARE_MODE=34892]="TEXTURE_COMPARE_MODE",GLEnum[GLEnum.TEXTURE_COMPARE_FUNC=34893]="TEXTURE_COMPARE_FUNC",GLEnum[GLEnum.SRGB=35904]="SRGB",GLEnum[GLEnum.SRGB8=35905]="SRGB8",GLEnum[GLEnum.SRGB8_ALPHA8=35907]="SRGB8_ALPHA8",GLEnum[GLEnum.COMPARE_REF_TO_TEXTURE=34894]="COMPARE_REF_TO_TEXTURE",GLEnum[GLEnum.RGBA32F=34836]="RGBA32F",GLEnum[GLEnum.RGB32F=34837]="RGB32F",GLEnum[GLEnum.RGBA16F=34842]="RGBA16F",GLEnum[GLEnum.RGB16F=34843]="RGB16F",GLEnum[GLEnum.TEXTURE_2D_ARRAY=35866]="TEXTURE_2D_ARRAY",GLEnum[GLEnum.TEXTURE_BINDING_2D_ARRAY=35869]="TEXTURE_BINDING_2D_ARRAY",GLEnum[GLEnum.R11F_G11F_B10F=35898]="R11F_G11F_B10F",GLEnum[GLEnum.RGB9_E5=35901]="RGB9_E5",GLEnum[GLEnum.RGBA32UI=36208]="RGBA32UI",GLEnum[GLEnum.RGB32UI=36209]="RGB32UI",GLEnum[GLEnum.RGBA16UI=36214]="RGBA16UI",GLEnum[GLEnum.RGB16UI=36215]="RGB16UI",GLEnum[GLEnum.RGBA8UI=36220]="RGBA8UI",GLEnum[GLEnum.RGB8UI=36221]="RGB8UI",GLEnum[GLEnum.RGBA32I=36226]="RGBA32I",GLEnum[GLEnum.RGB32I=36227]="RGB32I",GLEnum[GLEnum.RGBA16I=36232]="RGBA16I",GLEnum[GLEnum.RGB16I=36233]="RGB16I",GLEnum[GLEnum.RGBA8I=36238]="RGBA8I",GLEnum[GLEnum.RGB8I=36239]="RGB8I",GLEnum[GLEnum.RED_INTEGER=36244]="RED_INTEGER",GLEnum[GLEnum.RGB_INTEGER=36248]="RGB_INTEGER",GLEnum[GLEnum.RGBA_INTEGER=36249]="RGBA_INTEGER",GLEnum[GLEnum.R8=33321]="R8",GLEnum[GLEnum.RG8=33323]="RG8",GLEnum[GLEnum.R16F=33325]="R16F",GLEnum[GLEnum.R32F=33326]="R32F",GLEnum[GLEnum.RG16F=33327]="RG16F",GLEnum[GLEnum.RG32F=33328]="RG32F",GLEnum[GLEnum.R8I=33329]="R8I",GLEnum[GLEnum.R8UI=33330]="R8UI",GLEnum[GLEnum.R16I=33331]="R16I",GLEnum[GLEnum.R16UI=33332]="R16UI",GLEnum[GLEnum.R32I=33333]="R32I",GLEnum[GLEnum.R32UI=33334]="R32UI",GLEnum[GLEnum.RG8I=33335]="RG8I",GLEnum[GLEnum.RG8UI=33336]="RG8UI",GLEnum[GLEnum.RG16I=33337]="RG16I",GLEnum[GLEnum.RG16UI=33338]="RG16UI",GLEnum[GLEnum.RG32I=33339]="RG32I",GLEnum[GLEnum.RG32UI=33340]="RG32UI",GLEnum[GLEnum.R8_SNORM=36756]="R8_SNORM",GLEnum[GLEnum.RG8_SNORM=36757]="RG8_SNORM",GLEnum[GLEnum.RGB8_SNORM=36758]="RGB8_SNORM",GLEnum[GLEnum.RGBA8_SNORM=36759]="RGBA8_SNORM",GLEnum[GLEnum.RGB10_A2UI=36975]="RGB10_A2UI",GLEnum[GLEnum.TEXTURE_IMMUTABLE_FORMAT=37167]="TEXTURE_IMMUTABLE_FORMAT",GLEnum[GLEnum.TEXTURE_IMMUTABLE_LEVELS=33503]="TEXTURE_IMMUTABLE_LEVELS",GLEnum[GLEnum.UNSIGNED_INT_2_10_10_10_REV=33640]="UNSIGNED_INT_2_10_10_10_REV",GLEnum[GLEnum.UNSIGNED_INT_10F_11F_11F_REV=35899]="UNSIGNED_INT_10F_11F_11F_REV",GLEnum[GLEnum.UNSIGNED_INT_5_9_9_9_REV=35902]="UNSIGNED_INT_5_9_9_9_REV",GLEnum[GLEnum.FLOAT_32_UNSIGNED_INT_24_8_REV=36269]="FLOAT_32_UNSIGNED_INT_24_8_REV",GLEnum[GLEnum.UNSIGNED_INT_24_8=34042]="UNSIGNED_INT_24_8",GLEnum[GLEnum.HALF_FLOAT=5131]="HALF_FLOAT",GLEnum[GLEnum.RG=33319]="RG",GLEnum[GLEnum.RG_INTEGER=33320]="RG_INTEGER",GLEnum[GLEnum.INT_2_10_10_10_REV=36255]="INT_2_10_10_10_REV",GLEnum[GLEnum.CURRENT_QUERY=34917]="CURRENT_QUERY",GLEnum[GLEnum.QUERY_RESULT=34918]="QUERY_RESULT",GLEnum[GLEnum.QUERY_RESULT_AVAILABLE=34919]="QUERY_RESULT_AVAILABLE",GLEnum[GLEnum.ANY_SAMPLES_PASSED=35887]="ANY_SAMPLES_PASSED",GLEnum[GLEnum.ANY_SAMPLES_PASSED_CONSERVATIVE=36202]="ANY_SAMPLES_PASSED_CONSERVATIVE",GLEnum[GLEnum.MAX_DRAW_BUFFERS=34852]="MAX_DRAW_BUFFERS",GLEnum[GLEnum.DRAW_BUFFER0=34853]="DRAW_BUFFER0",GLEnum[GLEnum.DRAW_BUFFER1=34854]="DRAW_BUFFER1",GLEnum[GLEnum.DRAW_BUFFER2=34855]="DRAW_BUFFER2",GLEnum[GLEnum.DRAW_BUFFER3=34856]="DRAW_BUFFER3",GLEnum[GLEnum.DRAW_BUFFER4=34857]="DRAW_BUFFER4",GLEnum[GLEnum.DRAW_BUFFER5=34858]="DRAW_BUFFER5",GLEnum[GLEnum.DRAW_BUFFER6=34859]="DRAW_BUFFER6",GLEnum[GLEnum.DRAW_BUFFER7=34860]="DRAW_BUFFER7",GLEnum[GLEnum.DRAW_BUFFER8=34861]="DRAW_BUFFER8",GLEnum[GLEnum.DRAW_BUFFER9=34862]="DRAW_BUFFER9",GLEnum[GLEnum.DRAW_BUFFER10=34863]="DRAW_BUFFER10",GLEnum[GLEnum.DRAW_BUFFER11=34864]="DRAW_BUFFER11",GLEnum[GLEnum.DRAW_BUFFER12=34865]="DRAW_BUFFER12",GLEnum[GLEnum.DRAW_BUFFER13=34866]="DRAW_BUFFER13",GLEnum[GLEnum.DRAW_BUFFER14=34867]="DRAW_BUFFER14",GLEnum[GLEnum.DRAW_BUFFER15=34868]="DRAW_BUFFER15",GLEnum[GLEnum.MAX_COLOR_ATTACHMENTS=36063]="MAX_COLOR_ATTACHMENTS",GLEnum[GLEnum.COLOR_ATTACHMENT1=36065]="COLOR_ATTACHMENT1",GLEnum[GLEnum.COLOR_ATTACHMENT2=36066]="COLOR_ATTACHMENT2",GLEnum[GLEnum.COLOR_ATTACHMENT3=36067]="COLOR_ATTACHMENT3",GLEnum[GLEnum.COLOR_ATTACHMENT4=36068]="COLOR_ATTACHMENT4",GLEnum[GLEnum.COLOR_ATTACHMENT5=36069]="COLOR_ATTACHMENT5",GLEnum[GLEnum.COLOR_ATTACHMENT6=36070]="COLOR_ATTACHMENT6",GLEnum[GLEnum.COLOR_ATTACHMENT7=36071]="COLOR_ATTACHMENT7",GLEnum[GLEnum.COLOR_ATTACHMENT8=36072]="COLOR_ATTACHMENT8",GLEnum[GLEnum.COLOR_ATTACHMENT9=36073]="COLOR_ATTACHMENT9",GLEnum[GLEnum.COLOR_ATTACHMENT10=36074]="COLOR_ATTACHMENT10",GLEnum[GLEnum.COLOR_ATTACHMENT11=36075]="COLOR_ATTACHMENT11",GLEnum[GLEnum.COLOR_ATTACHMENT12=36076]="COLOR_ATTACHMENT12",GLEnum[GLEnum.COLOR_ATTACHMENT13=36077]="COLOR_ATTACHMENT13",GLEnum[GLEnum.COLOR_ATTACHMENT14=36078]="COLOR_ATTACHMENT14",GLEnum[GLEnum.COLOR_ATTACHMENT15=36079]="COLOR_ATTACHMENT15",GLEnum[GLEnum.SAMPLER_3D=35679]="SAMPLER_3D",GLEnum[GLEnum.SAMPLER_2D_SHADOW=35682]="SAMPLER_2D_SHADOW",GLEnum[GLEnum.SAMPLER_2D_ARRAY=36289]="SAMPLER_2D_ARRAY",GLEnum[GLEnum.SAMPLER_2D_ARRAY_SHADOW=36292]="SAMPLER_2D_ARRAY_SHADOW",GLEnum[GLEnum.SAMPLER_CUBE_SHADOW=36293]="SAMPLER_CUBE_SHADOW",GLEnum[GLEnum.INT_SAMPLER_2D=36298]="INT_SAMPLER_2D",GLEnum[GLEnum.INT_SAMPLER_3D=36299]="INT_SAMPLER_3D",GLEnum[GLEnum.INT_SAMPLER_CUBE=36300]="INT_SAMPLER_CUBE",GLEnum[GLEnum.INT_SAMPLER_2D_ARRAY=36303]="INT_SAMPLER_2D_ARRAY",GLEnum[GLEnum.UNSIGNED_INT_SAMPLER_2D=36306]="UNSIGNED_INT_SAMPLER_2D",GLEnum[GLEnum.UNSIGNED_INT_SAMPLER_3D=36307]="UNSIGNED_INT_SAMPLER_3D",GLEnum[GLEnum.UNSIGNED_INT_SAMPLER_CUBE=36308]="UNSIGNED_INT_SAMPLER_CUBE",GLEnum[GLEnum.UNSIGNED_INT_SAMPLER_2D_ARRAY=36311]="UNSIGNED_INT_SAMPLER_2D_ARRAY",GLEnum[GLEnum.MAX_SAMPLES=36183]="MAX_SAMPLES",GLEnum[GLEnum.SAMPLER_BINDING=35097]="SAMPLER_BINDING",GLEnum[GLEnum.PIXEL_PACK_BUFFER=35051]="PIXEL_PACK_BUFFER",GLEnum[GLEnum.PIXEL_UNPACK_BUFFER=35052]="PIXEL_UNPACK_BUFFER",GLEnum[GLEnum.PIXEL_PACK_BUFFER_BINDING=35053]="PIXEL_PACK_BUFFER_BINDING",GLEnum[GLEnum.PIXEL_UNPACK_BUFFER_BINDING=35055]="PIXEL_UNPACK_BUFFER_BINDING",GLEnum[GLEnum.COPY_READ_BUFFER=36662]="COPY_READ_BUFFER",GLEnum[GLEnum.COPY_WRITE_BUFFER=36663]="COPY_WRITE_BUFFER",GLEnum[GLEnum.COPY_READ_BUFFER_BINDING=36662]="COPY_READ_BUFFER_BINDING",GLEnum[GLEnum.COPY_WRITE_BUFFER_BINDING=36663]="COPY_WRITE_BUFFER_BINDING",GLEnum[GLEnum.FLOAT_MAT2x3=35685]="FLOAT_MAT2x3",GLEnum[GLEnum.FLOAT_MAT2x4=35686]="FLOAT_MAT2x4",GLEnum[GLEnum.FLOAT_MAT3x2=35687]="FLOAT_MAT3x2",GLEnum[GLEnum.FLOAT_MAT3x4=35688]="FLOAT_MAT3x4",GLEnum[GLEnum.FLOAT_MAT4x2=35689]="FLOAT_MAT4x2",GLEnum[GLEnum.FLOAT_MAT4x3=35690]="FLOAT_MAT4x3",GLEnum[GLEnum.UNSIGNED_INT_VEC2=36294]="UNSIGNED_INT_VEC2",GLEnum[GLEnum.UNSIGNED_INT_VEC3=36295]="UNSIGNED_INT_VEC3",GLEnum[GLEnum.UNSIGNED_INT_VEC4=36296]="UNSIGNED_INT_VEC4",GLEnum[GLEnum.UNSIGNED_NORMALIZED=35863]="UNSIGNED_NORMALIZED",GLEnum[GLEnum.SIGNED_NORMALIZED=36764]="SIGNED_NORMALIZED",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_INTEGER=35069]="VERTEX_ATTRIB_ARRAY_INTEGER",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_DIVISOR=35070]="VERTEX_ATTRIB_ARRAY_DIVISOR",GLEnum[GLEnum.TRANSFORM_FEEDBACK_BUFFER_MODE=35967]="TRANSFORM_FEEDBACK_BUFFER_MODE",GLEnum[GLEnum.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS=35968]="MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS",GLEnum[GLEnum.TRANSFORM_FEEDBACK_VARYINGS=35971]="TRANSFORM_FEEDBACK_VARYINGS",GLEnum[GLEnum.TRANSFORM_FEEDBACK_BUFFER_START=35972]="TRANSFORM_FEEDBACK_BUFFER_START",GLEnum[GLEnum.TRANSFORM_FEEDBACK_BUFFER_SIZE=35973]="TRANSFORM_FEEDBACK_BUFFER_SIZE",GLEnum[GLEnum.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN=35976]="TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN",GLEnum[GLEnum.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS=35978]="MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS",GLEnum[GLEnum.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS=35979]="MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS",GLEnum[GLEnum.INTERLEAVED_ATTRIBS=35980]="INTERLEAVED_ATTRIBS",GLEnum[GLEnum.SEPARATE_ATTRIBS=35981]="SEPARATE_ATTRIBS",GLEnum[GLEnum.TRANSFORM_FEEDBACK_BUFFER=35982]="TRANSFORM_FEEDBACK_BUFFER",GLEnum[GLEnum.TRANSFORM_FEEDBACK_BUFFER_BINDING=35983]="TRANSFORM_FEEDBACK_BUFFER_BINDING",GLEnum[GLEnum.TRANSFORM_FEEDBACK=36386]="TRANSFORM_FEEDBACK",GLEnum[GLEnum.TRANSFORM_FEEDBACK_PAUSED=36387]="TRANSFORM_FEEDBACK_PAUSED",GLEnum[GLEnum.TRANSFORM_FEEDBACK_ACTIVE=36388]="TRANSFORM_FEEDBACK_ACTIVE",GLEnum[GLEnum.TRANSFORM_FEEDBACK_BINDING=36389]="TRANSFORM_FEEDBACK_BINDING",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING=33296]="FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE=33297]="FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_RED_SIZE=33298]="FRAMEBUFFER_ATTACHMENT_RED_SIZE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE=33299]="FRAMEBUFFER_ATTACHMENT_GREEN_SIZE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE=33300]="FRAMEBUFFER_ATTACHMENT_BLUE_SIZE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE=33301]="FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE=33302]="FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE=33303]="FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE",GLEnum[GLEnum.FRAMEBUFFER_DEFAULT=33304]="FRAMEBUFFER_DEFAULT",GLEnum[GLEnum.DEPTH24_STENCIL8=35056]="DEPTH24_STENCIL8",GLEnum[GLEnum.DRAW_FRAMEBUFFER_BINDING=36006]="DRAW_FRAMEBUFFER_BINDING",GLEnum[GLEnum.READ_FRAMEBUFFER_BINDING=36010]="READ_FRAMEBUFFER_BINDING",GLEnum[GLEnum.RENDERBUFFER_SAMPLES=36011]="RENDERBUFFER_SAMPLES",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER=36052]="FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER",GLEnum[GLEnum.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE=36182]="FRAMEBUFFER_INCOMPLETE_MULTISAMPLE",GLEnum[GLEnum.UNIFORM_BUFFER=35345]="UNIFORM_BUFFER",GLEnum[GLEnum.UNIFORM_BUFFER_BINDING=35368]="UNIFORM_BUFFER_BINDING",GLEnum[GLEnum.UNIFORM_BUFFER_START=35369]="UNIFORM_BUFFER_START",GLEnum[GLEnum.UNIFORM_BUFFER_SIZE=35370]="UNIFORM_BUFFER_SIZE",GLEnum[GLEnum.MAX_VERTEX_UNIFORM_BLOCKS=35371]="MAX_VERTEX_UNIFORM_BLOCKS",GLEnum[GLEnum.MAX_FRAGMENT_UNIFORM_BLOCKS=35373]="MAX_FRAGMENT_UNIFORM_BLOCKS",GLEnum[GLEnum.MAX_COMBINED_UNIFORM_BLOCKS=35374]="MAX_COMBINED_UNIFORM_BLOCKS",GLEnum[GLEnum.MAX_UNIFORM_BUFFER_BINDINGS=35375]="MAX_UNIFORM_BUFFER_BINDINGS",GLEnum[GLEnum.MAX_UNIFORM_BLOCK_SIZE=35376]="MAX_UNIFORM_BLOCK_SIZE",GLEnum[GLEnum.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS=35377]="MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS",GLEnum[GLEnum.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS=35379]="MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS",GLEnum[GLEnum.UNIFORM_BUFFER_OFFSET_ALIGNMENT=35380]="UNIFORM_BUFFER_OFFSET_ALIGNMENT",GLEnum[GLEnum.ACTIVE_UNIFORM_BLOCKS=35382]="ACTIVE_UNIFORM_BLOCKS",GLEnum[GLEnum.UNIFORM_TYPE=35383]="UNIFORM_TYPE",GLEnum[GLEnum.UNIFORM_SIZE=35384]="UNIFORM_SIZE",GLEnum[GLEnum.UNIFORM_BLOCK_INDEX=35386]="UNIFORM_BLOCK_INDEX",GLEnum[GLEnum.UNIFORM_OFFSET=35387]="UNIFORM_OFFSET",GLEnum[GLEnum.UNIFORM_ARRAY_STRIDE=35388]="UNIFORM_ARRAY_STRIDE",GLEnum[GLEnum.UNIFORM_MATRIX_STRIDE=35389]="UNIFORM_MATRIX_STRIDE",GLEnum[GLEnum.UNIFORM_IS_ROW_MAJOR=35390]="UNIFORM_IS_ROW_MAJOR",GLEnum[GLEnum.UNIFORM_BLOCK_BINDING=35391]="UNIFORM_BLOCK_BINDING",GLEnum[GLEnum.UNIFORM_BLOCK_DATA_SIZE=35392]="UNIFORM_BLOCK_DATA_SIZE",GLEnum[GLEnum.UNIFORM_BLOCK_ACTIVE_UNIFORMS=35394]="UNIFORM_BLOCK_ACTIVE_UNIFORMS",GLEnum[GLEnum.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES=35395]="UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES",GLEnum[GLEnum.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER=35396]="UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER",GLEnum[GLEnum.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER=35398]="UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER",GLEnum[GLEnum.OBJECT_TYPE=37138]="OBJECT_TYPE",GLEnum[GLEnum.SYNC_CONDITION=37139]="SYNC_CONDITION",GLEnum[GLEnum.SYNC_STATUS=37140]="SYNC_STATUS",GLEnum[GLEnum.SYNC_FLAGS=37141]="SYNC_FLAGS",GLEnum[GLEnum.SYNC_FENCE=37142]="SYNC_FENCE",GLEnum[GLEnum.SYNC_GPU_COMMANDS_COMPLETE=37143]="SYNC_GPU_COMMANDS_COMPLETE",GLEnum[GLEnum.UNSIGNALED=37144]="UNSIGNALED",GLEnum[GLEnum.SIGNALED=37145]="SIGNALED",GLEnum[GLEnum.ALREADY_SIGNALED=37146]="ALREADY_SIGNALED",GLEnum[GLEnum.TIMEOUT_EXPIRED=37147]="TIMEOUT_EXPIRED",GLEnum[GLEnum.CONDITION_SATISFIED=37148]="CONDITION_SATISFIED",GLEnum[GLEnum.WAIT_FAILED=37149]="WAIT_FAILED",GLEnum[GLEnum.SYNC_FLUSH_COMMANDS_BIT=1]="SYNC_FLUSH_COMMANDS_BIT",GLEnum[GLEnum.COLOR=6144]="COLOR",GLEnum[GLEnum.DEPTH=6145]="DEPTH",GLEnum[GLEnum.STENCIL=6146]="STENCIL",GLEnum[GLEnum.MIN=32775]="MIN",GLEnum[GLEnum.MAX=32776]="MAX",GLEnum[GLEnum.DEPTH_COMPONENT24=33190]="DEPTH_COMPONENT24",GLEnum[GLEnum.STREAM_READ=35041]="STREAM_READ",GLEnum[GLEnum.STREAM_COPY=35042]="STREAM_COPY",GLEnum[GLEnum.STATIC_READ=35045]="STATIC_READ",GLEnum[GLEnum.STATIC_COPY=35046]="STATIC_COPY",GLEnum[GLEnum.DYNAMIC_READ=35049]="DYNAMIC_READ",GLEnum[GLEnum.DYNAMIC_COPY=35050]="DYNAMIC_COPY",GLEnum[GLEnum.DEPTH_COMPONENT32F=36012]="DEPTH_COMPONENT32F",GLEnum[GLEnum.DEPTH32F_STENCIL8=36013]="DEPTH32F_STENCIL8",GLEnum[GLEnum.INVALID_INDEX=4294967295]="INVALID_INDEX",GLEnum[GLEnum.TIMEOUT_IGNORED=-1]="TIMEOUT_IGNORED",GLEnum[GLEnum.MAX_CLIENT_WAIT_TIMEOUT_WEBGL=37447]="MAX_CLIENT_WAIT_TIMEOUT_WEBGL",GLEnum[GLEnum.UNMASKED_VENDOR_WEBGL=37445]="UNMASKED_VENDOR_WEBGL",GLEnum[GLEnum.UNMASKED_RENDERER_WEBGL=37446]="UNMASKED_RENDERER_WEBGL",GLEnum[GLEnum.MAX_TEXTURE_MAX_ANISOTROPY_EXT=34047]="MAX_TEXTURE_MAX_ANISOTROPY_EXT",GLEnum[GLEnum.TEXTURE_MAX_ANISOTROPY_EXT=34046]="TEXTURE_MAX_ANISOTROPY_EXT",GLEnum[GLEnum.R16_EXT=33322]="R16_EXT",GLEnum[GLEnum.RG16_EXT=33324]="RG16_EXT",GLEnum[GLEnum.RGB16_EXT=32852]="RGB16_EXT",GLEnum[GLEnum.RGBA16_EXT=32859]="RGBA16_EXT",GLEnum[GLEnum.R16_SNORM_EXT=36760]="R16_SNORM_EXT",GLEnum[GLEnum.RG16_SNORM_EXT=36761]="RG16_SNORM_EXT",GLEnum[GLEnum.RGB16_SNORM_EXT=36762]="RGB16_SNORM_EXT",GLEnum[GLEnum.RGBA16_SNORM_EXT=36763]="RGBA16_SNORM_EXT",GLEnum[GLEnum.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",GLEnum[GLEnum.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777]="COMPRESSED_RGBA_S3TC_DXT1_EXT",GLEnum[GLEnum.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778]="COMPRESSED_RGBA_S3TC_DXT3_EXT",GLEnum[GLEnum.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",GLEnum[GLEnum.COMPRESSED_SRGB_S3TC_DXT1_EXT=35916]="COMPRESSED_SRGB_S3TC_DXT1_EXT",GLEnum[GLEnum.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT=35917]="COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT",GLEnum[GLEnum.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT=35918]="COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT",GLEnum[GLEnum.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT=35919]="COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT",GLEnum[GLEnum.COMPRESSED_RED_RGTC1_EXT=36283]="COMPRESSED_RED_RGTC1_EXT",GLEnum[GLEnum.COMPRESSED_SIGNED_RED_RGTC1_EXT=36284]="COMPRESSED_SIGNED_RED_RGTC1_EXT",GLEnum[GLEnum.COMPRESSED_RED_GREEN_RGTC2_EXT=36285]="COMPRESSED_RED_GREEN_RGTC2_EXT",GLEnum[GLEnum.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT=36286]="COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT",GLEnum[GLEnum.COMPRESSED_RGBA_BPTC_UNORM_EXT=36492]="COMPRESSED_RGBA_BPTC_UNORM_EXT",GLEnum[GLEnum.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT=36493]="COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT",GLEnum[GLEnum.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT=36494]="COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT",GLEnum[GLEnum.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT=36495]="COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT",GLEnum[GLEnum.COMPRESSED_R11_EAC=37488]="COMPRESSED_R11_EAC",GLEnum[GLEnum.COMPRESSED_SIGNED_R11_EAC=37489]="COMPRESSED_SIGNED_R11_EAC",GLEnum[GLEnum.COMPRESSED_RG11_EAC=37490]="COMPRESSED_RG11_EAC",GLEnum[GLEnum.COMPRESSED_SIGNED_RG11_EAC=37491]="COMPRESSED_SIGNED_RG11_EAC",GLEnum[GLEnum.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",GLEnum[GLEnum.COMPRESSED_RGBA8_ETC2_EAC=37493]="COMPRESSED_RGBA8_ETC2_EAC",GLEnum[GLEnum.COMPRESSED_SRGB8_ETC2=37494]="COMPRESSED_SRGB8_ETC2",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC=37495]="COMPRESSED_SRGB8_ALPHA8_ETC2_EAC",GLEnum[GLEnum.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2=37496]="COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2",GLEnum[GLEnum.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2=37497]="COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2",GLEnum[GLEnum.COMPRESSED_RGB_PVRTC_4BPPV1_IMG=35840]="COMPRESSED_RGB_PVRTC_4BPPV1_IMG",GLEnum[GLEnum.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG=35842]="COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",GLEnum[GLEnum.COMPRESSED_RGB_PVRTC_2BPPV1_IMG=35841]="COMPRESSED_RGB_PVRTC_2BPPV1_IMG",GLEnum[GLEnum.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG=35843]="COMPRESSED_RGBA_PVRTC_2BPPV1_IMG",GLEnum[GLEnum.COMPRESSED_RGB_ETC1_WEBGL=36196]="COMPRESSED_RGB_ETC1_WEBGL",GLEnum[GLEnum.COMPRESSED_RGB_ATC_WEBGL=35986]="COMPRESSED_RGB_ATC_WEBGL",GLEnum[GLEnum.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL=35986]="COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL",GLEnum[GLEnum.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL=34798]="COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_4x4_KHR=37808]="COMPRESSED_RGBA_ASTC_4x4_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_5x4_KHR=37809]="COMPRESSED_RGBA_ASTC_5x4_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_5x5_KHR=37810]="COMPRESSED_RGBA_ASTC_5x5_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_6x5_KHR=37811]="COMPRESSED_RGBA_ASTC_6x5_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_6x6_KHR=37812]="COMPRESSED_RGBA_ASTC_6x6_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_8x5_KHR=37813]="COMPRESSED_RGBA_ASTC_8x5_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_8x6_KHR=37814]="COMPRESSED_RGBA_ASTC_8x6_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_8x8_KHR=37815]="COMPRESSED_RGBA_ASTC_8x8_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_10x5_KHR=37816]="COMPRESSED_RGBA_ASTC_10x5_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_10x6_KHR=37817]="COMPRESSED_RGBA_ASTC_10x6_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_10x8_KHR=37818]="COMPRESSED_RGBA_ASTC_10x8_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_10x10_KHR=37819]="COMPRESSED_RGBA_ASTC_10x10_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_12x10_KHR=37820]="COMPRESSED_RGBA_ASTC_12x10_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_12x12_KHR=37821]="COMPRESSED_RGBA_ASTC_12x12_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR=37840]="COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR=37841]="COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR=37842]="COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR=37843]="COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR=37844]="COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR=37845]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR=37846]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR=37847]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR=37848]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR=37849]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR=37850]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR=37851]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR=37852]="COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR=37853]="COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR",GLEnum[GLEnum.QUERY_COUNTER_BITS_EXT=34916]="QUERY_COUNTER_BITS_EXT",GLEnum[GLEnum.CURRENT_QUERY_EXT=34917]="CURRENT_QUERY_EXT",GLEnum[GLEnum.QUERY_RESULT_EXT=34918]="QUERY_RESULT_EXT",GLEnum[GLEnum.QUERY_RESULT_AVAILABLE_EXT=34919]="QUERY_RESULT_AVAILABLE_EXT",GLEnum[GLEnum.TIME_ELAPSED_EXT=35007]="TIME_ELAPSED_EXT",GLEnum[GLEnum.TIMESTAMP_EXT=36392]="TIMESTAMP_EXT",GLEnum[GLEnum.GPU_DISJOINT_EXT=36795]="GPU_DISJOINT_EXT",GLEnum[GLEnum.COMPLETION_STATUS_KHR=37297]="COMPLETION_STATUS_KHR",GLEnum[GLEnum.DEPTH_CLAMP_EXT=34383]="DEPTH_CLAMP_EXT",GLEnum[GLEnum.FIRST_VERTEX_CONVENTION_WEBGL=36429]="FIRST_VERTEX_CONVENTION_WEBGL",GLEnum[GLEnum.LAST_VERTEX_CONVENTION_WEBGL=36430]="LAST_VERTEX_CONVENTION_WEBGL",GLEnum[GLEnum.PROVOKING_VERTEX_WEBL=36431]="PROVOKING_VERTEX_WEBL",GLEnum[GLEnum.POLYGON_MODE_WEBGL=2880]="POLYGON_MODE_WEBGL",GLEnum[GLEnum.POLYGON_OFFSET_LINE_WEBGL=10754]="POLYGON_OFFSET_LINE_WEBGL",GLEnum[GLEnum.LINE_WEBGL=6913]="LINE_WEBGL",GLEnum[GLEnum.FILL_WEBGL=6914]="FILL_WEBGL",GLEnum[GLEnum.MAX_CLIP_DISTANCES_WEBGL=3378]="MAX_CLIP_DISTANCES_WEBGL",GLEnum[GLEnum.MAX_CULL_DISTANCES_WEBGL=33529]="MAX_CULL_DISTANCES_WEBGL",GLEnum[GLEnum.MAX_COMBINED_CLIP_AND_CULL_DISTANCES_WEBGL=33530]="MAX_COMBINED_CLIP_AND_CULL_DISTANCES_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE0_WEBGL=12288]="CLIP_DISTANCE0_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE1_WEBGL=12289]="CLIP_DISTANCE1_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE2_WEBGL=12290]="CLIP_DISTANCE2_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE3_WEBGL=12291]="CLIP_DISTANCE3_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE4_WEBGL=12292]="CLIP_DISTANCE4_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE5_WEBGL=12293]="CLIP_DISTANCE5_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE6_WEBGL=12294]="CLIP_DISTANCE6_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE7_WEBGL=12295]="CLIP_DISTANCE7_WEBGL",GLEnum[GLEnum.POLYGON_OFFSET_CLAMP_EXT=36379]="POLYGON_OFFSET_CLAMP_EXT",GLEnum[GLEnum.LOWER_LEFT_EXT=36001]="LOWER_LEFT_EXT",GLEnum[GLEnum.UPPER_LEFT_EXT=36002]="UPPER_LEFT_EXT",GLEnum[GLEnum.NEGATIVE_ONE_TO_ONE_EXT=37726]="NEGATIVE_ONE_TO_ONE_EXT",GLEnum[GLEnum.ZERO_TO_ONE_EXT=37727]="ZERO_TO_ONE_EXT",GLEnum[GLEnum.CLIP_ORIGIN_EXT=37724]="CLIP_ORIGIN_EXT",GLEnum[GLEnum.CLIP_DEPTH_MODE_EXT=37725]="CLIP_DEPTH_MODE_EXT",GLEnum[GLEnum.SRC1_COLOR_WEBGL=35065]="SRC1_COLOR_WEBGL",GLEnum[GLEnum.SRC1_ALPHA_WEBGL=34185]="SRC1_ALPHA_WEBGL",GLEnum[GLEnum.ONE_MINUS_SRC1_COLOR_WEBGL=35066]="ONE_MINUS_SRC1_COLOR_WEBGL",GLEnum[GLEnum.ONE_MINUS_SRC1_ALPHA_WEBGL=35067]="ONE_MINUS_SRC1_ALPHA_WEBGL",GLEnum[GLEnum.MAX_DUAL_SOURCE_DRAW_BUFFERS_WEBGL=35068]="MAX_DUAL_SOURCE_DRAW_BUFFERS_WEBGL",GLEnum[GLEnum.MIRROR_CLAMP_TO_EDGE_EXT=34627]="MIRROR_CLAMP_TO_EDGE_EXT"}(GLEnum||(GLEnum={}))},"./node_modules/@luma.gl/core/dist/adapter/attribute-utils/get-attribute-from-layouts.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{Mr:function(){return getAttributeInfosByLocation},PV:function(){return getAttributeInfosFromLayouts},GE:function(){return mergeShaderLayout}});var log=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/log.js");const TYPE_INFO={f32:["f32",1],"vec2<f32>":["f32",2],"vec3<f32>":["f32",3],"vec4<f32>":["f32",4],f16:["f16",1],"vec2<f16>":["f16",2],"vec3<f16>":["f16",3],"vec4<f16>":["f16",4],i32:["i32",1],"vec2<i32>":["i32",2],"vec3<i32>":["i32",3],"vec4<i32>":["i32",4],u32:["u32",1],"vec2<u32>":["u32",2],"vec3<u32>":["u32",3],"vec4<u32>":["u32",4]},TYPE_SIZES={f32:4,f16:2,i32:4,u32:4};var decode_data_type=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/type-utils/decode-data-type.js");function decodeVertexFormat(format){let webglOnly;format.endsWith("-webgl")&&(format.replace("-webgl",""),webglOnly=!0);const[type_,count]=format.split("x"),type=type_,components=count?parseInt(count):1,decodedType=(0,decode_data_type.l)(type),result={type:type,components:components,byteLength:decodedType.byteLength*components,integer:decodedType.integer,signed:decodedType.signed,normalized:decodedType.normalized};return webglOnly&&(result.webglOnly=!0),result}function getAttributeInfosFromLayouts(shaderLayout,bufferLayout){const attributeInfos={};for(const attribute of shaderLayout.attributes)attributeInfos[attribute.name]=getAttributeInfoFromLayouts(shaderLayout,bufferLayout,attribute.name);return attributeInfos}function getAttributeInfosByLocation(shaderLayout,bufferLayout,maxVertexAttributes=16){const attributeInfos=getAttributeInfosFromLayouts(shaderLayout,bufferLayout),locationInfos=new Array(maxVertexAttributes).fill(null);for(const attributeInfo of Object.values(attributeInfos))locationInfos[attributeInfo.location]=attributeInfo;return locationInfos}function getAttributeInfoFromLayouts(shaderLayout,bufferLayout,name){const shaderDeclaration=function getAttributeFromShaderLayout(shaderLayout,name){const attribute=shaderLayout.attributes.find((attr=>attr.name===name));attribute||log.R.warn(`shader layout attribute "${name}" not present in shader`);return attribute||null}(shaderLayout,name),bufferMapping=function getAttributeFromBufferLayout(bufferLayouts,name){checkBufferLayouts(bufferLayouts);let bufferLayoutInfo=function getAttributeFromShortHand(bufferLayouts,name){for(const bufferLayout of bufferLayouts)if(bufferLayout.format&&bufferLayout.name===name)return{attributeName:bufferLayout.name,bufferName:name,stepMode:bufferLayout.stepMode,vertexFormat:bufferLayout.format,byteOffset:0,byteStride:bufferLayout.byteStride||0};return null}(bufferLayouts,name);if(bufferLayoutInfo)return bufferLayoutInfo;if(bufferLayoutInfo=function getAttributeFromAttributesList(bufferLayouts,name){for(const bufferLayout of bufferLayouts){let byteStride=bufferLayout.byteStride;if("number"!=typeof bufferLayout.byteStride)for(const attributeMapping of bufferLayout.attributes||[]){byteStride+=decodeVertexFormat(attributeMapping.format).byteLength}const attributeMapping=bufferLayout.attributes?.find((mapping=>mapping.attribute===name));if(attributeMapping)return{attributeName:attributeMapping.attribute,bufferName:bufferLayout.name,stepMode:bufferLayout.stepMode,vertexFormat:attributeMapping.format,byteOffset:attributeMapping.byteOffset,byteStride:byteStride}}return null}(bufferLayouts,name),bufferLayoutInfo)return bufferLayoutInfo;return log.R.warn(`layout for attribute "${name}" not present in buffer layout`),null}(bufferLayout,name);if(!shaderDeclaration)return null;const attributeTypeInfo=function decodeShaderAttributeType(attributeType){const[dataType,components]=TYPE_INFO[attributeType],integer="i32"===dataType||"u32"===dataType,signed="u32"!==dataType,byteLength=TYPE_SIZES[dataType]*components,defaultVertexFormat=function getCompatibleVertexFormat(dataType,components){let vertexType;switch(dataType){case"f32":vertexType="float32";break;case"i32":vertexType="sint32";break;case"u32":vertexType="uint32";break;case"f16":return components<=2?"float16x2":"float16x4"}return 1===components?vertexType:`${vertexType}x${components}`}(dataType,components);return{dataType:dataType,components:components,defaultVertexFormat:defaultVertexFormat,byteLength:byteLength,integer:integer,signed:signed}}(shaderDeclaration.type),vertexFormat=bufferMapping?.vertexFormat||attributeTypeInfo.defaultVertexFormat,vertexFormatInfo=decodeVertexFormat(vertexFormat);return{attributeName:bufferMapping?.attributeName||shaderDeclaration.name,bufferName:bufferMapping?.bufferName||shaderDeclaration.name,location:shaderDeclaration.location,shaderType:shaderDeclaration.type,shaderDataType:attributeTypeInfo.dataType,shaderComponents:attributeTypeInfo.components,vertexFormat:vertexFormat,bufferDataType:vertexFormatInfo.type,bufferComponents:vertexFormatInfo.components,normalized:vertexFormatInfo.normalized,integer:attributeTypeInfo.integer,stepMode:bufferMapping?.stepMode||shaderDeclaration.stepMode,byteOffset:bufferMapping?.byteOffset||0,byteStride:bufferMapping?.byteStride||0}}function checkBufferLayouts(bufferLayouts){for(const bufferLayout of bufferLayouts)(bufferLayout.attributes&&bufferLayout.format||!bufferLayout.attributes&&!bufferLayout.format)&&log.R.warn(`BufferLayout ${name} must have either 'attributes' or 'format' field`)}function mergeShaderLayout(baseLayout,overrideLayout){const mergedLayout={...baseLayout,attributes:baseLayout.attributes.map((attribute=>({...attribute})))};for(const attribute of overrideLayout?.attributes||[]){const baseAttribute=mergedLayout.attributes.find((attr=>attr.name===attribute.name));baseAttribute?(baseAttribute.type=attribute.type||baseAttribute.type,baseAttribute.stepMode=attribute.stepMode||baseAttribute.stepMode):log.R.warn(`shader layout attribute ${attribute.name} not present in shader`)}return mergedLayout}},"./node_modules/@luma.gl/core/dist/adapter/resources/buffer.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{h:function(){return Buffer}});var _resource_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/resource.js");class Buffer extends _resource_js__WEBPACK_IMPORTED_MODULE_0__.F{static defaultProps={..._resource_js__WEBPACK_IMPORTED_MODULE_0__.F.defaultProps,usage:0,byteLength:0,byteOffset:0,data:null,indexType:"uint16",mappedAtCreation:!1};static MAP_READ=1;static MAP_WRITE=2;static COPY_SRC=4;static COPY_DST=8;static INDEX=16;static VERTEX=32;static UNIFORM=64;static STORAGE=128;static INDIRECT=256;static QUERY_RESOLVE=512;get[Symbol.toStringTag](){return"Buffer"}usage;indexType;updateTimestamp;constructor(device,props){const deducedProps={...props};(props.usage||0)&Buffer.INDEX&&!props.indexType&&(props.data instanceof Uint32Array?deducedProps.indexType="uint32":props.data instanceof Uint16Array&&(deducedProps.indexType="uint16")),super(device,deducedProps,Buffer.defaultProps),this.usage=props.usage||0,this.indexType=deducedProps.indexType,this.updateTimestamp=device.incrementTimestamp()}readSyncWebGL(byteOffset,byteLength){throw new Error("not implemented")}static DEBUG_DATA_MAX_LENGTH=32;debugData=new ArrayBuffer(0);_setDebugData(data,byteOffset,byteLength){const buffer=ArrayBuffer.isView(data)?data.buffer:data,debugDataLength=Math.min(data?data.byteLength:byteLength,Buffer.DEBUG_DATA_MAX_LENGTH);null===data?this.debugData=new ArrayBuffer(debugDataLength):0===byteOffset&&byteLength===data.byteLength?this.debugData=buffer.slice(0,debugDataLength):this.debugData=buffer.slice(byteOffset,byteOffset+debugDataLength)}}},"./node_modules/@luma.gl/core/dist/adapter/resources/render-pipeline.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{r:function(){return RenderPipeline}});var _resource_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/resource.js");class RenderPipeline extends _resource_js__WEBPACK_IMPORTED_MODULE_0__.F{static defaultProps={..._resource_js__WEBPACK_IMPORTED_MODULE_0__.F.defaultProps,vs:null,vertexEntryPoint:"vertexMain",vsConstants:{},fs:null,fragmentEntryPoint:"fragmentMain",fsConstants:{},shaderLayout:null,bufferLayout:[],topology:"triangle-list",parameters:{},bindings:{},uniforms:{}};get[Symbol.toStringTag](){return"RenderPipeline"}shaderLayout;bufferLayout;linkStatus="pending";hash="";constructor(device,props){super(device,props,RenderPipeline.defaultProps),this.shaderLayout=this.props.shaderLayout,this.bufferLayout=this.props.bufferLayout||[]}setUniformsWebGL(uniforms){throw new Error("Use uniform blocks")}}},"./node_modules/@luma.gl/core/dist/adapter/resources/resource.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{F:function(){return Resource}});var _utils_utils_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/utils.js");class Resource{static defaultProps={id:"undefined",handle:void 0,userData:void 0};id;props;userData={};_device;destroyed=!1;allocatedBytes=0;_attachedResources=new Set;constructor(device,props,defaultProps){if(!device)throw new Error("no device");this._device=device,this.props=function selectivelyMerge(props,defaultProps){const mergedProps={...defaultProps};for(const key in props)void 0!==props[key]&&(mergedProps[key]=props[key]);return mergedProps}(props,defaultProps);const id="undefined"!==this.props.id?this.props.id:(0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_0__.L)(this[Symbol.toStringTag]);this.props.id=id,this.id=id,this.userData=this.props.userData||{},this.addStats()}destroy(){this.destroyResource()}delete(){return this.destroy(),this}toString(){return`${this[Symbol.toStringTag]||this.constructor.name}(${this.id})`}getProps(){return this.props}attachResource(resource){this._attachedResources.add(resource)}detachResource(resource){this._attachedResources.delete(resource)}destroyAttachedResource(resource){this._attachedResources.delete(resource)&&resource.destroy()}destroyAttachedResources(){for(const resource of Object.values(this._attachedResources))resource.destroy();this._attachedResources=new Set}destroyResource(){this.destroyAttachedResources(),this.removeStats(),this.destroyed=!0}removeStats(){const stats=this._device.statsManager.getStats("Resource Counts"),name=this[Symbol.toStringTag];stats.get(`${name}s Active`).decrementCount()}trackAllocatedMemory(bytes,name=this[Symbol.toStringTag]){const stats=this._device.statsManager.getStats("Resource Counts");stats.get("GPU Memory").addCount(bytes),stats.get(`${name} Memory`).addCount(bytes),this.allocatedBytes=bytes}trackDeallocatedMemory(name=this[Symbol.toStringTag]){const stats=this._device.statsManager.getStats("Resource Counts");stats.get("GPU Memory").subtractCount(this.allocatedBytes),stats.get(`${name} Memory`).subtractCount(this.allocatedBytes),this.allocatedBytes=0}addStats(){const stats=this._device.statsManager.getStats("Resource Counts"),name=this[Symbol.toStringTag];stats.get("Resources Created").incrementCount(),stats.get(`${name}s Created`).incrementCount(),stats.get(`${name}s Active`).incrementCount()}}},"./node_modules/@luma.gl/core/dist/adapter/resources/sampler.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{L:function(){return Sampler}});var _resource_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/resource.js");class Sampler extends _resource_js__WEBPACK_IMPORTED_MODULE_0__.F{static defaultProps={..._resource_js__WEBPACK_IMPORTED_MODULE_0__.F.defaultProps,type:"color-sampler",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge",addressModeW:"clamp-to-edge",magFilter:"nearest",minFilter:"nearest",mipmapFilter:"nearest",lodMinClamp:0,lodMaxClamp:32,compare:"less-equal",maxAnisotropy:1};get[Symbol.toStringTag](){return"Sampler"}constructor(device,props){super(device,props,Sampler.defaultProps)}}},"./node_modules/@luma.gl/core/dist/adapter/resources/shader.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{M:function(){return Shader}});var resource=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/resource.js"),utils=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/utils.js");function formatCompilerMessage(message,lines,lineNum,options){if(options?.inlineSource){const numberedLines=function getNumberedLines(lines,lineNum,options){let numberedLines="";for(let lineIndex=lineNum-2;lineIndex<=lineNum;lineIndex++){const sourceLine=lines[lineIndex-1];void 0!==sourceLine&&(numberedLines+=getNumberedLine(sourceLine,lineNum,options))}return numberedLines}(lines,lineNum);return`\n${numberedLines}${message.linePos>0?`${" ".repeat(message.linePos+5)}^^^\n`:""}${message.type.toUpperCase()}: ${message.message}\n\n`}return options?.html?`<div class='luma-compiler-log-error' style="color:red;"><b> ${message.type.toUpperCase()}: ${message.message}</b></div>`:`${message.type.toUpperCase()}: ${message.message}`}function getNumberedLine(line,lineNum,options){const escapedLine=options?.html?function escapeHTML(unsafe){return unsafe.replaceAll("&","&amp;").replaceAll("<","&lt;").replaceAll(">","&gt;").replaceAll('"',"&quot;").replaceAll("'","&#039;")}(line):line;return`${function padLeft(string,paddedLength){let result="";for(let i=string.length;i<paddedLength;++i)result+=" ";return result+string}(String(lineNum),4)}: ${escapedLine}${options?.html?"<br/>":"\n"}`}function getShaderInfo(source,defaultName){return{name:getShaderName(source,defaultName),language:"glsl",version:getShaderVersion(source)}}function getShaderName(shader,defaultName="unnamed"){const match=/#define[\s*]SHADER_NAME[\s*]([A-Za-z0-9_-]+)[\s*]/.exec(shader);return match?match[1]:defaultName}function getShaderVersion(source){let version=100;const words=source.match(/[^\s]+/g);if(words&&words.length>=2&&"#version"===words[0]){const v=parseInt(words[1],10);Number.isFinite(v)&&(version=v)}return version}class Shader extends resource.F{static defaultProps={...resource.F.defaultProps,language:"auto",stage:void 0,source:"",sourceMap:null,entryPoint:"main",debug:"errors"};get[Symbol.toStringTag](){return"Shader"}stage;source;compilationStatus="pending";constructor(device,props){super(device,{id:getShaderIdFromProps(props),...props},Shader.defaultProps),this.stage=this.props.stage,this.source=this.props.source}getCompilationInfoSync(){return null}getTranslatedSource(){return null}async debugShader(trigger=this.props.debug){switch(trigger){case"never":return;case"errors":if("success"===this.compilationStatus)return}const messages=await this.getCompilationInfo();"warnings"===this.props.debug&&0===messages?.length||this._displayShaderLog(messages)}_displayShaderLog(messages){if("undefined"==typeof document||!document?.createElement)return;const shaderName=getShaderInfo(this.source).name,shaderTitle=`${this.stage} ${shaderName}`;let htmlLog=function formatCompilerLog(shaderLog,source,options){let formattedLog="";const lines=source.split(/\r?\n/),log=shaderLog.slice().sort(((a,b)=>a.lineNum-b.lineNum));switch(options?.showSourceCode||"no"){case"all":let currentMessage=0;for(let lineNum=1;lineNum<=lines.length;lineNum++)for(formattedLog+=getNumberedLine(lines[lineNum-1],lineNum,options);log.length>currentMessage&&log[currentMessage].lineNum===lineNum;){const message=log[currentMessage++];formattedLog+=formatCompilerMessage(message,lines,message.lineNum,{...options,inlineSource:!1})}return formattedLog;case"issues":case"no":for(const message of shaderLog)formattedLog+=formatCompilerMessage(message,lines,message.lineNum,{inlineSource:"no"!==options?.showSourceCode});return formattedLog}}(messages,this.source,{showSourceCode:"all",html:!0});const translatedSource=this.getTranslatedSource();translatedSource&&(htmlLog+=`<br /><br /><h1>Translated Source</h1><br /><br /><code style="user-select:text;"><pre>${translatedSource}</pre></code>`);const button=document.createElement("Button");button.innerHTML=`\n<h1>Shader Compilation Error in ${shaderTitle}</h1><br /><br />\n<code style="user-select:text;"><pre>\n${htmlLog}\n</pre></code>`,button.style.top="10px",button.style.left="10px",button.style.position="absolute",button.style.zIndex="9999",button.style.width="100%",button.style.textAlign="left",document.body.appendChild(button);const errors=document.getElementsByClassName("luma-compiler-log-error");errors[0]?.scrollIntoView&&errors[0].scrollIntoView(),button.onclick=()=>{const dataURI=`data:text/plain,${encodeURIComponent(this.source)}`;navigator.clipboard.writeText(dataURI)}}}function getShaderIdFromProps(props){return getShaderInfo(props.source).name||props.id||(0,utils.L)(`unnamed ${props.stage}-shader`)}},"./node_modules/@luma.gl/core/dist/adapter/resources/texture-view.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{X:function(){return TextureView}});var _resource_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/resource.js");class TextureView extends _resource_js__WEBPACK_IMPORTED_MODULE_0__.F{static defaultProps={..._resource_js__WEBPACK_IMPORTED_MODULE_0__.F.defaultProps,format:void 0,dimension:void 0,aspect:"all",baseMipLevel:0,mipLevelCount:void 0,baseArrayLayer:0,arrayLayerCount:void 0};get[Symbol.toStringTag](){return"TextureView"}constructor(device,props){super(device,props,TextureView.defaultProps)}}},"./node_modules/@luma.gl/core/dist/adapter/resources/texture.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{g:function(){return Texture}});var _resource_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/resource.js");class Texture extends _resource_js__WEBPACK_IMPORTED_MODULE_0__.F{static defaultProps={..._resource_js__WEBPACK_IMPORTED_MODULE_0__.F.defaultProps,data:null,dimension:"2d",format:"rgba8unorm",width:void 0,height:void 0,depth:1,mipmaps:!0,compressed:!1,usage:0,mipLevels:void 0,samples:void 0,type:void 0,sampler:{},view:void 0};static COPY_SRC=1;static COPY_DST=2;static TEXTURE_BINDING=4;static STORAGE_BINDING=8;static RENDER_ATTACHMENT=16;get[Symbol.toStringTag](){return"Texture"}dimension;format;width;height;depth;updateTimestamp;constructor(device,props,defaultProps=Texture.defaultProps){super(device,props,defaultProps),this.dimension=this.props.dimension,this.format=this.props.format,this.width=this.props.width,this.height=this.props.height,this.depth=this.props.depth,this.updateTimestamp=device.incrementTimestamp()}}},"./node_modules/@luma.gl/core/dist/adapter/type-utils/decode-data-type.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function decodeVertexType(type){const bytes=function getDataTypeBytes(type){const bytes=TYPE_SIZES[type];return bytes}(TYPE_MAP[type]),normalized=type.includes("norm"),integer=!normalized&&!type.startsWith("float"),signed=type.startsWith("s");return{dataType:TYPE_MAP[type],byteLength:bytes,integer:integer,signed:signed,normalized:normalized}}__webpack_require__.d(__webpack_exports__,{l:function(){return decodeVertexType}});const TYPE_MAP={uint8:"uint8",sint8:"sint8",unorm8:"uint8",snorm8:"sint8",uint16:"uint16",sint16:"sint16",unorm16:"uint16",snorm16:"sint16",float16:"float16",float32:"float32",uint32:"uint32",sint32:"sint32"},TYPE_SIZES={uint8:1,sint8:1,uint16:2,sint16:2,float16:2,float32:4,uint32:4,sint32:4}},"./node_modules/@luma.gl/core/dist/adapter/type-utils/vertex-format-from-attribute.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function getDataTypeFromTypedArray(arrayOrType){const type=ArrayBuffer.isView(arrayOrType)?arrayOrType.constructor:arrayOrType;switch(type){case Float32Array:return"float32";case Uint16Array:return"uint16";case Uint32Array:return"uint32";case Uint8Array:case Uint8ClampedArray:return"uint8";case Int8Array:return"sint8";case Int16Array:return"sint16";case Int32Array:return"sint32";default:throw new Error(type.constructor.name)}}function getTypedArrayFromDataType(dataType){switch(dataType){case"float32":return Float32Array;case"uint32":return Uint32Array;case"sint32":return Int32Array;case"uint16":case"unorm16":return Uint16Array;case"sint16":case"snorm16":return Int16Array;case"uint8":case"unorm8":return Uint8Array;case"sint8":case"snorm8":return Int8Array;default:throw new Error(dataType)}}function getVertexFormatFromAttribute(typedArray,size,normalized){if(!size||size>4)throw new Error(`size ${size}`);const components=size;let dataType=getDataTypeFromTypedArray(typedArray);if("uint8"===dataType&&normalized&&1===components)return"unorm8-webgl";if("uint8"===dataType&&normalized&&3===components)return"unorm8x3-webgl";if("uint8"===dataType||"sint8"===dataType){if(1===components||3===components)throw new Error(`size: ${size}`);return normalized&&(dataType=dataType.replace("int","norm")),`${dataType}x${components}`}if("uint16"===dataType||"sint16"===dataType){if(1===components||3===components)throw new Error(`size: ${size}`);return normalized&&(dataType=dataType.replace("int","norm")),`${dataType}x${components}`}return 1===components?dataType:`${dataType}x${components}`}__webpack_require__.d(__webpack_exports__,{OB:function(){return getVertexFormatFromAttribute},UE:function(){return getDataTypeFromTypedArray},Y0:function(){return getTypedArrayFromDataType}})},"./node_modules/@luma.gl/core/dist/lib/uniforms/uniform.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{l:function(){return splitUniformsAndBindings}});var _utils_is_array_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/is-array.js");function splitUniformsAndBindings(uniforms){const result={bindings:{},uniforms:{}};return Object.keys(uniforms).forEach((name=>{const uniform=uniforms[name];!function isUniformValue(value){return null!==(0,_utils_is_array_js__WEBPACK_IMPORTED_MODULE_0__.p)(value)||"number"==typeof value||"boolean"==typeof value}(uniform)?result.bindings[name]=uniform:result.uniforms[name]=uniform})),result}},"./node_modules/@luma.gl/core/dist/utils/array-utils-flat.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";let arrayBuffer;function getScratchArrayBuffer(byteLength){return(!arrayBuffer||arrayBuffer.byteLength<byteLength)&&(arrayBuffer=new ArrayBuffer(byteLength)),arrayBuffer}function getScratchArray(Type,length){return new Type(getScratchArrayBuffer(Type.BYTES_PER_ELEMENT*length),0,length)}function fillArray(options){const{target:target,source:source,start:start=0,count:count=1}=options,length=source.length,total=count*length;let copied=0;for(let i=start;copied<length;copied++)target[i++]=source[copied];for(;copied<total;)copied<total-copied?(target.copyWithin(start+copied,start,start+copied),copied*=2):(target.copyWithin(start+copied,start,start+total-copied),copied=total);return options.target}__webpack_require__.d(__webpack_exports__,{R2:function(){return fillArray},oF:function(){return getScratchArray},oK:function(){return getScratchArrayBuffer}})},"./node_modules/@luma.gl/core/dist/utils/assert.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function assert(condition,message){if(!condition)throw new Error(message||"luma.gl: assertion failed.")}__webpack_require__.d(__webpack_exports__,{v:function(){return assert}})},"./node_modules/@luma.gl/core/dist/utils/is-array.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function isNumberArray(value){return Array.isArray(value)?0===value.length||"number"==typeof value[0]?value:null:function isTypedArray(value){return!ArrayBuffer.isView(value)||value instanceof DataView?null:value}(value)}__webpack_require__.d(__webpack_exports__,{p:function(){return isNumberArray}})},"./node_modules/@luma.gl/core/dist/utils/log.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{R:function(){return log}});const log=new(__webpack_require__("./node_modules/@probe.gl/log/dist/log.js").t)({id:"luma.gl"})},"./node_modules/@luma.gl/core/dist/utils/utils.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{L:function(){return uid},Z:function(){return isObjectEmpty}});const uidCounters={};function uid(id="id"){uidCounters[id]=uidCounters[id]||1;return`${id}-${uidCounters[id]++}`}function isObjectEmpty(obj){let isEmpty=!0;for(const key in obj){isEmpty=!1;break}return isEmpty}},"./node_modules/@luma.gl/engine/dist/geometry/geometry.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{V:function(){return Geometry}});var _luma_gl_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/utils.js"),_luma_gl_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/assert.js");class Geometry{id;topology;vertexCount;indices;attributes;userData={};constructor(props){const{attributes:attributes={},indices:indices=null,vertexCount:vertexCount=null}=props;this.id=props.id||(0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_0__.L)("geometry"),this.topology=props.topology,indices&&(this.indices=ArrayBuffer.isView(indices)?{value:indices,size:1}:indices),this.attributes={};for(const[attributeName,attributeValue]of Object.entries(attributes)){const attribute=ArrayBuffer.isView(attributeValue)?{value:attributeValue}:attributeValue;(0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_1__.v)(ArrayBuffer.isView(attribute.value),`${this._print(attributeName)}: must be typed array or object with value as typed array`),"POSITION"!==attributeName&&"positions"!==attributeName||attribute.size||(attribute.size=3),"indices"===attributeName?((0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_1__.v)(!this.indices),this.indices=attribute):this.attributes[attributeName]=attribute}this.indices&&void 0!==this.indices.isIndexed&&(this.indices=Object.assign({},this.indices),delete this.indices.isIndexed),this.vertexCount=vertexCount||this._calculateVertexCount(this.attributes,this.indices)}getVertexCount(){return this.vertexCount}getAttributes(){return this.indices?{indices:this.indices,...this.attributes}:this.attributes}_print(attributeName){return`Geometry ${this.id} attribute ${attributeName}`}_setAttributes(attributes,indices){return this}_calculateVertexCount(attributes,indices){if(indices)return indices.value.length;let vertexCount=1/0;for(const attribute of Object.values(attributes)){const{value:value,size:size,constant:constant}=attribute;!constant&&value&&size>=1&&(vertexCount=Math.min(vertexCount,value.length/size))}return(0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_1__.v)(Number.isFinite(vertexCount)),vertexCount}}},"./node_modules/@luma.gl/engine/dist/model/model.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{K:function(){return Model}});var texture_view=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/texture-view.js"),buffer=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/buffer.js"),texture=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/texture.js"),sampler=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/sampler.js"),render_pipeline=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/render-pipeline.js"),is_array=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/is-array.js");class UniformBlock{name;uniforms={};modifiedUniforms={};modified=!0;bindingLayout={};needsRedraw="initialized";constructor(props){if(this.name=props?.name,props?.name&&props?.shaderLayout){const binding=props?.shaderLayout.bindings?.find((binding=>"uniform"===binding.type&&binding.name===props?.name));if(!binding)throw new Error(props?.name);const uniformBlock=binding;for(const uniform of uniformBlock.uniforms||[])this.bindingLayout[uniform.name]=uniform}}setUniforms(uniforms){for(const[key,value]of Object.entries(uniforms))this._setUniform(key,value),this.needsRedraw||this.setNeedsRedraw(`${this.name}.${key}=${value}`)}setNeedsRedraw(reason){this.needsRedraw=this.needsRedraw||reason}getAllUniforms(){return this.modifiedUniforms={},this.needsRedraw=!1,this.uniforms||{}}_setUniform(key,value){(function arrayEqual(a,b,limit=16){if(a!==b)return!1;const arrayA=(0,is_array.p)(a);if(!arrayA)return!1;const arrayB=(0,is_array.p)(b);if(arrayB&&arrayA.length===arrayB.length)for(let i=0;i<arrayA.length;++i)if(arrayB[i]!==arrayA[i])return!1;return!0})(this.uniforms[key],value)||(this.uniforms[key]=function arrayCopy(a){const numberArray=(0,is_array.p)(a);return numberArray?numberArray.slice():a}(value),this.modifiedUniforms[key]=!0,this.modified=!0)}}var assert=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/assert.js");const UNIFORM_FORMATS={f32:{type:"f32",components:1},i32:{type:"i32",components:1},u32:{type:"u32",components:1},"vec2<f32>":{type:"f32",components:2},"vec3<f32>":{type:"f32",components:3},"vec4<f32>":{type:"f32",components:4},"vec2<i32>":{type:"i32",components:2},"vec3<i32>":{type:"i32",components:3},"vec4<i32>":{type:"i32",components:4},"vec2<u32>":{type:"u32",components:2},"vec3<u32>":{type:"u32",components:3},"vec4<u32>":{type:"u32",components:4},"mat2x2<f32>":{type:"f32",components:4},"mat2x3<f32>":{type:"f32",components:6},"mat2x4<f32>":{type:"f32",components:8},"mat3x2<f32>":{type:"f32",components:6},"mat3x3<f32>":{type:"f32",components:9},"mat3x4<f32>":{type:"f32",components:12},"mat4x2<f32>":{type:"f32",components:8},"mat4x3<f32>":{type:"f32",components:12},"mat4x4<f32>":{type:"f32",components:16}};function decodeShaderUniformType(format){const decoded=UNIFORM_FORMATS[format];return(0,assert.v)(format),decoded}function alignTo(size,count){switch(count){case 1:return size;case 2:return size+size%2;default:return size+(4-size%4)%4}}var array_utils_flat=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/array-utils-flat.js"),log=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/log.js");class UniformBufferLayout{layout={};byteLength;constructor(uniformTypes){let size=0;for(const[key,uniformType]of Object.entries(uniformTypes)){const typeAndComponents=decodeShaderUniformType(uniformType),{type:type,components:count}=typeAndComponents;size=alignTo(size,count);const offset=size;size+=count,this.layout[key]={type:type,size:count,offset:offset}}size+=(4-size%4)%4;const actualByteLength=4*size;this.byteLength=Math.max(actualByteLength,1024)}getData(uniformValues){const bufferSize=Math.max(this.byteLength,1024),arrayBuffer=(0,array_utils_flat.oK)(bufferSize),typedArrays={i32:new Int32Array(arrayBuffer),u32:new Uint32Array(arrayBuffer),f32:new Float32Array(arrayBuffer),f16:new Uint16Array(arrayBuffer)};for(const[name,value]of Object.entries(uniformValues)){const uniformLayout=this.layout[name];if(!uniformLayout){log.R.warn(`Supplied uniform value ${name} not present in uniform block layout`)();continue}const{type:type,size:size,offset:offset}=uniformLayout,typedArray=typedArrays[type];if(1===size){if("number"!=typeof value&&"boolean"!=typeof value){log.R.warn(`Supplied value for single component uniform ${name} is not a number: ${value}`)();continue}typedArray[offset]=Number(value)}else{const numericArray=(0,is_array.p)(value);if(!numericArray){log.R.warn(`Supplied value for multi component / array uniform ${name} is not a numeric array: ${value}`)();continue}typedArray.set(numericArray,offset)}}return new Uint8Array(arrayBuffer)}has(name){return Boolean(this.layout[name])}get(name){return this.layout[name]}}class UniformStore{uniformBlocks=new Map;uniformBufferLayouts=new Map;uniformBuffers=new Map;constructor(blocks){for(const[bufferName,block]of Object.entries(blocks)){const uniformBufferName=bufferName,uniformBufferLayout=new UniformBufferLayout(block.uniformTypes||{});this.uniformBufferLayouts.set(uniformBufferName,uniformBufferLayout);const uniformBlock=new UniformBlock({name:bufferName});uniformBlock.setUniforms(block.defaultUniforms||{}),this.uniformBlocks.set(uniformBufferName,uniformBlock)}}destroy(){for(const uniformBuffer of this.uniformBuffers.values())uniformBuffer.destroy()}setUniforms(uniforms){for(const[blockName,uniformValues]of Object.entries(uniforms))this.uniformBlocks.get(blockName).setUniforms(uniformValues);this.updateUniformBuffers()}getUniformBufferByteLength(uniformBufferName){return this.uniformBufferLayouts.get(uniformBufferName).byteLength}getUniformBufferData(uniformBufferName){const uniformValues=this.uniformBlocks.get(uniformBufferName).getAllUniforms();return this.uniformBufferLayouts.get(uniformBufferName).getData(uniformValues)}createUniformBuffer(device,uniformBufferName,uniforms){uniforms&&this.setUniforms(uniforms);const byteLength=this.getUniformBufferByteLength(uniformBufferName),uniformBuffer=device.createBuffer({usage:buffer.h.UNIFORM|buffer.h.COPY_DST,byteLength:byteLength}),uniformBufferData=this.getUniformBufferData(uniformBufferName);return uniformBuffer.write(uniformBufferData),uniformBuffer}getManagedUniformBuffer(device,uniformBufferName){if(!this.uniformBuffers.get(uniformBufferName)){const byteLength=this.getUniformBufferByteLength(uniformBufferName),uniformBuffer=device.createBuffer({usage:buffer.h.UNIFORM|buffer.h.COPY_DST,byteLength:byteLength});this.uniformBuffers.set(uniformBufferName,uniformBuffer)}return this.uniformBuffers.get(uniformBufferName)}updateUniformBuffers(){let reason=!1;for(const uniformBufferName of this.uniformBlocks.keys()){const bufferReason=this.updateUniformBuffer(uniformBufferName);reason||=bufferReason}return reason&&log.R.log(3,`UniformStore.updateUniformBuffers(): ${reason}`)(),reason}updateUniformBuffer(uniformBufferName){const uniformBlock=this.uniformBlocks.get(uniformBufferName);let reason=!1;if(this.uniformBuffers.get(uniformBufferName)&&uniformBlock.needsRedraw){reason||=uniformBlock.needsRedraw;const uniformBufferData=this.getUniformBufferData(uniformBufferName);this.uniformBuffers.get(uniformBufferName).write(uniformBufferData);const uniformValues=this.uniformBlocks.get(uniformBufferName).getAllUniforms();log.R.log(4,`Writing to uniform buffer ${String(uniformBufferName)}`,uniformBufferData,uniformValues)()}return reason}}var utils=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/utils.js");function deepEqual(a,b,depth){if(a===b)return!0;if(!depth||!a||!b)return!1;if(Array.isArray(a)){if(!Array.isArray(b)||a.length!==b.length)return!1;for(let i=0;i<a.length;i++)if(!deepEqual(a[i],b[i],depth-1))return!1;return!0}if(Array.isArray(b))return!1;if("object"==typeof a&&"object"==typeof b){const aKeys=Object.keys(a),bKeys=Object.keys(b);if(aKeys.length!==bKeys.length)return!1;for(const key of aKeys){if(!b.hasOwnProperty(key))return!1;if(!deepEqual(a[key],b[key],depth-1))return!1}return!0}return!1}var IncrementOperator,AssignOperator,_a,TokenClass,ResourceType,uniform=__webpack_require__("./node_modules/@luma.gl/core/dist/lib/uniforms/uniform.js"),get_attribute_from_layouts=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/attribute-utils/get-attribute-from-layouts.js"),vertex_format_from_attribute=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/type-utils/vertex-format-from-attribute.js"),shader_assembler=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/lib/shader-assembler.js");class ParseContext{constructor(){this.constants=new Map,this.aliases=new Map,this.structs=new Map}}class Node{constructor(){}get isAstNode(){return!0}get astNodeType(){return""}evaluate(context){throw new Error("Cannot evaluate node")}evaluateString(context){return this.evaluate(context).toString()}search(callback){}searchBlock(block,callback){if(block){callback(_BlockStart.instance);for(const node of block)node instanceof Array?this.searchBlock(node,callback):node.search(callback);callback(_BlockEnd.instance)}}}class _BlockStart extends Node{}_BlockStart.instance=new _BlockStart;class _BlockEnd extends Node{}_BlockEnd.instance=new _BlockEnd;class Statement extends Node{constructor(){super()}}class Function extends Statement{constructor(name,args,returnType,body,startLine,endLine){super(),this.calls=new Set,this.name=name,this.args=args,this.returnType=returnType,this.body=body,this.startLine=startLine,this.endLine=endLine}get astNodeType(){return"function"}search(callback){this.searchBlock(this.body,callback)}}class StaticAssert extends Statement{constructor(expression){super(),this.expression=expression}get astNodeType(){return"staticAssert"}search(callback){this.expression.search(callback)}}class While extends Statement{constructor(condition,body){super(),this.condition=condition,this.body=body}get astNodeType(){return"while"}search(callback){this.condition.search(callback),this.searchBlock(this.body,callback)}}class Continuing extends Statement{constructor(body){super(),this.body=body}get astNodeType(){return"continuing"}search(callback){this.searchBlock(this.body,callback)}}class For extends Statement{constructor(init,condition,increment,body){super(),this.init=init,this.condition=condition,this.increment=increment,this.body=body}get astNodeType(){return"for"}search(callback){var _a,_b,_c;null===(_a=this.init)||void 0===_a||_a.search(callback),null===(_b=this.condition)||void 0===_b||_b.search(callback),null===(_c=this.increment)||void 0===_c||_c.search(callback),this.searchBlock(this.body,callback)}}class Var extends Statement{constructor(name,type,storage,access,value){super(),this.name=name,this.type=type,this.storage=storage,this.access=access,this.value=value}get astNodeType(){return"var"}search(callback){var _a;callback(this),null===(_a=this.value)||void 0===_a||_a.search(callback)}}class Override extends Statement{constructor(name,type,value){super(),this.name=name,this.type=type,this.value=value}get astNodeType(){return"override"}search(callback){var _a;null===(_a=this.value)||void 0===_a||_a.search(callback)}}class Let extends Statement{constructor(name,type,storage,access,value){super(),this.name=name,this.type=type,this.storage=storage,this.access=access,this.value=value}get astNodeType(){return"let"}search(callback){var _a;callback(this),null===(_a=this.value)||void 0===_a||_a.search(callback)}}class Const extends Statement{constructor(name,type,storage,access,value){super(),this.name=name,this.type=type,this.storage=storage,this.access=access,this.value=value}get astNodeType(){return"const"}evaluate(context){return this.value.evaluate(context)}search(callback){var _a;callback(this),null===(_a=this.value)||void 0===_a||_a.search(callback)}}!function(IncrementOperator){IncrementOperator.increment="++",IncrementOperator.decrement="--"}(IncrementOperator||(IncrementOperator={})),function(IncrementOperator){IncrementOperator.parse=function parse(val){const key=val;if("parse"==key)throw new Error("Invalid value for IncrementOperator");return IncrementOperator[key]}}(IncrementOperator||(IncrementOperator={}));class Increment extends Statement{constructor(operator,variable){super(),this.operator=operator,this.variable=variable}get astNodeType(){return"increment"}search(callback){this.variable.search(callback)}}!function(AssignOperator){AssignOperator.assign="=",AssignOperator.addAssign="+=",AssignOperator.subtractAssin="-=",AssignOperator.multiplyAssign="*=",AssignOperator.divideAssign="/=",AssignOperator.moduloAssign="%=",AssignOperator.andAssign="&=",AssignOperator.orAssign="|=",AssignOperator.xorAssign="^=",AssignOperator.shiftLeftAssign="<<=",AssignOperator.shiftRightAssign=">>="}(AssignOperator||(AssignOperator={})),function(AssignOperator){AssignOperator.parse=function parse(val){const key=val;if("parse"==key)throw new Error("Invalid value for AssignOperator");return key}}(AssignOperator||(AssignOperator={}));class Assign extends Statement{constructor(operator,variable,value){super(),this.operator=operator,this.variable=variable,this.value=value}get astNodeType(){return"assign"}search(callback){this.variable.search(callback),this.value.search(callback)}}class Call extends Statement{constructor(name,args){super(),this.name=name,this.args=args}get astNodeType(){return"call"}search(callback){for(const node of this.args)node.search(callback);callback(this)}}class Loop extends Statement{constructor(body,continuing){super(),this.body=body,this.continuing=continuing}get astNodeType(){return"loop"}}class Switch extends Statement{constructor(condition,body){super(),this.condition=condition,this.body=body}get astNodeType(){return"body"}}class If extends Statement{constructor(condition,body,elseif,_else){super(),this.condition=condition,this.body=body,this.elseif=elseif,this.else=_else}get astNodeType(){return"if"}search(callback){this.condition.search(callback),this.searchBlock(this.body,callback),this.searchBlock(this.elseif,callback),this.searchBlock(this.else,callback)}}class Return extends Statement{constructor(value){super(),this.value=value}get astNodeType(){return"return"}search(callback){var _a;null===(_a=this.value)||void 0===_a||_a.search(callback)}}class Enable extends Statement{constructor(name){super(),this.name=name}get astNodeType(){return"enable"}}class Requires extends Statement{constructor(extensions){super(),this.extensions=extensions}get astNodeType(){return"requires"}}class Diagnostic extends Statement{constructor(severity,rule){super(),this.severity=severity,this.rule=rule}get astNodeType(){return"diagnostic"}}class Alias extends Statement{constructor(name,type){super(),this.name=name,this.type=type}get astNodeType(){return"alias"}}class Discard extends Statement{constructor(){super()}get astNodeType(){return"discard"}}class Break extends Statement{constructor(){super()}get astNodeType(){return"break"}}class Continue extends Statement{constructor(){super()}get astNodeType(){return"continue"}}class Type extends Statement{constructor(name){super(),this.name=name}get astNodeType(){return"type"}get isStruct(){return!1}get isArray(){return!1}}class Struct extends Type{constructor(name,members,startLine,endLine){super(name),this.members=members,this.startLine=startLine,this.endLine=endLine}get astNodeType(){return"struct"}get isStruct(){return!0}getMemberIndex(name){for(let i=0;i<this.members.length;i++)if(this.members[i].name==name)return i;return-1}}class TemplateType extends Type{constructor(name,format,access){super(name),this.format=format,this.access=access}get astNodeType(){return"template"}}class PointerType extends Type{constructor(name,storage,type,access){super(name),this.storage=storage,this.type=type,this.access=access}get astNodeType(){return"pointer"}}class ArrayType extends Type{constructor(name,attributes,format,count){super(name),this.attributes=attributes,this.format=format,this.count=count}get astNodeType(){return"array"}get isArray(){return!0}}class SamplerType extends Type{constructor(name,format,access){super(name),this.format=format,this.access=access}get astNodeType(){return"sampler"}}class Expression extends Node{constructor(){super()}}class StringExpr extends Expression{constructor(value){super(),this.value=value}get astNodeType(){return"stringExpr"}toString(){return this.value}evaluateString(){return this.value}}class CreateExpr extends Expression{constructor(type,args){super(),this.type=type,this.args=args}get astNodeType(){return"createExpr"}search(callback){callback(this);for(const node of this.args)node.search(callback)}}class CallExpr extends Expression{constructor(name,args){super(),this.name=name,this.args=args}get astNodeType(){return"callExpr"}evaluate(context){switch(this.name){case"abs":return Math.abs(this.args[0].evaluate(context));case"acos":return Math.acos(this.args[0].evaluate(context));case"acosh":return Math.acosh(this.args[0].evaluate(context));case"asin":return Math.asin(this.args[0].evaluate(context));case"asinh":return Math.asinh(this.args[0].evaluate(context));case"atan":return Math.atan(this.args[0].evaluate(context));case"atan2":return Math.atan2(this.args[0].evaluate(context),this.args[1].evaluate(context));case"atanh":return Math.atanh(this.args[0].evaluate(context));case"ceil":return Math.ceil(this.args[0].evaluate(context));case"clamp":return Math.min(Math.max(this.args[0].evaluate(context),this.args[1].evaluate(context)),this.args[2].evaluate(context));case"cos":return Math.cos(this.args[0].evaluate(context));case"degrees":return 180*this.args[0].evaluate(context)/Math.PI;case"distance":return Math.sqrt(Math.pow(this.args[0].evaluate(context)-this.args[1].evaluate(context),2));case"dot":case"exp":return Math.exp(this.args[0].evaluate(context));case"exp2":return Math.pow(2,this.args[0].evaluate(context));case"floor":return Math.floor(this.args[0].evaluate(context));case"fma":return this.args[0].evaluate(context)*this.args[1].evaluate(context)+this.args[2].evaluate(context);case"fract":case"modf":return this.args[0].evaluate(context)-Math.floor(this.args[0].evaluate(context));case"inverseSqrt":return 1/Math.sqrt(this.args[0].evaluate(context));case"log":return Math.log(this.args[0].evaluate(context));case"log2":return Math.log2(this.args[0].evaluate(context));case"max":return Math.max(this.args[0].evaluate(context),this.args[1].evaluate(context));case"min":return Math.min(this.args[0].evaluate(context),this.args[1].evaluate(context));case"mix":return this.args[0].evaluate(context)*(1-this.args[2].evaluate(context))+this.args[1].evaluate(context)*this.args[2].evaluate(context);case"pow":return Math.pow(this.args[0].evaluate(context),this.args[1].evaluate(context));case"radians":return this.args[0].evaluate(context)*Math.PI/180;case"round":return Math.round(this.args[0].evaluate(context));case"sign":return Math.sign(this.args[0].evaluate(context));case"sin":return Math.sin(this.args[0].evaluate(context));case"sinh":return Math.sinh(this.args[0].evaluate(context));case"saturate":return Math.min(Math.max(this.args[0].evaluate(context),0),1);case"smoothstep":return this.args[0].evaluate(context)*this.args[0].evaluate(context)*(3-2*this.args[0].evaluate(context));case"sqrt":return Math.sqrt(this.args[0].evaluate(context));case"step":return this.args[0].evaluate(context)<this.args[1].evaluate(context)?0:1;case"tan":return Math.tan(this.args[0].evaluate(context));case"tanh":return Math.tanh(this.args[0].evaluate(context));case"trunc":return Math.trunc(this.args[0].evaluate(context));default:throw new Error("Non const function: "+this.name)}}search(callback){for(const node of this.args)node.search(callback);callback(this)}}class VariableExpr extends Expression{constructor(name){super(),this.name=name}get astNodeType(){return"varExpr"}search(callback){callback(this),this.postfix&&this.postfix.search(callback)}evaluate(context){const constant=context.constants.get(this.name);if(!constant)throw new Error("Cannot evaluate node");return constant.evaluate(context)}}class ConstExpr extends Expression{constructor(name,initializer){super(),this.name=name,this.initializer=initializer}get astNodeType(){return"constExpr"}evaluate(context){var _a,_b;if(this.initializer instanceof CreateExpr){const property=null===(_a=this.postfix)||void 0===_a?void 0:_a.evaluateString(context),type=null===(_b=this.initializer.type)||void 0===_b?void 0:_b.name,struct=context.structs.get(type),memberIndex=null==struct?void 0:struct.getMemberIndex(property);if(-1!=memberIndex){return this.initializer.args[memberIndex].evaluate(context)}console.log(memberIndex)}return this.initializer.evaluate(context)}search(callback){this.initializer.search(callback)}}class LiteralExpr extends Expression{constructor(value){super(),this.value=value}get astNodeType(){return"literalExpr"}evaluate(){return this.value}}class BitcastExpr extends Expression{constructor(type,value){super(),this.type=type,this.value=value}get astNodeType(){return"bitcastExpr"}search(callback){this.value.search(callback)}}class TypecastExpr extends Expression{constructor(type,args){super(),this.type=type,this.args=args}get astNodeType(){return"typecastExpr"}evaluate(context){return this.args[0].evaluate(context)}search(callback){this.searchBlock(this.args,callback)}}class GroupingExpr extends Expression{constructor(contents){super(),this.contents=contents}get astNodeType(){return"groupExpr"}evaluate(context){return this.contents[0].evaluate(context)}search(callback){this.searchBlock(this.contents,callback)}}class ArrayIndex extends Expression{constructor(index){super(),this.index=index}search(callback){this.index.search(callback)}}class Operator extends Expression{constructor(){super()}}class UnaryOperator extends Operator{constructor(operator,right){super(),this.operator=operator,this.right=right}get astNodeType(){return"unaryOp"}evaluate(context){switch(this.operator){case"+":return this.right.evaluate(context);case"-":return-this.right.evaluate(context);case"!":return this.right.evaluate(context)?0:1;case"~":return~this.right.evaluate(context);default:throw new Error("Unknown unary operator: "+this.operator)}}search(callback){this.right.search(callback)}}class BinaryOperator extends Operator{constructor(operator,left,right){super(),this.operator=operator,this.left=left,this.right=right}get astNodeType(){return"binaryOp"}evaluate(context){switch(this.operator){case"+":return this.left.evaluate(context)+this.right.evaluate(context);case"-":return this.left.evaluate(context)-this.right.evaluate(context);case"*":return this.left.evaluate(context)*this.right.evaluate(context);case"/":return this.left.evaluate(context)/this.right.evaluate(context);case"%":return this.left.evaluate(context)%this.right.evaluate(context);case"==":return this.left.evaluate(context)==this.right.evaluate(context)?1:0;case"!=":return this.left.evaluate(context)!=this.right.evaluate(context)?1:0;case"<":return this.left.evaluate(context)<this.right.evaluate(context)?1:0;case">":return this.left.evaluate(context)>this.right.evaluate(context)?1:0;case"<=":return this.left.evaluate(context)<=this.right.evaluate(context)?1:0;case">=":return this.left.evaluate(context)>=this.right.evaluate(context)?1:0;case"&&":return this.left.evaluate(context)&&this.right.evaluate(context)?1:0;case"||":return this.left.evaluate(context)||this.right.evaluate(context)?1:0;default:throw new Error(`Unknown operator ${this.operator}`)}}search(callback){this.left.search(callback),this.right.search(callback)}}class SwitchCase extends Node{constructor(){super()}}class Case extends SwitchCase{constructor(selector,body){super(),this.selector=selector,this.body=body}get astNodeType(){return"case"}search(callback){this.searchBlock(this.body,callback)}}class Default extends SwitchCase{constructor(body){super(),this.body=body}get astNodeType(){return"default"}search(callback){this.searchBlock(this.body,callback)}}class Argument extends Node{constructor(name,type,attributes){super(),this.name=name,this.type=type,this.attributes=attributes}get astNodeType(){return"argument"}}class ElseIf extends Node{constructor(condition,body){super(),this.condition=condition,this.body=body}get astNodeType(){return"elseif"}search(callback){this.condition.search(callback),this.searchBlock(this.body,callback)}}class Member extends Node{constructor(name,type,attributes){super(),this.name=name,this.type=type,this.attributes=attributes}get astNodeType(){return"member"}}class Attribute extends Node{constructor(name,value){super(),this.name=name,this.value=value}get astNodeType(){return"attribute"}}!function(TokenClass){TokenClass[TokenClass.token=0]="token",TokenClass[TokenClass.keyword=1]="keyword",TokenClass[TokenClass.reserved=2]="reserved"}(TokenClass||(TokenClass={}));class TokenType{constructor(name,type,rule){this.name=name,this.type=type,this.rule=rule}toString(){return this.name}}class TokenTypes{}_a=TokenTypes,TokenTypes.none=new TokenType("",TokenClass.reserved,""),TokenTypes.eof=new TokenType("EOF",TokenClass.token,""),TokenTypes.reserved={asm:new TokenType("asm",TokenClass.reserved,"asm"),bf16:new TokenType("bf16",TokenClass.reserved,"bf16"),do:new TokenType("do",TokenClass.reserved,"do"),enum:new TokenType("enum",TokenClass.reserved,"enum"),f16:new TokenType("f16",TokenClass.reserved,"f16"),f64:new TokenType("f64",TokenClass.reserved,"f64"),handle:new TokenType("handle",TokenClass.reserved,"handle"),i8:new TokenType("i8",TokenClass.reserved,"i8"),i16:new TokenType("i16",TokenClass.reserved,"i16"),i64:new TokenType("i64",TokenClass.reserved,"i64"),mat:new TokenType("mat",TokenClass.reserved,"mat"),premerge:new TokenType("premerge",TokenClass.reserved,"premerge"),regardless:new TokenType("regardless",TokenClass.reserved,"regardless"),typedef:new TokenType("typedef",TokenClass.reserved,"typedef"),u8:new TokenType("u8",TokenClass.reserved,"u8"),u16:new TokenType("u16",TokenClass.reserved,"u16"),u64:new TokenType("u64",TokenClass.reserved,"u64"),unless:new TokenType("unless",TokenClass.reserved,"unless"),using:new TokenType("using",TokenClass.reserved,"using"),vec:new TokenType("vec",TokenClass.reserved,"vec"),void:new TokenType("void",TokenClass.reserved,"void")},TokenTypes.keywords={array:new TokenType("array",TokenClass.keyword,"array"),atomic:new TokenType("atomic",TokenClass.keyword,"atomic"),bool:new TokenType("bool",TokenClass.keyword,"bool"),f32:new TokenType("f32",TokenClass.keyword,"f32"),i32:new TokenType("i32",TokenClass.keyword,"i32"),mat2x2:new TokenType("mat2x2",TokenClass.keyword,"mat2x2"),mat2x3:new TokenType("mat2x3",TokenClass.keyword,"mat2x3"),mat2x4:new TokenType("mat2x4",TokenClass.keyword,"mat2x4"),mat3x2:new TokenType("mat3x2",TokenClass.keyword,"mat3x2"),mat3x3:new TokenType("mat3x3",TokenClass.keyword,"mat3x3"),mat3x4:new TokenType("mat3x4",TokenClass.keyword,"mat3x4"),mat4x2:new TokenType("mat4x2",TokenClass.keyword,"mat4x2"),mat4x3:new TokenType("mat4x3",TokenClass.keyword,"mat4x3"),mat4x4:new TokenType("mat4x4",TokenClass.keyword,"mat4x4"),ptr:new TokenType("ptr",TokenClass.keyword,"ptr"),sampler:new TokenType("sampler",TokenClass.keyword,"sampler"),sampler_comparison:new TokenType("sampler_comparison",TokenClass.keyword,"sampler_comparison"),struct:new TokenType("struct",TokenClass.keyword,"struct"),texture_1d:new TokenType("texture_1d",TokenClass.keyword,"texture_1d"),texture_2d:new TokenType("texture_2d",TokenClass.keyword,"texture_2d"),texture_2d_array:new TokenType("texture_2d_array",TokenClass.keyword,"texture_2d_array"),texture_3d:new TokenType("texture_3d",TokenClass.keyword,"texture_3d"),texture_cube:new TokenType("texture_cube",TokenClass.keyword,"texture_cube"),texture_cube_array:new TokenType("texture_cube_array",TokenClass.keyword,"texture_cube_array"),texture_multisampled_2d:new TokenType("texture_multisampled_2d",TokenClass.keyword,"texture_multisampled_2d"),texture_storage_1d:new TokenType("texture_storage_1d",TokenClass.keyword,"texture_storage_1d"),texture_storage_2d:new TokenType("texture_storage_2d",TokenClass.keyword,"texture_storage_2d"),texture_storage_2d_array:new TokenType("texture_storage_2d_array",TokenClass.keyword,"texture_storage_2d_array"),texture_storage_3d:new TokenType("texture_storage_3d",TokenClass.keyword,"texture_storage_3d"),texture_depth_2d:new TokenType("texture_depth_2d",TokenClass.keyword,"texture_depth_2d"),texture_depth_2d_array:new TokenType("texture_depth_2d_array",TokenClass.keyword,"texture_depth_2d_array"),texture_depth_cube:new TokenType("texture_depth_cube",TokenClass.keyword,"texture_depth_cube"),texture_depth_cube_array:new TokenType("texture_depth_cube_array",TokenClass.keyword,"texture_depth_cube_array"),texture_depth_multisampled_2d:new TokenType("texture_depth_multisampled_2d",TokenClass.keyword,"texture_depth_multisampled_2d"),texture_external:new TokenType("texture_external",TokenClass.keyword,"texture_external"),u32:new TokenType("u32",TokenClass.keyword,"u32"),vec2:new TokenType("vec2",TokenClass.keyword,"vec2"),vec3:new TokenType("vec3",TokenClass.keyword,"vec3"),vec4:new TokenType("vec4",TokenClass.keyword,"vec4"),bitcast:new TokenType("bitcast",TokenClass.keyword,"bitcast"),block:new TokenType("block",TokenClass.keyword,"block"),break:new TokenType("break",TokenClass.keyword,"break"),case:new TokenType("case",TokenClass.keyword,"case"),continue:new TokenType("continue",TokenClass.keyword,"continue"),continuing:new TokenType("continuing",TokenClass.keyword,"continuing"),default:new TokenType("default",TokenClass.keyword,"default"),diagnostic:new TokenType("diagnostic",TokenClass.keyword,"diagnostic"),discard:new TokenType("discard",TokenClass.keyword,"discard"),else:new TokenType("else",TokenClass.keyword,"else"),enable:new TokenType("enable",TokenClass.keyword,"enable"),fallthrough:new TokenType("fallthrough",TokenClass.keyword,"fallthrough"),false:new TokenType("false",TokenClass.keyword,"false"),fn:new TokenType("fn",TokenClass.keyword,"fn"),for:new TokenType("for",TokenClass.keyword,"for"),function:new TokenType("function",TokenClass.keyword,"function"),if:new TokenType("if",TokenClass.keyword,"if"),let:new TokenType("let",TokenClass.keyword,"let"),const:new TokenType("const",TokenClass.keyword,"const"),loop:new TokenType("loop",TokenClass.keyword,"loop"),while:new TokenType("while",TokenClass.keyword,"while"),private:new TokenType("private",TokenClass.keyword,"private"),read:new TokenType("read",TokenClass.keyword,"read"),read_write:new TokenType("read_write",TokenClass.keyword,"read_write"),return:new TokenType("return",TokenClass.keyword,"return"),requires:new TokenType("requires",TokenClass.keyword,"requires"),storage:new TokenType("storage",TokenClass.keyword,"storage"),switch:new TokenType("switch",TokenClass.keyword,"switch"),true:new TokenType("true",TokenClass.keyword,"true"),alias:new TokenType("alias",TokenClass.keyword,"alias"),type:new TokenType("type",TokenClass.keyword,"type"),uniform:new TokenType("uniform",TokenClass.keyword,"uniform"),var:new TokenType("var",TokenClass.keyword,"var"),override:new TokenType("override",TokenClass.keyword,"override"),workgroup:new TokenType("workgroup",TokenClass.keyword,"workgroup"),write:new TokenType("write",TokenClass.keyword,"write"),r8unorm:new TokenType("r8unorm",TokenClass.keyword,"r8unorm"),r8snorm:new TokenType("r8snorm",TokenClass.keyword,"r8snorm"),r8uint:new TokenType("r8uint",TokenClass.keyword,"r8uint"),r8sint:new TokenType("r8sint",TokenClass.keyword,"r8sint"),r16uint:new TokenType("r16uint",TokenClass.keyword,"r16uint"),r16sint:new TokenType("r16sint",TokenClass.keyword,"r16sint"),r16float:new TokenType("r16float",TokenClass.keyword,"r16float"),rg8unorm:new TokenType("rg8unorm",TokenClass.keyword,"rg8unorm"),rg8snorm:new TokenType("rg8snorm",TokenClass.keyword,"rg8snorm"),rg8uint:new TokenType("rg8uint",TokenClass.keyword,"rg8uint"),rg8sint:new TokenType("rg8sint",TokenClass.keyword,"rg8sint"),r32uint:new TokenType("r32uint",TokenClass.keyword,"r32uint"),r32sint:new TokenType("r32sint",TokenClass.keyword,"r32sint"),r32float:new TokenType("r32float",TokenClass.keyword,"r32float"),rg16uint:new TokenType("rg16uint",TokenClass.keyword,"rg16uint"),rg16sint:new TokenType("rg16sint",TokenClass.keyword,"rg16sint"),rg16float:new TokenType("rg16float",TokenClass.keyword,"rg16float"),rgba8unorm:new TokenType("rgba8unorm",TokenClass.keyword,"rgba8unorm"),rgba8unorm_srgb:new TokenType("rgba8unorm_srgb",TokenClass.keyword,"rgba8unorm_srgb"),rgba8snorm:new TokenType("rgba8snorm",TokenClass.keyword,"rgba8snorm"),rgba8uint:new TokenType("rgba8uint",TokenClass.keyword,"rgba8uint"),rgba8sint:new TokenType("rgba8sint",TokenClass.keyword,"rgba8sint"),bgra8unorm:new TokenType("bgra8unorm",TokenClass.keyword,"bgra8unorm"),bgra8unorm_srgb:new TokenType("bgra8unorm_srgb",TokenClass.keyword,"bgra8unorm_srgb"),rgb10a2unorm:new TokenType("rgb10a2unorm",TokenClass.keyword,"rgb10a2unorm"),rg11b10float:new TokenType("rg11b10float",TokenClass.keyword,"rg11b10float"),rg32uint:new TokenType("rg32uint",TokenClass.keyword,"rg32uint"),rg32sint:new TokenType("rg32sint",TokenClass.keyword,"rg32sint"),rg32float:new TokenType("rg32float",TokenClass.keyword,"rg32float"),rgba16uint:new TokenType("rgba16uint",TokenClass.keyword,"rgba16uint"),rgba16sint:new TokenType("rgba16sint",TokenClass.keyword,"rgba16sint"),rgba16float:new TokenType("rgba16float",TokenClass.keyword,"rgba16float"),rgba32uint:new TokenType("rgba32uint",TokenClass.keyword,"rgba32uint"),rgba32sint:new TokenType("rgba32sint",TokenClass.keyword,"rgba32sint"),rgba32float:new TokenType("rgba32float",TokenClass.keyword,"rgba32float"),static_assert:new TokenType("static_assert",TokenClass.keyword,"static_assert")},TokenTypes.tokens={decimal_float_literal:new TokenType("decimal_float_literal",TokenClass.token,/((-?[0-9]*\.[0-9]+|-?[0-9]+\.[0-9]*)((e|E)(\+|-)?[0-9]+)?f?)|(-?[0-9]+(e|E)(\+|-)?[0-9]+f?)|([0-9]+f)/),hex_float_literal:new TokenType("hex_float_literal",TokenClass.token,/-?0x((([0-9a-fA-F]*\.[0-9a-fA-F]+|[0-9a-fA-F]+\.[0-9a-fA-F]*)((p|P)(\+|-)?[0-9]+f?)?)|([0-9a-fA-F]+(p|P)(\+|-)?[0-9]+f?))/),int_literal:new TokenType("int_literal",TokenClass.token,/-?0x[0-9a-fA-F]+|0i?|-?[1-9][0-9]*i?/),uint_literal:new TokenType("uint_literal",TokenClass.token,/0x[0-9a-fA-F]+u|0u|[1-9][0-9]*u/),ident:new TokenType("ident",TokenClass.token,/[_a-zA-Z][0-9a-zA-Z_]*/),and:new TokenType("and",TokenClass.token,"&"),and_and:new TokenType("and_and",TokenClass.token,"&&"),arrow:new TokenType("arrow ",TokenClass.token,"->"),attr:new TokenType("attr",TokenClass.token,"@"),forward_slash:new TokenType("forward_slash",TokenClass.token,"/"),bang:new TokenType("bang",TokenClass.token,"!"),bracket_left:new TokenType("bracket_left",TokenClass.token,"["),bracket_right:new TokenType("bracket_right",TokenClass.token,"]"),brace_left:new TokenType("brace_left",TokenClass.token,"{"),brace_right:new TokenType("brace_right",TokenClass.token,"}"),colon:new TokenType("colon",TokenClass.token,":"),comma:new TokenType("comma",TokenClass.token,","),equal:new TokenType("equal",TokenClass.token,"="),equal_equal:new TokenType("equal_equal",TokenClass.token,"=="),not_equal:new TokenType("not_equal",TokenClass.token,"!="),greater_than:new TokenType("greater_than",TokenClass.token,">"),greater_than_equal:new TokenType("greater_than_equal",TokenClass.token,">="),shift_right:new TokenType("shift_right",TokenClass.token,">>"),less_than:new TokenType("less_than",TokenClass.token,"<"),less_than_equal:new TokenType("less_than_equal",TokenClass.token,"<="),shift_left:new TokenType("shift_left",TokenClass.token,"<<"),modulo:new TokenType("modulo",TokenClass.token,"%"),minus:new TokenType("minus",TokenClass.token,"-"),minus_minus:new TokenType("minus_minus",TokenClass.token,"--"),period:new TokenType("period",TokenClass.token,"."),plus:new TokenType("plus",TokenClass.token,"+"),plus_plus:new TokenType("plus_plus",TokenClass.token,"++"),or:new TokenType("or",TokenClass.token,"|"),or_or:new TokenType("or_or",TokenClass.token,"||"),paren_left:new TokenType("paren_left",TokenClass.token,"("),paren_right:new TokenType("paren_right",TokenClass.token,")"),semicolon:new TokenType("semicolon",TokenClass.token,";"),star:new TokenType("star",TokenClass.token,"*"),tilde:new TokenType("tilde",TokenClass.token,"~"),underscore:new TokenType("underscore",TokenClass.token,"_"),xor:new TokenType("xor",TokenClass.token,"^"),plus_equal:new TokenType("plus_equal",TokenClass.token,"+="),minus_equal:new TokenType("minus_equal",TokenClass.token,"-="),times_equal:new TokenType("times_equal",TokenClass.token,"*="),division_equal:new TokenType("division_equal",TokenClass.token,"/="),modulo_equal:new TokenType("modulo_equal",TokenClass.token,"%="),and_equal:new TokenType("and_equal",TokenClass.token,"&="),or_equal:new TokenType("or_equal",TokenClass.token,"|="),xor_equal:new TokenType("xor_equal",TokenClass.token,"^="),shift_right_equal:new TokenType("shift_right_equal",TokenClass.token,">>="),shift_left_equal:new TokenType("shift_left_equal",TokenClass.token,"<<=")},TokenTypes.simpleTokens={"@":_a.tokens.attr,"{":_a.tokens.brace_left,"}":_a.tokens.brace_right,":":_a.tokens.colon,",":_a.tokens.comma,"(":_a.tokens.paren_left,")":_a.tokens.paren_right,";":_a.tokens.semicolon},TokenTypes.literalTokens={"&":_a.tokens.and,"&&":_a.tokens.and_and,"->":_a.tokens.arrow,"/":_a.tokens.forward_slash,"!":_a.tokens.bang,"[":_a.tokens.bracket_left,"]":_a.tokens.bracket_right,"=":_a.tokens.equal,"==":_a.tokens.equal_equal,"!=":_a.tokens.not_equal,">":_a.tokens.greater_than,">=":_a.tokens.greater_than_equal,">>":_a.tokens.shift_right,"<":_a.tokens.less_than,"<=":_a.tokens.less_than_equal,"<<":_a.tokens.shift_left,"%":_a.tokens.modulo,"-":_a.tokens.minus,"--":_a.tokens.minus_minus,".":_a.tokens.period,"+":_a.tokens.plus,"++":_a.tokens.plus_plus,"|":_a.tokens.or,"||":_a.tokens.or_or,"*":_a.tokens.star,"~":_a.tokens.tilde,_:_a.tokens.underscore,"^":_a.tokens.xor,"+=":_a.tokens.plus_equal,"-=":_a.tokens.minus_equal,"*=":_a.tokens.times_equal,"/=":_a.tokens.division_equal,"%=":_a.tokens.modulo_equal,"&=":_a.tokens.and_equal,"|=":_a.tokens.or_equal,"^=":_a.tokens.xor_equal,">>=":_a.tokens.shift_right_equal,"<<=":_a.tokens.shift_left_equal},TokenTypes.regexTokens={decimal_float_literal:_a.tokens.decimal_float_literal,hex_float_literal:_a.tokens.hex_float_literal,int_literal:_a.tokens.int_literal,uint_literal:_a.tokens.uint_literal,ident:_a.tokens.ident},TokenTypes.storage_class=[_a.keywords.function,_a.keywords.private,_a.keywords.workgroup,_a.keywords.uniform,_a.keywords.storage],TokenTypes.access_mode=[_a.keywords.read,_a.keywords.write,_a.keywords.read_write],TokenTypes.sampler_type=[_a.keywords.sampler,_a.keywords.sampler_comparison],TokenTypes.sampled_texture_type=[_a.keywords.texture_1d,_a.keywords.texture_2d,_a.keywords.texture_2d_array,_a.keywords.texture_3d,_a.keywords.texture_cube,_a.keywords.texture_cube_array],TokenTypes.multisampled_texture_type=[_a.keywords.texture_multisampled_2d],TokenTypes.storage_texture_type=[_a.keywords.texture_storage_1d,_a.keywords.texture_storage_2d,_a.keywords.texture_storage_2d_array,_a.keywords.texture_storage_3d],TokenTypes.depth_texture_type=[_a.keywords.texture_depth_2d,_a.keywords.texture_depth_2d_array,_a.keywords.texture_depth_cube,_a.keywords.texture_depth_cube_array,_a.keywords.texture_depth_multisampled_2d],TokenTypes.texture_external_type=[_a.keywords.texture_external],TokenTypes.any_texture_type=[..._a.sampled_texture_type,..._a.multisampled_texture_type,..._a.storage_texture_type,..._a.depth_texture_type,..._a.texture_external_type],TokenTypes.texel_format=[_a.keywords.r8unorm,_a.keywords.r8snorm,_a.keywords.r8uint,_a.keywords.r8sint,_a.keywords.r16uint,_a.keywords.r16sint,_a.keywords.r16float,_a.keywords.rg8unorm,_a.keywords.rg8snorm,_a.keywords.rg8uint,_a.keywords.rg8sint,_a.keywords.r32uint,_a.keywords.r32sint,_a.keywords.r32float,_a.keywords.rg16uint,_a.keywords.rg16sint,_a.keywords.rg16float,_a.keywords.rgba8unorm,_a.keywords.rgba8unorm_srgb,_a.keywords.rgba8snorm,_a.keywords.rgba8uint,_a.keywords.rgba8sint,_a.keywords.bgra8unorm,_a.keywords.bgra8unorm_srgb,_a.keywords.rgb10a2unorm,_a.keywords.rg11b10float,_a.keywords.rg32uint,_a.keywords.rg32sint,_a.keywords.rg32float,_a.keywords.rgba16uint,_a.keywords.rgba16sint,_a.keywords.rgba16float,_a.keywords.rgba32uint,_a.keywords.rgba32sint,_a.keywords.rgba32float],TokenTypes.const_literal=[_a.tokens.int_literal,_a.tokens.uint_literal,_a.tokens.decimal_float_literal,_a.tokens.hex_float_literal,_a.keywords.true,_a.keywords.false],TokenTypes.literal_or_ident=[_a.tokens.ident,_a.tokens.int_literal,_a.tokens.uint_literal,_a.tokens.decimal_float_literal,_a.tokens.hex_float_literal],TokenTypes.element_count_expression=[_a.tokens.int_literal,_a.tokens.uint_literal,_a.tokens.ident],TokenTypes.template_types=[_a.keywords.vec2,_a.keywords.vec3,_a.keywords.vec4,_a.keywords.mat2x2,_a.keywords.mat2x3,_a.keywords.mat2x4,_a.keywords.mat3x2,_a.keywords.mat3x3,_a.keywords.mat3x4,_a.keywords.mat4x2,_a.keywords.mat4x3,_a.keywords.mat4x4,_a.keywords.atomic,_a.keywords.bitcast,..._a.any_texture_type],TokenTypes.attribute_name=[_a.tokens.ident,_a.keywords.block,_a.keywords.diagnostic],TokenTypes.assignment_operators=[_a.tokens.equal,_a.tokens.plus_equal,_a.tokens.minus_equal,_a.tokens.times_equal,_a.tokens.division_equal,_a.tokens.modulo_equal,_a.tokens.and_equal,_a.tokens.or_equal,_a.tokens.xor_equal,_a.tokens.shift_right_equal,_a.tokens.shift_left_equal],TokenTypes.increment_operators=[_a.tokens.plus_plus,_a.tokens.minus_minus];class Token{constructor(type,lexeme,line){this.type=type,this.lexeme=lexeme,this.line=line}toString(){return this.lexeme}isTemplateType(){return-1!=TokenTypes.template_types.indexOf(this.type)}isArrayType(){return this.type==TokenTypes.keywords.array}isArrayOrTemplateType(){return this.isArrayType()||this.isTemplateType()}}class WgslScanner{constructor(source){this._tokens=[],this._start=0,this._current=0,this._line=1,this._source=null!=source?source:""}scanTokens(){for(;!this._isAtEnd();)if(this._start=this._current,!this.scanToken())throw`Invalid syntax at line ${this._line}`;return this._tokens.push(new Token(TokenTypes.eof,"",this._line)),this._tokens}scanToken(){let lexeme=this._advance();if("\n"==lexeme)return this._line++,!0;if(this._isWhitespace(lexeme))return!0;if("/"==lexeme){if("/"==this._peekAhead()){for(;"\n"!=lexeme;){if(this._isAtEnd())return!0;lexeme=this._advance()}return this._line++,!0}if("*"==this._peekAhead()){this._advance();let commentLevel=1;for(;commentLevel>0;){if(this._isAtEnd())return!0;if(lexeme=this._advance(),"\n"==lexeme)this._line++;else if("*"==lexeme){if("/"==this._peekAhead()&&(this._advance(),commentLevel--,0==commentLevel))return!0}else"/"==lexeme&&"*"==this._peekAhead()&&(this._advance(),commentLevel++)}return!0}}const simpleToken=TokenTypes.simpleTokens[lexeme];if(simpleToken)return this._addToken(simpleToken),!0;let matchType=TokenTypes.none;const isAlpha=this._isAlpha(lexeme),isUnderscore="_"===lexeme;if(this._isAlphaNumeric(lexeme)){let nextChar=this._peekAhead();for(;this._isAlphaNumeric(nextChar);)lexeme+=this._advance(),nextChar=this._peekAhead()}if(isAlpha){const matchedType=TokenTypes.keywords[lexeme];if(matchedType)return this._addToken(matchedType),!0}if(isAlpha||isUnderscore)return this._addToken(TokenTypes.tokens.ident),!0;for(;;){let matchedType=this._findType(lexeme);const nextLexeme=this._peekAhead();if("-"==lexeme&&this._tokens.length>0){if("="==nextLexeme)return this._current++,lexeme+=nextLexeme,this._addToken(TokenTypes.tokens.minus_equal),!0;if("-"==nextLexeme)return this._current++,lexeme+=nextLexeme,this._addToken(TokenTypes.tokens.minus_minus),!0;const ti=this._tokens.length-1;if((-1!=TokenTypes.literal_or_ident.indexOf(this._tokens[ti].type)||this._tokens[ti].type==TokenTypes.tokens.paren_right)&&">"!=nextLexeme)return this._addToken(matchedType),!0}if(">"==lexeme&&(">"==nextLexeme||"="==nextLexeme)){let foundLessThan=!1,ti=this._tokens.length-1;for(let count=0;count<5&&ti>=0&&-1===TokenTypes.assignment_operators.indexOf(this._tokens[ti].type);++count,--ti)if(this._tokens[ti].type===TokenTypes.tokens.less_than){ti>0&&this._tokens[ti-1].isArrayOrTemplateType()&&(foundLessThan=!0);break}if(foundLessThan)return this._addToken(matchedType),!0}if(matchedType===TokenTypes.none){let lookAheadLexeme=lexeme,lookAhead=0;const maxLookAhead=2;for(let li=0;li<maxLookAhead;++li)if(lookAheadLexeme+=this._peekAhead(li),matchedType=this._findType(lookAheadLexeme),matchedType!==TokenTypes.none){lookAhead=li;break}if(matchedType===TokenTypes.none)return matchType!==TokenTypes.none&&(this._current--,this._addToken(matchType),!0);lexeme=lookAheadLexeme,this._current+=lookAhead+1}if(matchType=matchedType,this._isAtEnd())break;lexeme+=this._advance()}return matchType!==TokenTypes.none&&(this._addToken(matchType),!0)}_findType(lexeme){for(const name in TokenTypes.regexTokens){const type=TokenTypes.regexTokens[name];if(this._match(lexeme,type.rule))return type}const type=TokenTypes.literalTokens[lexeme];return type||TokenTypes.none}_match(lexeme,rule){const match=rule.exec(lexeme);return match&&0==match.index&&match[0]==lexeme}_isAtEnd(){return this._current>=this._source.length}_isAlpha(c){return c>="a"&&c<="z"||c>="A"&&c<="Z"}_isAlphaNumeric(c){return c>="a"&&c<="z"||c>="A"&&c<="Z"||"_"==c||c>="0"&&c<="9"}_isWhitespace(c){return" "==c||"\t"==c||"\r"==c}_advance(amount=0){let c=this._source[this._current];return amount=amount||0,amount++,this._current+=amount,c}_peekAhead(offset=0){return offset=offset||0,this._current+offset>=this._source.length?"\0":this._source[this._current+offset]}_addToken(type){const text=this._source.substring(this._start,this._current);this._tokens.push(new Token(type,text,this._line))}}class WgslParser{constructor(){this._tokens=[],this._current=0,this._currentLine=0,this._context=new ParseContext,this._deferArrayCountEval=[]}parse(tokensOrCode){this._initialize(tokensOrCode),this._deferArrayCountEval.length=0;const statements=[];for(;!this._isAtEnd();){const statement=this._global_decl_or_directive();if(!statement)break;statements.push(statement)}if(this._deferArrayCountEval.length>0){for(const arrayDecl of this._deferArrayCountEval){const arrayType=arrayDecl.arrayType,countNode=arrayDecl.countNode;if(countNode instanceof VariableExpr){const name=countNode.name,constant=this._context.constants.get(name);if(constant)try{const count=constant.evaluate(this._context);arrayType.count=count}catch(e){}}}this._deferArrayCountEval.length=0}return statements}_initialize(tokensOrCode){if(tokensOrCode)if("string"==typeof tokensOrCode){const scanner=new WgslScanner(tokensOrCode);this._tokens=scanner.scanTokens()}else this._tokens=tokensOrCode;else this._tokens=[];this._current=0}_error(token,message){return{token:token,message:message,toString:function(){return`${message}`}}}_isAtEnd(){return this._current>=this._tokens.length||this._peek().type==TokenTypes.eof}_match(types){if(types instanceof TokenType)return!!this._check(types)&&(this._advance(),!0);for(let i=0,l=types.length;i<l;++i){const type=types[i];if(this._check(type))return this._advance(),!0}return!1}_consume(types,message){if(this._check(types))return this._advance();throw this._error(this._peek(),message)}_check(types){if(this._isAtEnd())return!1;const tk=this._peek();if(types instanceof Array){const t=tk.type;return-1!=types.indexOf(t)}return tk.type==types}_advance(){var _a,_b;return this._currentLine=null!==(_b=null===(_a=this._peek())||void 0===_a?void 0:_a.line)&&void 0!==_b?_b:-1,this._isAtEnd()||this._current++,this._previous()}_peek(){return this._tokens[this._current]}_previous(){return this._tokens[this._current-1]}_global_decl_or_directive(){for(;this._match(TokenTypes.tokens.semicolon)&&!this._isAtEnd(););if(this._match(TokenTypes.keywords.alias)){const type=this._type_alias();return this._consume(TokenTypes.tokens.semicolon,"Expected ';'"),type}if(this._match(TokenTypes.keywords.diagnostic)){const directive=this._diagnostic();return this._consume(TokenTypes.tokens.semicolon,"Expected ';'"),directive}if(this._match(TokenTypes.keywords.requires)){const requires=this._requires_directive();return this._consume(TokenTypes.tokens.semicolon,"Expected ';'"),requires}if(this._match(TokenTypes.keywords.enable)){const enable=this._enable_directive();return this._consume(TokenTypes.tokens.semicolon,"Expected ';'"),enable}const attrs=this._attribute();if(this._check(TokenTypes.keywords.var)){const _var=this._global_variable_decl();return null!=_var&&(_var.attributes=attrs),this._consume(TokenTypes.tokens.semicolon,"Expected ';'."),_var}if(this._check(TokenTypes.keywords.override)){const _override=this._override_variable_decl();return null!=_override&&(_override.attributes=attrs),this._consume(TokenTypes.tokens.semicolon,"Expected ';'."),_override}if(this._check(TokenTypes.keywords.let)){const _let=this._global_let_decl();return null!=_let&&(_let.attributes=attrs),this._consume(TokenTypes.tokens.semicolon,"Expected ';'."),_let}if(this._check(TokenTypes.keywords.const)){const _const=this._global_const_decl();return null!=_const&&(_const.attributes=attrs),this._consume(TokenTypes.tokens.semicolon,"Expected ';'."),_const}if(this._check(TokenTypes.keywords.struct)){const _struct=this._struct_decl();return null!=_struct&&(_struct.attributes=attrs),_struct}if(this._check(TokenTypes.keywords.fn)){const _fn=this._function_decl();return null!=_fn&&(_fn.attributes=attrs),_fn}return null}_function_decl(){if(!this._match(TokenTypes.keywords.fn))return null;const startLine=this._currentLine,name=this._consume(TokenTypes.tokens.ident,"Expected function name.").toString();this._consume(TokenTypes.tokens.paren_left,"Expected '(' for function arguments.");const args=[];if(!this._check(TokenTypes.tokens.paren_right))do{if(this._check(TokenTypes.tokens.paren_right))break;const argAttrs=this._attribute(),name=this._consume(TokenTypes.tokens.ident,"Expected argument name.").toString();this._consume(TokenTypes.tokens.colon,"Expected ':' for argument type.");const typeAttrs=this._attribute(),type=this._type_decl();null!=type&&(type.attributes=typeAttrs,args.push(new Argument(name,type,argAttrs)))}while(this._match(TokenTypes.tokens.comma));this._consume(TokenTypes.tokens.paren_right,"Expected ')' after function arguments.");let _return=null;if(this._match(TokenTypes.tokens.arrow)){const attrs=this._attribute();_return=this._type_decl(),null!=_return&&(_return.attributes=attrs)}const body=this._compound_statement(),endLine=this._currentLine;return new Function(name,args,_return,body,startLine,endLine)}_compound_statement(){const statements=[];for(this._consume(TokenTypes.tokens.brace_left,"Expected '{' for block.");!this._check(TokenTypes.tokens.brace_right);){const statement=this._statement();null!==statement&&statements.push(statement)}return this._consume(TokenTypes.tokens.brace_right,"Expected '}' for block."),statements}_statement(){for(;this._match(TokenTypes.tokens.semicolon)&&!this._isAtEnd(););if(this._check(TokenTypes.tokens.attr)&&this._attribute(),this._check(TokenTypes.keywords.if))return this._if_statement();if(this._check(TokenTypes.keywords.switch))return this._switch_statement();if(this._check(TokenTypes.keywords.loop))return this._loop_statement();if(this._check(TokenTypes.keywords.for))return this._for_statement();if(this._check(TokenTypes.keywords.while))return this._while_statement();if(this._check(TokenTypes.keywords.continuing))return this._continuing_statement();if(this._check(TokenTypes.keywords.static_assert))return this._static_assert_statement();if(this._check(TokenTypes.tokens.brace_left))return this._compound_statement();let result=null;return result=this._check(TokenTypes.keywords.return)?this._return_statement():this._check([TokenTypes.keywords.var,TokenTypes.keywords.let,TokenTypes.keywords.const])?this._variable_statement():this._match(TokenTypes.keywords.discard)?new Discard:this._match(TokenTypes.keywords.break)?new Break:this._match(TokenTypes.keywords.continue)?new Continue:this._increment_decrement_statement()||this._func_call_statement()||this._assignment_statement(),null!=result&&this._consume(TokenTypes.tokens.semicolon,"Expected ';' after statement."),result}_static_assert_statement(){if(!this._match(TokenTypes.keywords.static_assert))return null;const expression=this._optional_paren_expression();return new StaticAssert(expression)}_while_statement(){if(!this._match(TokenTypes.keywords.while))return null;const condition=this._optional_paren_expression();this._check(TokenTypes.tokens.attr)&&this._attribute();const block=this._compound_statement();return new While(condition,block)}_continuing_statement(){if(!this._match(TokenTypes.keywords.continuing))return null;const block=this._compound_statement();return new Continuing(block)}_for_statement(){if(!this._match(TokenTypes.keywords.for))return null;this._consume(TokenTypes.tokens.paren_left,"Expected '('.");const init=this._check(TokenTypes.tokens.semicolon)?null:this._for_init();this._consume(TokenTypes.tokens.semicolon,"Expected ';'.");const condition=this._check(TokenTypes.tokens.semicolon)?null:this._short_circuit_or_expression();this._consume(TokenTypes.tokens.semicolon,"Expected ';'.");const increment=this._check(TokenTypes.tokens.paren_right)?null:this._for_increment();this._consume(TokenTypes.tokens.paren_right,"Expected ')'."),this._check(TokenTypes.tokens.attr)&&this._attribute();const body=this._compound_statement();return new For(init,condition,increment,body)}_for_init(){return this._variable_statement()||this._func_call_statement()||this._assignment_statement()}_for_increment(){return this._func_call_statement()||this._increment_decrement_statement()||this._assignment_statement()}_variable_statement(){if(this._check(TokenTypes.keywords.var)){const _var=this._variable_decl();if(null===_var)throw this._error(this._peek(),"Variable declaration expected.");let value=null;return this._match(TokenTypes.tokens.equal)&&(value=this._short_circuit_or_expression()),new Var(_var.name,_var.type,_var.storage,_var.access,value)}if(this._match(TokenTypes.keywords.let)){const name=this._consume(TokenTypes.tokens.ident,"Expected name for let.").toString();let type=null;if(this._match(TokenTypes.tokens.colon)){const typeAttrs=this._attribute();type=this._type_decl(),null!=type&&(type.attributes=typeAttrs)}this._consume(TokenTypes.tokens.equal,"Expected '=' for let.");const value=this._short_circuit_or_expression();return new Let(name,type,null,null,value)}if(this._match(TokenTypes.keywords.const)){const name=this._consume(TokenTypes.tokens.ident,"Expected name for const.").toString();let type=null;if(this._match(TokenTypes.tokens.colon)){const typeAttrs=this._attribute();type=this._type_decl(),null!=type&&(type.attributes=typeAttrs)}this._consume(TokenTypes.tokens.equal,"Expected '=' for const.");const value=this._short_circuit_or_expression();return new Const(name,type,null,null,value)}return null}_increment_decrement_statement(){const savedPos=this._current,_var=this._unary_expression();if(null==_var)return null;if(!this._check(TokenTypes.increment_operators))return this._current=savedPos,null;const token=this._consume(TokenTypes.increment_operators,"Expected increment operator");return new Increment(token.type===TokenTypes.tokens.plus_plus?IncrementOperator.increment:IncrementOperator.decrement,_var)}_assignment_statement(){let _var=null;if(this._check(TokenTypes.tokens.brace_right))return null;let isUnderscore=this._match(TokenTypes.tokens.underscore);if(isUnderscore||(_var=this._unary_expression()),!isUnderscore&&null==_var)return null;const type=this._consume(TokenTypes.assignment_operators,"Expected assignment operator."),value=this._short_circuit_or_expression();return new Assign(AssignOperator.parse(type.lexeme),_var,value)}_func_call_statement(){if(!this._check(TokenTypes.tokens.ident))return null;const savedPos=this._current,name=this._consume(TokenTypes.tokens.ident,"Expected function name."),args=this._argument_expression_list();return null===args?(this._current=savedPos,null):new Call(name.lexeme,args)}_loop_statement(){if(!this._match(TokenTypes.keywords.loop))return null;this._check(TokenTypes.tokens.attr)&&this._attribute(),this._consume(TokenTypes.tokens.brace_left,"Expected '{' for loop.");const statements=[];let statement=this._statement();for(;null!==statement;){if(Array.isArray(statement))for(let s of statement)statements.push(s);else statements.push(statement);statement=this._statement()}let continuing=null;return this._match(TokenTypes.keywords.continuing)&&(continuing=this._compound_statement()),this._consume(TokenTypes.tokens.brace_right,"Expected '}' for loop."),new Loop(statements,continuing)}_switch_statement(){if(!this._match(TokenTypes.keywords.switch))return null;const condition=this._optional_paren_expression();this._check(TokenTypes.tokens.attr)&&this._attribute(),this._consume(TokenTypes.tokens.brace_left,"Expected '{' for switch.");const body=this._switch_body();if(null==body||0==body.length)throw this._error(this._previous(),"Expected 'case' or 'default'.");return this._consume(TokenTypes.tokens.brace_right,"Expected '}' for switch."),new Switch(condition,body)}_switch_body(){const cases=[];if(this._match(TokenTypes.keywords.case)){const selector=this._case_selectors();this._match(TokenTypes.tokens.colon),this._check(TokenTypes.tokens.attr)&&this._attribute(),this._consume(TokenTypes.tokens.brace_left,"Exected '{' for switch case.");const body=this._case_body();this._consume(TokenTypes.tokens.brace_right,"Exected '}' for switch case."),cases.push(new Case(selector,body))}if(this._match(TokenTypes.keywords.default)){this._match(TokenTypes.tokens.colon),this._check(TokenTypes.tokens.attr)&&this._attribute(),this._consume(TokenTypes.tokens.brace_left,"Exected '{' for switch default.");const body=this._case_body();this._consume(TokenTypes.tokens.brace_right,"Exected '}' for switch default."),cases.push(new Default(body))}if(this._check([TokenTypes.keywords.default,TokenTypes.keywords.case])){const _cases=this._switch_body();cases.push(_cases[0])}return cases}_case_selectors(){const selectors=[this._shift_expression()];for(;this._match(TokenTypes.tokens.comma);)selectors.push(this._shift_expression());return selectors}_case_body(){if(this._match(TokenTypes.keywords.fallthrough))return this._consume(TokenTypes.tokens.semicolon,"Expected ';'"),[];let statement=this._statement();if(null==statement)return[];statement instanceof Array||(statement=[statement]);const nextStatement=this._case_body();return 0==nextStatement.length?statement:[...statement,nextStatement[0]]}_if_statement(){if(!this._match(TokenTypes.keywords.if))return null;const condition=this._optional_paren_expression();this._check(TokenTypes.tokens.attr)&&this._attribute();const block=this._compound_statement();let elseif=[];this._match_elseif()&&(this._check(TokenTypes.tokens.attr)&&this._attribute(),elseif=this._elseif_statement(elseif));let _else=null;return this._match(TokenTypes.keywords.else)&&(this._check(TokenTypes.tokens.attr)&&this._attribute(),_else=this._compound_statement()),new If(condition,block,elseif,_else)}_match_elseif(){return this._tokens[this._current].type===TokenTypes.keywords.else&&this._tokens[this._current+1].type===TokenTypes.keywords.if&&(this._advance(),this._advance(),!0)}_elseif_statement(elseif=[]){const condition=this._optional_paren_expression(),block=this._compound_statement();return elseif.push(new ElseIf(condition,block)),this._match_elseif()&&(this._check(TokenTypes.tokens.attr)&&this._attribute(),this._elseif_statement(elseif)),elseif}_return_statement(){if(!this._match(TokenTypes.keywords.return))return null;const value=this._short_circuit_or_expression();return new Return(value)}_short_circuit_or_expression(){let expr=this._short_circuit_and_expr();for(;this._match(TokenTypes.tokens.or_or);)expr=new BinaryOperator(this._previous().toString(),expr,this._short_circuit_and_expr());return expr}_short_circuit_and_expr(){let expr=this._inclusive_or_expression();for(;this._match(TokenTypes.tokens.and_and);)expr=new BinaryOperator(this._previous().toString(),expr,this._inclusive_or_expression());return expr}_inclusive_or_expression(){let expr=this._exclusive_or_expression();for(;this._match(TokenTypes.tokens.or);)expr=new BinaryOperator(this._previous().toString(),expr,this._exclusive_or_expression());return expr}_exclusive_or_expression(){let expr=this._and_expression();for(;this._match(TokenTypes.tokens.xor);)expr=new BinaryOperator(this._previous().toString(),expr,this._and_expression());return expr}_and_expression(){let expr=this._equality_expression();for(;this._match(TokenTypes.tokens.and);)expr=new BinaryOperator(this._previous().toString(),expr,this._equality_expression());return expr}_equality_expression(){const expr=this._relational_expression();return this._match([TokenTypes.tokens.equal_equal,TokenTypes.tokens.not_equal])?new BinaryOperator(this._previous().toString(),expr,this._relational_expression()):expr}_relational_expression(){let expr=this._shift_expression();for(;this._match([TokenTypes.tokens.less_than,TokenTypes.tokens.greater_than,TokenTypes.tokens.less_than_equal,TokenTypes.tokens.greater_than_equal]);)expr=new BinaryOperator(this._previous().toString(),expr,this._shift_expression());return expr}_shift_expression(){let expr=this._additive_expression();for(;this._match([TokenTypes.tokens.shift_left,TokenTypes.tokens.shift_right]);)expr=new BinaryOperator(this._previous().toString(),expr,this._additive_expression());return expr}_additive_expression(){let expr=this._multiplicative_expression();for(;this._match([TokenTypes.tokens.plus,TokenTypes.tokens.minus]);)expr=new BinaryOperator(this._previous().toString(),expr,this._multiplicative_expression());return expr}_multiplicative_expression(){let expr=this._unary_expression();for(;this._match([TokenTypes.tokens.star,TokenTypes.tokens.forward_slash,TokenTypes.tokens.modulo]);)expr=new BinaryOperator(this._previous().toString(),expr,this._unary_expression());return expr}_unary_expression(){return this._match([TokenTypes.tokens.minus,TokenTypes.tokens.bang,TokenTypes.tokens.tilde,TokenTypes.tokens.star,TokenTypes.tokens.and])?new UnaryOperator(this._previous().toString(),this._unary_expression()):this._singular_expression()}_singular_expression(){const expr=this._primary_expression(),p=this._postfix_expression();return p&&(expr.postfix=p),expr}_postfix_expression(){if(this._match(TokenTypes.tokens.bracket_left)){const expr=this._short_circuit_or_expression();this._consume(TokenTypes.tokens.bracket_right,"Expected ']'.");const arrayIndex=new ArrayIndex(expr),p=this._postfix_expression();return p&&(arrayIndex.postfix=p),arrayIndex}if(this._match(TokenTypes.tokens.period)){const name=this._consume(TokenTypes.tokens.ident,"Expected member name."),p=this._postfix_expression(),expr=new StringExpr(name.lexeme);return p&&(expr.postfix=p),expr}return null}_getStruct(name){if(this._context.aliases.has(name)){return this._context.aliases.get(name).type}if(this._context.structs.has(name)){return this._context.structs.get(name)}return null}_primary_expression(){if(this._match(TokenTypes.tokens.ident)){const name=this._previous().toString();if(this._check(TokenTypes.tokens.paren_left)){const args=this._argument_expression_list(),struct=this._getStruct(name);return null!=struct?new CreateExpr(struct,args):new CallExpr(name,args)}if(this._context.constants.has(name)){const c=this._context.constants.get(name);return new ConstExpr(name,c.value)}return new VariableExpr(name)}if(this._match(TokenTypes.const_literal))return new LiteralExpr(parseFloat(this._previous().toString()));if(this._check(TokenTypes.tokens.paren_left))return this._paren_expression();if(this._match(TokenTypes.keywords.bitcast)){this._consume(TokenTypes.tokens.less_than,"Expected '<'.");const type=this._type_decl();this._consume(TokenTypes.tokens.greater_than,"Expected '>'.");const value=this._paren_expression();return new BitcastExpr(type,value)}const type=this._type_decl(),args=this._argument_expression_list();return new TypecastExpr(type,args)}_argument_expression_list(){if(!this._match(TokenTypes.tokens.paren_left))return null;const args=[];do{if(this._check(TokenTypes.tokens.paren_right))break;const arg=this._short_circuit_or_expression();args.push(arg)}while(this._match(TokenTypes.tokens.comma));return this._consume(TokenTypes.tokens.paren_right,"Expected ')' for agument list"),args}_optional_paren_expression(){this._match(TokenTypes.tokens.paren_left);const expr=this._short_circuit_or_expression();return this._match(TokenTypes.tokens.paren_right),new GroupingExpr([expr])}_paren_expression(){this._consume(TokenTypes.tokens.paren_left,"Expected '('.");const expr=this._short_circuit_or_expression();return this._consume(TokenTypes.tokens.paren_right,"Expected ')'."),new GroupingExpr([expr])}_struct_decl(){if(!this._match(TokenTypes.keywords.struct))return null;const startLine=this._currentLine,name=this._consume(TokenTypes.tokens.ident,"Expected name for struct.").toString();this._consume(TokenTypes.tokens.brace_left,"Expected '{' for struct body.");const members=[];for(;!this._check(TokenTypes.tokens.brace_right);){const memberAttrs=this._attribute(),memberName=this._consume(TokenTypes.tokens.ident,"Expected variable name.").toString();this._consume(TokenTypes.tokens.colon,"Expected ':' for struct member type.");const typeAttrs=this._attribute(),memberType=this._type_decl();null!=memberType&&(memberType.attributes=typeAttrs),this._check(TokenTypes.tokens.brace_right)?this._match(TokenTypes.tokens.comma):this._consume(TokenTypes.tokens.comma,"Expected ',' for struct member."),members.push(new Member(memberName,memberType,memberAttrs))}this._consume(TokenTypes.tokens.brace_right,"Expected '}' after struct body.");const endLine=this._currentLine,structNode=new Struct(name,members,startLine,endLine);return this._context.structs.set(name,structNode),structNode}_global_variable_decl(){const _var=this._variable_decl();return _var&&this._match(TokenTypes.tokens.equal)&&(_var.value=this._const_expression()),_var}_override_variable_decl(){const _override=this._override_decl();return _override&&this._match(TokenTypes.tokens.equal)&&(_override.value=this._const_expression()),_override}_global_const_decl(){if(!this._match(TokenTypes.keywords.const))return null;const name=this._consume(TokenTypes.tokens.ident,"Expected variable name");let type=null;if(this._match(TokenTypes.tokens.colon)){const attrs=this._attribute();type=this._type_decl(),null!=type&&(type.attributes=attrs)}let value=null;if(this._match(TokenTypes.tokens.equal)){const valueExpr=this._short_circuit_or_expression();if(valueExpr instanceof CreateExpr)value=valueExpr;else if(valueExpr instanceof ConstExpr&&valueExpr.initializer instanceof CreateExpr)value=valueExpr.initializer;else try{const constValue=valueExpr.evaluate(this._context);value=new LiteralExpr(constValue)}catch(_a){value=valueExpr}}const c=new Const(name.toString(),type,"","",value);return this._context.constants.set(c.name,c),c}_global_let_decl(){if(!this._match(TokenTypes.keywords.let))return null;const name=this._consume(TokenTypes.tokens.ident,"Expected variable name");let type=null;if(this._match(TokenTypes.tokens.colon)){const attrs=this._attribute();type=this._type_decl(),null!=type&&(type.attributes=attrs)}let value=null;return this._match(TokenTypes.tokens.equal)&&(value=this._const_expression()),new Let(name.toString(),type,"","",value)}_const_expression(){if(this._match(TokenTypes.const_literal))return new StringExpr(this._previous().toString());const type=this._type_decl();this._consume(TokenTypes.tokens.paren_left,"Expected '('.");let args=[];for(;!this._check(TokenTypes.tokens.paren_right)&&(args.push(this._const_expression()),this._check(TokenTypes.tokens.comma));)this._advance();return this._consume(TokenTypes.tokens.paren_right,"Expected ')'."),new CreateExpr(type,args)}_variable_decl(){if(!this._match(TokenTypes.keywords.var))return null;let storage="",access="";this._match(TokenTypes.tokens.less_than)&&(storage=this._consume(TokenTypes.storage_class,"Expected storage_class.").toString(),this._match(TokenTypes.tokens.comma)&&(access=this._consume(TokenTypes.access_mode,"Expected access_mode.").toString()),this._consume(TokenTypes.tokens.greater_than,"Expected '>'."));const name=this._consume(TokenTypes.tokens.ident,"Expected variable name");let type=null;if(this._match(TokenTypes.tokens.colon)){const attrs=this._attribute();type=this._type_decl(),null!=type&&(type.attributes=attrs)}return new Var(name.toString(),type,storage,access,null)}_override_decl(){if(!this._match(TokenTypes.keywords.override))return null;const name=this._consume(TokenTypes.tokens.ident,"Expected variable name");let type=null;if(this._match(TokenTypes.tokens.colon)){const attrs=this._attribute();type=this._type_decl(),null!=type&&(type.attributes=attrs)}return new Override(name.toString(),type,null)}_diagnostic(){this._consume(TokenTypes.tokens.paren_left,"Expected '('");const severity=this._consume(TokenTypes.tokens.ident,"Expected severity control name.");this._consume(TokenTypes.tokens.comma,"Expected ','");const rule=this._consume(TokenTypes.tokens.ident,"Expected diagnostic rule name.");return this._consume(TokenTypes.tokens.paren_right,"Expected ')'"),new Diagnostic(severity.toString(),rule.toString())}_enable_directive(){const name=this._consume(TokenTypes.tokens.ident,"identity expected.");return new Enable(name.toString())}_requires_directive(){const extensions=[this._consume(TokenTypes.tokens.ident,"identity expected.").toString()];for(;this._match(TokenTypes.tokens.comma);){const name=this._consume(TokenTypes.tokens.ident,"identity expected.");extensions.push(name.toString())}return new Requires(extensions)}_type_alias(){const name=this._consume(TokenTypes.tokens.ident,"identity expected.");this._consume(TokenTypes.tokens.equal,"Expected '=' for type alias.");let aliasType=this._type_decl();if(null===aliasType)throw this._error(this._peek(),"Expected Type for Alias.");this._context.aliases.has(aliasType.name)&&(aliasType=this._context.aliases.get(aliasType.name).type);const aliasNode=new Alias(name.toString(),aliasType);return this._context.aliases.set(aliasNode.name,aliasNode),aliasNode}_type_decl(){if(this._check([TokenTypes.tokens.ident,...TokenTypes.texel_format,TokenTypes.keywords.bool,TokenTypes.keywords.f32,TokenTypes.keywords.i32,TokenTypes.keywords.u32])){const type=this._advance(),typeName=type.toString();return this._context.structs.has(typeName)?this._context.structs.get(typeName):this._context.aliases.has(typeName)?this._context.aliases.get(typeName).type:new Type(type.toString())}let type=this._texture_sampler_types();if(type)return type;if(this._check(TokenTypes.template_types)){let type=this._advance().toString(),format=null,access=null;return this._match(TokenTypes.tokens.less_than)&&(format=this._type_decl(),access=null,this._match(TokenTypes.tokens.comma)&&(access=this._consume(TokenTypes.access_mode,"Expected access_mode for pointer").toString()),this._consume(TokenTypes.tokens.greater_than,"Expected '>' for type.")),new TemplateType(type,format,access)}if(this._match(TokenTypes.keywords.ptr)){let pointer=this._previous().toString();this._consume(TokenTypes.tokens.less_than,"Expected '<' for pointer.");const storage=this._consume(TokenTypes.storage_class,"Expected storage_class for pointer");this._consume(TokenTypes.tokens.comma,"Expected ',' for pointer.");const decl=this._type_decl();let access=null;return this._match(TokenTypes.tokens.comma)&&(access=this._consume(TokenTypes.access_mode,"Expected access_mode for pointer").toString()),this._consume(TokenTypes.tokens.greater_than,"Expected '>' for pointer."),new PointerType(pointer,storage.toString(),decl,access)}const attrs=this._attribute();if(this._match(TokenTypes.keywords.array)){let format=null,countInt=-1;const array=this._previous();let countNode=null;if(this._match(TokenTypes.tokens.less_than)){format=this._type_decl(),this._context.aliases.has(format.name)&&(format=this._context.aliases.get(format.name).type);let count="";if(this._match(TokenTypes.tokens.comma)){countNode=this._shift_expression();try{count=countNode.evaluate(this._context).toString(),countNode=null}catch(e){count="1"}}this._consume(TokenTypes.tokens.greater_than,"Expected '>' for array."),countInt=count?parseInt(count):0}const arrayType=new ArrayType(array.toString(),attrs,format,countInt);return countNode&&this._deferArrayCountEval.push({arrayType:arrayType,countNode:countNode}),arrayType}return null}_texture_sampler_types(){if(this._match(TokenTypes.sampler_type))return new SamplerType(this._previous().toString(),null,null);if(this._match(TokenTypes.depth_texture_type))return new SamplerType(this._previous().toString(),null,null);if(this._match(TokenTypes.sampled_texture_type)||this._match(TokenTypes.multisampled_texture_type)){const sampler=this._previous();this._consume(TokenTypes.tokens.less_than,"Expected '<' for sampler type.");const format=this._type_decl();return this._consume(TokenTypes.tokens.greater_than,"Expected '>' for sampler type."),new SamplerType(sampler.toString(),format,null)}if(this._match(TokenTypes.storage_texture_type)){const sampler=this._previous();this._consume(TokenTypes.tokens.less_than,"Expected '<' for sampler type.");const format=this._consume(TokenTypes.texel_format,"Invalid texel format.").toString();this._consume(TokenTypes.tokens.comma,"Expected ',' after texel format.");const access=this._consume(TokenTypes.access_mode,"Expected access mode for storage texture type.").toString();return this._consume(TokenTypes.tokens.greater_than,"Expected '>' for sampler type."),new SamplerType(sampler.toString(),format,access)}return null}_attribute(){let attributes=[];for(;this._match(TokenTypes.tokens.attr);){const name=this._consume(TokenTypes.attribute_name,"Expected attribute name"),attr=new Attribute(name.toString(),null);if(this._match(TokenTypes.tokens.paren_left)){if(attr.value=this._consume(TokenTypes.literal_or_ident,"Expected attribute value").toString(),this._check(TokenTypes.tokens.comma)){this._advance();do{const v=this._consume(TokenTypes.literal_or_ident,"Expected attribute value").toString();attr.value instanceof Array||(attr.value=[attr.value]),attr.value.push(v)}while(this._match(TokenTypes.tokens.comma))}this._consume(TokenTypes.tokens.paren_right,"Expected ')'")}attributes.push(attr)}return 0==attributes.length?null:attributes}}class TypeInfo{constructor(name,attributes){this.name=name,this.attributes=attributes,this.size=0}get isArray(){return!1}get isStruct(){return!1}get isTemplate(){return!1}}class MemberInfo{constructor(name,type,attributes){this.name=name,this.type=type,this.attributes=attributes,this.offset=0,this.size=0}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class StructInfo extends TypeInfo{constructor(name,attributes){super(name,attributes),this.members=[],this.align=0,this.startLine=-1,this.endLine=-1,this.inUse=!1}get isStruct(){return!0}}class ArrayInfo extends TypeInfo{constructor(name,attributes){super(name,attributes),this.count=0,this.stride=0}get isArray(){return!0}}class TemplateInfo extends TypeInfo{constructor(name,format,attributes,access){super(name,attributes),this.format=format,this.access=access}get isTemplate(){return!0}}!function(ResourceType){ResourceType[ResourceType.Uniform=0]="Uniform",ResourceType[ResourceType.Storage=1]="Storage",ResourceType[ResourceType.Texture=2]="Texture",ResourceType[ResourceType.Sampler=3]="Sampler",ResourceType[ResourceType.StorageTexture=4]="StorageTexture"}(ResourceType||(ResourceType={}));class VariableInfo{constructor(name,type,group,binding,attributes,resourceType,access){this.name=name,this.type=type,this.group=group,this.binding=binding,this.attributes=attributes,this.resourceType=resourceType,this.access=access}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get size(){return this.type.size}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class AliasInfo{constructor(name,type){this.name=name,this.type=type}}class _TypeSize{constructor(align,size){this.align=align,this.size=size}}class InputInfo{constructor(name,type,locationType,location){this.name=name,this.type=type,this.locationType=locationType,this.location=location,this.interpolation=null}}class OutputInfo{constructor(name,type,locationType,location){this.name=name,this.type=type,this.locationType=locationType,this.location=location}}class FunctionInfo{constructor(name,stage=null){this.stage=null,this.inputs=[],this.outputs=[],this.resources=[],this.startLine=-1,this.endLine=-1,this.inUse=!1,this.calls=new Set,this.name=name,this.stage=stage}}class EntryFunctions{constructor(){this.vertex=[],this.fragment=[],this.compute=[]}}class OverrideInfo{constructor(name,type,attributes,id){this.name=name,this.type=type,this.attributes=attributes,this.id=id}}class _FunctionResources{constructor(node){this.resources=null,this.inUse=!1,this.info=null,this.node=node}}class WgslReflect{constructor(code){this.uniforms=[],this.storage=[],this.textures=[],this.samplers=[],this.aliases=[],this.overrides=[],this.structs=[],this.entry=new EntryFunctions,this.functions=[],this._types=new Map,this._functions=new Map,code&&this.update(code)}_isStorageTexture(type){return"texture_storage_1d"==type.name||"texture_storage_2d"==type.name||"texture_storage_2d_array"==type.name||"texture_storage_3d"==type.name}update(code){const ast=(new WgslParser).parse(code);for(const node of ast)node instanceof Function&&this._functions.set(node.name,new _FunctionResources(node));for(const node of ast)if(node instanceof Struct){const info=this._getTypeInfo(node,null);info instanceof StructInfo&&this.structs.push(info)}for(const node of ast)if(node instanceof Alias)this.aliases.push(this._getAliasInfo(node));else if(node instanceof Override){const v=node,id=this._getAttributeNum(v.attributes,"id",0),type=null!=v.type?this._getTypeInfo(v.type,v.attributes):null;this.overrides.push(new OverrideInfo(v.name,type,v.attributes,id))}else if(this._isUniformVar(node)){const v=node,g=this._getAttributeNum(v.attributes,"group",0),b=this._getAttributeNum(v.attributes,"binding",0),type=this._getTypeInfo(v.type,v.attributes),varInfo=new VariableInfo(v.name,type,g,b,v.attributes,ResourceType.Uniform,v.access);this.uniforms.push(varInfo)}else if(this._isStorageVar(node)){const v=node,g=this._getAttributeNum(v.attributes,"group",0),b=this._getAttributeNum(v.attributes,"binding",0),type=this._getTypeInfo(v.type,v.attributes),isStorageTexture=this._isStorageTexture(type),varInfo=new VariableInfo(v.name,type,g,b,v.attributes,isStorageTexture?ResourceType.StorageTexture:ResourceType.Storage,v.access);this.storage.push(varInfo)}else if(this._isTextureVar(node)){const v=node,g=this._getAttributeNum(v.attributes,"group",0),b=this._getAttributeNum(v.attributes,"binding",0),type=this._getTypeInfo(v.type,v.attributes),isStorageTexture=this._isStorageTexture(type),varInfo=new VariableInfo(v.name,type,g,b,v.attributes,isStorageTexture?ResourceType.StorageTexture:ResourceType.Texture,v.access);isStorageTexture?this.storage.push(varInfo):this.textures.push(varInfo)}else if(this._isSamplerVar(node)){const v=node,g=this._getAttributeNum(v.attributes,"group",0),b=this._getAttributeNum(v.attributes,"binding",0),type=this._getTypeInfo(v.type,v.attributes),varInfo=new VariableInfo(v.name,type,g,b,v.attributes,ResourceType.Sampler,v.access);this.samplers.push(varInfo)}else if(node instanceof Function){const vertexStage=this._getAttribute(node,"vertex"),fragmentStage=this._getAttribute(node,"fragment"),computeStage=this._getAttribute(node,"compute"),stage=vertexStage||fragmentStage||computeStage,fn=new FunctionInfo(node.name,null==stage?void 0:stage.name);fn.startLine=node.startLine,fn.endLine=node.endLine,this.functions.push(fn),this._functions.get(node.name).info=fn,stage&&(this._functions.get(node.name).inUse=!0,fn.inUse=!0,fn.resources=this._findResources(node,!!stage),fn.inputs=this._getInputs(node.args),fn.outputs=this._getOutputs(node.returnType),this.entry[stage.name].push(fn))}else;for(const fn of this._functions.values())fn.info&&(fn.info.inUse=fn.inUse,this._addCalls(fn.node,fn.info.calls));for(const u of this.uniforms)this._markStructsInUse(u.type);for(const s of this.storage)this._markStructsInUse(s.type)}_markStructsInUse(type){if(type.isStruct){type.inUse=!0;for(const m of type.members)this._markStructsInUse(m.type)}else if(type.isArray)this._markStructsInUse(type.format);else if(type.isTemplate)this._markStructsInUse(type.format);else{const alias=this._getAlias(type.name);alias&&this._markStructsInUse(alias)}}_addCalls(fn,calls){var _a;for(const call of fn.calls){const info=null===(_a=this._functions.get(call.name))||void 0===_a?void 0:_a.info;info&&calls.add(info)}}findResource(group,binding){for(const u of this.uniforms)if(u.group==group&&u.binding==binding)return u;for(const s of this.storage)if(s.group==group&&s.binding==binding)return s;for(const t of this.textures)if(t.group==group&&t.binding==binding)return t;for(const s of this.samplers)if(s.group==group&&s.binding==binding)return s;return null}_findResource(name){for(const u of this.uniforms)if(u.name==name)return u;for(const s of this.storage)if(s.name==name)return s;for(const t of this.textures)if(t.name==name)return t;for(const s of this.samplers)if(s.name==name)return s;return null}_markStructsFromAST(type){const info=this._getTypeInfo(type,null);this._markStructsInUse(info)}_findResources(fn,isEntry){const resources=[],self=this,varStack=[];return fn.search((node=>{if(node instanceof _BlockStart)varStack.push({});else if(node instanceof _BlockEnd)varStack.pop();else if(node instanceof Var){const v=node;isEntry&&null!==v.type&&this._markStructsFromAST(v.type),varStack.length>0&&(varStack[varStack.length-1][v.name]=v)}else if(node instanceof CreateExpr){const c=node;isEntry&&null!==c.type&&this._markStructsFromAST(c.type)}else if(node instanceof Let){const v=node;isEntry&&null!==v.type&&this._markStructsFromAST(v.type),varStack.length>0&&(varStack[varStack.length-1][v.name]=v)}else if(node instanceof VariableExpr){const v=node;if(varStack.length>0){if(varStack[varStack.length-1][v.name])return}const varInfo=self._findResource(v.name);varInfo&&resources.push(varInfo)}else if(node instanceof CallExpr){const c=node,callFn=self._functions.get(c.name);callFn&&(isEntry&&(callFn.inUse=!0),fn.calls.add(callFn.node),null===callFn.resources&&(callFn.resources=self._findResources(callFn.node,isEntry)),resources.push(...callFn.resources))}else if(node instanceof Call){const c=node,callFn=self._functions.get(c.name);callFn&&(isEntry&&(callFn.inUse=!0),fn.calls.add(callFn.node),null===callFn.resources&&(callFn.resources=self._findResources(callFn.node,isEntry)),resources.push(...callFn.resources))}})),[...new Map(resources.map((r=>[r.name,r]))).values()]}getBindGroups(){const groups=[];function _makeRoom(group,binding){group>=groups.length&&(groups.length=group+1),void 0===groups[group]&&(groups[group]=[]),binding>=groups[group].length&&(groups[group].length=binding+1)}for(const u of this.uniforms){_makeRoom(u.group,u.binding);groups[u.group][u.binding]=u}for(const u of this.storage){_makeRoom(u.group,u.binding);groups[u.group][u.binding]=u}for(const t of this.textures){_makeRoom(t.group,t.binding);groups[t.group][t.binding]=t}for(const t of this.samplers){_makeRoom(t.group,t.binding);groups[t.group][t.binding]=t}return groups}_getOutputs(type,outputs=void 0){if(void 0===outputs&&(outputs=[]),type instanceof Struct)this._getStructOutputs(type,outputs);else{const output=this._getOutputInfo(type);null!==output&&outputs.push(output)}return outputs}_getStructOutputs(struct,outputs){for(const m of struct.members)if(m.type instanceof Struct)this._getStructOutputs(m.type,outputs);else{const location=this._getAttribute(m,"location")||this._getAttribute(m,"builtin");if(null!==location){const typeInfo=this._getTypeInfo(m.type,m.type.attributes),locationValue=this._parseInt(location.value),info=new OutputInfo(m.name,typeInfo,location.name,locationValue);outputs.push(info)}}}_getOutputInfo(type){const location=this._getAttribute(type,"location")||this._getAttribute(type,"builtin");if(null!==location){const typeInfo=this._getTypeInfo(type,type.attributes),locationValue=this._parseInt(location.value);return new OutputInfo("",typeInfo,location.name,locationValue)}return null}_getInputs(args,inputs=void 0){void 0===inputs&&(inputs=[]);for(const arg of args)if(arg.type instanceof Struct)this._getStructInputs(arg.type,inputs);else{const input=this._getInputInfo(arg);null!==input&&inputs.push(input)}return inputs}_getStructInputs(struct,inputs){for(const m of struct.members)if(m.type instanceof Struct)this._getStructInputs(m.type,inputs);else{const input=this._getInputInfo(m);null!==input&&inputs.push(input)}}_getInputInfo(node){const location=this._getAttribute(node,"location")||this._getAttribute(node,"builtin");if(null!==location){const interpolation=this._getAttribute(node,"interpolation"),type=this._getTypeInfo(node.type,node.attributes),locationValue=this._parseInt(location.value),info=new InputInfo(node.name,type,location.name,locationValue);return null!==interpolation&&(info.interpolation=this._parseString(interpolation.value)),info}return null}_parseString(s){return s instanceof Array&&(s=s[0]),s}_parseInt(s){s instanceof Array&&(s=s[0]);const n=parseInt(s);return isNaN(n)?s:n}_getAlias(name){for(const a of this.aliases)if(a.name==name)return a.type;return null}_getAliasInfo(node){return new AliasInfo(node.name,this._getTypeInfo(node.type,null))}_getTypeInfo(type,attributes){if(this._types.has(type))return this._types.get(type);if(type instanceof ArrayType){const a=type,t=this._getTypeInfo(a.format,a.attributes),info=new ArrayInfo(a.name,attributes);return info.format=t,info.count=a.count,this._types.set(type,info),this._updateTypeInfo(info),info}if(type instanceof Struct){const s=type,info=new StructInfo(s.name,attributes);info.startLine=s.startLine,info.endLine=s.endLine;for(const m of s.members){const t=this._getTypeInfo(m.type,m.attributes);info.members.push(new MemberInfo(m.name,t,m.attributes))}return this._types.set(type,info),this._updateTypeInfo(info),info}if(type instanceof SamplerType){const s=type,formatIsType=s.format instanceof Type,format=s.format?formatIsType?this._getTypeInfo(s.format,null):new TypeInfo(s.format,null):null,info=new TemplateInfo(s.name,format,attributes,s.access);return this._types.set(type,info),this._updateTypeInfo(info),info}if(type instanceof TemplateType){const t=type,format=t.format?this._getTypeInfo(t.format,null):null,info=new TemplateInfo(t.name,format,attributes,t.access);return this._types.set(type,info),this._updateTypeInfo(info),info}const info=new TypeInfo(type.name,attributes);return this._types.set(type,info),this._updateTypeInfo(info),info}_updateTypeInfo(type){var _a,_b;const typeSize=this._getTypeSize(type);if(type.size=null!==(_a=null==typeSize?void 0:typeSize.size)&&void 0!==_a?_a:0,type instanceof ArrayInfo){const formatInfo=this._getTypeSize(type.format);type.stride=null!==(_b=null==formatInfo?void 0:formatInfo.size)&&void 0!==_b?_b:0,this._updateTypeInfo(type.format)}type instanceof StructInfo&&this._updateStructInfo(type)}_updateStructInfo(struct){var _a;let offset=0,lastSize=0,lastOffset=0,structAlign=0;for(let mi=0,ml=struct.members.length;mi<ml;++mi){const member=struct.members[mi],sizeInfo=this._getTypeSize(member);if(!sizeInfo)continue;null!==(_a=this._getAlias(member.type.name))&&void 0!==_a||member.type;const align=sizeInfo.align,size=sizeInfo.size;offset=this._roundUp(align,offset+lastSize),lastSize=size,lastOffset=offset,structAlign=Math.max(structAlign,align),member.offset=offset,member.size=size,this._updateTypeInfo(member.type)}struct.size=this._roundUp(structAlign,lastOffset+lastSize),struct.align=structAlign}_getTypeSize(type){var _a,_b;if(null==type)return null;const explicitSize=this._getAttributeNum(type.attributes,"size",0),explicitAlign=this._getAttributeNum(type.attributes,"align",0);if(type instanceof MemberInfo&&(type=type.type),type instanceof TypeInfo){const alias=this._getAlias(type.name);null!==alias&&(type=alias)}{const info=WgslReflect._typeInfo[type.name];if(void 0!==info){const divisor="f16"===(null===(_a=type.format)||void 0===_a?void 0:_a.name)?2:1;return new _TypeSize(Math.max(explicitAlign,info.align/divisor),Math.max(explicitSize,info.size/divisor))}}{const info=WgslReflect._typeInfo[type.name.substring(0,type.name.length-1)];if(info){const divisor="h"===type.name[type.name.length-1]?2:1;return new _TypeSize(Math.max(explicitAlign,info.align/divisor),Math.max(explicitSize,info.size/divisor))}}if(type instanceof ArrayInfo){let arrayType=type,align=8,size=8;const E=this._getTypeSize(arrayType.format);null!==E&&(size=E.size,align=E.align);return size=arrayType.count*this._getAttributeNum(null!==(_b=null==type?void 0:type.attributes)&&void 0!==_b?_b:null,"stride",this._roundUp(align,size)),explicitSize&&(size=explicitSize),new _TypeSize(Math.max(explicitAlign,align),Math.max(explicitSize,size))}if(type instanceof StructInfo){let align=0,size=0,offset=0,lastSize=0,lastOffset=0;for(const m of type.members){const mi=this._getTypeSize(m.type);null!==mi&&(align=Math.max(mi.align,align),offset=this._roundUp(mi.align,offset+lastSize),lastSize=mi.size,lastOffset=offset)}return size=this._roundUp(align,lastOffset+lastSize),new _TypeSize(Math.max(explicitAlign,align),Math.max(explicitSize,size))}return null}_isUniformVar(node){return node instanceof Var&&"uniform"==node.storage}_isStorageVar(node){return node instanceof Var&&"storage"==node.storage}_isTextureVar(node){return node instanceof Var&&null!==node.type&&-1!=WgslReflect._textureTypes.indexOf(node.type.name)}_isSamplerVar(node){return node instanceof Var&&null!==node.type&&-1!=WgslReflect._samplerTypes.indexOf(node.type.name)}_getAttribute(node,name){const obj=node;if(!obj||!obj.attributes)return null;const attrs=obj.attributes;for(let a of attrs)if(a.name==name)return a;return null}_getAttributeNum(attributes,name,defaultValue){if(null===attributes)return defaultValue;for(let a of attributes)if(a.name==name){let v=null!==a&&null!==a.value?a.value:defaultValue;return v instanceof Array&&(v=v[0]),"number"==typeof v?v:"string"==typeof v?parseInt(v):defaultValue}return defaultValue}_roundUp(k,n){return Math.ceil(n/k)*k}}function getShaderLayoutFromWGSL(source){const shaderLayout={attributes:[],bindings:[]};let parsedWGSL;try{parsedWGSL=function parseWGSL(source){try{return new WgslReflect(source)}catch(error){if(error instanceof Error)throw error;let message="WGSL parse error";throw"object"==typeof error&&error?.message&&(message+=`: ${error.message} `),"object"==typeof error&&error?.token&&(message+=error.token.line||""),new Error(message,{cause:error})}}(source)}catch(error){return log.R.error(error.message)(),shaderLayout}for(const uniform of parsedWGSL.uniforms){const members=[];for(const attribute of uniform.type?.members||[])members.push({name:attribute.name,type:getType(attribute.type)});shaderLayout.bindings.push({type:"uniform",name:uniform.name,location:uniform.binding,group:uniform.group,members:members})}const vertex=parsedWGSL.entry.vertex[0],attributeCount=vertex?.inputs.length||0;for(let i=0;i<attributeCount;i++){const wgslAttribute=vertex.inputs[i];if("location"===wgslAttribute.locationType){const type=getType(wgslAttribute.type);shaderLayout.attributes.push({name:wgslAttribute.name,location:Number(wgslAttribute.location),type:type})}}return shaderLayout}function getType(type){return type.format?`${type.name}<${type.format.name}>`:type.name}WgslReflect._typeInfo={f16:{align:2,size:2},i32:{align:4,size:4},u32:{align:4,size:4},f32:{align:4,size:4},atomic:{align:4,size:4},vec2:{align:8,size:8},vec3:{align:16,size:12},vec4:{align:16,size:16},mat2x2:{align:8,size:16},mat3x2:{align:8,size:24},mat4x2:{align:8,size:32},mat2x3:{align:16,size:32},mat3x3:{align:16,size:48},mat4x3:{align:16,size:64},mat2x4:{align:16,size:32},mat3x4:{align:16,size:48},mat4x4:{align:16,size:64}},WgslReflect._textureTypes=TokenTypes.any_texture_type.map((t=>t.name)),WgslReflect._samplerTypes=TokenTypes.sampler_type.map((t=>t.name));class GPUGeometry{id;userData={};topology;bufferLayout=[];vertexCount;indices;attributes;constructor(props){this.id=props.id||(0,utils.L)("geometry"),this.topology=props.topology,this.indices=props.indices||null,this.attributes=props.attributes,this.vertexCount=props.vertexCount,this.bufferLayout=props.bufferLayout||[],this.indices&&(0,assert.v)(this.indices.usage===buffer.h.INDEX)}destroy(){this.indices?.destroy();for(const attribute of Object.values(this.attributes))attribute.destroy()}getVertexCount(){return this.vertexCount}getAttributes(){return this.attributes}getIndexes(){return this.indices}_calculateVertexCount(positions){return positions.byteLength/12}}function makeGPUGeometry(device,geometry){if(geometry instanceof GPUGeometry)return geometry;const indices=function getIndexBufferFromGeometry(device,geometry){if(!geometry.indices)return;const data=geometry.indices.value;return device.createBuffer({usage:buffer.h.INDEX,data:data})}(device,geometry),{attributes:attributes,bufferLayout:bufferLayout}=function getAttributeBuffersFromGeometry(device,geometry){const bufferLayout=[],attributes={};for(const[attributeName,attribute]of Object.entries(geometry.attributes)){let name=attributeName;switch(attributeName){case"POSITION":name="positions";break;case"NORMAL":name="normals";break;case"TEXCOORD_0":name="texCoords";break;case"COLOR_0":name="colors"}attributes[name]=device.createBuffer({data:attribute.value,id:`${attributeName}-buffer`});const{value:value,size:size,normalized:normalized}=attribute;bufferLayout.push({name:name,format:(0,vertex_format_from_attribute.OB)(value,size,normalized)})}const vertexCount=geometry._calculateVertexCount(geometry.attributes,geometry.indices);return{attributes:attributes,bufferLayout:bufferLayout,vertexCount:vertexCount}}(device,geometry);return new GPUGeometry({topology:geometry.topology||"triangle-list",bufferLayout:bufferLayout,vertexCount:geometry.vertexCount,indices:indices,attributes:attributes})}var resolve_modules=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/lib/shader-assembly/resolve-modules.js");class ShaderInputs{modules;moduleUniforms;moduleBindings;moduleUniformsChanged;constructor(modules){const resolvedModules=(0,resolve_modules.KC)(Object.values(modules).filter((module=>module.dependencies)));for(const resolvedModule of resolvedModules)modules[resolvedModule.name]=resolvedModule;log.R.log(1,"Creating ShaderInputs with modules",Object.keys(modules))(),this.modules=modules,this.moduleUniforms={},this.moduleBindings={};for(const[name,module]of Object.entries(modules)){const moduleName=name;this.moduleUniforms[moduleName]=module.defaultUniforms||{},this.moduleBindings[moduleName]={}}}destroy(){}setProps(props){for(const name of Object.keys(props)){const moduleName=name,moduleProps=props[moduleName],module=this.modules[moduleName];if(!module){log.R.warn(`Module ${name} not found`)();continue}const oldUniforms=this.moduleUniforms[moduleName],oldBindings=this.moduleBindings[moduleName],uniformsAndBindings=module.getUniforms?.(moduleProps,oldUniforms)||moduleProps,{uniforms:uniforms,bindings:bindings}=(0,uniform.l)(uniformsAndBindings);this.moduleUniforms[moduleName]={...oldUniforms,...uniforms},this.moduleBindings[moduleName]={...oldBindings,...bindings}}}getModules(){return Object.values(this.modules)}getUniformValues(){return this.moduleUniforms}getBindings(){const bindings={};for(const moduleBindings of Object.values(this.moduleBindings))Object.assign(bindings,moduleBindings);return bindings}getDebugTable(){const table={};for(const[moduleName,module]of Object.entries(this.moduleUniforms))for(const[key,value]of Object.entries(module))table[`${moduleName}.${key}`]={type:this.modules[moduleName].uniformTypes?.[key],value:String(value)};return table}}var resource=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/resource.js");class ComputePipeline extends resource.F{static defaultProps={...resource.F.defaultProps,shader:void 0,entryPoint:void 0,constants:{},shaderLayout:void 0};get[Symbol.toStringTag](){return"ComputePipeline"}hash="";constructor(device,props){super(device,props,ComputePipeline.defaultProps)}}class PipelineFactory{static defaultProps={...render_pipeline.r.defaultProps};device;_hashCounter=0;_hashes={};_renderPipelineCache={};_computePipelineCache={};static getDefaultPipelineFactory(device){return device._lumaData.defaultPipelineFactory=device._lumaData.defaultPipelineFactory||new PipelineFactory(device),device._lumaData.defaultPipelineFactory}constructor(device){this.device=device}createRenderPipeline(props){const allProps={...render_pipeline.r.defaultProps,...props},hash=this._hashRenderPipeline(allProps);if(!this._renderPipelineCache[hash]){const pipeline=this.device.createRenderPipeline({...allProps,id:allProps.id?`${allProps.id}-cached`:void 0});pipeline.hash=hash,this._renderPipelineCache[hash]={pipeline:pipeline,useCount:0}}return this._renderPipelineCache[hash].useCount++,this._renderPipelineCache[hash].pipeline}createComputePipeline(props){const allProps={...ComputePipeline.defaultProps,...props},hash=this._hashComputePipeline(allProps);if(!this._computePipelineCache[hash]){const pipeline=this.device.createComputePipeline({...allProps,id:allProps.id?`${allProps.id}-cached`:void 0});pipeline.hash=hash,this._computePipelineCache[hash]={pipeline:pipeline,useCount:0}}return this._computePipelineCache[hash].useCount++,this._computePipelineCache[hash].pipeline}release(pipeline){const hash=pipeline.hash,cache=pipeline instanceof ComputePipeline?this._computePipelineCache:this._renderPipelineCache;cache[hash].useCount--,0===cache[hash].useCount&&(cache[hash].pipeline.destroy(),delete cache[hash])}_hashComputePipeline(props){return`${this._getHash(props.shader.source)}`}_hashRenderPipeline(props){const vsHash=this._getHash(props.vs.source),fsHash=props.fs?this._getHash(props.fs.source):0,bufferLayoutHash=this._getHash(JSON.stringify(props.bufferLayout));if("webgl"===this.device.type)return`${vsHash}/${fsHash}V-BL${bufferLayoutHash}`;{const parameterHash=this._getHash(JSON.stringify(props.parameters));return`${vsHash}/${fsHash}V-T${props.topology}P${parameterHash}BL${bufferLayoutHash}`}}_getHash(key){return void 0===this._hashes[key]&&(this._hashes[key]=this._hashCounter++),this._hashes[key]}}var shader=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/shader.js");class ShaderFactory{static defaultProps={...shader.M.defaultProps};device;_cache={};static getDefaultShaderFactory(device){return device._lumaData.defaultShaderFactory||=new ShaderFactory(device),device._lumaData.defaultShaderFactory}constructor(device){this.device=device}createShader(props){const key=this._hashShader(props);let cacheEntry=this._cache[key];if(!cacheEntry){const shader=this.device.createShader({...props,id:props.id?`${props.id}-cached`:void 0});this._cache[key]=cacheEntry={shader:shader,useCount:0}}return cacheEntry.useCount++,cacheEntry.shader}release(shader){const key=this._hashShader(shader),cacheEntry=this._cache[key];cacheEntry&&(cacheEntry.useCount--,0===cacheEntry.useCount&&(delete this._cache[key],cacheEntry.shader.destroy()))}_hashShader(value){return`${value.stage}:${value.source}`}}let canvas=null,ctx=null;class Model{static defaultProps={...render_pipeline.r.defaultProps,source:null,vs:null,fs:null,id:"unnamed",handle:void 0,userData:{},defines:{},modules:[],moduleSettings:void 0,geometry:null,indexBuffer:null,attributes:{},constantAttributes:{},varyings:[],isInstanced:void 0,instanceCount:0,vertexCount:0,shaderInputs:void 0,pipelineFactory:void 0,shaderFactory:void 0,transformFeedback:void 0,shaderAssembler:shader_assembler._.getDefaultShaderAssembler(),debugShaders:void 0,disableWarnings:void 0};device;id;source;vs;fs;pipelineFactory;shaderFactory;userData={};parameters;topology;bufferLayout;isInstanced=void 0;instanceCount=0;vertexCount;indexBuffer=null;bufferAttributes={};constantAttributes={};bindings={};uniforms={};vertexArray;transformFeedback=null;pipeline;shaderInputs;_uniformStore;_attributeInfos={};_gpuGeometry=null;_getModuleUniforms;props;_pipelineNeedsUpdate="newly created";_needsRedraw="initializing";_destroyed=!1;_lastDrawTimestamp=-1;constructor(device,props){this.props={...Model.defaultProps,...props},props=this.props,this.id=props.id||(0,utils.L)("model"),this.device=device,Object.assign(this.userData,props.userData);const moduleMap=Object.fromEntries(this.props.modules?.map((module=>[module.name,module]))||[]);this.setShaderInputs(props.shaderInputs||new ShaderInputs(moduleMap));const platformInfo=function getPlatformInfo(device){return{type:device.type,shaderLanguage:device.info.shadingLanguage,shaderLanguageVersion:device.info.shadingLanguageVersion,gpu:device.info.gpu,features:device.features}}(device),modules=(this.props.modules?.length>0?this.props.modules:this.shaderInputs?.getModules())||[];if("webgpu"===this.device.type&&this.props.source){this.props.shaderLayout||=getShaderLayoutFromWGSL(this.props.source);const{source:source,getUniforms:getUniforms}=this.props.shaderAssembler.assembleShader({platformInfo:platformInfo,...this.props,modules:modules});this.source=source,this._getModuleUniforms=getUniforms}else{const{vs:vs,fs:fs,getUniforms:getUniforms}=this.props.shaderAssembler.assembleShaderPair({platformInfo:platformInfo,...this.props,modules:modules});this.vs=vs,this.fs=fs,this._getModuleUniforms=getUniforms}this.vertexCount=this.props.vertexCount,this.instanceCount=this.props.instanceCount,this.topology=this.props.topology,this.bufferLayout=this.props.bufferLayout,this.parameters=this.props.parameters,props.geometry&&this.setGeometry(props.geometry),this.pipelineFactory=props.pipelineFactory||PipelineFactory.getDefaultPipelineFactory(this.device),this.shaderFactory=props.shaderFactory||ShaderFactory.getDefaultShaderFactory(this.device),this.pipeline=this._updatePipeline(),this.vertexArray=device.createVertexArray({renderPipeline:this.pipeline}),this._gpuGeometry&&this._setGeometryAttributes(this._gpuGeometry),"isInstanced"in props&&(this.isInstanced=props.isInstanced),props.instanceCount&&this.setInstanceCount(props.instanceCount),props.vertexCount&&this.setVertexCount(props.vertexCount),props.indexBuffer&&this.setIndexBuffer(props.indexBuffer),props.attributes&&this.setAttributes(props.attributes),props.constantAttributes&&this.setConstantAttributes(props.constantAttributes),props.bindings&&this.setBindings(props.bindings),props.uniforms&&this.setUniforms(props.uniforms),props.moduleSettings&&this.updateModuleSettings(props.moduleSettings),props.transformFeedback&&(this.transformFeedback=props.transformFeedback),Object.seal(this)}destroy(){this._destroyed||(this.pipelineFactory.release(this.pipeline),this.shaderFactory.release(this.pipeline.vs),this.pipeline.fs&&this.shaderFactory.release(this.pipeline.fs),this._uniformStore.destroy(),this._gpuGeometry?.destroy(),this._destroyed=!0)}needsRedraw(){this._getBindingsUpdateTimestamp()>this._lastDrawTimestamp&&this.setNeedsRedraw("contents of bound textures or buffers updated");const needsRedraw=this._needsRedraw;return this._needsRedraw=!1,needsRedraw}setNeedsRedraw(reason){this._needsRedraw||=reason}predraw(){this.updateShaderInputs(),this.pipeline=this._updatePipeline()}draw(renderPass){let drawSuccess;this.predraw();try{this._logDrawCallStart(),this.pipeline=this._updatePipeline(),this.pipeline.setBindings(this.bindings,{disableWarnings:this.props.disableWarnings}),(0,utils.Z)(this.uniforms)||this.pipeline.setUniformsWebGL(this.uniforms);const{indexBuffer:indexBuffer}=this.vertexArray,indexCount=indexBuffer?indexBuffer.byteLength/("uint32"===indexBuffer.indexType?4:2):void 0;drawSuccess=this.pipeline.draw({renderPass:renderPass,vertexArray:this.vertexArray,isInstanced:this.isInstanced,vertexCount:this.vertexCount,instanceCount:this.instanceCount,indexCount:indexCount,transformFeedback:this.transformFeedback||void 0,parameters:this.parameters,topology:this.topology})}finally{this._logDrawCallEnd()}return this._logFramebuffer(renderPass),drawSuccess?(this._lastDrawTimestamp=this.device.timestamp,this._needsRedraw=!1):this._needsRedraw="waiting for resource initialization",drawSuccess}setGeometry(geometry){this._gpuGeometry?.destroy();const gpuGeometry=geometry&&makeGPUGeometry(this.device,geometry);gpuGeometry&&(this.setTopology(gpuGeometry.topology||"triangle-list"),this.bufferLayout=mergeBufferLayouts(gpuGeometry.bufferLayout,this.bufferLayout),this.vertexArray&&this._setGeometryAttributes(gpuGeometry)),this._gpuGeometry=gpuGeometry}setTopology(topology){topology!==this.topology&&(this.topology=topology,this._setPipelineNeedsUpdate("topology"))}setBufferLayout(bufferLayout){this.bufferLayout=this._gpuGeometry?mergeBufferLayouts(bufferLayout,this._gpuGeometry.bufferLayout):bufferLayout,this._setPipelineNeedsUpdate("bufferLayout"),this.pipeline=this._updatePipeline(),this.vertexArray=this.device.createVertexArray({renderPipeline:this.pipeline}),this._gpuGeometry&&this._setGeometryAttributes(this._gpuGeometry)}setParameters(parameters){deepEqual(parameters,this.parameters,2)||(this.parameters=parameters,this._setPipelineNeedsUpdate("parameters"))}setInstanceCount(instanceCount){this.instanceCount=instanceCount,void 0===this.isInstanced&&instanceCount>0&&(this.isInstanced=!0),this.setNeedsRedraw("instanceCount")}setVertexCount(vertexCount){this.vertexCount=vertexCount,this.setNeedsRedraw("vertexCount")}setShaderInputs(shaderInputs){this.shaderInputs=shaderInputs,this._uniformStore=new UniformStore(this.shaderInputs.modules);for(const moduleName of Object.keys(this.shaderInputs.modules)){const uniformBuffer=this._uniformStore.getManagedUniformBuffer(this.device,moduleName);this.bindings[`${moduleName}Uniforms`]=uniformBuffer}this.setNeedsRedraw("shaderInputs")}updateShaderInputs(){this._uniformStore.setUniforms(this.shaderInputs.getUniformValues()),this.setBindings(this.shaderInputs.getBindings()),this.setNeedsRedraw("shaderInputs")}setBindings(bindings){Object.assign(this.bindings,bindings),this.setNeedsRedraw("bindings")}setTransformFeedback(transformFeedback){this.transformFeedback=transformFeedback,this.setNeedsRedraw("transformFeedback")}setIndexBuffer(indexBuffer){this.vertexArray.setIndexBuffer(indexBuffer),this.setNeedsRedraw("indexBuffer")}setAttributes(buffers,options){buffers.indices&&log.R.warn(`Model:${this.id} setAttributes() - indexBuffer should be set using setIndexBuffer()`)();for(const[bufferName,buffer]of Object.entries(buffers)){const bufferLayout=this.bufferLayout.find((layout=>getAttributeNames(layout).includes(bufferName)));if(!bufferLayout){log.R.warn(`Model(${this.id}): Missing layout for buffer "${bufferName}".`)();continue}const attributeNames=getAttributeNames(bufferLayout);let set=!1;for(const attributeName of attributeNames){const attributeInfo=this._attributeInfos[attributeName];attributeInfo&&(this.vertexArray.setBuffer(attributeInfo.location,buffer),set=!0)}set||(options?.disableWarnings??this.props.disableWarnings)||log.R.warn(`Model(${this.id}): Ignoring buffer "${buffer.id}" for unknown attribute "${bufferName}"`)()}this.setNeedsRedraw("attributes")}setConstantAttributes(attributes,options){for(const[attributeName,value]of Object.entries(attributes)){const attributeInfo=this._attributeInfos[attributeName];attributeInfo?this.vertexArray.setConstantWebGL(attributeInfo.location,value):(options?.disableWarnings??this.props.disableWarnings)||log.R.warn(`Model "${this.id}: Ignoring constant supplied for unknown attribute "${attributeName}"`)()}this.setNeedsRedraw("constants")}setUniforms(uniforms){(0,utils.Z)(uniforms)||(this.pipeline.setUniformsWebGL(uniforms),Object.assign(this.uniforms,uniforms)),this.setNeedsRedraw("uniforms")}updateModuleSettings(props){const{bindings:bindings,uniforms:uniforms}=(0,uniform.l)(this._getModuleUniforms(props));Object.assign(this.bindings,bindings),Object.assign(this.uniforms,uniforms),this.setNeedsRedraw("moduleSettings")}_getBindingsUpdateTimestamp(){let timestamp=0;for(const binding of Object.values(this.bindings))binding instanceof texture_view.X?timestamp=Math.max(timestamp,binding.texture.updateTimestamp):binding instanceof buffer.h||binding instanceof texture.g?timestamp=Math.max(timestamp,binding.updateTimestamp):binding instanceof sampler.L||(timestamp=Math.max(timestamp,binding.buffer.updateTimestamp));return timestamp}_setGeometryAttributes(gpuGeometry){const attributes={...gpuGeometry.attributes};for(const[attributeName]of Object.entries(attributes))this.pipeline.shaderLayout.attributes.find((layout=>layout.name===attributeName))||"positions"===attributeName||delete attributes[attributeName];this.vertexCount=gpuGeometry.vertexCount,this.setIndexBuffer(gpuGeometry.indices||null),this.setAttributes(gpuGeometry.attributes,{disableWarnings:!0}),this.setAttributes(attributes,{disableWarnings:this.props.disableWarnings}),this.setNeedsRedraw("geometry attributes")}_setPipelineNeedsUpdate(reason){this._pipelineNeedsUpdate||=reason,this.setNeedsRedraw(reason)}_updatePipeline(){if(this._pipelineNeedsUpdate){let prevShaderVs=null,prevShaderFs=null;this.pipeline&&(log.R.log(1,`Model ${this.id}: Recreating pipeline because "${this._pipelineNeedsUpdate}".`)(),prevShaderVs=this.pipeline.vs,prevShaderFs=this.pipeline.fs),this._pipelineNeedsUpdate=!1;const vs=this.shaderFactory.createShader({id:`${this.id}-vertex`,stage:"vertex",source:this.source||this.vs,debug:this.props.debugShaders});let fs=null;this.source?fs=vs:this.fs&&(fs=this.shaderFactory.createShader({id:`${this.id}-fragment`,stage:"fragment",source:this.source||this.fs,debug:this.props.debugShaders})),this.pipeline=this.pipelineFactory.createRenderPipeline({...this.props,bufferLayout:this.bufferLayout,topology:this.topology,parameters:this.parameters,vs:vs,fs:fs}),this._attributeInfos=(0,get_attribute_from_layouts.PV)(this.pipeline.shaderLayout,this.bufferLayout),prevShaderVs&&this.shaderFactory.release(prevShaderVs),prevShaderFs&&this.shaderFactory.release(prevShaderFs)}return this.pipeline}_lastLogTime=0;_logOpen=!1;_logDrawCallStart(){const logDrawTimeout=log.R.level>3?0:1e4;log.R.level<2||Date.now()-this._lastLogTime<logDrawTimeout||(this._lastLogTime=Date.now(),this._logOpen=!0,log.R.group(2,`>>> DRAWING MODEL ${this.id}`,{collapsed:log.R.level<=2})())}_logDrawCallEnd(){if(this._logOpen){const shaderLayoutTable=function getDebugTableForShaderLayout(layout,name){const table={};if(0===layout.attributes.length&&!layout.varyings?.length)return{"No attributes or varyings":{Values:"N/A"}};for(const attributeDeclaration of layout.attributes)attributeDeclaration&&(table[`in ${attributeDeclaration.location} ${attributeDeclaration.name}: ${attributeDeclaration.type}`]={Values:attributeDeclaration.stepMode||"vertex"});for(const varyingDeclaration of layout.varyings||[])table[`out ${varyingDeclaration.location} ${varyingDeclaration.name}`]={Values:JSON.stringify(varyingDeclaration.accessor)};return table}(this.pipeline.shaderLayout,this.id);log.R.table(2,shaderLayoutTable)();const uniformTable=this.shaderInputs.getDebugTable();for(const[name,value]of Object.entries(this.uniforms))uniformTable[name]={value:value};log.R.table(2,uniformTable)();const attributeTable=this._getAttributeDebugTable();log.R.table(2,this._attributeInfos)(),log.R.table(2,attributeTable)(),log.R.groupEnd(2)(),this._logOpen=!1}}_drawCount=0;_logFramebuffer(renderPass){const debugFramebuffers=log.R.get("framebuffer");if(this._drawCount++,!debugFramebuffers||this._drawCount++>3&&this._drawCount%60)return;const framebuffer=renderPass.props.framebuffer;framebuffer&&function debugFramebuffer(fbo,{id:id,minimap:minimap,opaque:opaque,top:top="0",left:left="0",rgbaScale:rgbaScale=1}){canvas||(canvas=document.createElement("canvas"),canvas.id=id,canvas.title=id,canvas.style.zIndex="100",canvas.style.position="absolute",canvas.style.top=top,canvas.style.left=left,canvas.style.border="blue 1px solid",canvas.style.transform="scaleY(-1)",document.body.appendChild(canvas),ctx=canvas.getContext("2d")),canvas.width===fbo.width&&canvas.height===fbo.height||(canvas.width=fbo.width/2,canvas.height=fbo.height/2,canvas.style.width="400px",canvas.style.height="400px");const color=fbo.device.readPixelsToArrayWebGL(fbo),imageData=ctx.createImageData(fbo.width,fbo.height);for(let i=0;i<color.length;i+=4)imageData.data[0+i+0]=color[i+0]*rgbaScale,imageData.data[0+i+1]=color[i+1]*rgbaScale,imageData.data[0+i+2]=color[i+2]*rgbaScale,imageData.data[0+i+3]=opaque?255:color[i+3]*rgbaScale;ctx.putImageData(imageData,0,0)}(framebuffer,{id:framebuffer.id,minimap:!0})}_getAttributeDebugTable(){const table={};for(const[name,attributeInfo]of Object.entries(this._attributeInfos))table[attributeInfo.location]={name:name,type:attributeInfo.shaderType,values:this._getBufferOrConstantValues(this.vertexArray.attributes[attributeInfo.location],attributeInfo.bufferDataType)};if(this.vertexArray.indexBuffer){const{indexBuffer:indexBuffer}=this.vertexArray,values="uint32"===indexBuffer.indexType?new Uint32Array(indexBuffer.debugData):new Uint16Array(indexBuffer.debugData);table.indices={name:"indices",type:indexBuffer.indexType,values:values.toString()}}return table}_getBufferOrConstantValues(attribute,dataType){const TypedArrayConstructor=(0,vertex_format_from_attribute.Y0)(dataType);return(attribute instanceof buffer.h?new TypedArrayConstructor(attribute.debugData):attribute).toString()}}function mergeBufferLayouts(layouts1,layouts2){const layouts=[...layouts1];for(const attribute of layouts2){const index=layouts.findIndex((attribute2=>attribute2.name===attribute.name));index<0?layouts.push(attribute):layouts[index]=attribute}return layouts}function getAttributeNames(bufferLayout){return bufferLayout.attributes?bufferLayout.attributes?.map((layout=>layout.attribute)):[bufferLayout.name]}},"./node_modules/@luma.gl/shadertools/dist/lib/glsl-utils/shader-utils.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{Wk:function(){return getPassthroughFS}});const FS300="#version 300 es\nout vec4 transform_output;\nvoid main() {\ntransform_output = vec4(0);\n}";function getPassthroughFS(options){const{input:input,inputChannels:inputChannels,output:output}=options||{};if(!input)return FS300;if(!inputChannels)throw new Error("inputChannels");return`#version 300 es\nin ${function channelCountToType(channels){switch(channels){case 1:return"float";case 2:return"vec2";case 3:return"vec3";case 4:return"vec4";default:throw new Error(`invalid channels: ${channels}`)}}(inputChannels)} ${input};\nout vec4 ${output};\nvoid main() {\n  ${output} = ${function convertToVec4(variable,channels){switch(channels){case 1:return`vec4(${variable}, 0.0, 0.0, 1.0)`;case 2:return`vec4(${variable}, 0.0, 1.0)`;case 3:return`vec4(${variable}, 1.0)`;case 4:return variable;default:throw new Error(`invalid channels: ${channels}`)}}(input,inputChannels)};\n}`}},"./node_modules/@luma.gl/shadertools/dist/lib/shader-assembler.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{_:function(){return ShaderAssembler}});var shader_module_instance=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/lib/shader-module/shader-module-instance.js");function selectShaders(props){if(props.source&&"webgpu"===props.platformInfo.type){return{...props,vs:void 0,fs:void 0}}if(!props.vs)throw new Error("no vertex shader");const vs=getShaderSource(props.platformInfo,props.vs);let fs;return props.fs&&(fs=getShaderSource(props.platformInfo,props.fs)),{...props,vs:vs,fs:fs}}function getShaderSource(platformInfo,shader){if("string"==typeof shader)return shader;if("webgpu"===platformInfo.type){if(shader?.wgsl)return shader.wgsl;throw new Error("WebGPU does not support GLSL shaders")}if(shader?.glsl)return shader.glsl;throw new Error("WebGL does not support WGSL shaders")}var resolve_modules=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/lib/shader-assembly/resolve-modules.js");var shader_injections=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/lib/shader-assembly/shader-injections.js");const ES300_REPLACEMENTS=[[/^(#version[ \t]+(100|300[ \t]+es))?[ \t]*\n/,"#version 300 es\n"],[/\btexture(2D|2DProj|Cube)Lod(EXT)?\(/g,"textureLod("],[/\btexture(2D|2DProj|Cube)(EXT)?\(/g,"texture("]],ES300_VERTEX_REPLACEMENTS=[...ES300_REPLACEMENTS,[makeVariableTextRegExp("attribute"),"in $1"],[makeVariableTextRegExp("varying"),"out $1"]],ES300_FRAGMENT_REPLACEMENTS=[...ES300_REPLACEMENTS,[makeVariableTextRegExp("varying"),"in $1"]];function convertShader(source,replacements){for(const[pattern,replacement]of replacements)source=source.replace(pattern,replacement);return source}function makeVariableTextRegExp(qualifier){return new RegExp(`\\b${qualifier}[ \\t]+(\\w+[ \\t]+\\w+(\\[\\w+\\])?;)`,"g")}function getShaderHooks(hookFunctions,hookInjections){let result="";for(const hookName in hookFunctions){const hookFunction=hookFunctions[hookName];if(result+=`void ${hookFunction.signature} {\n`,hookFunction.header&&(result+=`  ${hookFunction.header}`),hookInjections[hookName]){const injections=hookInjections[hookName];injections.sort(((a,b)=>a.order-b.order));for(const injection of injections)result+=`  ${injection.injection}\n`}hookFunction.footer&&(result+=`  ${hookFunction.footer}`),result+="}\n"}return result}function normalizeShaderHooks(hookFunctions){const result={vertex:{},fragment:{}};for(const hookFunction of hookFunctions){let opts,hook;"string"!=typeof hookFunction?(opts=hookFunction,hook=opts.hook):(opts={},hook=hookFunction),hook=hook.trim();const[shaderStage,signature]=hook.split(":"),name=hook.replace(/\(.+/,""),normalizedHook=Object.assign(opts,{signature:signature});switch(shaderStage){case"vs":result.vertex[name]=normalizedHook;break;case"fs":result.fragment[name]=normalizedHook;break;default:throw new Error(shaderStage)}}return result}var assert=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/lib/utils/assert.js");function getShaderName(shader,defaultName="unnamed"){const match=/#define[^\S\r\n]*SHADER_NAME[^\S\r\n]*([A-Za-z0-9_-]+)\s*/.exec(shader);return match?match[1]:defaultName}function getShaderVersion(source){let version=100;const words=source.match(/[^\s]+/g);if(words&&words.length>=2&&"#version"===words[0]){const parsedVersion=parseInt(words[1],10);Number.isFinite(parsedVersion)&&(version=parsedVersion)}if(100!==version&&300!==version)throw new Error(`Invalid GLSL version ${version}`);return version}const INJECT_SHADER_DECLARATIONS=`\n\n${shader_injections.O_}\n`,FRAGMENT_SHADER_PROLOGUE="precision highp float;\n";function assembleWGSLShader(platformInfo,options){const{source:source,stage:stage,modules:modules,hookFunctions:hookFunctions=[],inject:inject={},log:log}=options;(0,assert.v)("string"==typeof source,"shader source must be a string");const coreSource=source;let assembledSource="";const hookFunctionMap=normalizeShaderHooks(hookFunctions),hookInjections={},declInjections={},mainInjections={};for(const key in inject){const injection="string"==typeof inject[key]?{injection:inject[key],order:0}:inject[key],match=/^(v|f)s:(#)?([\w-]+)$/.exec(key);if(match){const hash=match[2],name=match[3];hash?"decl"===name?declInjections[key]=[injection]:mainInjections[key]=[injection]:hookInjections[key]=[injection]}else mainInjections[key]=[injection]}const modulesToInject="webgpu"!==platformInfo.type?modules:[];for(const module of modulesToInject){log&&module.checkDeprecations(coreSource,log);assembledSource+=module.getModuleSource(stage,"wgsl");const injections=module.injections[stage];for(const key in injections){const match=/^(v|f)s:#([\w-]+)$/.exec(key);if(match){const injectionType="decl"===match[2]?declInjections:mainInjections;injectionType[key]=injectionType[key]||[],injectionType[key].push(injections[key])}else hookInjections[key]=hookInjections[key]||[],hookInjections[key].push(injections[key])}}return assembledSource+=INJECT_SHADER_DECLARATIONS,assembledSource=(0,shader_injections.bv)(assembledSource,stage,declInjections),assembledSource+=getShaderHooks(hookFunctionMap[stage],hookInjections),assembledSource+=coreSource,assembledSource=(0,shader_injections.bv)(assembledSource,stage,mainInjections),assembledSource}function assembleGLSLShader(platformInfo,options){const{id:id,source:source,stage:stage,language:language="glsl",modules:modules,defines:defines={},hookFunctions:hookFunctions=[],inject:inject={},prologue:prologue=!0,log:log}=options;(0,assert.v)("string"==typeof source,"shader source must be a string");const sourceVersion="glsl"===language?function getShaderInfo(source,defaultName){return{name:getShaderName(source,defaultName),language:"glsl",version:getShaderVersion(source)}}(source).version:-1,targetVersion=platformInfo.shaderLanguageVersion,sourceVersionDirective=100===sourceVersion?"#version 100":"#version 300 es",coreSource=source.split("\n").slice(1).join("\n"),allDefines={};modules.forEach((module=>{Object.assign(allDefines,module.getDefines())})),Object.assign(allDefines,defines);let assembledSource="";switch(language){case"wgsl":break;case"glsl":assembledSource=prologue?`${sourceVersionDirective}\n\n// ----- PROLOGUE -------------------------\n${function getShaderNameDefine(options){const{id:id,source:source,stage:stage}=options,injectShaderName=id&&-1===source.indexOf("SHADER_NAME");return injectShaderName?`\n#define SHADER_NAME ${id}_${stage}\n\n`:""}({id:id,source:source,stage:stage})}\n#define SHADER_TYPE_${stage.toUpperCase()}\n${function getPlatformShaderDefines(platformInfo){switch(platformInfo?.gpu.toLowerCase()){case"apple":return"#define APPLE_GPU\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n";case"nvidia":return"#define NVIDIA_GPU\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n";case"intel":return"#define INTEL_GPU\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n";case"amd":return"#define AMD_GPU\n";default:return"#define DEFAULT_GPU\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n"}}(platformInfo)}\n${"fragment"===stage?FRAGMENT_SHADER_PROLOGUE:""}\n\n// ----- APPLICATION DEFINES -------------------------\n\n${function getApplicationDefines(defines={}){let sourceText="";for(const define in defines){const value=defines[define];(value||Number.isFinite(value))&&(sourceText+=`#define ${define.toUpperCase()} ${defines[define]}\n`)}return sourceText}(allDefines)}\n\n`:`${sourceVersionDirective}\n`}const hookFunctionMap=normalizeShaderHooks(hookFunctions),hookInjections={},declInjections={},mainInjections={};for(const key in inject){const injection="string"==typeof inject[key]?{injection:inject[key],order:0}:inject[key],match=/^(v|f)s:(#)?([\w-]+)$/.exec(key);if(match){const hash=match[2],name=match[3];hash?"decl"===name?declInjections[key]=[injection]:mainInjections[key]=[injection]:hookInjections[key]=[injection]}else mainInjections[key]=[injection]}for(const module of modules){log&&module.checkDeprecations(coreSource,log);assembledSource+=module.getModuleSource(stage);const injections=module.injections[stage];for(const key in injections){const match=/^(v|f)s:#([\w-]+)$/.exec(key);if(match){const injectionType="decl"===match[2]?declInjections:mainInjections;injectionType[key]=injectionType[key]||[],injectionType[key].push(injections[key])}else hookInjections[key]=hookInjections[key]||[],hookInjections[key].push(injections[key])}}return assembledSource+="// ----- MAIN SHADER SOURCE -------------------------",assembledSource+=INJECT_SHADER_DECLARATIONS,assembledSource=(0,shader_injections.bv)(assembledSource,stage,declInjections),assembledSource+=getShaderHooks(hookFunctionMap[stage],hookInjections),assembledSource+=coreSource,assembledSource=(0,shader_injections.bv)(assembledSource,stage,mainInjections),"glsl"===language&&sourceVersion!==targetVersion&&(assembledSource=function transpileGLSLShader(source,stage){if(300!==Number(source.match(/^#version[ \t]+(\d+)/m)?.[1]||100))throw new Error("luma.gl v9 only supports GLSL 3.00 shader sources");switch(stage){case"vertex":return convertShader(source,ES300_VERTEX_REPLACEMENTS);case"fragment":return convertShader(source,ES300_FRAGMENT_REPLACEMENTS);default:throw new Error(stage)}}(assembledSource,stage)),assembledSource.trim()}function assembleGetUniforms(modules){return function getUniforms(opts){const uniforms={};for(const module of modules){const moduleUniforms=module.getUniforms(opts,uniforms);Object.assign(uniforms,moduleUniforms)}return uniforms}}class ShaderAssembler{static defaultShaderAssembler;_hookFunctions=[];_defaultModules=[];static getDefaultShaderAssembler(){return ShaderAssembler.defaultShaderAssembler=ShaderAssembler.defaultShaderAssembler||new ShaderAssembler,ShaderAssembler.defaultShaderAssembler}addDefaultModule(module){this._defaultModules.find((m=>m.name===("string"==typeof module?module:module.name)))||this._defaultModules.push(module)}removeDefaultModule(module){const moduleName="string"==typeof module?module:module.name;this._defaultModules=this._defaultModules.filter((m=>m.name!==moduleName))}addShaderHook(hook,opts){opts&&(hook=Object.assign(opts,{hook:hook})),this._hookFunctions.push(hook)}assembleShader(props){const modules=this._getModuleList(props.modules),hookFunctions=this._hookFunctions,options=selectShaders(props),assembled=function assembleShaderWGSL(options){const modules=(0,resolve_modules.KC)(options.modules||[]);return{source:assembleWGSLShader(options.platformInfo,{...options,source:options.source,stage:"vertex",modules:modules}),getUniforms:assembleGetUniforms(modules)}}({platformInfo:props.platformInfo,...options,modules:modules,hookFunctions:hookFunctions});return{...assembled,modules:modules}}assembleShaderPair(props){const options=selectShaders(props),modules=this._getModuleList(props.modules),hookFunctions=this._hookFunctions,{platformInfo:platformInfo}=props,assembled="wgsl"===props.platformInfo.shaderLanguage?function assembleShaderPairWGSL(options){const modules=(0,resolve_modules.KC)(options.modules||[]);return{vs:assembleWGSLShader(options.platformInfo,{...options,source:options.vs,stage:"vertex",modules:modules}),fs:assembleWGSLShader(options.platformInfo,{...options,source:options.fs,stage:"fragment",modules:modules}),getUniforms:assembleGetUniforms(modules)}}({platformInfo:platformInfo,...options,modules:modules,hookFunctions:hookFunctions}):function assembleShaderPairGLSL(options){const{vs:vs,fs:fs}=options,modules=(0,resolve_modules.KC)(options.modules||[]);return{vs:assembleGLSLShader(options.platformInfo,{...options,source:vs,stage:"vertex",modules:modules}),fs:assembleGLSLShader(options.platformInfo,{...options,source:fs,stage:"fragment",modules:modules}),getUniforms:assembleGetUniforms(modules)}}({platformInfo:platformInfo,...options,modules:modules,hookFunctions:hookFunctions});return{...assembled,modules:modules}}_getModuleList(appModules=[]){const modules=new Array(this._defaultModules.length+appModules.length),seen={};let count=0;for(let i=0,len=this._defaultModules.length;i<len;++i){const module=this._defaultModules[i],name=module.name;modules[count++]=module,seen[name]=!0}for(let i=0,len=appModules.length;i<len;++i){const module=appModules[i],name=module.name;seen[name]||(modules[count++]=module,seen[name]=!0)}return modules.length=count,shader_module_instance.z.instantiateModules(modules)}}},"./node_modules/@luma.gl/shadertools/dist/lib/shader-assembly/resolve-modules.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{KC:function(){return resolveModules}});var _shader_module_shader_module_instance_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/lib/shader-module/shader-module-instance.js");function resolveModules(modules){return getShaderDependencies(_shader_module_shader_module_instance_js__WEBPACK_IMPORTED_MODULE_0__.z.instantiateModules(modules))}function getShaderDependencies(modules){const moduleMap={},moduleDepth={};return getDependencyGraph({modules:modules,level:0,moduleMap:moduleMap,moduleDepth:moduleDepth}),Object.keys(moduleDepth).sort(((a,b)=>moduleDepth[b]-moduleDepth[a])).map((name=>moduleMap[name]))}function getDependencyGraph(options){const{modules:modules,level:level,moduleMap:moduleMap,moduleDepth:moduleDepth}=options;if(level>=5)throw new Error("Possible loop in shader dependency graph");for(const module of modules)moduleMap[module.name]=module,(void 0===moduleDepth[module.name]||moduleDepth[module.name]<level)&&(moduleDepth[module.name]=level);for(const module of modules)module.dependencies&&getDependencyGraph({modules:module.dependencies,level:level+1,moduleMap:moduleMap,moduleDepth:moduleDepth})}},"./node_modules/@luma.gl/shadertools/dist/lib/shader-assembly/shader-injections.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{O_:function(){return DECLARATION_INJECT_MARKER},bv:function(){return injectShader},Uu:function(){return normalizeInjections}});const MODULE_INJECTORS={vertex:"#ifdef MODULE_LOGDEPTH\nlogdepth_adjustPosition(gl_Position);\n#endif\n",fragment:"#ifdef MODULE_MATERIAL\ngl_FragColor = material_filterColor(gl_FragColor);\n#endif\n#ifdef MODULE_LIGHTING\ngl_FragColor = lighting_filterColor(gl_FragColor);\n#endif\n#ifdef MODULE_FOG\ngl_FragColor = fog_filterColor(gl_FragColor);\n#endif\n#ifdef MODULE_PICKING\ngl_FragColor = picking_filterHighlightColor(gl_FragColor);\ngl_FragColor = picking_filterPickingColor(gl_FragColor);\n#endif\n#ifdef MODULE_LOGDEPTH\nlogdepth_setFragDepth();\n#endif\n"},REGEX_START_OF_MAIN=/void\s+main\s*\([^)]*\)\s*\{\n?/,REGEX_END_OF_MAIN=/}\n?[^{}]*$/,fragments=[],DECLARATION_INJECT_MARKER="__LUMA_INJECT_DECLARATIONS__";function normalizeInjections(injections){const result={vertex:{},fragment:{}};for(const hook in injections){let injection=injections[hook];"string"==typeof injection&&(injection={order:0,injection:injection}),result[getHookStage(hook)][hook]=injection}return result}function getHookStage(hook){const type=hook.slice(0,2);switch(type){case"vs":return"vertex";case"fs":return"fragment";default:throw new Error(type)}}function injectShader(source,stage,inject,injectStandardStubs=!1){const isVertex="vertex"===stage;for(const key in inject){const fragmentData=inject[key];fragmentData.sort(((a,b)=>a.order-b.order)),fragments.length=fragmentData.length;for(let i=0,len=fragmentData.length;i<len;++i)fragments[i]=fragmentData[i].injection;const fragmentString=`${fragments.join("\n")}\n`;switch(key){case"vs:#decl":isVertex&&(source=source.replace(DECLARATION_INJECT_MARKER,fragmentString));break;case"vs:#main-start":isVertex&&(source=source.replace(REGEX_START_OF_MAIN,(match=>match+fragmentString)));break;case"vs:#main-end":isVertex&&(source=source.replace(REGEX_END_OF_MAIN,(match=>fragmentString+match)));break;case"fs:#decl":isVertex||(source=source.replace(DECLARATION_INJECT_MARKER,fragmentString));break;case"fs:#main-start":isVertex||(source=source.replace(REGEX_START_OF_MAIN,(match=>match+fragmentString)));break;case"fs:#main-end":isVertex||(source=source.replace(REGEX_END_OF_MAIN,(match=>fragmentString+match)));break;default:source=source.replace(key,(match=>match+fragmentString))}}return source=source.replace(DECLARATION_INJECT_MARKER,""),injectStandardStubs&&(source=source.replace(/\}\s*$/,(match=>match+MODULE_INJECTORS[stage]))),source}},"./node_modules/@luma.gl/shadertools/dist/lib/shader-module/shader-module-instance.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{z:function(){return ShaderModuleInstance}});var assert=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/lib/utils/assert.js");const DEFAULT_PROP_VALIDATORS={number:{type:"number",validate(value,propType){return Number.isFinite(value)&&"object"==typeof propType&&(void 0===propType.max||value<=propType.max)&&(void 0===propType.min||value>=propType.min)}},array:{type:"array",validate(value,propType){return Array.isArray(value)||ArrayBuffer.isView(value)}}};function makePropValidator(propType){let type=getTypeOf(propType);if("object"!==type)return{value:propType,...DEFAULT_PROP_VALIDATORS[type],type:type};if("object"==typeof propType)return propType?void 0!==propType.type?{...propType,...DEFAULT_PROP_VALIDATORS[propType.type],type:propType.type}:void 0===propType.value?{type:"object",value:propType}:(type=getTypeOf(propType.value),{...propType,...DEFAULT_PROP_VALIDATORS[type],type:type}):{type:"object",value:null};throw new Error("props")}function getTypeOf(value){return Array.isArray(value)||ArrayBuffer.isView(value)?"array":typeof value}var shader_injections=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/lib/shader-assembly/shader-injections.js");let index=1;class ShaderModuleInstance{name;vs;fs;getModuleUniforms;dependencies;deprecations;defines;injections;uniforms={};uniformTypes={};static instantiateModules(modules){return modules.map((module=>{if(module instanceof ShaderModuleInstance)return module;(0,assert.v)("string"!=typeof module,`Shader module use by name is deprecated. Import shader module '${JSON.stringify(module)}' and use it directly.`),module.name||(console.warn("shader module has no name"),module.name="shader-module-"+index++);const moduleObject=new ShaderModuleInstance(module);return moduleObject.dependencies=ShaderModuleInstance.instantiateModules(module.dependencies||[]),moduleObject}))}constructor(props){const{name:name,vs:vs,fs:fs,dependencies:dependencies=[],uniformTypes:uniformTypes={},uniformPropTypes:uniformPropTypes={},getUniforms:getUniforms,deprecations:deprecations=[],defines:defines={},inject:inject={}}=props;(0,assert.v)("string"==typeof name),this.name=name,this.vs=vs,this.fs=fs,this.getModuleUniforms=getUniforms,this.dependencies=ShaderModuleInstance.instantiateModules(dependencies),this.deprecations=this._parseDeprecationDefinitions(deprecations),this.defines=defines,this.injections=(0,shader_injections.Uu)(inject),this.uniformTypes=uniformTypes,uniformPropTypes&&(this.uniforms=function makePropValidators(propTypes){const propValidators={};for(const[name,propType]of Object.entries(propTypes))propValidators[name]=makePropValidator(propType);return propValidators}(uniformPropTypes))}getModuleSource(stage){let moduleSource;switch(stage){case"vertex":moduleSource=this.vs||"";break;case"fragment":moduleSource=this.fs||"";break;default:(0,assert.v)(!1)}const moduleName=this.name.toUpperCase().replace(/[^0-9a-z]/gi,"_");return`// ----- MODULE ${this.name} ---------------\n\n#define MODULE_${moduleName}\n${moduleSource}\n\n`}getUniforms(userProps,uniforms){return this.getModuleUniforms?this.getModuleUniforms(userProps,uniforms):function getValidatedProperties(properties,propValidators,errorMessage){const validated={};for(const[key,propsValidator]of Object.entries(propValidators))properties&&key in properties&&!propsValidator.private?(propsValidator.validate&&(0,assert.v)(propsValidator.validate(properties[key],propsValidator),`${errorMessage}: invalid ${key}`),validated[key]=properties[key]):validated[key]=propsValidator.value;return validated}(userProps,this.uniforms,this.name)}getDefines(){return this.defines}checkDeprecations(shaderSource,log){this.deprecations.forEach((def=>{def.regex?.test(shaderSource)&&(def.deprecated?log.deprecated(def.old,def.new)():log.removed(def.old,def.new)())}))}_parseDeprecationDefinitions(deprecations){return deprecations.forEach((def=>{if("function"===def.type)def.regex=new RegExp(`\\b${def.old}\\(`);else def.regex=new RegExp(`${def.type} ${def.old};`)})),deprecations}_defaultGetUniforms(opts={}){const uniforms={},propTypes=this.uniforms;for(const key in propTypes){const propDef=propTypes[key];key in opts&&!propDef.private?(propDef.validate&&(0,assert.v)(propDef.validate(opts[key],propDef),`${this.name}: invalid ${key}`),uniforms[key]=opts[key]):uniforms[key]=propDef.value}return uniforms}}},"./node_modules/@luma.gl/shadertools/dist/lib/utils/assert.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function assert(condition,message){if(!condition)throw new Error(message||"shadertools: assertion failed.")}__webpack_require__.d(__webpack_exports__,{v:function(){return assert}})},"./node_modules/@luma.gl/shadertools/dist/modules-webgl1/math/fp64/fp64.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function fp64ify(a,out=[],startIndex=0){const hiPart=Math.fround(a),loPart=a-hiPart;return out[startIndex]=hiPart,out[startIndex+1]=loPart,out}function fp64LowPart(a){return a-Math.fround(a)}function fp64ifyMatrix4(matrix){const matrixFP64=new Float32Array(32);for(let i=0;i<4;++i)for(let j=0;j<4;++j){const index=4*i+j;fp64ify(matrix[4*j+i],matrixFP64,2*index)}return matrixFP64}__webpack_require__.d(__webpack_exports__,{dI:function(){return fp64arithmetic}});const CONST_UNIFORMS={ONE:1};const fp64arithmetic={name:"fp64-arithmetic",vs:"uniform float ONE;\nvec2 split(float a) {\nconst float SPLIT = 4097.0;\nfloat t = a * SPLIT;\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\nfloat a_hi = t * ONE - (t - a);\nfloat a_lo = a * ONE - a_hi;\n#else\nfloat a_hi = t - (t - a);\nfloat a_lo = a - a_hi;\n#endif\nreturn vec2(a_hi, a_lo);\n}\nvec2 split2(vec2 a) {\nvec2 b = split(a.x);\nb.y += a.y;\nreturn b;\n}\nvec2 quickTwoSum(float a, float b) {\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\nfloat sum = (a + b) * ONE;\nfloat err = b - (sum - a) * ONE;\n#else\nfloat sum = a + b;\nfloat err = b - (sum - a);\n#endif\nreturn vec2(sum, err);\n}\nvec2 twoSum(float a, float b) {\nfloat s = (a + b);\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\nfloat v = (s * ONE - a) * ONE;\nfloat err = (a - (s - v) * ONE) * ONE * ONE * ONE + (b - v);\n#else\nfloat v = s - a;\nfloat err = (a - (s - v)) + (b - v);\n#endif\nreturn vec2(s, err);\n}\nvec2 twoSub(float a, float b) {\nfloat s = (a - b);\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\nfloat v = (s * ONE - a) * ONE;\nfloat err = (a - (s - v) * ONE) * ONE * ONE * ONE - (b + v);\n#else\nfloat v = s - a;\nfloat err = (a - (s - v)) - (b + v);\n#endif\nreturn vec2(s, err);\n}\nvec2 twoSqr(float a) {\nfloat prod = a * a;\nvec2 a_fp64 = split(a);\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\nfloat err = ((a_fp64.x * a_fp64.x - prod) * ONE + 2.0 * a_fp64.x *\na_fp64.y * ONE * ONE) + a_fp64.y * a_fp64.y * ONE * ONE * ONE;\n#else\nfloat err = ((a_fp64.x * a_fp64.x - prod) + 2.0 * a_fp64.x * a_fp64.y) + a_fp64.y * a_fp64.y;\n#endif\nreturn vec2(prod, err);\n}\nvec2 twoProd(float a, float b) {\nfloat prod = a * b;\nvec2 a_fp64 = split(a);\nvec2 b_fp64 = split(b);\nfloat err = ((a_fp64.x * b_fp64.x - prod) + a_fp64.x * b_fp64.y +\na_fp64.y * b_fp64.x) + a_fp64.y * b_fp64.y;\nreturn vec2(prod, err);\n}\nvec2 sum_fp64(vec2 a, vec2 b) {\nvec2 s, t;\ns = twoSum(a.x, b.x);\nt = twoSum(a.y, b.y);\ns.y += t.x;\ns = quickTwoSum(s.x, s.y);\ns.y += t.y;\ns = quickTwoSum(s.x, s.y);\nreturn s;\n}\nvec2 sub_fp64(vec2 a, vec2 b) {\nvec2 s, t;\ns = twoSub(a.x, b.x);\nt = twoSub(a.y, b.y);\ns.y += t.x;\ns = quickTwoSum(s.x, s.y);\ns.y += t.y;\ns = quickTwoSum(s.x, s.y);\nreturn s;\n}\nvec2 mul_fp64(vec2 a, vec2 b) {\nvec2 prod = twoProd(a.x, b.x);\nprod.y += a.x * b.y;\n#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)\nprod = split2(prod);\n#endif\nprod = quickTwoSum(prod.x, prod.y);\nprod.y += a.y * b.x;\n#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)\nprod = split2(prod);\n#endif\nprod = quickTwoSum(prod.x, prod.y);\nreturn prod;\n}\nvec2 div_fp64(vec2 a, vec2 b) {\nfloat xn = 1.0 / b.x;\n#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)\nvec2 yn = mul_fp64(a, vec2(xn, 0));\n#else\nvec2 yn = a * xn;\n#endif\nfloat diff = (sub_fp64(a, mul_fp64(b, yn))).x;\nvec2 prod = twoProd(xn, diff);\nreturn sum_fp64(yn, prod);\n}\nvec2 sqrt_fp64(vec2 a) {\nif (a.x == 0.0 && a.y == 0.0) return vec2(0.0, 0.0);\nif (a.x < 0.0) return vec2(0.0 / 0.0, 0.0 / 0.0);\nfloat x = 1.0 / sqrt(a.x);\nfloat yn = a.x * x;\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\nvec2 yn_sqr = twoSqr(yn) * ONE;\n#else\nvec2 yn_sqr = twoSqr(yn);\n#endif\nfloat diff = sub_fp64(a, yn_sqr).x;\nvec2 prod = twoProd(x * 0.5, diff);\n#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)\nreturn sum_fp64(split(yn), prod);\n#else\nreturn sum_fp64(vec2(yn, 0.0), prod);\n#endif\n}\n",getUniforms:function getUniforms(){return CONST_UNIFORMS},fp64ify:fp64ify,fp64LowPart:fp64LowPart,fp64ifyMatrix4:fp64ifyMatrix4}},"./node_modules/@math.gl/core/dist/classes/base/math-array.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{a:function(){return MathArray}});var _lib_common_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js");class MathArray extends Array{clone(){return(new this.constructor).copy(this)}fromArray(array,offset=0){for(let i=0;i<this.ELEMENTS;++i)this[i]=array[i+offset];return this.check()}toArray(targetArray=[],offset=0){for(let i=0;i<this.ELEMENTS;++i)targetArray[offset+i]=this[i];return targetArray}toObject(targetObject){return targetObject}from(arrayOrObject){return Array.isArray(arrayOrObject)?this.copy(arrayOrObject):this.fromObject(arrayOrObject)}to(arrayOrObject){return arrayOrObject===this?this:(0,_lib_common_js__WEBPACK_IMPORTED_MODULE_0__.cy)(arrayOrObject)?this.toArray(arrayOrObject):this.toObject(arrayOrObject)}toTarget(target){return target?this.to(target):this}toFloat32Array(){return new Float32Array(this)}toString(){return this.formatString(_lib_common_js__WEBPACK_IMPORTED_MODULE_0__.$W)}formatString(opts){let string="";for(let i=0;i<this.ELEMENTS;++i)string+=(i>0?", ":"")+(0,_lib_common_js__WEBPACK_IMPORTED_MODULE_0__.Fl)(this[i],opts);return`${opts.printTypes?this.constructor.name:""}[${string}]`}equals(array){if(!array||this.length!==array.length)return!1;for(let i=0;i<this.ELEMENTS;++i)if(!(0,_lib_common_js__WEBPACK_IMPORTED_MODULE_0__.aI)(this[i],array[i]))return!1;return!0}exactEquals(array){if(!array||this.length!==array.length)return!1;for(let i=0;i<this.ELEMENTS;++i)if(this[i]!==array[i])return!1;return!0}negate(){for(let i=0;i<this.ELEMENTS;++i)this[i]=-this[i];return this.check()}lerp(a,b,t){if(void 0===t)return this.lerp(this,a,b);for(let i=0;i<this.ELEMENTS;++i){const ai=a[i],endValue="number"==typeof b?b:b[i];this[i]=ai+t*(endValue-ai)}return this.check()}min(vector){for(let i=0;i<this.ELEMENTS;++i)this[i]=Math.min(vector[i],this[i]);return this.check()}max(vector){for(let i=0;i<this.ELEMENTS;++i)this[i]=Math.max(vector[i],this[i]);return this.check()}clamp(minVector,maxVector){for(let i=0;i<this.ELEMENTS;++i)this[i]=Math.min(Math.max(this[i],minVector[i]),maxVector[i]);return this.check()}add(...vectors){for(const vector of vectors)for(let i=0;i<this.ELEMENTS;++i)this[i]+=vector[i];return this.check()}subtract(...vectors){for(const vector of vectors)for(let i=0;i<this.ELEMENTS;++i)this[i]-=vector[i];return this.check()}scale(scale){if("number"==typeof scale)for(let i=0;i<this.ELEMENTS;++i)this[i]*=scale;else for(let i=0;i<this.ELEMENTS&&i<scale.length;++i)this[i]*=scale[i];return this.check()}multiplyByScalar(scalar){for(let i=0;i<this.ELEMENTS;++i)this[i]*=scalar;return this.check()}check(){if(_lib_common_js__WEBPACK_IMPORTED_MODULE_0__.$W.debug&&!this.validate())throw new Error(`math.gl: ${this.constructor.name} some fields set to invalid numbers'`);return this}validate(){let valid=this.length===this.ELEMENTS;for(let i=0;i<this.ELEMENTS;++i)valid=valid&&Number.isFinite(this[i]);return valid}sub(a){return this.subtract(a)}setScalar(a){for(let i=0;i<this.ELEMENTS;++i)this[i]=a;return this.check()}addScalar(a){for(let i=0;i<this.ELEMENTS;++i)this[i]+=a;return this.check()}subScalar(a){return this.addScalar(-a)}multiplyScalar(scalar){for(let i=0;i<this.ELEMENTS;++i)this[i]*=scalar;return this.check()}divideScalar(a){return this.multiplyByScalar(1/a)}clampScalar(min,max){for(let i=0;i<this.ELEMENTS;++i)this[i]=Math.min(Math.max(this[i],min),max);return this.check()}get elements(){return this}}},"./node_modules/@math.gl/core/dist/classes/base/matrix.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{u:function(){return Matrix}});var _math_array_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/classes/base/math-array.js"),_lib_validators_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/validators.js"),_lib_common_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js");class Matrix extends _math_array_js__WEBPACK_IMPORTED_MODULE_0__.a{toString(){let string="[";if(_lib_common_js__WEBPACK_IMPORTED_MODULE_1__.$W.printRowMajor){string+="row-major:";for(let row=0;row<this.RANK;++row)for(let col=0;col<this.RANK;++col)string+=` ${this[col*this.RANK+row]}`}else{string+="column-major:";for(let i=0;i<this.ELEMENTS;++i)string+=` ${this[i]}`}return string+="]",string}getElementIndex(row,col){return col*this.RANK+row}getElement(row,col){return this[col*this.RANK+row]}setElement(row,col,value){return this[col*this.RANK+row]=(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_2__.ws)(value),this}getColumn(columnIndex,result=new Array(this.RANK).fill(-0)){const firstIndex=columnIndex*this.RANK;for(let i=0;i<this.RANK;++i)result[i]=this[firstIndex+i];return result}setColumn(columnIndex,columnVector){const firstIndex=columnIndex*this.RANK;for(let i=0;i<this.RANK;++i)this[firstIndex+i]=columnVector[i];return this}}},"./node_modules/@math.gl/core/dist/classes/base/vector.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{M:function(){return Vector}});var math_array=__webpack_require__("./node_modules/@math.gl/core/dist/classes/base/math-array.js"),validators=__webpack_require__("./node_modules/@math.gl/core/dist/lib/validators.js");function assert(condition,message){if(!condition)throw new Error(`math.gl assertion ${message}`)}class Vector extends math_array.a{get x(){return this[0]}set x(value){this[0]=(0,validators.ws)(value)}get y(){return this[1]}set y(value){this[1]=(0,validators.ws)(value)}len(){return Math.sqrt(this.lengthSquared())}magnitude(){return this.len()}lengthSquared(){let length=0;for(let i=0;i<this.ELEMENTS;++i)length+=this[i]*this[i];return length}magnitudeSquared(){return this.lengthSquared()}distance(mathArray){return Math.sqrt(this.distanceSquared(mathArray))}distanceSquared(mathArray){let length=0;for(let i=0;i<this.ELEMENTS;++i){const dist=this[i]-mathArray[i];length+=dist*dist}return(0,validators.ws)(length)}dot(mathArray){let product=0;for(let i=0;i<this.ELEMENTS;++i)product+=this[i]*mathArray[i];return(0,validators.ws)(product)}normalize(){const length=this.magnitude();if(0!==length)for(let i=0;i<this.ELEMENTS;++i)this[i]/=length;return this.check()}multiply(...vectors){for(const vector of vectors)for(let i=0;i<this.ELEMENTS;++i)this[i]*=vector[i];return this.check()}divide(...vectors){for(const vector of vectors)for(let i=0;i<this.ELEMENTS;++i)this[i]/=vector[i];return this.check()}lengthSq(){return this.lengthSquared()}distanceTo(vector){return this.distance(vector)}distanceToSquared(vector){return this.distanceSquared(vector)}getComponent(i){return assert(i>=0&&i<this.ELEMENTS,"index is out of range"),(0,validators.ws)(this[i])}setComponent(i,value){return assert(i>=0&&i<this.ELEMENTS,"index is out of range"),this[i]=value,this.check()}addVectors(a,b){return this.copy(a).add(b)}subVectors(a,b){return this.copy(a).subtract(b)}multiplyVectors(a,b){return this.copy(a).multiply(b)}addScaledVector(a,b){return this.add(new this.constructor(a).multiplyScalar(b))}}},"./node_modules/@math.gl/core/dist/classes/matrix4.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{k:function(){return Matrix4}});var INDICES,_base_matrix_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/classes/base/matrix.js"),_lib_validators_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/validators.js"),_lib_gl_matrix_extras_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/gl-matrix-extras.js"),_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/mat4.js"),_gl_matrix_vec2_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec2.js"),_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec3.js"),_gl_matrix_vec4_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec4.js");!function(INDICES){INDICES[INDICES.COL0ROW0=0]="COL0ROW0",INDICES[INDICES.COL0ROW1=1]="COL0ROW1",INDICES[INDICES.COL0ROW2=2]="COL0ROW2",INDICES[INDICES.COL0ROW3=3]="COL0ROW3",INDICES[INDICES.COL1ROW0=4]="COL1ROW0",INDICES[INDICES.COL1ROW1=5]="COL1ROW1",INDICES[INDICES.COL1ROW2=6]="COL1ROW2",INDICES[INDICES.COL1ROW3=7]="COL1ROW3",INDICES[INDICES.COL2ROW0=8]="COL2ROW0",INDICES[INDICES.COL2ROW1=9]="COL2ROW1",INDICES[INDICES.COL2ROW2=10]="COL2ROW2",INDICES[INDICES.COL2ROW3=11]="COL2ROW3",INDICES[INDICES.COL3ROW0=12]="COL3ROW0",INDICES[INDICES.COL3ROW1=13]="COL3ROW1",INDICES[INDICES.COL3ROW2=14]="COL3ROW2",INDICES[INDICES.COL3ROW3=15]="COL3ROW3"}(INDICES||(INDICES={}));const DEFAULT_FOVY=45*Math.PI/180,DEFAULT_ASPECT=1,DEFAULT_NEAR=.1,DEFAULT_FAR=500,IDENTITY_MATRIX=Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);class Matrix4 extends _base_matrix_js__WEBPACK_IMPORTED_MODULE_0__.u{static get IDENTITY(){return function getIdentityMatrix(){IDENTITY||(IDENTITY=new Matrix4,Object.freeze(IDENTITY));return IDENTITY}()}static get ZERO(){return function getZeroMatrix(){ZERO||(ZERO=new Matrix4([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Object.freeze(ZERO));return ZERO}()}get ELEMENTS(){return 16}get RANK(){return 4}get INDICES(){return INDICES}constructor(array){super(-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0),1===arguments.length&&Array.isArray(array)?this.copy(array):this.identity()}copy(array){return this[0]=array[0],this[1]=array[1],this[2]=array[2],this[3]=array[3],this[4]=array[4],this[5]=array[5],this[6]=array[6],this[7]=array[7],this[8]=array[8],this[9]=array[9],this[10]=array[10],this[11]=array[11],this[12]=array[12],this[13]=array[13],this[14]=array[14],this[15]=array[15],this.check()}set(m00,m10,m20,m30,m01,m11,m21,m31,m02,m12,m22,m32,m03,m13,m23,m33){return this[0]=m00,this[1]=m10,this[2]=m20,this[3]=m30,this[4]=m01,this[5]=m11,this[6]=m21,this[7]=m31,this[8]=m02,this[9]=m12,this[10]=m22,this[11]=m32,this[12]=m03,this[13]=m13,this[14]=m23,this[15]=m33,this.check()}setRowMajor(m00,m01,m02,m03,m10,m11,m12,m13,m20,m21,m22,m23,m30,m31,m32,m33){return this[0]=m00,this[1]=m10,this[2]=m20,this[3]=m30,this[4]=m01,this[5]=m11,this[6]=m21,this[7]=m31,this[8]=m02,this[9]=m12,this[10]=m22,this[11]=m32,this[12]=m03,this[13]=m13,this[14]=m23,this[15]=m33,this.check()}toRowMajor(result){return result[0]=this[0],result[1]=this[4],result[2]=this[8],result[3]=this[12],result[4]=this[1],result[5]=this[5],result[6]=this[9],result[7]=this[13],result[8]=this[2],result[9]=this[6],result[10]=this[10],result[11]=this[14],result[12]=this[3],result[13]=this[7],result[14]=this[11],result[15]=this[15],result}identity(){return this.copy(IDENTITY_MATRIX)}fromObject(object){return this.check()}fromQuaternion(quaternion){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.I0)(this,quaternion),this.check()}frustum(view){const{left:left,right:right,bottom:bottom,top:top,near:near=DEFAULT_NEAR,far:far=DEFAULT_FAR}=view;return far===1/0?function computeInfinitePerspectiveOffCenter(result,left,right,bottom,top,near){const column0Row0=2*near/(right-left),column1Row1=2*near/(top-bottom),column2Row0=(right+left)/(right-left),column2Row1=(top+bottom)/(top-bottom),column2Row2=-1,column2Row3=-1,column3Row2=-2*near;return result[0]=column0Row0,result[1]=0,result[2]=0,result[3]=0,result[4]=0,result[5]=column1Row1,result[6]=0,result[7]=0,result[8]=column2Row0,result[9]=column2Row1,result[10]=column2Row2,result[11]=column2Row3,result[12]=0,result[13]=0,result[14]=column3Row2,result[15]=0,result}(this,left,right,bottom,top,near):(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.$h)(this,left,right,bottom,top,near,far),this.check()}lookAt(view){const{eye:eye,center:center=[0,0,0],up:up=[0,1,0]}=view;return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.t5)(this,eye,center,up),this.check()}ortho(view){const{left:left,right:right,bottom:bottom,top:top,near:near=DEFAULT_NEAR,far:far=DEFAULT_FAR}=view;return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.v3)(this,left,right,bottom,top,near,far),this.check()}orthographic(view){const{fovy:fovy=DEFAULT_FOVY,aspect:aspect=DEFAULT_ASPECT,focalDistance:focalDistance=1,near:near=DEFAULT_NEAR,far:far=DEFAULT_FAR}=view;checkRadians(fovy);const halfY=fovy/2,top=focalDistance*Math.tan(halfY),right=top*aspect;return this.ortho({left:-right,right:right,bottom:-top,top:top,near:near,far:far})}perspective(view){const{fovy:fovy=45*Math.PI/180,aspect:aspect=1,near:near=.1,far:far=500}=view;return checkRadians(fovy),(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.fN)(this,fovy,aspect,near,far),this.check()}determinant(){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.a4)(this)}getScale(result=[-0,-0,-0]){return result[0]=Math.sqrt(this[0]*this[0]+this[1]*this[1]+this[2]*this[2]),result[1]=Math.sqrt(this[4]*this[4]+this[5]*this[5]+this[6]*this[6]),result[2]=Math.sqrt(this[8]*this[8]+this[9]*this[9]+this[10]*this[10]),result}getTranslation(result=[-0,-0,-0]){return result[0]=this[12],result[1]=this[13],result[2]=this[14],result}getRotation(result,scaleResult){result=result||[-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0],scaleResult=scaleResult||[-0,-0,-0];const scale=this.getScale(scaleResult),inverseScale0=1/scale[0],inverseScale1=1/scale[1],inverseScale2=1/scale[2];return result[0]=this[0]*inverseScale0,result[1]=this[1]*inverseScale1,result[2]=this[2]*inverseScale2,result[3]=0,result[4]=this[4]*inverseScale0,result[5]=this[5]*inverseScale1,result[6]=this[6]*inverseScale2,result[7]=0,result[8]=this[8]*inverseScale0,result[9]=this[9]*inverseScale1,result[10]=this[10]*inverseScale2,result[11]=0,result[12]=0,result[13]=0,result[14]=0,result[15]=1,result}getRotationMatrix3(result,scaleResult){result=result||[-0,-0,-0,-0,-0,-0,-0,-0,-0],scaleResult=scaleResult||[-0,-0,-0];const scale=this.getScale(scaleResult),inverseScale0=1/scale[0],inverseScale1=1/scale[1],inverseScale2=1/scale[2];return result[0]=this[0]*inverseScale0,result[1]=this[1]*inverseScale1,result[2]=this[2]*inverseScale2,result[3]=this[4]*inverseScale0,result[4]=this[5]*inverseScale1,result[5]=this[6]*inverseScale2,result[6]=this[8]*inverseScale0,result[7]=this[9]*inverseScale1,result[8]=this[10]*inverseScale2,result}transpose(){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.mg)(this,this),this.check()}invert(){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.B8)(this,this),this.check()}multiplyLeft(a){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.lw)(this,a,this),this.check()}multiplyRight(a){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.lw)(this,this,a),this.check()}rotateX(radians){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.eL)(this,this,radians),this.check()}rotateY(radians){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.Z8)(this,this,radians),this.check()}rotateZ(radians){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.Qr)(this,this,radians),this.check()}rotateXYZ(angleXYZ){return this.rotateX(angleXYZ[0]).rotateY(angleXYZ[1]).rotateZ(angleXYZ[2])}rotateAxis(radians,axis){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.e$)(this,this,radians,axis),this.check()}scale(factor){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.hs)(this,this,Array.isArray(factor)?factor:[factor,factor,factor]),this.check()}translate(vector){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.Tl)(this,this,vector),this.check()}transform(vector,result){return 4===vector.length?(result=(0,_gl_matrix_vec4_js__WEBPACK_IMPORTED_MODULE_2__.Z0)(result||[-0,-0,-0,-0],vector,this),(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_3__.qk)(result,4),result):this.transformAsPoint(vector,result)}transformAsPoint(vector,result){const{length:length}=vector;let out;switch(length){case 2:out=(0,_gl_matrix_vec2_js__WEBPACK_IMPORTED_MODULE_4__.Z0)(result||[-0,-0],vector,this);break;case 3:out=(0,_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_5__.Z0)(result||[-0,-0,-0],vector,this);break;default:throw new Error("Illegal vector")}return(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_3__.qk)(out,vector.length),out}transformAsVector(vector,result){let out;switch(vector.length){case 2:out=(0,_lib_gl_matrix_extras_js__WEBPACK_IMPORTED_MODULE_6__.B$)(result||[-0,-0],vector,this);break;case 3:out=(0,_lib_gl_matrix_extras_js__WEBPACK_IMPORTED_MODULE_6__.cL)(result||[-0,-0,-0],vector,this);break;default:throw new Error("Illegal vector")}return(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_3__.qk)(out,vector.length),out}transformPoint(vector,result){return this.transformAsPoint(vector,result)}transformVector(vector,result){return this.transformAsPoint(vector,result)}transformDirection(vector,result){return this.transformAsVector(vector,result)}makeRotationX(radians){return this.identity().rotateX(radians)}makeTranslation(x,y,z){return this.identity().translate([x,y,z])}}let ZERO,IDENTITY;function checkRadians(possiblyDegrees){if(possiblyDegrees>2*Math.PI)throw Error("expected radians")}},"./node_modules/@math.gl/core/dist/classes/vector3.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{P:function(){return Vector3}});var _base_vector_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/classes/base/vector.js"),_lib_common_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js"),_lib_validators_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/validators.js"),_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec3.js"),_lib_gl_matrix_extras_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/gl-matrix-extras.js");const ORIGIN=[0,0,0];let ZERO;class Vector3 extends _base_vector_js__WEBPACK_IMPORTED_MODULE_0__.M{static get ZERO(){return ZERO||(ZERO=new Vector3(0,0,0),Object.freeze(ZERO)),ZERO}constructor(x=0,y=0,z=0){super(-0,-0,-0),1===arguments.length&&(0,_lib_common_js__WEBPACK_IMPORTED_MODULE_1__.cy)(x)?this.copy(x):(_lib_common_js__WEBPACK_IMPORTED_MODULE_1__.$W.debug&&((0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_2__.ws)(x),(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_2__.ws)(y),(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_2__.ws)(z)),this[0]=x,this[1]=y,this[2]=z)}set(x,y,z){return this[0]=x,this[1]=y,this[2]=z,this.check()}copy(array){return this[0]=array[0],this[1]=array[1],this[2]=array[2],this.check()}fromObject(object){return _lib_common_js__WEBPACK_IMPORTED_MODULE_1__.$W.debug&&((0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_2__.ws)(object.x),(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_2__.ws)(object.y),(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_2__.ws)(object.z)),this[0]=object.x,this[1]=object.y,this[2]=object.z,this.check()}toObject(object){return object.x=this[0],object.y=this[1],object.z=this[2],object}get ELEMENTS(){return 3}get z(){return this[2]}set z(value){this[2]=(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_2__.ws)(value)}angle(vector){return(0,_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_3__.g7)(this,vector)}cross(vector){return(0,_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_3__.$A)(this,this,vector),this.check()}rotateX({radians:radians,origin:origin=ORIGIN}){return(0,_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_3__.eL)(this,this,origin,radians),this.check()}rotateY({radians:radians,origin:origin=ORIGIN}){return(0,_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_3__.Z8)(this,this,origin,radians),this.check()}rotateZ({radians:radians,origin:origin=ORIGIN}){return(0,_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_3__.x6)(this,this,origin,radians),this.check()}transform(matrix4){return this.transformAsPoint(matrix4)}transformAsPoint(matrix4){return(0,_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_3__.Z0)(this,this,matrix4),this.check()}transformAsVector(matrix4){return(0,_lib_gl_matrix_extras_js__WEBPACK_IMPORTED_MODULE_4__.cL)(this,this,matrix4),this.check()}transformByMatrix3(matrix3){return(0,_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_3__.ei)(this,this,matrix3),this.check()}transformByMatrix2(matrix2){return(0,_lib_gl_matrix_extras_js__WEBPACK_IMPORTED_MODULE_4__.J4)(this,this,matrix2),this.check()}transformByQuaternion(quaternion){return(0,_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_3__.gL)(this,this,quaternion),this.check()}}},"./node_modules/@math.gl/core/dist/gl-matrix/common.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{p8:function(){return EPSILON},tb:function(){return ARRAY_TYPE}});const EPSILON=1e-6;let ARRAY_TYPE="undefined"!=typeof Float32Array?Float32Array:Array;Math.random;Math.PI},"./node_modules/@math.gl/core/dist/gl-matrix/mat4.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{$h:function(){return frustum},B8:function(){return invert},I0:function(){return fromQuat},Qr:function(){return rotateZ},Tl:function(){return translate},Z8:function(){return rotateY},a4:function(){return determinant},e$:function(){return rotate},eL:function(){return rotateX},fN:function(){return perspective},hs:function(){return scale},lw:function(){return multiply},mg:function(){return transpose},t5:function(){return lookAt},v3:function(){return ortho}});var _common_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/common.js");function transpose(out,a){if(out===a){const a01=a[1],a02=a[2],a03=a[3],a12=a[6],a13=a[7],a23=a[11];out[1]=a[4],out[2]=a[8],out[3]=a[12],out[4]=a01,out[6]=a[9],out[7]=a[13],out[8]=a02,out[9]=a12,out[11]=a[14],out[12]=a03,out[13]=a13,out[14]=a23}else out[0]=a[0],out[1]=a[4],out[2]=a[8],out[3]=a[12],out[4]=a[1],out[5]=a[5],out[6]=a[9],out[7]=a[13],out[8]=a[2],out[9]=a[6],out[10]=a[10],out[11]=a[14],out[12]=a[3],out[13]=a[7],out[14]=a[11],out[15]=a[15];return out}function invert(out,a){const a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],a30=a[12],a31=a[13],a32=a[14],a33=a[15],b00=a00*a11-a01*a10,b01=a00*a12-a02*a10,b02=a00*a13-a03*a10,b03=a01*a12-a02*a11,b04=a01*a13-a03*a11,b05=a02*a13-a03*a12,b06=a20*a31-a21*a30,b07=a20*a32-a22*a30,b08=a20*a33-a23*a30,b09=a21*a32-a22*a31,b10=a21*a33-a23*a31,b11=a22*a33-a23*a32;let det=b00*b11-b01*b10+b02*b09+b03*b08-b04*b07+b05*b06;return det?(det=1/det,out[0]=(a11*b11-a12*b10+a13*b09)*det,out[1]=(a02*b10-a01*b11-a03*b09)*det,out[2]=(a31*b05-a32*b04+a33*b03)*det,out[3]=(a22*b04-a21*b05-a23*b03)*det,out[4]=(a12*b08-a10*b11-a13*b07)*det,out[5]=(a00*b11-a02*b08+a03*b07)*det,out[6]=(a32*b02-a30*b05-a33*b01)*det,out[7]=(a20*b05-a22*b02+a23*b01)*det,out[8]=(a10*b10-a11*b08+a13*b06)*det,out[9]=(a01*b08-a00*b10-a03*b06)*det,out[10]=(a30*b04-a31*b02+a33*b00)*det,out[11]=(a21*b02-a20*b04-a23*b00)*det,out[12]=(a11*b07-a10*b09-a12*b06)*det,out[13]=(a00*b09-a01*b07+a02*b06)*det,out[14]=(a31*b01-a30*b03-a32*b00)*det,out[15]=(a20*b03-a21*b01+a22*b00)*det,out):null}function determinant(a){const a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],a30=a[12],a31=a[13],a32=a[14],b0=a00*a11-a01*a10,b1=a00*a12-a02*a10,b2=a01*a12-a02*a11,b3=a20*a31-a21*a30,b4=a20*a32-a22*a30,b5=a21*a32-a22*a31;return a13*(a00*b5-a01*b4+a02*b3)-a03*(a10*b5-a11*b4+a12*b3)+a[15]*(a20*b2-a21*b1+a22*b0)-a23*(a30*b2-a31*b1+a32*b0)}function multiply(out,a,b){const a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],a30=a[12],a31=a[13],a32=a[14],a33=a[15];let b0=b[0],b1=b[1],b2=b[2],b3=b[3];return out[0]=b0*a00+b1*a10+b2*a20+b3*a30,out[1]=b0*a01+b1*a11+b2*a21+b3*a31,out[2]=b0*a02+b1*a12+b2*a22+b3*a32,out[3]=b0*a03+b1*a13+b2*a23+b3*a33,b0=b[4],b1=b[5],b2=b[6],b3=b[7],out[4]=b0*a00+b1*a10+b2*a20+b3*a30,out[5]=b0*a01+b1*a11+b2*a21+b3*a31,out[6]=b0*a02+b1*a12+b2*a22+b3*a32,out[7]=b0*a03+b1*a13+b2*a23+b3*a33,b0=b[8],b1=b[9],b2=b[10],b3=b[11],out[8]=b0*a00+b1*a10+b2*a20+b3*a30,out[9]=b0*a01+b1*a11+b2*a21+b3*a31,out[10]=b0*a02+b1*a12+b2*a22+b3*a32,out[11]=b0*a03+b1*a13+b2*a23+b3*a33,b0=b[12],b1=b[13],b2=b[14],b3=b[15],out[12]=b0*a00+b1*a10+b2*a20+b3*a30,out[13]=b0*a01+b1*a11+b2*a21+b3*a31,out[14]=b0*a02+b1*a12+b2*a22+b3*a32,out[15]=b0*a03+b1*a13+b2*a23+b3*a33,out}function translate(out,a,v){const x=v[0],y=v[1],z=v[2];let a00,a01,a02,a03,a10,a11,a12,a13,a20,a21,a22,a23;return a===out?(out[12]=a[0]*x+a[4]*y+a[8]*z+a[12],out[13]=a[1]*x+a[5]*y+a[9]*z+a[13],out[14]=a[2]*x+a[6]*y+a[10]*z+a[14],out[15]=a[3]*x+a[7]*y+a[11]*z+a[15]):(a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],out[0]=a00,out[1]=a01,out[2]=a02,out[3]=a03,out[4]=a10,out[5]=a11,out[6]=a12,out[7]=a13,out[8]=a20,out[9]=a21,out[10]=a22,out[11]=a23,out[12]=a00*x+a10*y+a20*z+a[12],out[13]=a01*x+a11*y+a21*z+a[13],out[14]=a02*x+a12*y+a22*z+a[14],out[15]=a03*x+a13*y+a23*z+a[15]),out}function scale(out,a,v){const x=v[0],y=v[1],z=v[2];return out[0]=a[0]*x,out[1]=a[1]*x,out[2]=a[2]*x,out[3]=a[3]*x,out[4]=a[4]*y,out[5]=a[5]*y,out[6]=a[6]*y,out[7]=a[7]*y,out[8]=a[8]*z,out[9]=a[9]*z,out[10]=a[10]*z,out[11]=a[11]*z,out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15],out}function rotate(out,a,rad,axis){let c,s,t,a00,a01,a02,a03,a10,a11,a12,a13,a20,a21,a22,a23,b00,b01,b02,b10,b11,b12,b20,b21,b22,x=axis[0],y=axis[1],z=axis[2],len=Math.sqrt(x*x+y*y+z*z);return len<_common_js__WEBPACK_IMPORTED_MODULE_0__.p8?null:(len=1/len,x*=len,y*=len,z*=len,s=Math.sin(rad),c=Math.cos(rad),t=1-c,a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],b00=x*x*t+c,b01=y*x*t+z*s,b02=z*x*t-y*s,b10=x*y*t-z*s,b11=y*y*t+c,b12=z*y*t+x*s,b20=x*z*t+y*s,b21=y*z*t-x*s,b22=z*z*t+c,out[0]=a00*b00+a10*b01+a20*b02,out[1]=a01*b00+a11*b01+a21*b02,out[2]=a02*b00+a12*b01+a22*b02,out[3]=a03*b00+a13*b01+a23*b02,out[4]=a00*b10+a10*b11+a20*b12,out[5]=a01*b10+a11*b11+a21*b12,out[6]=a02*b10+a12*b11+a22*b12,out[7]=a03*b10+a13*b11+a23*b12,out[8]=a00*b20+a10*b21+a20*b22,out[9]=a01*b20+a11*b21+a21*b22,out[10]=a02*b20+a12*b21+a22*b22,out[11]=a03*b20+a13*b21+a23*b22,a!==out&&(out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15]),out)}function rotateX(out,a,rad){const s=Math.sin(rad),c=Math.cos(rad),a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11];return a!==out&&(out[0]=a[0],out[1]=a[1],out[2]=a[2],out[3]=a[3],out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15]),out[4]=a10*c+a20*s,out[5]=a11*c+a21*s,out[6]=a12*c+a22*s,out[7]=a13*c+a23*s,out[8]=a20*c-a10*s,out[9]=a21*c-a11*s,out[10]=a22*c-a12*s,out[11]=a23*c-a13*s,out}function rotateY(out,a,rad){const s=Math.sin(rad),c=Math.cos(rad),a00=a[0],a01=a[1],a02=a[2],a03=a[3],a20=a[8],a21=a[9],a22=a[10],a23=a[11];return a!==out&&(out[4]=a[4],out[5]=a[5],out[6]=a[6],out[7]=a[7],out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15]),out[0]=a00*c-a20*s,out[1]=a01*c-a21*s,out[2]=a02*c-a22*s,out[3]=a03*c-a23*s,out[8]=a00*s+a20*c,out[9]=a01*s+a21*c,out[10]=a02*s+a22*c,out[11]=a03*s+a23*c,out}function rotateZ(out,a,rad){const s=Math.sin(rad),c=Math.cos(rad),a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7];return a!==out&&(out[8]=a[8],out[9]=a[9],out[10]=a[10],out[11]=a[11],out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15]),out[0]=a00*c+a10*s,out[1]=a01*c+a11*s,out[2]=a02*c+a12*s,out[3]=a03*c+a13*s,out[4]=a10*c-a00*s,out[5]=a11*c-a01*s,out[6]=a12*c-a02*s,out[7]=a13*c-a03*s,out}function fromQuat(out,q){const x=q[0],y=q[1],z=q[2],w=q[3],x2=x+x,y2=y+y,z2=z+z,xx=x*x2,yx=y*x2,yy=y*y2,zx=z*x2,zy=z*y2,zz=z*z2,wx=w*x2,wy=w*y2,wz=w*z2;return out[0]=1-yy-zz,out[1]=yx+wz,out[2]=zx-wy,out[3]=0,out[4]=yx-wz,out[5]=1-xx-zz,out[6]=zy+wx,out[7]=0,out[8]=zx+wy,out[9]=zy-wx,out[10]=1-xx-yy,out[11]=0,out[12]=0,out[13]=0,out[14]=0,out[15]=1,out}function frustum(out,left,right,bottom,top,near,far){const rl=1/(right-left),tb=1/(top-bottom),nf=1/(near-far);return out[0]=2*near*rl,out[1]=0,out[2]=0,out[3]=0,out[4]=0,out[5]=2*near*tb,out[6]=0,out[7]=0,out[8]=(right+left)*rl,out[9]=(top+bottom)*tb,out[10]=(far+near)*nf,out[11]=-1,out[12]=0,out[13]=0,out[14]=far*near*2*nf,out[15]=0,out}const perspective=function perspectiveNO(out,fovy,aspect,near,far){const f=1/Math.tan(fovy/2);if(out[0]=f/aspect,out[1]=0,out[2]=0,out[3]=0,out[4]=0,out[5]=f,out[6]=0,out[7]=0,out[8]=0,out[9]=0,out[11]=-1,out[12]=0,out[13]=0,out[15]=0,null!=far&&far!==1/0){const nf=1/(near-far);out[10]=(far+near)*nf,out[14]=2*far*near*nf}else out[10]=-1,out[14]=-2*near;return out};const ortho=function orthoNO(out,left,right,bottom,top,near,far){const lr=1/(left-right),bt=1/(bottom-top),nf=1/(near-far);return out[0]=-2*lr,out[1]=0,out[2]=0,out[3]=0,out[4]=0,out[5]=-2*bt,out[6]=0,out[7]=0,out[8]=0,out[9]=0,out[10]=2*nf,out[11]=0,out[12]=(left+right)*lr,out[13]=(top+bottom)*bt,out[14]=(far+near)*nf,out[15]=1,out};function lookAt(out,eye,center,up){let len,x0,x1,x2,y0,y1,y2,z0,z1,z2;const eyex=eye[0],eyey=eye[1],eyez=eye[2],upx=up[0],upy=up[1],upz=up[2],centerx=center[0],centery=center[1],centerz=center[2];return Math.abs(eyex-centerx)<_common_js__WEBPACK_IMPORTED_MODULE_0__.p8&&Math.abs(eyey-centery)<_common_js__WEBPACK_IMPORTED_MODULE_0__.p8&&Math.abs(eyez-centerz)<_common_js__WEBPACK_IMPORTED_MODULE_0__.p8?function identity(out){return out[0]=1,out[1]=0,out[2]=0,out[3]=0,out[4]=0,out[5]=1,out[6]=0,out[7]=0,out[8]=0,out[9]=0,out[10]=1,out[11]=0,out[12]=0,out[13]=0,out[14]=0,out[15]=1,out}(out):(z0=eyex-centerx,z1=eyey-centery,z2=eyez-centerz,len=1/Math.sqrt(z0*z0+z1*z1+z2*z2),z0*=len,z1*=len,z2*=len,x0=upy*z2-upz*z1,x1=upz*z0-upx*z2,x2=upx*z1-upy*z0,len=Math.sqrt(x0*x0+x1*x1+x2*x2),len?(len=1/len,x0*=len,x1*=len,x2*=len):(x0=0,x1=0,x2=0),y0=z1*x2-z2*x1,y1=z2*x0-z0*x2,y2=z0*x1-z1*x0,len=Math.sqrt(y0*y0+y1*y1+y2*y2),len?(len=1/len,y0*=len,y1*=len,y2*=len):(y0=0,y1=0,y2=0),out[0]=x0,out[1]=y0,out[2]=z0,out[3]=0,out[4]=x1,out[5]=y1,out[6]=z1,out[7]=0,out[8]=x2,out[9]=y2,out[10]=z2,out[11]=0,out[12]=-(x0*eyex+x1*eyey+x2*eyez),out[13]=-(y0*eyex+y1*eyey+y2*eyez),out[14]=-(z0*eyex+z1*eyey+z2*eyez),out[15]=1,out)}},"./node_modules/@math.gl/core/dist/gl-matrix/vec2.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{WQ:function(){return add},Z0:function(){return transformMat4},ZF:function(){return transformMat2},ei:function(){return transformMat3},l0:function(){return transformMat2d},ze:function(){return negate}});var _common_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/common.js");function add(out,a,b){return out[0]=a[0]+b[0],out[1]=a[1]+b[1],out}function negate(out,a){return out[0]=-a[0],out[1]=-a[1],out}function transformMat2(out,a,m){const x=a[0],y=a[1];return out[0]=m[0]*x+m[2]*y,out[1]=m[1]*x+m[3]*y,out}function transformMat2d(out,a,m){const x=a[0],y=a[1];return out[0]=m[0]*x+m[2]*y+m[4],out[1]=m[1]*x+m[3]*y+m[5],out}function transformMat3(out,a,m){const x=a[0],y=a[1];return out[0]=m[0]*x+m[3]*y+m[6],out[1]=m[1]*x+m[4]*y+m[7],out}function transformMat4(out,a,m){const x=a[0],y=a[1];return out[0]=m[0]*x+m[4]*y+m[12],out[1]=m[1]*x+m[5]*y+m[13],out}!function(){const vec=function create(){const out=new _common_js__WEBPACK_IMPORTED_MODULE_0__.tb(2);return _common_js__WEBPACK_IMPORTED_MODULE_0__.tb!=Float32Array&&(out[0]=0,out[1]=0),out}()}()},"./node_modules/@math.gl/core/dist/gl-matrix/vec3.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{$A:function(){return cross},Bw:function(){return length},Cc:function(){return lerp},Il:function(){return len},Om:function(){return dot},S8:function(){return normalize},Z0:function(){return transformMat4},Z8:function(){return rotateY},eL:function(){return rotateX},ei:function(){return transformMat3},fA:function(){return fromValues},g7:function(){return angle},gL:function(){return transformQuat},jb:function(){return sub},uE:function(){return sqrLen},vt:function(){return create},x6:function(){return rotateZ},xg:function(){return dist}});var _common_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/common.js");function create(){const out=new _common_js__WEBPACK_IMPORTED_MODULE_0__.tb(3);return _common_js__WEBPACK_IMPORTED_MODULE_0__.tb!=Float32Array&&(out[0]=0,out[1]=0,out[2]=0),out}function length(a){const x=a[0],y=a[1],z=a[2];return Math.sqrt(x*x+y*y+z*z)}function fromValues(x,y,z){const out=new _common_js__WEBPACK_IMPORTED_MODULE_0__.tb(3);return out[0]=x,out[1]=y,out[2]=z,out}function normalize(out,a){const x=a[0],y=a[1],z=a[2];let len=x*x+y*y+z*z;return len>0&&(len=1/Math.sqrt(len)),out[0]=a[0]*len,out[1]=a[1]*len,out[2]=a[2]*len,out}function dot(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]}function cross(out,a,b){const ax=a[0],ay=a[1],az=a[2],bx=b[0],by=b[1],bz=b[2];return out[0]=ay*bz-az*by,out[1]=az*bx-ax*bz,out[2]=ax*by-ay*bx,out}function lerp(out,a,b,t){const ax=a[0],ay=a[1],az=a[2];return out[0]=ax+t*(b[0]-ax),out[1]=ay+t*(b[1]-ay),out[2]=az+t*(b[2]-az),out}function transformMat4(out,a,m){const x=a[0],y=a[1],z=a[2];let w=m[3]*x+m[7]*y+m[11]*z+m[15];return w=w||1,out[0]=(m[0]*x+m[4]*y+m[8]*z+m[12])/w,out[1]=(m[1]*x+m[5]*y+m[9]*z+m[13])/w,out[2]=(m[2]*x+m[6]*y+m[10]*z+m[14])/w,out}function transformMat3(out,a,m){const x=a[0],y=a[1],z=a[2];return out[0]=x*m[0]+y*m[3]+z*m[6],out[1]=x*m[1]+y*m[4]+z*m[7],out[2]=x*m[2]+y*m[5]+z*m[8],out}function transformQuat(out,a,q){const qx=q[0],qy=q[1],qz=q[2],qw=q[3],x=a[0],y=a[1],z=a[2];let uvx=qy*z-qz*y,uvy=qz*x-qx*z,uvz=qx*y-qy*x,uuvx=qy*uvz-qz*uvy,uuvy=qz*uvx-qx*uvz,uuvz=qx*uvy-qy*uvx;const w2=2*qw;return uvx*=w2,uvy*=w2,uvz*=w2,uuvx*=2,uuvy*=2,uuvz*=2,out[0]=x+uvx+uuvx,out[1]=y+uvy+uuvy,out[2]=z+uvz+uuvz,out}function rotateX(out,a,b,rad){const p=[],r=[];return p[0]=a[0]-b[0],p[1]=a[1]-b[1],p[2]=a[2]-b[2],r[0]=p[0],r[1]=p[1]*Math.cos(rad)-p[2]*Math.sin(rad),r[2]=p[1]*Math.sin(rad)+p[2]*Math.cos(rad),out[0]=r[0]+b[0],out[1]=r[1]+b[1],out[2]=r[2]+b[2],out}function rotateY(out,a,b,rad){const p=[],r=[];return p[0]=a[0]-b[0],p[1]=a[1]-b[1],p[2]=a[2]-b[2],r[0]=p[2]*Math.sin(rad)+p[0]*Math.cos(rad),r[1]=p[1],r[2]=p[2]*Math.cos(rad)-p[0]*Math.sin(rad),out[0]=r[0]+b[0],out[1]=r[1]+b[1],out[2]=r[2]+b[2],out}function rotateZ(out,a,b,rad){const p=[],r=[];return p[0]=a[0]-b[0],p[1]=a[1]-b[1],p[2]=a[2]-b[2],r[0]=p[0]*Math.cos(rad)-p[1]*Math.sin(rad),r[1]=p[0]*Math.sin(rad)+p[1]*Math.cos(rad),r[2]=p[2],out[0]=r[0]+b[0],out[1]=r[1]+b[1],out[2]=r[2]+b[2],out}function angle(a,b){const ax=a[0],ay=a[1],az=a[2],bx=b[0],by=b[1],bz=b[2],mag=Math.sqrt((ax*ax+ay*ay+az*az)*(bx*bx+by*by+bz*bz)),cosine=mag&&dot(a,b)/mag;return Math.acos(Math.min(Math.max(cosine,-1),1))}const sub=function subtract(out,a,b){return out[0]=a[0]-b[0],out[1]=a[1]-b[1],out[2]=a[2]-b[2],out},dist=function distance(a,b){const x=b[0]-a[0],y=b[1]-a[1],z=b[2]-a[2];return Math.sqrt(x*x+y*y+z*z)},len=length,sqrLen=function squaredLength(a){const x=a[0],y=a[1],z=a[2];return x*x+y*y+z*z};!function(){const vec=create()}()},"./node_modules/@math.gl/core/dist/gl-matrix/vec4.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{Bw:function(){return length},C:function(){return copy},Cc:function(){return lerp},Om:function(){return dot},S8:function(){return normalize},WQ:function(){return add},Z0:function(){return transformMat4},fA:function(){return fromValues},gL:function(){return transformQuat},hZ:function(){return set},hs:function(){return scale},m3:function(){return squaredLength},o8:function(){return clone},t2:function(){return exactEquals}});var _common_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/common.js");function clone(a){const out=new _common_js__WEBPACK_IMPORTED_MODULE_0__.tb(4);return out[0]=a[0],out[1]=a[1],out[2]=a[2],out[3]=a[3],out}function fromValues(x,y,z,w){const out=new _common_js__WEBPACK_IMPORTED_MODULE_0__.tb(4);return out[0]=x,out[1]=y,out[2]=z,out[3]=w,out}function copy(out,a){return out[0]=a[0],out[1]=a[1],out[2]=a[2],out[3]=a[3],out}function set(out,x,y,z,w){return out[0]=x,out[1]=y,out[2]=z,out[3]=w,out}function add(out,a,b){return out[0]=a[0]+b[0],out[1]=a[1]+b[1],out[2]=a[2]+b[2],out[3]=a[3]+b[3],out}function scale(out,a,b){return out[0]=a[0]*b,out[1]=a[1]*b,out[2]=a[2]*b,out[3]=a[3]*b,out}function length(a){const x=a[0],y=a[1],z=a[2],w=a[3];return Math.sqrt(x*x+y*y+z*z+w*w)}function squaredLength(a){const x=a[0],y=a[1],z=a[2],w=a[3];return x*x+y*y+z*z+w*w}function normalize(out,a){const x=a[0],y=a[1],z=a[2],w=a[3];let len=x*x+y*y+z*z+w*w;return len>0&&(len=1/Math.sqrt(len)),out[0]=x*len,out[1]=y*len,out[2]=z*len,out[3]=w*len,out}function dot(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]+a[3]*b[3]}function lerp(out,a,b,t){const ax=a[0],ay=a[1],az=a[2],aw=a[3];return out[0]=ax+t*(b[0]-ax),out[1]=ay+t*(b[1]-ay),out[2]=az+t*(b[2]-az),out[3]=aw+t*(b[3]-aw),out}function transformMat4(out,a,m){const x=a[0],y=a[1],z=a[2],w=a[3];return out[0]=m[0]*x+m[4]*y+m[8]*z+m[12]*w,out[1]=m[1]*x+m[5]*y+m[9]*z+m[13]*w,out[2]=m[2]*x+m[6]*y+m[10]*z+m[14]*w,out[3]=m[3]*x+m[7]*y+m[11]*z+m[15]*w,out}function transformQuat(out,a,q){const x=a[0],y=a[1],z=a[2],qx=q[0],qy=q[1],qz=q[2],qw=q[3],ix=qw*x+qy*z-qz*y,iy=qw*y+qz*x-qx*z,iz=qw*z+qx*y-qy*x,iw=-qx*x-qy*y-qz*z;return out[0]=ix*qw+iw*-qx+iy*-qz-iz*-qy,out[1]=iy*qw+iw*-qy+iz*-qx-ix*-qz,out[2]=iz*qw+iw*-qz+ix*-qy-iy*-qx,out[3]=a[3],out}function exactEquals(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]&&a[3]===b[3]}!function(){const vec=function create(){const out=new _common_js__WEBPACK_IMPORTED_MODULE_0__.tb(4);return _common_js__WEBPACK_IMPORTED_MODULE_0__.tb!=Float32Array&&(out[0]=0,out[1]=0,out[2]=0,out[3]=0),out}()}()},"./node_modules/@math.gl/core/dist/lib/common.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{$W:function(){return config},Cc:function(){return lerp},F2:function(){return radians},Fl:function(){return formatValue},aI:function(){return equals},cy:function(){return isArray},qE:function(){return clamp},uj:function(){return degrees}});const RADIANS_TO_DEGREES=1/Math.PI*180,DEGREES_TO_RADIANS=1/180*Math.PI;globalThis.mathgl=globalThis.mathgl||{config:{EPSILON:1e-12,debug:!1,precision:4,printTypes:!1,printDegrees:!1,printRowMajor:!0,_cartographicRadians:!1}};const config=globalThis.mathgl.config;function formatValue(value,{precision:precision=config.precision}={}){return value=function round(value){return Math.round(value/config.EPSILON)*config.EPSILON}(value),`${parseFloat(value.toPrecision(precision))}`}function isArray(value){return Array.isArray(value)||ArrayBuffer.isView(value)&&!(value instanceof DataView)}function radians(degrees,result){return map(degrees,(degrees=>degrees*DEGREES_TO_RADIANS),result)}function degrees(radians,result){return map(radians,(radians=>radians*RADIANS_TO_DEGREES),result)}function clamp(value,min,max){return map(value,(value=>Math.max(min,Math.min(max,value))))}function lerp(a,b,t){return isArray(a)?a.map(((ai,i)=>lerp(ai,b[i],t))):t*b+(1-t)*a}function equals(a,b,epsilon){const oldEpsilon=config.EPSILON;epsilon&&(config.EPSILON=epsilon);try{if(a===b)return!0;if(isArray(a)&&isArray(b)){if(a.length!==b.length)return!1;for(let i=0;i<a.length;++i)if(!equals(a[i],b[i]))return!1;return!0}return a&&a.equals?a.equals(b):b&&b.equals?b.equals(a):"number"==typeof a&&"number"==typeof b&&Math.abs(a-b)<=config.EPSILON*Math.max(1,Math.abs(a),Math.abs(b))}finally{config.EPSILON=oldEpsilon}}function map(value,func,result){if(isArray(value)){const array=value;result=result||function duplicateArray(array){return array.clone?array.clone():new Array(array.length)}(array);for(let i=0;i<result.length&&i<array.length;++i){const val="number"==typeof value?value:value[i];result[i]=func(val,i,result)}return result}return func(value)}},"./node_modules/@math.gl/core/dist/lib/gl-matrix-extras.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function vec2_transformMat4AsVector(out,a,m){const x=a[0],y=a[1],w=m[3]*x+m[7]*y||1;return out[0]=(m[0]*x+m[4]*y)/w,out[1]=(m[1]*x+m[5]*y)/w,out}function vec3_transformMat4AsVector(out,a,m){const x=a[0],y=a[1],z=a[2],w=m[3]*x+m[7]*y+m[11]*z||1;return out[0]=(m[0]*x+m[4]*y+m[8]*z)/w,out[1]=(m[1]*x+m[5]*y+m[9]*z)/w,out[2]=(m[2]*x+m[6]*y+m[10]*z)/w,out}function vec3_transformMat2(out,a,m){const x=a[0],y=a[1];return out[0]=m[0]*x+m[2]*y,out[1]=m[1]*x+m[3]*y,out[2]=a[2],out}function vec4_transformMat2(out,a,m){const x=a[0],y=a[1];return out[0]=m[0]*x+m[2]*y,out[1]=m[1]*x+m[3]*y,out[2]=a[2],out[3]=a[3],out}function vec4_transformMat3(out,a,m){const x=a[0],y=a[1],z=a[2];return out[0]=m[0]*x+m[3]*y+m[6]*z,out[1]=m[1]*x+m[4]*y+m[7]*z,out[2]=m[2]*x+m[5]*y+m[8]*z,out[3]=a[3],out}__webpack_require__.d(__webpack_exports__,{B$:function(){return vec2_transformMat4AsVector},Cg:function(){return vec4_transformMat2},J4:function(){return vec3_transformMat2},cL:function(){return vec3_transformMat4AsVector},vE:function(){return vec4_transformMat3}})},"./node_modules/@math.gl/core/dist/lib/validators.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{qk:function(){return checkVector},ws:function(){return checkNumber}});var _common_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js");function checkNumber(value){if(!Number.isFinite(value))throw new Error(`Invalid number ${JSON.stringify(value)}`);return value}function checkVector(v,length,callerName=""){if(_common_js__WEBPACK_IMPORTED_MODULE_0__.$W.debug&&!function validateVector(v,length){if(v.length!==length)return!1;for(let i=0;i<v.length;++i)if(!Number.isFinite(v[i]))return!1;return!0}(v,length))throw new Error(`math.gl: ${callerName} some fields set to invalid numbers'`);return v}},"./node_modules/@math.gl/web-mercator/dist/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{dT:function(){return addMetersToLngLat},Os:function(){return web_mercator_utils_altitudeToFovy},Fe:function(){return fit_bounds_fitBounds},wZ:function(){return web_mercator_utils_fovyToAltitude},gW:function(){return get_bounds_getBounds},nI:function(){return web_mercator_utils_getDistanceScales},fO:function(){return getMeterZoom},om:function(){return getProjectionParameters},rY:function(){return web_mercator_utils_getViewMatrix},Gw:function(){return web_mercator_utils_lngLatToWorld},CK:function(){return normalizeViewportProps},xJ:function(){return web_mercator_utils_pixelsToWorld},mY:function(){return unitsPerMeter},iV:function(){return web_mercator_utils_worldToLngLat},VJ:function(){return web_mercator_utils_worldToPixels}});let ARRAY_TYPE="undefined"!=typeof Float32Array?Float32Array:Array;Math.random;Math.PI;!function(){const vec=function create(){const out=new ARRAY_TYPE(4);return ARRAY_TYPE!=Float32Array&&(out[0]=0,out[1]=0,out[2]=0,out[3]=0),out}()}();function transformVector(matrix,vector){const result=function transformMat4(out,a,m){const x=a[0],y=a[1],z=a[2],w=a[3];return out[0]=m[0]*x+m[4]*y+m[8]*z+m[12]*w,out[1]=m[1]*x+m[5]*y+m[9]*z+m[13]*w,out[2]=m[2]*x+m[6]*y+m[10]*z+m[14]*w,out[3]=m[3]*x+m[7]*y+m[11]*z+m[15]*w,out}([],vector,matrix);return function scale(out,a,b){return out[0]=a[0]*b,out[1]=a[1]*b,out[2]=a[2]*b,out[3]=a[3]*b,out}(result,result,1/result[3]),result}function mod(value,divisor){const modulus=value%divisor;return modulus<0?divisor+modulus:modulus}function clamp(x,min,max){return x<min?min:x>max?max:x}const log2=Math.log2||function ieLog2(x){return Math.log(x)*Math.LOG2E};function translate(out,a,v){const x=v[0],y=v[1],z=v[2];let a00,a01,a02,a03,a10,a11,a12,a13,a20,a21,a22,a23;return a===out?(out[12]=a[0]*x+a[4]*y+a[8]*z+a[12],out[13]=a[1]*x+a[5]*y+a[9]*z+a[13],out[14]=a[2]*x+a[6]*y+a[10]*z+a[14],out[15]=a[3]*x+a[7]*y+a[11]*z+a[15]):(a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],out[0]=a00,out[1]=a01,out[2]=a02,out[3]=a03,out[4]=a10,out[5]=a11,out[6]=a12,out[7]=a13,out[8]=a20,out[9]=a21,out[10]=a22,out[11]=a23,out[12]=a00*x+a10*y+a20*z+a[12],out[13]=a01*x+a11*y+a21*z+a[13],out[14]=a02*x+a12*y+a22*z+a[14],out[15]=a03*x+a13*y+a23*z+a[15]),out}!function(){const vec=function vec3_create(){const out=new ARRAY_TYPE(3);return ARRAY_TYPE!=Float32Array&&(out[0]=0,out[1]=0,out[2]=0),out}()}();function vec2_lerp(out,a,b,t){const ax=a[0],ay=a[1];return out[0]=ax+t*(b[0]-ax),out[1]=ay+t*(b[1]-ay),out}!function(){const vec=function vec2_create(){const out=new ARRAY_TYPE(2);return ARRAY_TYPE!=Float32Array&&(out[0]=0,out[1]=0),out}()}();function assert(condition,message){if(!condition)throw new Error(message||"@math.gl/web-mercator: assertion failed.")}const PI=Math.PI,PI_4=PI/4,DEGREES_TO_RADIANS=PI/180,RADIANS_TO_DEGREES=180/PI,TILE_SIZE=512,EARTH_CIRCUMFERENCE=4003e4,MAX_LATITUDE=85.051129,web_mercator_utils_DEFAULT_ALTITUDE=1.5;function web_mercator_utils_lngLatToWorld(lngLat){const[lng,lat]=lngLat;assert(Number.isFinite(lng)),assert(Number.isFinite(lat)&&lat>=-90&&lat<=90,"invalid latitude");const phi2=lat*DEGREES_TO_RADIANS;return[TILE_SIZE*(lng*DEGREES_TO_RADIANS+PI)/(2*PI),TILE_SIZE*(PI+Math.log(Math.tan(PI_4+.5*phi2)))/(2*PI)]}function web_mercator_utils_worldToLngLat(xy){const[x,y]=xy,lambda2=x/TILE_SIZE*(2*PI)-PI,phi2=2*(Math.atan(Math.exp(y/TILE_SIZE*(2*PI)-PI))-PI_4);return[lambda2*RADIANS_TO_DEGREES,phi2*RADIANS_TO_DEGREES]}function getMeterZoom(options){const{latitude:latitude}=options;assert(Number.isFinite(latitude));const latCosine=Math.cos(latitude*DEGREES_TO_RADIANS);return function web_mercator_utils_scaleToZoom(scale){return log2(scale)}(EARTH_CIRCUMFERENCE*latCosine)-9}function unitsPerMeter(latitude){const latCosine=Math.cos(latitude*DEGREES_TO_RADIANS);return TILE_SIZE/EARTH_CIRCUMFERENCE/latCosine}function web_mercator_utils_getDistanceScales(options){const{latitude:latitude,longitude:longitude,highPrecision:highPrecision=!1}=options;assert(Number.isFinite(latitude)&&Number.isFinite(longitude));const worldSize=TILE_SIZE,latCosine=Math.cos(latitude*DEGREES_TO_RADIANS),unitsPerDegreeX=worldSize/360,unitsPerDegreeY=unitsPerDegreeX/latCosine,altUnitsPerMeter=worldSize/EARTH_CIRCUMFERENCE/latCosine,result={unitsPerMeter:[altUnitsPerMeter,altUnitsPerMeter,altUnitsPerMeter],metersPerUnit:[1/altUnitsPerMeter,1/altUnitsPerMeter,1/altUnitsPerMeter],unitsPerDegree:[unitsPerDegreeX,unitsPerDegreeY,altUnitsPerMeter],degreesPerUnit:[1/unitsPerDegreeX,1/unitsPerDegreeY,1/altUnitsPerMeter]};if(highPrecision){const latCosine2=DEGREES_TO_RADIANS*Math.tan(latitude*DEGREES_TO_RADIANS)/latCosine,unitsPerDegreeY2=unitsPerDegreeX*latCosine2/2,altUnitsPerDegree2=worldSize/EARTH_CIRCUMFERENCE*latCosine2,altUnitsPerMeter2=altUnitsPerDegree2/unitsPerDegreeY*altUnitsPerMeter;result.unitsPerDegree2=[0,unitsPerDegreeY2,altUnitsPerDegree2],result.unitsPerMeter2=[altUnitsPerMeter2,0,altUnitsPerMeter2]}return result}function addMetersToLngLat(lngLatZ,xyz){const[longitude,latitude,z0]=lngLatZ,[x,y,z]=xyz,{unitsPerMeter:unitsPerMeter,unitsPerMeter2:unitsPerMeter2}=web_mercator_utils_getDistanceScales({longitude:longitude,latitude:latitude,highPrecision:!0}),worldspace=web_mercator_utils_lngLatToWorld(lngLatZ);worldspace[0]+=x*(unitsPerMeter[0]+unitsPerMeter2[0]*y),worldspace[1]+=y*(unitsPerMeter[1]+unitsPerMeter2[1]*y);const newLngLat=web_mercator_utils_worldToLngLat(worldspace),newZ=(z0||0)+(z||0);return Number.isFinite(z0)||Number.isFinite(z)?[newLngLat[0],newLngLat[1],newZ]:newLngLat}function web_mercator_utils_getViewMatrix(options){const{height:height,pitch:pitch,bearing:bearing,altitude:altitude,scale:scale,center:center}=options,vm=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];translate(vm,vm,[0,0,-altitude]),function rotateX(out,a,rad){const s=Math.sin(rad),c=Math.cos(rad),a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11];return a!==out&&(out[0]=a[0],out[1]=a[1],out[2]=a[2],out[3]=a[3],out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15]),out[4]=a10*c+a20*s,out[5]=a11*c+a21*s,out[6]=a12*c+a22*s,out[7]=a13*c+a23*s,out[8]=a20*c-a10*s,out[9]=a21*c-a11*s,out[10]=a22*c-a12*s,out[11]=a23*c-a13*s,out}(vm,vm,-pitch*DEGREES_TO_RADIANS),function rotateZ(out,a,rad){const s=Math.sin(rad),c=Math.cos(rad),a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7];return a!==out&&(out[8]=a[8],out[9]=a[9],out[10]=a[10],out[11]=a[11],out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15]),out[0]=a00*c+a10*s,out[1]=a01*c+a11*s,out[2]=a02*c+a12*s,out[3]=a03*c+a13*s,out[4]=a10*c-a00*s,out[5]=a11*c-a01*s,out[6]=a12*c-a02*s,out[7]=a13*c-a03*s,out}(vm,vm,bearing*DEGREES_TO_RADIANS);const relativeScale=scale/height;return function mat4_scale(out,a,v){const x=v[0],y=v[1],z=v[2];return out[0]=a[0]*x,out[1]=a[1]*x,out[2]=a[2]*x,out[3]=a[3]*x,out[4]=a[4]*y,out[5]=a[5]*y,out[6]=a[6]*y,out[7]=a[7]*y,out[8]=a[8]*z,out[9]=a[9]*z,out[10]=a[10]*z,out[11]=a[11]*z,out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15],out}(vm,vm,[relativeScale,relativeScale,relativeScale]),center&&translate(vm,vm,function vec3_negate(out,a){return out[0]=-a[0],out[1]=-a[1],out[2]=-a[2],out}([],center)),vm}function getProjectionParameters(options){const{width:width,height:height,altitude:altitude,pitch:pitch=0,offset:offset,center:center,scale:scale,nearZMultiplier:nearZMultiplier=1,farZMultiplier:farZMultiplier=1}=options;let{fovy:fovy=web_mercator_utils_altitudeToFovy(web_mercator_utils_DEFAULT_ALTITUDE)}=options;void 0!==altitude&&(fovy=web_mercator_utils_altitudeToFovy(altitude));const fovRadians=fovy*DEGREES_TO_RADIANS,pitchRadians=pitch*DEGREES_TO_RADIANS,focalDistance=web_mercator_utils_fovyToAltitude(fovy);let cameraToSeaLevelDistance=focalDistance;center&&(cameraToSeaLevelDistance+=center[2]*scale/Math.cos(pitchRadians)/height);const fovAboveCenter=fovRadians*(.5+(offset?offset[1]:0)/height),topHalfSurfaceDistance=Math.sin(fovAboveCenter)*cameraToSeaLevelDistance/Math.sin(clamp(Math.PI/2-pitchRadians-fovAboveCenter,.01,Math.PI-.01)),furthestDistance=Math.sin(pitchRadians)*topHalfSurfaceDistance+cameraToSeaLevelDistance,horizonDistance=10*cameraToSeaLevelDistance;return{fov:fovRadians,aspect:width/height,focalDistance:focalDistance,near:nearZMultiplier,far:Math.min(furthestDistance*farZMultiplier,horizonDistance)}}function web_mercator_utils_altitudeToFovy(altitude){return 2*Math.atan(.5/altitude)*RADIANS_TO_DEGREES}function web_mercator_utils_fovyToAltitude(fovy){return.5/Math.tan(.5*fovy*DEGREES_TO_RADIANS)}function web_mercator_utils_worldToPixels(xyz,pixelProjectionMatrix){const[x,y,z=0]=xyz;return assert(Number.isFinite(x)&&Number.isFinite(y)&&Number.isFinite(z)),transformVector(pixelProjectionMatrix,[x,y,z,1])}function web_mercator_utils_pixelsToWorld(xyz,pixelUnprojectionMatrix,targetZ=0){const[x,y,z]=xyz;if(assert(Number.isFinite(x)&&Number.isFinite(y),"invalid pixel coordinate"),Number.isFinite(z)){return transformVector(pixelUnprojectionMatrix,[x,y,z,1])}const coord0=transformVector(pixelUnprojectionMatrix,[x,y,0,1]),coord1=transformVector(pixelUnprojectionMatrix,[x,y,1,1]),z0=coord0[2],z1=coord1[2];return vec2_lerp([],coord0,coord1,z0===z1?0:((targetZ||0)-z0)/(z1-z0))}function fit_bounds_fitBounds(options){const{width:width,height:height,bounds:bounds,minExtent:minExtent=0,maxZoom:maxZoom=24,offset:offset=[0,0]}=options,[[west,south],[east,north]]=bounds,padding=function getPaddingObject(padding=0){if("number"==typeof padding)return{top:padding,bottom:padding,left:padding,right:padding};return assert(Number.isFinite(padding.top)&&Number.isFinite(padding.bottom)&&Number.isFinite(padding.left)&&Number.isFinite(padding.right)),padding}(options.padding),nw=web_mercator_utils_lngLatToWorld([west,clamp(north,-MAX_LATITUDE,MAX_LATITUDE)]),se=web_mercator_utils_lngLatToWorld([east,clamp(south,-MAX_LATITUDE,MAX_LATITUDE)]),size=[Math.max(Math.abs(se[0]-nw[0]),minExtent),Math.max(Math.abs(se[1]-nw[1]),minExtent)],targetSize=[width-padding.left-padding.right-2*Math.abs(offset[0]),height-padding.top-padding.bottom-2*Math.abs(offset[1])];assert(targetSize[0]>0&&targetSize[1]>0);const scaleX=targetSize[0]/size[0],scaleY=targetSize[1]/size[1],offsetX=(padding.right-padding.left)/2/scaleX,offsetY=(padding.top-padding.bottom)/2/scaleY,centerLngLat=web_mercator_utils_worldToLngLat([(se[0]+nw[0])/2+offsetX,(se[1]+nw[1])/2+offsetY]),zoom=Math.min(maxZoom,log2(Math.abs(Math.min(scaleX,scaleY))));return assert(Number.isFinite(zoom)),{longitude:centerLngLat[0],latitude:centerLngLat[1],zoom:zoom}}const get_bounds_DEGREES_TO_RADIANS=Math.PI/180;function get_bounds_getBounds(viewport,z=0){const{width:width,height:height,unproject:unproject}=viewport,unprojectOps={targetZ:z},bottomLeft=unproject([0,height],unprojectOps),bottomRight=unproject([width,height],unprojectOps);let topLeft,topRight;return(viewport.fovy?.5*viewport.fovy*get_bounds_DEGREES_TO_RADIANS:Math.atan(.5/viewport.altitude))>(90-viewport.pitch)*get_bounds_DEGREES_TO_RADIANS-.01?(topLeft=unprojectOnFarPlane(viewport,0,z),topRight=unprojectOnFarPlane(viewport,width,z)):(topLeft=unproject([0,0],unprojectOps),topRight=unproject([width,0],unprojectOps)),[bottomLeft,bottomRight,topRight,topLeft]}function unprojectOnFarPlane(viewport,x,targetZ){const{pixelUnprojectionMatrix:pixelUnprojectionMatrix}=viewport,coord0=transformVector(pixelUnprojectionMatrix,[x,0,1,1]),coord1=transformVector(pixelUnprojectionMatrix,[x,viewport.height,1,1]),result=web_mercator_utils_worldToLngLat(vec2_lerp([],coord0,coord1,(targetZ*viewport.distanceScales.unitsPerMeter[2]-coord0[2])/(coord1[2]-coord0[2])));return result.push(targetZ),result}const normalize_viewport_props_TILE_SIZE=512;function normalizeViewportProps(props){const{width:width,height:height,pitch:pitch=0}=props;let{longitude:longitude,latitude:latitude,zoom:zoom,bearing:bearing=0}=props;(longitude<-180||longitude>180)&&(longitude=mod(longitude+180,360)-180),(bearing<-180||bearing>180)&&(bearing=mod(bearing+180,360)-180);const minZoom=log2(height/normalize_viewport_props_TILE_SIZE);if(zoom<=minZoom)zoom=minZoom,latitude=0;else{const halfHeightPixels=height/2/Math.pow(2,zoom),minLatitude=web_mercator_utils_worldToLngLat([0,halfHeightPixels])[1];if(latitude<minLatitude)latitude=minLatitude;else{const maxLatitude=web_mercator_utils_worldToLngLat([0,normalize_viewport_props_TILE_SIZE-halfHeightPixels])[1];latitude>maxLatitude&&(latitude=maxLatitude)}}return{width:width,height:height,longitude:longitude,latitude:latitude,zoom:zoom,pitch:pitch,bearing:bearing}}},"./node_modules/@probe.gl/env/dist/lib/globals.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{eh:function(){return process_},gM:function(){return navigator_},x:function(){return window_}});const window_=globalThis,process_=(globalThis.document,globalThis.process||{}),navigator_=(globalThis.console,globalThis.navigator||{})},"./node_modules/@probe.gl/env/dist/lib/is-browser.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{B:function(){return isBrowser}});var _is_electron_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@probe.gl/env/dist/lib/is-electron.js"),process=__webpack_require__("./node_modules/process/browser.js");function isBrowser(){return!("object"==typeof process&&"[object process]"===String(process)&&!process?.browser)||(0,_is_electron_js__WEBPACK_IMPORTED_MODULE_0__.b)()}},"./node_modules/@probe.gl/env/dist/lib/is-electron.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{b:function(){return isElectron}});var process=__webpack_require__("./node_modules/process/browser.js");function isElectron(mockUserAgent){if("undefined"!=typeof window&&"renderer"===window.process?.type)return!0;if(void 0!==process&&Boolean(process.versions?.electron))return!0;const realUserAgent="undefined"!=typeof navigator&&navigator.userAgent,userAgent=mockUserAgent||realUserAgent;return Boolean(userAgent&&userAgent.indexOf("Electron")>=0)}},"./node_modules/@probe.gl/log/dist/log.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{t:function(){return Log}});var is_browser=__webpack_require__("./node_modules/@probe.gl/env/dist/lib/is-browser.js");class LocalStorage{constructor(id,defaultConfig,type="sessionStorage"){this.storage=function getStorage(type){try{const storage=window[type],x="__storage_test__";return storage.setItem(x,x),storage.removeItem(x),storage}catch(e){return null}}(type),this.id=id,this.config=defaultConfig,this._loadConfiguration()}getConfiguration(){return this.config}setConfiguration(configuration){if(Object.assign(this.config,configuration),this.storage){const serialized=JSON.stringify(this.config);this.storage.setItem(this.id,serialized)}}_loadConfiguration(){let configuration={};if(this.storage){const serializedConfiguration=this.storage.getItem(this.id);configuration=serializedConfiguration?JSON.parse(serializedConfiguration):{}}return Object.assign(this.config,configuration),this}}var COLOR;!function(COLOR){COLOR[COLOR.BLACK=30]="BLACK",COLOR[COLOR.RED=31]="RED",COLOR[COLOR.GREEN=32]="GREEN",COLOR[COLOR.YELLOW=33]="YELLOW",COLOR[COLOR.BLUE=34]="BLUE",COLOR[COLOR.MAGENTA=35]="MAGENTA",COLOR[COLOR.CYAN=36]="CYAN",COLOR[COLOR.WHITE=37]="WHITE",COLOR[COLOR.BRIGHT_BLACK=90]="BRIGHT_BLACK",COLOR[COLOR.BRIGHT_RED=91]="BRIGHT_RED",COLOR[COLOR.BRIGHT_GREEN=92]="BRIGHT_GREEN",COLOR[COLOR.BRIGHT_YELLOW=93]="BRIGHT_YELLOW",COLOR[COLOR.BRIGHT_BLUE=94]="BRIGHT_BLUE",COLOR[COLOR.BRIGHT_MAGENTA=95]="BRIGHT_MAGENTA",COLOR[COLOR.BRIGHT_CYAN=96]="BRIGHT_CYAN",COLOR[COLOR.BRIGHT_WHITE=97]="BRIGHT_WHITE"}(COLOR||(COLOR={}));const BACKGROUND_INCREMENT=10;function getColor(color){return"string"!=typeof color?color:(color=color.toUpperCase(),COLOR[color]||COLOR.WHITE)}function assert(condition,message){if(!condition)throw new Error(message||"Assertion failed")}var globals=__webpack_require__("./node_modules/@probe.gl/env/dist/lib/globals.js");function getHiResTimestamp(){let timestamp;if((0,is_browser.B)()&&globals.x.performance)timestamp=globals.x?.performance?.now?.();else if("hrtime"in globals.eh){const timeParts=globals.eh?.hrtime?.();timestamp=1e3*timeParts[0]+timeParts[1]/1e6}else timestamp=Date.now();return timestamp}const originalConsole={debug:(0,is_browser.B)()&&console.debug||console.log,log:console.log,info:console.info,warn:console.warn,error:console.error},DEFAULT_LOG_CONFIGURATION={enabled:!0,level:0};function noop(){}const cache={},ONCE={once:!0};class Log{constructor({id:id}={id:""}){this.VERSION="4.0.7",this._startTs=getHiResTimestamp(),this._deltaTs=getHiResTimestamp(),this.userData={},this.LOG_THROTTLE_TIMEOUT=0,this.id=id,this.userData={},this._storage=new LocalStorage(`__probe-${this.id}__`,DEFAULT_LOG_CONFIGURATION),this.timeStamp(`${this.id} started`),function autobind(obj,predefined=["constructor"]){const proto=Object.getPrototypeOf(obj),propNames=Object.getOwnPropertyNames(proto),object=obj;for(const key of propNames){const value=object[key];"function"==typeof value&&(predefined.find((name=>key===name))||(object[key]=value.bind(obj)))}}(this),Object.seal(this)}set level(newLevel){this.setLevel(newLevel)}get level(){return this.getLevel()}isEnabled(){return this._storage.config.enabled}getLevel(){return this._storage.config.level}getTotal(){return Number((getHiResTimestamp()-this._startTs).toPrecision(10))}getDelta(){return Number((getHiResTimestamp()-this._deltaTs).toPrecision(10))}set priority(newPriority){this.level=newPriority}get priority(){return this.level}getPriority(){return this.level}enable(enabled=!0){return this._storage.setConfiguration({enabled:enabled}),this}setLevel(level){return this._storage.setConfiguration({level:level}),this}get(setting){return this._storage.config[setting]}set(setting,value){this._storage.setConfiguration({[setting]:value})}settings(){console.table?console.table(this._storage.config):console.log(this._storage.config)}assert(condition,message){if(!condition)throw new Error(message||"Assertion failed")}warn(message){return this._getLogFunction(0,message,originalConsole.warn,arguments,ONCE)}error(message){return this._getLogFunction(0,message,originalConsole.error,arguments)}deprecated(oldUsage,newUsage){return this.warn(`\`${oldUsage}\` is deprecated and will be removed in a later version. Use \`${newUsage}\` instead`)}removed(oldUsage,newUsage){return this.error(`\`${oldUsage}\` has been removed. Use \`${newUsage}\` instead`)}probe(logLevel,message){return this._getLogFunction(logLevel,message,originalConsole.log,arguments,{time:!0,once:!0})}log(logLevel,message){return this._getLogFunction(logLevel,message,originalConsole.debug,arguments)}info(logLevel,message){return this._getLogFunction(logLevel,message,console.info,arguments)}once(logLevel,message){return this._getLogFunction(logLevel,message,originalConsole.debug||originalConsole.info,arguments,ONCE)}table(logLevel,table,columns){return table?this._getLogFunction(logLevel,table,console.table||noop,columns&&[columns],{tag:getTableHeader(table)}):noop}time(logLevel,message){return this._getLogFunction(logLevel,message,console.time?console.time:console.info)}timeEnd(logLevel,message){return this._getLogFunction(logLevel,message,console.timeEnd?console.timeEnd:console.info)}timeStamp(logLevel,message){return this._getLogFunction(logLevel,message,console.timeStamp||noop)}group(logLevel,message,opts={collapsed:!1}){const options=normalizeArguments({logLevel:logLevel,message:message,opts:opts}),{collapsed:collapsed}=opts;return options.method=(collapsed?console.groupCollapsed:console.group)||console.info,this._getLogFunction(options)}groupCollapsed(logLevel,message,opts={}){return this.group(logLevel,message,Object.assign({},opts,{collapsed:!0}))}groupEnd(logLevel){return this._getLogFunction(logLevel,"",console.groupEnd||noop)}withGroup(logLevel,message,func){this.group(logLevel,message)();try{func()}finally{this.groupEnd(logLevel)()}}trace(){console.trace&&console.trace()}_shouldLog(logLevel){return this.isEnabled()&&this.getLevel()>=normalizeLogLevel(logLevel)}_getLogFunction(logLevel,message,method,args,opts){if(this._shouldLog(logLevel)){opts=normalizeArguments({logLevel:logLevel,message:message,args:args,opts:opts}),assert(method=method||opts.method),opts.total=this.getTotal(),opts.delta=this.getDelta(),this._deltaTs=getHiResTimestamp();const tag=opts.tag||opts.message;if(opts.once&&tag){if(cache[tag])return noop;cache[tag]=getHiResTimestamp()}return message=function decorateMessage(id,message,opts){if("string"==typeof message){const time=opts.time?function leftPad(string,length=8){const padLength=Math.max(length-string.length,0);return`${" ".repeat(padLength)}${string}`}(function formatTime(ms){let formatted;return formatted=ms<10?`${ms.toFixed(2)}ms`:ms<100?`${ms.toFixed(1)}ms`:ms<1e3?`${ms.toFixed(0)}ms`:`${(ms/1e3).toFixed(2)}s`,formatted}(opts.total)):"";message=function addColor(string,color,background){is_browser.B||"string"!=typeof string||(color&&(string=`[${getColor(color)}m${string}[39m`),background&&(string=`[${getColor(background)+BACKGROUND_INCREMENT}m${string}[49m`));return string}(message=opts.time?`${id}: ${time}  ${message}`:`${id}: ${message}`,opts.color,opts.background)}return message}(this.id,opts.message,opts),method.bind(console,message,...opts.args)}return noop}}function normalizeLogLevel(logLevel){if(!logLevel)return 0;let resolvedLevel;switch(typeof logLevel){case"number":resolvedLevel=logLevel;break;case"object":resolvedLevel=logLevel.logLevel||logLevel.priority||0;break;default:return 0}return assert(Number.isFinite(resolvedLevel)&&resolvedLevel>=0),resolvedLevel}function normalizeArguments(opts){const{logLevel:logLevel,message:message}=opts;opts.logLevel=normalizeLogLevel(logLevel);const args=opts.args?Array.from(opts.args):[];for(;args.length&&args.shift()!==message;);switch(typeof logLevel){case"string":case"function":void 0!==message&&args.unshift(message),opts.message=logLevel;break;case"object":Object.assign(opts,logLevel)}"function"==typeof opts.message&&(opts.message=opts.message());const messageType=typeof opts.message;return assert("string"===messageType||"object"===messageType),Object.assign(opts,{args:args},opts.opts)}function getTableHeader(table){for(const key in table)for(const title in table[key])return title||"untitled";return"empty"}Log.VERSION="4.0.7"},"./node_modules/@probe.gl/stats/dist/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{Uz:function(){return Stats}});var process=__webpack_require__("./node_modules/process/browser.js");function getHiResTimestamp(){let timestamp;if("undefined"!=typeof window&&window.performance)timestamp=window.performance.now();else if(void 0!==process&&process.hrtime){const timeParts=process.hrtime();timestamp=1e3*timeParts[0]+timeParts[1]/1e6}else timestamp=Date.now();return timestamp}class Stat{constructor(name,type){this.sampleSize=1,this.time=0,this.count=0,this.samples=0,this.lastTiming=0,this.lastSampleTime=0,this.lastSampleCount=0,this._count=0,this._time=0,this._samples=0,this._startTime=0,this._timerPending=!1,this.name=name,this.type=type,this.reset()}reset(){return this.time=0,this.count=0,this.samples=0,this.lastTiming=0,this.lastSampleTime=0,this.lastSampleCount=0,this._count=0,this._time=0,this._samples=0,this._startTime=0,this._timerPending=!1,this}setSampleSize(samples){return this.sampleSize=samples,this}incrementCount(){return this.addCount(1),this}decrementCount(){return this.subtractCount(1),this}addCount(value){return this._count+=value,this._samples++,this._checkSampling(),this}subtractCount(value){return this._count-=value,this._samples++,this._checkSampling(),this}addTime(time){return this._time+=time,this.lastTiming=time,this._samples++,this._checkSampling(),this}timeStart(){return this._startTime=getHiResTimestamp(),this._timerPending=!0,this}timeEnd(){return this._timerPending?(this.addTime(getHiResTimestamp()-this._startTime),this._timerPending=!1,this._checkSampling(),this):this}getSampleAverageCount(){return this.sampleSize>0?this.lastSampleCount/this.sampleSize:0}getSampleAverageTime(){return this.sampleSize>0?this.lastSampleTime/this.sampleSize:0}getSampleHz(){return this.lastSampleTime>0?this.sampleSize/(this.lastSampleTime/1e3):0}getAverageCount(){return this.samples>0?this.count/this.samples:0}getAverageTime(){return this.samples>0?this.time/this.samples:0}getHz(){return this.time>0?this.samples/(this.time/1e3):0}_checkSampling(){this._samples===this.sampleSize&&(this.lastSampleTime=this._time,this.lastSampleCount=this._count,this.count+=this._count,this.time+=this._time,this.samples+=this._samples,this._time=0,this._count=0,this._samples=0)}}class Stats{constructor(options){this.stats={},this.id=options.id,this.stats={},this._initializeStats(options.stats),Object.seal(this)}get(name,type="count"){return this._getOrCreate({name:name,type:type})}get size(){return Object.keys(this.stats).length}reset(){for(const stat of Object.values(this.stats))stat.reset();return this}forEach(fn){for(const stat of Object.values(this.stats))fn(stat)}getTable(){const table={};return this.forEach((stat=>{table[stat.name]={time:stat.time||0,count:stat.count||0,average:stat.getAverageTime()||0,hz:stat.getHz()||0}})),table}_initializeStats(stats=[]){stats.forEach((stat=>this._getOrCreate(stat)))}_getOrCreate(stat){const{name:name,type:type}=stat;let result=this.stats[name];return result||(result=stat instanceof Stat?stat:new Stat(name,type),this.stats[name]=result),result}}},"./node_modules/hammerjs/hammer.js":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_RESULT__;!function(window,document,exportName,undefined){"use strict";var assign,VENDOR_PREFIXES=["","webkit","Moz","MS","ms","o"],TEST_ELEMENT=document.createElement("div"),TYPE_FUNCTION="function",round=Math.round,abs=Math.abs,now=Date.now;function setTimeoutContext(fn,timeout,context){return setTimeout(bindFn(fn,context),timeout)}function invokeArrayArg(arg,fn,context){return!!Array.isArray(arg)&&(each(arg,context[fn],context),!0)}function each(obj,iterator,context){var i;if(obj)if(obj.forEach)obj.forEach(iterator,context);else if(obj.length!==undefined)for(i=0;i<obj.length;)iterator.call(context,obj[i],i,obj),i++;else for(i in obj)obj.hasOwnProperty(i)&&iterator.call(context,obj[i],i,obj)}function deprecate(method,name,message){var deprecationMessage="DEPRECATED METHOD: "+name+"\n"+message+" AT \n";return function(){var e=new Error("get-stack-trace"),stack=e&&e.stack?e.stack.replace(/^[^\(]+?[\n$]/gm,"").replace(/^\s+at\s+/gm,"").replace(/^Object.<anonymous>\s*\(/gm,"{anonymous}()@"):"Unknown Stack Trace",log=window.console&&(window.console.warn||window.console.log);return log&&log.call(window.console,deprecationMessage,stack),method.apply(this,arguments)}}assign="function"!=typeof Object.assign?function assign(target){if(target===undefined||null===target)throw new TypeError("Cannot convert undefined or null to object");for(var output=Object(target),index=1;index<arguments.length;index++){var source=arguments[index];if(source!==undefined&&null!==source)for(var nextKey in source)source.hasOwnProperty(nextKey)&&(output[nextKey]=source[nextKey])}return output}:Object.assign;var extend=deprecate((function extend(dest,src,merge){for(var keys=Object.keys(src),i=0;i<keys.length;)(!merge||merge&&dest[keys[i]]===undefined)&&(dest[keys[i]]=src[keys[i]]),i++;return dest}),"extend","Use `assign`."),merge=deprecate((function merge(dest,src){return extend(dest,src,!0)}),"merge","Use `assign`.");function inherit(child,base,properties){var childP,baseP=base.prototype;(childP=child.prototype=Object.create(baseP)).constructor=child,childP._super=baseP,properties&&assign(childP,properties)}function bindFn(fn,context){return function boundFn(){return fn.apply(context,arguments)}}function boolOrFn(val,args){return typeof val==TYPE_FUNCTION?val.apply(args&&args[0]||undefined,args):val}function ifUndefined(val1,val2){return val1===undefined?val2:val1}function addEventListeners(target,types,handler){each(splitStr(types),(function(type){target.addEventListener(type,handler,!1)}))}function removeEventListeners(target,types,handler){each(splitStr(types),(function(type){target.removeEventListener(type,handler,!1)}))}function hasParent(node,parent){for(;node;){if(node==parent)return!0;node=node.parentNode}return!1}function inStr(str,find){return str.indexOf(find)>-1}function splitStr(str){return str.trim().split(/\s+/g)}function inArray(src,find,findByKey){if(src.indexOf&&!findByKey)return src.indexOf(find);for(var i=0;i<src.length;){if(findByKey&&src[i][findByKey]==find||!findByKey&&src[i]===find)return i;i++}return-1}function toArray(obj){return Array.prototype.slice.call(obj,0)}function uniqueArray(src,key,sort){for(var results=[],values=[],i=0;i<src.length;){var val=key?src[i][key]:src[i];inArray(values,val)<0&&results.push(src[i]),values[i]=val,i++}return sort&&(results=key?results.sort((function sortUniqueArray(a,b){return a[key]>b[key]})):results.sort()),results}function prefixed(obj,property){for(var prefix,prop,camelProp=property[0].toUpperCase()+property.slice(1),i=0;i<VENDOR_PREFIXES.length;){if((prop=(prefix=VENDOR_PREFIXES[i])?prefix+camelProp:property)in obj)return prop;i++}return undefined}var _uniqueId=1;function getWindowForElement(element){var doc=element.ownerDocument||element;return doc.defaultView||doc.parentWindow||window}var SUPPORT_TOUCH="ontouchstart"in window,SUPPORT_POINTER_EVENTS=prefixed(window,"PointerEvent")!==undefined,SUPPORT_ONLY_TOUCH=SUPPORT_TOUCH&&/mobile|tablet|ip(ad|hone|od)|android/i.test(navigator.userAgent),COMPUTE_INTERVAL=25,INPUT_START=1,INPUT_END=4,INPUT_CANCEL=8,DIRECTION_NONE=1,DIRECTION_LEFT=2,DIRECTION_RIGHT=4,DIRECTION_UP=8,DIRECTION_DOWN=16,DIRECTION_HORIZONTAL=DIRECTION_LEFT|DIRECTION_RIGHT,DIRECTION_VERTICAL=DIRECTION_UP|DIRECTION_DOWN,DIRECTION_ALL=DIRECTION_HORIZONTAL|DIRECTION_VERTICAL,PROPS_XY=["x","y"],PROPS_CLIENT_XY=["clientX","clientY"];function Input(manager,callback){var self=this;this.manager=manager,this.callback=callback,this.element=manager.element,this.target=manager.options.inputTarget,this.domHandler=function(ev){boolOrFn(manager.options.enable,[manager])&&self.handler(ev)},this.init()}function inputHandler(manager,eventType,input){var pointersLen=input.pointers.length,changedPointersLen=input.changedPointers.length,isFirst=eventType&INPUT_START&&pointersLen-changedPointersLen==0,isFinal=eventType&(INPUT_END|INPUT_CANCEL)&&pointersLen-changedPointersLen==0;input.isFirst=!!isFirst,input.isFinal=!!isFinal,isFirst&&(manager.session={}),input.eventType=eventType,function computeInputData(manager,input){var session=manager.session,pointers=input.pointers,pointersLength=pointers.length;session.firstInput||(session.firstInput=simpleCloneInputData(input));pointersLength>1&&!session.firstMultiple?session.firstMultiple=simpleCloneInputData(input):1===pointersLength&&(session.firstMultiple=!1);var firstInput=session.firstInput,firstMultiple=session.firstMultiple,offsetCenter=firstMultiple?firstMultiple.center:firstInput.center,center=input.center=getCenter(pointers);input.timeStamp=now(),input.deltaTime=input.timeStamp-firstInput.timeStamp,input.angle=getAngle(offsetCenter,center),input.distance=getDistance(offsetCenter,center),function computeDeltaXY(session,input){var center=input.center,offset=session.offsetDelta||{},prevDelta=session.prevDelta||{},prevInput=session.prevInput||{};input.eventType!==INPUT_START&&prevInput.eventType!==INPUT_END||(prevDelta=session.prevDelta={x:prevInput.deltaX||0,y:prevInput.deltaY||0},offset=session.offsetDelta={x:center.x,y:center.y});input.deltaX=prevDelta.x+(center.x-offset.x),input.deltaY=prevDelta.y+(center.y-offset.y)}(session,input),input.offsetDirection=getDirection(input.deltaX,input.deltaY);var overallVelocity=getVelocity(input.deltaTime,input.deltaX,input.deltaY);input.overallVelocityX=overallVelocity.x,input.overallVelocityY=overallVelocity.y,input.overallVelocity=abs(overallVelocity.x)>abs(overallVelocity.y)?overallVelocity.x:overallVelocity.y,input.scale=firstMultiple?function getScale(start,end){return getDistance(end[0],end[1],PROPS_CLIENT_XY)/getDistance(start[0],start[1],PROPS_CLIENT_XY)}(firstMultiple.pointers,pointers):1,input.rotation=firstMultiple?function getRotation(start,end){return getAngle(end[1],end[0],PROPS_CLIENT_XY)+getAngle(start[1],start[0],PROPS_CLIENT_XY)}(firstMultiple.pointers,pointers):0,input.maxPointers=session.prevInput?input.pointers.length>session.prevInput.maxPointers?input.pointers.length:session.prevInput.maxPointers:input.pointers.length,function computeIntervalInputData(session,input){var velocity,velocityX,velocityY,direction,last=session.lastInterval||input,deltaTime=input.timeStamp-last.timeStamp;if(input.eventType!=INPUT_CANCEL&&(deltaTime>COMPUTE_INTERVAL||last.velocity===undefined)){var deltaX=input.deltaX-last.deltaX,deltaY=input.deltaY-last.deltaY,v=getVelocity(deltaTime,deltaX,deltaY);velocityX=v.x,velocityY=v.y,velocity=abs(v.x)>abs(v.y)?v.x:v.y,direction=getDirection(deltaX,deltaY),session.lastInterval=input}else velocity=last.velocity,velocityX=last.velocityX,velocityY=last.velocityY,direction=last.direction;input.velocity=velocity,input.velocityX=velocityX,input.velocityY=velocityY,input.direction=direction}(session,input);var target=manager.element;hasParent(input.srcEvent.target,target)&&(target=input.srcEvent.target);input.target=target}(manager,input),manager.emit("hammer.input",input),manager.recognize(input),manager.session.prevInput=input}function simpleCloneInputData(input){for(var pointers=[],i=0;i<input.pointers.length;)pointers[i]={clientX:round(input.pointers[i].clientX),clientY:round(input.pointers[i].clientY)},i++;return{timeStamp:now(),pointers:pointers,center:getCenter(pointers),deltaX:input.deltaX,deltaY:input.deltaY}}function getCenter(pointers){var pointersLength=pointers.length;if(1===pointersLength)return{x:round(pointers[0].clientX),y:round(pointers[0].clientY)};for(var x=0,y=0,i=0;i<pointersLength;)x+=pointers[i].clientX,y+=pointers[i].clientY,i++;return{x:round(x/pointersLength),y:round(y/pointersLength)}}function getVelocity(deltaTime,x,y){return{x:x/deltaTime||0,y:y/deltaTime||0}}function getDirection(x,y){return x===y?DIRECTION_NONE:abs(x)>=abs(y)?x<0?DIRECTION_LEFT:DIRECTION_RIGHT:y<0?DIRECTION_UP:DIRECTION_DOWN}function getDistance(p1,p2,props){props||(props=PROPS_XY);var x=p2[props[0]]-p1[props[0]],y=p2[props[1]]-p1[props[1]];return Math.sqrt(x*x+y*y)}function getAngle(p1,p2,props){props||(props=PROPS_XY);var x=p2[props[0]]-p1[props[0]],y=p2[props[1]]-p1[props[1]];return 180*Math.atan2(y,x)/Math.PI}Input.prototype={handler:function(){},init:function(){this.evEl&&addEventListeners(this.element,this.evEl,this.domHandler),this.evTarget&&addEventListeners(this.target,this.evTarget,this.domHandler),this.evWin&&addEventListeners(getWindowForElement(this.element),this.evWin,this.domHandler)},destroy:function(){this.evEl&&removeEventListeners(this.element,this.evEl,this.domHandler),this.evTarget&&removeEventListeners(this.target,this.evTarget,this.domHandler),this.evWin&&removeEventListeners(getWindowForElement(this.element),this.evWin,this.domHandler)}};var MOUSE_INPUT_MAP={mousedown:INPUT_START,mousemove:2,mouseup:INPUT_END},MOUSE_ELEMENT_EVENTS="mousedown",MOUSE_WINDOW_EVENTS="mousemove mouseup";function MouseInput(){this.evEl=MOUSE_ELEMENT_EVENTS,this.evWin=MOUSE_WINDOW_EVENTS,this.pressed=!1,Input.apply(this,arguments)}inherit(MouseInput,Input,{handler:function MEhandler(ev){var eventType=MOUSE_INPUT_MAP[ev.type];eventType&INPUT_START&&0===ev.button&&(this.pressed=!0),2&eventType&&1!==ev.which&&(eventType=INPUT_END),this.pressed&&(eventType&INPUT_END&&(this.pressed=!1),this.callback(this.manager,eventType,{pointers:[ev],changedPointers:[ev],pointerType:"mouse",srcEvent:ev}))}});var POINTER_INPUT_MAP={pointerdown:INPUT_START,pointermove:2,pointerup:INPUT_END,pointercancel:INPUT_CANCEL,pointerout:INPUT_CANCEL},IE10_POINTER_TYPE_ENUM={2:"touch",3:"pen",4:"mouse",5:"kinect"},POINTER_ELEMENT_EVENTS="pointerdown",POINTER_WINDOW_EVENTS="pointermove pointerup pointercancel";function PointerEventInput(){this.evEl=POINTER_ELEMENT_EVENTS,this.evWin=POINTER_WINDOW_EVENTS,Input.apply(this,arguments),this.store=this.manager.session.pointerEvents=[]}window.MSPointerEvent&&!window.PointerEvent&&(POINTER_ELEMENT_EVENTS="MSPointerDown",POINTER_WINDOW_EVENTS="MSPointerMove MSPointerUp MSPointerCancel"),inherit(PointerEventInput,Input,{handler:function PEhandler(ev){var store=this.store,removePointer=!1,eventTypeNormalized=ev.type.toLowerCase().replace("ms",""),eventType=POINTER_INPUT_MAP[eventTypeNormalized],pointerType=IE10_POINTER_TYPE_ENUM[ev.pointerType]||ev.pointerType,isTouch="touch"==pointerType,storeIndex=inArray(store,ev.pointerId,"pointerId");eventType&INPUT_START&&(0===ev.button||isTouch)?storeIndex<0&&(store.push(ev),storeIndex=store.length-1):eventType&(INPUT_END|INPUT_CANCEL)&&(removePointer=!0),storeIndex<0||(store[storeIndex]=ev,this.callback(this.manager,eventType,{pointers:store,changedPointers:[ev],pointerType:pointerType,srcEvent:ev}),removePointer&&store.splice(storeIndex,1))}});var SINGLE_TOUCH_INPUT_MAP={touchstart:INPUT_START,touchmove:2,touchend:INPUT_END,touchcancel:INPUT_CANCEL};function SingleTouchInput(){this.evTarget="touchstart",this.evWin="touchstart touchmove touchend touchcancel",this.started=!1,Input.apply(this,arguments)}function normalizeSingleTouches(ev,type){var all=toArray(ev.touches),changed=toArray(ev.changedTouches);return type&(INPUT_END|INPUT_CANCEL)&&(all=uniqueArray(all.concat(changed),"identifier",!0)),[all,changed]}inherit(SingleTouchInput,Input,{handler:function TEhandler(ev){var type=SINGLE_TOUCH_INPUT_MAP[ev.type];if(type===INPUT_START&&(this.started=!0),this.started){var touches=normalizeSingleTouches.call(this,ev,type);type&(INPUT_END|INPUT_CANCEL)&&touches[0].length-touches[1].length==0&&(this.started=!1),this.callback(this.manager,type,{pointers:touches[0],changedPointers:touches[1],pointerType:"touch",srcEvent:ev})}}});var TOUCH_INPUT_MAP={touchstart:INPUT_START,touchmove:2,touchend:INPUT_END,touchcancel:INPUT_CANCEL},TOUCH_TARGET_EVENTS="touchstart touchmove touchend touchcancel";function TouchInput(){this.evTarget=TOUCH_TARGET_EVENTS,this.targetIds={},Input.apply(this,arguments)}function getTouches(ev,type){var allTouches=toArray(ev.touches),targetIds=this.targetIds;if(type&(2|INPUT_START)&&1===allTouches.length)return targetIds[allTouches[0].identifier]=!0,[allTouches,allTouches];var i,targetTouches,changedTouches=toArray(ev.changedTouches),changedTargetTouches=[],target=this.target;if(targetTouches=allTouches.filter((function(touch){return hasParent(touch.target,target)})),type===INPUT_START)for(i=0;i<targetTouches.length;)targetIds[targetTouches[i].identifier]=!0,i++;for(i=0;i<changedTouches.length;)targetIds[changedTouches[i].identifier]&&changedTargetTouches.push(changedTouches[i]),type&(INPUT_END|INPUT_CANCEL)&&delete targetIds[changedTouches[i].identifier],i++;return changedTargetTouches.length?[uniqueArray(targetTouches.concat(changedTargetTouches),"identifier",!0),changedTargetTouches]:void 0}inherit(TouchInput,Input,{handler:function MTEhandler(ev){var type=TOUCH_INPUT_MAP[ev.type],touches=getTouches.call(this,ev,type);touches&&this.callback(this.manager,type,{pointers:touches[0],changedPointers:touches[1],pointerType:"touch",srcEvent:ev})}});var DEDUP_TIMEOUT=2500;function TouchMouseInput(){Input.apply(this,arguments);var handler=bindFn(this.handler,this);this.touch=new TouchInput(this.manager,handler),this.mouse=new MouseInput(this.manager,handler),this.primaryTouch=null,this.lastTouches=[]}function recordTouches(eventType,eventData){eventType&INPUT_START?(this.primaryTouch=eventData.changedPointers[0].identifier,setLastTouch.call(this,eventData)):eventType&(INPUT_END|INPUT_CANCEL)&&setLastTouch.call(this,eventData)}function setLastTouch(eventData){var touch=eventData.changedPointers[0];if(touch.identifier===this.primaryTouch){var lastTouch={x:touch.clientX,y:touch.clientY};this.lastTouches.push(lastTouch);var lts=this.lastTouches;setTimeout((function(){var i=lts.indexOf(lastTouch);i>-1&&lts.splice(i,1)}),DEDUP_TIMEOUT)}}function isSyntheticEvent(eventData){for(var x=eventData.srcEvent.clientX,y=eventData.srcEvent.clientY,i=0;i<this.lastTouches.length;i++){var t=this.lastTouches[i],dx=Math.abs(x-t.x),dy=Math.abs(y-t.y);if(dx<=25&&dy<=25)return!0}return!1}inherit(TouchMouseInput,Input,{handler:function TMEhandler(manager,inputEvent,inputData){var isTouch="touch"==inputData.pointerType,isMouse="mouse"==inputData.pointerType;if(!(isMouse&&inputData.sourceCapabilities&&inputData.sourceCapabilities.firesTouchEvents)){if(isTouch)recordTouches.call(this,inputEvent,inputData);else if(isMouse&&isSyntheticEvent.call(this,inputData))return;this.callback(manager,inputEvent,inputData)}},destroy:function destroy(){this.touch.destroy(),this.mouse.destroy()}});var PREFIXED_TOUCH_ACTION=prefixed(TEST_ELEMENT.style,"touchAction"),NATIVE_TOUCH_ACTION=PREFIXED_TOUCH_ACTION!==undefined,TOUCH_ACTION_MAP=function getTouchActionProps(){if(!NATIVE_TOUCH_ACTION)return!1;var touchMap={},cssSupports=window.CSS&&window.CSS.supports;return["auto","manipulation","pan-y","pan-x","pan-x pan-y","none"].forEach((function(val){touchMap[val]=!cssSupports||window.CSS.supports("touch-action",val)})),touchMap}();function TouchAction(manager,value){this.manager=manager,this.set(value)}TouchAction.prototype={set:function(value){"compute"==value&&(value=this.compute()),NATIVE_TOUCH_ACTION&&this.manager.element.style&&TOUCH_ACTION_MAP[value]&&(this.manager.element.style[PREFIXED_TOUCH_ACTION]=value),this.actions=value.toLowerCase().trim()},update:function(){this.set(this.manager.options.touchAction)},compute:function(){var actions=[];return each(this.manager.recognizers,(function(recognizer){boolOrFn(recognizer.options.enable,[recognizer])&&(actions=actions.concat(recognizer.getTouchAction()))})),function cleanTouchActions(actions){if(inStr(actions,"none"))return"none";var hasPanX=inStr(actions,"pan-x"),hasPanY=inStr(actions,"pan-y");if(hasPanX&&hasPanY)return"none";if(hasPanX||hasPanY)return hasPanX?"pan-x":"pan-y";if(inStr(actions,"manipulation"))return"manipulation";return"auto"}(actions.join(" "))},preventDefaults:function(input){var srcEvent=input.srcEvent,direction=input.offsetDirection;if(this.manager.session.prevented)srcEvent.preventDefault();else{var actions=this.actions,hasNone=inStr(actions,"none")&&!TOUCH_ACTION_MAP.none,hasPanY=inStr(actions,"pan-y")&&!TOUCH_ACTION_MAP["pan-y"],hasPanX=inStr(actions,"pan-x")&&!TOUCH_ACTION_MAP["pan-x"];if(hasNone){var isTapPointer=1===input.pointers.length,isTapMovement=input.distance<2,isTapTouchTime=input.deltaTime<250;if(isTapPointer&&isTapMovement&&isTapTouchTime)return}if(!hasPanX||!hasPanY)return hasNone||hasPanY&&direction&DIRECTION_HORIZONTAL||hasPanX&&direction&DIRECTION_VERTICAL?this.preventSrc(srcEvent):void 0}},preventSrc:function(srcEvent){this.manager.session.prevented=!0,srcEvent.preventDefault()}};var STATE_POSSIBLE=1;function Recognizer(options){this.options=assign({},this.defaults,options||{}),this.id=function uniqueId(){return _uniqueId++}(),this.manager=null,this.options.enable=ifUndefined(this.options.enable,!0),this.state=STATE_POSSIBLE,this.simultaneous={},this.requireFail=[]}function stateStr(state){return 16&state?"cancel":8&state?"end":4&state?"move":2&state?"start":""}function directionStr(direction){return direction==DIRECTION_DOWN?"down":direction==DIRECTION_UP?"up":direction==DIRECTION_LEFT?"left":direction==DIRECTION_RIGHT?"right":""}function getRecognizerByNameIfManager(otherRecognizer,recognizer){var manager=recognizer.manager;return manager?manager.get(otherRecognizer):otherRecognizer}function AttrRecognizer(){Recognizer.apply(this,arguments)}function PanRecognizer(){AttrRecognizer.apply(this,arguments),this.pX=null,this.pY=null}function PinchRecognizer(){AttrRecognizer.apply(this,arguments)}function PressRecognizer(){Recognizer.apply(this,arguments),this._timer=null,this._input=null}function RotateRecognizer(){AttrRecognizer.apply(this,arguments)}function SwipeRecognizer(){AttrRecognizer.apply(this,arguments)}function TapRecognizer(){Recognizer.apply(this,arguments),this.pTime=!1,this.pCenter=!1,this._timer=null,this._input=null,this.count=0}function Hammer(element,options){return(options=options||{}).recognizers=ifUndefined(options.recognizers,Hammer.defaults.preset),new Manager(element,options)}Recognizer.prototype={defaults:{},set:function(options){return assign(this.options,options),this.manager&&this.manager.touchAction.update(),this},recognizeWith:function(otherRecognizer){if(invokeArrayArg(otherRecognizer,"recognizeWith",this))return this;var simultaneous=this.simultaneous;return simultaneous[(otherRecognizer=getRecognizerByNameIfManager(otherRecognizer,this)).id]||(simultaneous[otherRecognizer.id]=otherRecognizer,otherRecognizer.recognizeWith(this)),this},dropRecognizeWith:function(otherRecognizer){return invokeArrayArg(otherRecognizer,"dropRecognizeWith",this)||(otherRecognizer=getRecognizerByNameIfManager(otherRecognizer,this),delete this.simultaneous[otherRecognizer.id]),this},requireFailure:function(otherRecognizer){if(invokeArrayArg(otherRecognizer,"requireFailure",this))return this;var requireFail=this.requireFail;return-1===inArray(requireFail,otherRecognizer=getRecognizerByNameIfManager(otherRecognizer,this))&&(requireFail.push(otherRecognizer),otherRecognizer.requireFailure(this)),this},dropRequireFailure:function(otherRecognizer){if(invokeArrayArg(otherRecognizer,"dropRequireFailure",this))return this;otherRecognizer=getRecognizerByNameIfManager(otherRecognizer,this);var index=inArray(this.requireFail,otherRecognizer);return index>-1&&this.requireFail.splice(index,1),this},hasRequireFailures:function(){return this.requireFail.length>0},canRecognizeWith:function(otherRecognizer){return!!this.simultaneous[otherRecognizer.id]},emit:function(input){var self=this,state=this.state;function emit(event){self.manager.emit(event,input)}state<8&&emit(self.options.event+stateStr(state)),emit(self.options.event),input.additionalEvent&&emit(input.additionalEvent),state>=8&&emit(self.options.event+stateStr(state))},tryEmit:function(input){if(this.canEmit())return this.emit(input);this.state=32},canEmit:function(){for(var i=0;i<this.requireFail.length;){if(!(this.requireFail[i].state&(32|STATE_POSSIBLE)))return!1;i++}return!0},recognize:function(inputData){var inputDataClone=assign({},inputData);if(!boolOrFn(this.options.enable,[this,inputDataClone]))return this.reset(),void(this.state=32);56&this.state&&(this.state=STATE_POSSIBLE),this.state=this.process(inputDataClone),30&this.state&&this.tryEmit(inputDataClone)},process:function(inputData){},getTouchAction:function(){},reset:function(){}},inherit(AttrRecognizer,Recognizer,{defaults:{pointers:1},attrTest:function(input){var optionPointers=this.options.pointers;return 0===optionPointers||input.pointers.length===optionPointers},process:function(input){var state=this.state,eventType=input.eventType,isRecognized=6&state,isValid=this.attrTest(input);return isRecognized&&(eventType&INPUT_CANCEL||!isValid)?16|state:isRecognized||isValid?eventType&INPUT_END?8|state:2&state?4|state:2:32}}),inherit(PanRecognizer,AttrRecognizer,{defaults:{event:"pan",threshold:10,pointers:1,direction:DIRECTION_ALL},getTouchAction:function(){var direction=this.options.direction,actions=[];return direction&DIRECTION_HORIZONTAL&&actions.push("pan-y"),direction&DIRECTION_VERTICAL&&actions.push("pan-x"),actions},directionTest:function(input){var options=this.options,hasMoved=!0,distance=input.distance,direction=input.direction,x=input.deltaX,y=input.deltaY;return direction&options.direction||(options.direction&DIRECTION_HORIZONTAL?(direction=0===x?DIRECTION_NONE:x<0?DIRECTION_LEFT:DIRECTION_RIGHT,hasMoved=x!=this.pX,distance=Math.abs(input.deltaX)):(direction=0===y?DIRECTION_NONE:y<0?DIRECTION_UP:DIRECTION_DOWN,hasMoved=y!=this.pY,distance=Math.abs(input.deltaY))),input.direction=direction,hasMoved&&distance>options.threshold&&direction&options.direction},attrTest:function(input){return AttrRecognizer.prototype.attrTest.call(this,input)&&(2&this.state||!(2&this.state)&&this.directionTest(input))},emit:function(input){this.pX=input.deltaX,this.pY=input.deltaY;var direction=directionStr(input.direction);direction&&(input.additionalEvent=this.options.event+direction),this._super.emit.call(this,input)}}),inherit(PinchRecognizer,AttrRecognizer,{defaults:{event:"pinch",threshold:0,pointers:2},getTouchAction:function(){return["none"]},attrTest:function(input){return this._super.attrTest.call(this,input)&&(Math.abs(input.scale-1)>this.options.threshold||2&this.state)},emit:function(input){if(1!==input.scale){var inOut=input.scale<1?"in":"out";input.additionalEvent=this.options.event+inOut}this._super.emit.call(this,input)}}),inherit(PressRecognizer,Recognizer,{defaults:{event:"press",pointers:1,time:251,threshold:9},getTouchAction:function(){return["auto"]},process:function(input){var options=this.options,validPointers=input.pointers.length===options.pointers,validMovement=input.distance<options.threshold,validTime=input.deltaTime>options.time;if(this._input=input,!validMovement||!validPointers||input.eventType&(INPUT_END|INPUT_CANCEL)&&!validTime)this.reset();else if(input.eventType&INPUT_START)this.reset(),this._timer=setTimeoutContext((function(){this.state=8,this.tryEmit()}),options.time,this);else if(input.eventType&INPUT_END)return 8;return 32},reset:function(){clearTimeout(this._timer)},emit:function(input){8===this.state&&(input&&input.eventType&INPUT_END?this.manager.emit(this.options.event+"up",input):(this._input.timeStamp=now(),this.manager.emit(this.options.event,this._input)))}}),inherit(RotateRecognizer,AttrRecognizer,{defaults:{event:"rotate",threshold:0,pointers:2},getTouchAction:function(){return["none"]},attrTest:function(input){return this._super.attrTest.call(this,input)&&(Math.abs(input.rotation)>this.options.threshold||2&this.state)}}),inherit(SwipeRecognizer,AttrRecognizer,{defaults:{event:"swipe",threshold:10,velocity:.3,direction:DIRECTION_HORIZONTAL|DIRECTION_VERTICAL,pointers:1},getTouchAction:function(){return PanRecognizer.prototype.getTouchAction.call(this)},attrTest:function(input){var velocity,direction=this.options.direction;return direction&(DIRECTION_HORIZONTAL|DIRECTION_VERTICAL)?velocity=input.overallVelocity:direction&DIRECTION_HORIZONTAL?velocity=input.overallVelocityX:direction&DIRECTION_VERTICAL&&(velocity=input.overallVelocityY),this._super.attrTest.call(this,input)&&direction&input.offsetDirection&&input.distance>this.options.threshold&&input.maxPointers==this.options.pointers&&abs(velocity)>this.options.velocity&&input.eventType&INPUT_END},emit:function(input){var direction=directionStr(input.offsetDirection);direction&&this.manager.emit(this.options.event+direction,input),this.manager.emit(this.options.event,input)}}),inherit(TapRecognizer,Recognizer,{defaults:{event:"tap",pointers:1,taps:1,interval:300,time:250,threshold:9,posThreshold:10},getTouchAction:function(){return["manipulation"]},process:function(input){var options=this.options,validPointers=input.pointers.length===options.pointers,validMovement=input.distance<options.threshold,validTouchTime=input.deltaTime<options.time;if(this.reset(),input.eventType&INPUT_START&&0===this.count)return this.failTimeout();if(validMovement&&validTouchTime&&validPointers){if(input.eventType!=INPUT_END)return this.failTimeout();var validInterval=!this.pTime||input.timeStamp-this.pTime<options.interval,validMultiTap=!this.pCenter||getDistance(this.pCenter,input.center)<options.posThreshold;if(this.pTime=input.timeStamp,this.pCenter=input.center,validMultiTap&&validInterval?this.count+=1:this.count=1,this._input=input,0===this.count%options.taps)return this.hasRequireFailures()?(this._timer=setTimeoutContext((function(){this.state=8,this.tryEmit()}),options.interval,this),2):8}return 32},failTimeout:function(){return this._timer=setTimeoutContext((function(){this.state=32}),this.options.interval,this),32},reset:function(){clearTimeout(this._timer)},emit:function(){8==this.state&&(this._input.tapCount=this.count,this.manager.emit(this.options.event,this._input))}}),Hammer.VERSION="2.0.7",Hammer.defaults={domEvents:!1,touchAction:"compute",enable:!0,inputTarget:null,inputClass:null,preset:[[RotateRecognizer,{enable:!1}],[PinchRecognizer,{enable:!1},["rotate"]],[SwipeRecognizer,{direction:DIRECTION_HORIZONTAL}],[PanRecognizer,{direction:DIRECTION_HORIZONTAL},["swipe"]],[TapRecognizer],[TapRecognizer,{event:"doubletap",taps:2},["tap"]],[PressRecognizer]],cssProps:{userSelect:"none",touchSelect:"none",touchCallout:"none",contentZooming:"none",userDrag:"none",tapHighlightColor:"rgba(0,0,0,0)"}};function Manager(element,options){this.options=assign({},Hammer.defaults,options||{}),this.options.inputTarget=this.options.inputTarget||element,this.handlers={},this.session={},this.recognizers=[],this.oldCssProps={},this.element=element,this.input=function createInputInstance(manager){return new(manager.options.inputClass||(SUPPORT_POINTER_EVENTS?PointerEventInput:SUPPORT_ONLY_TOUCH?TouchInput:SUPPORT_TOUCH?TouchMouseInput:MouseInput))(manager,inputHandler)}(this),this.touchAction=new TouchAction(this,this.options.touchAction),toggleCssProps(this,!0),each(this.options.recognizers,(function(item){var recognizer=this.add(new item[0](item[1]));item[2]&&recognizer.recognizeWith(item[2]),item[3]&&recognizer.requireFailure(item[3])}),this)}function toggleCssProps(manager,add){var prop,element=manager.element;element.style&&(each(manager.options.cssProps,(function(value,name){prop=prefixed(element.style,name),add?(manager.oldCssProps[prop]=element.style[prop],element.style[prop]=value):element.style[prop]=manager.oldCssProps[prop]||""})),add||(manager.oldCssProps={}))}Manager.prototype={set:function(options){return assign(this.options,options),options.touchAction&&this.touchAction.update(),options.inputTarget&&(this.input.destroy(),this.input.target=options.inputTarget,this.input.init()),this},stop:function(force){this.session.stopped=force?2:1},recognize:function(inputData){var session=this.session;if(!session.stopped){var recognizer;this.touchAction.preventDefaults(inputData);var recognizers=this.recognizers,curRecognizer=session.curRecognizer;(!curRecognizer||curRecognizer&&8&curRecognizer.state)&&(curRecognizer=session.curRecognizer=null);for(var i=0;i<recognizers.length;)recognizer=recognizers[i],2===session.stopped||curRecognizer&&recognizer!=curRecognizer&&!recognizer.canRecognizeWith(curRecognizer)?recognizer.reset():recognizer.recognize(inputData),!curRecognizer&&14&recognizer.state&&(curRecognizer=session.curRecognizer=recognizer),i++}},get:function(recognizer){if(recognizer instanceof Recognizer)return recognizer;for(var recognizers=this.recognizers,i=0;i<recognizers.length;i++)if(recognizers[i].options.event==recognizer)return recognizers[i];return null},add:function(recognizer){if(invokeArrayArg(recognizer,"add",this))return this;var existing=this.get(recognizer.options.event);return existing&&this.remove(existing),this.recognizers.push(recognizer),recognizer.manager=this,this.touchAction.update(),recognizer},remove:function(recognizer){if(invokeArrayArg(recognizer,"remove",this))return this;if(recognizer=this.get(recognizer)){var recognizers=this.recognizers,index=inArray(recognizers,recognizer);-1!==index&&(recognizers.splice(index,1),this.touchAction.update())}return this},on:function(events,handler){if(events!==undefined&&handler!==undefined){var handlers=this.handlers;return each(splitStr(events),(function(event){handlers[event]=handlers[event]||[],handlers[event].push(handler)})),this}},off:function(events,handler){if(events!==undefined){var handlers=this.handlers;return each(splitStr(events),(function(event){handler?handlers[event]&&handlers[event].splice(inArray(handlers[event],handler),1):delete handlers[event]})),this}},emit:function(event,data){this.options.domEvents&&function triggerDomEvent(event,data){var gestureEvent=document.createEvent("Event");gestureEvent.initEvent(event,!0,!0),gestureEvent.gesture=data,data.target.dispatchEvent(gestureEvent)}(event,data);var handlers=this.handlers[event]&&this.handlers[event].slice();if(handlers&&handlers.length){data.type=event,data.preventDefault=function(){data.srcEvent.preventDefault()};for(var i=0;i<handlers.length;)handlers[i](data),i++}},destroy:function(){this.element&&toggleCssProps(this,!1),this.handlers={},this.session={},this.input.destroy(),this.element=null}},assign(Hammer,{INPUT_START:INPUT_START,INPUT_MOVE:2,INPUT_END:INPUT_END,INPUT_CANCEL:INPUT_CANCEL,STATE_POSSIBLE:STATE_POSSIBLE,STATE_BEGAN:2,STATE_CHANGED:4,STATE_ENDED:8,STATE_RECOGNIZED:8,STATE_CANCELLED:16,STATE_FAILED:32,DIRECTION_NONE:DIRECTION_NONE,DIRECTION_LEFT:DIRECTION_LEFT,DIRECTION_RIGHT:DIRECTION_RIGHT,DIRECTION_UP:DIRECTION_UP,DIRECTION_DOWN:DIRECTION_DOWN,DIRECTION_HORIZONTAL:DIRECTION_HORIZONTAL,DIRECTION_VERTICAL:DIRECTION_VERTICAL,DIRECTION_ALL:DIRECTION_ALL,Manager:Manager,Input:Input,TouchAction:TouchAction,TouchInput:TouchInput,MouseInput:MouseInput,PointerEventInput:PointerEventInput,TouchMouseInput:TouchMouseInput,SingleTouchInput:SingleTouchInput,Recognizer:Recognizer,AttrRecognizer:AttrRecognizer,Tap:TapRecognizer,Pan:PanRecognizer,Swipe:SwipeRecognizer,Pinch:PinchRecognizer,Rotate:RotateRecognizer,Press:PressRecognizer,on:addEventListeners,off:removeEventListeners,each:each,merge:merge,extend:extend,assign:assign,inherit:inherit,bindFn:bindFn,prefixed:prefixed}),(void 0!==window?window:"undefined"!=typeof self?self:{}).Hammer=Hammer,(__WEBPACK_AMD_DEFINE_RESULT__=function(){return Hammer}.call(exports,__webpack_require__,exports,module))===undefined||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}(window,document)}}]);