"use strict";(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[1632],{"./packages/subsurface-viewer/src/storybook/layers/WellLabelLayer.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:function(){return Default},LabelAutoPosition:function(){return LabelAutoPosition},LabelPosition:function(){return LabelPosition},LabelStyle:function(){return LabelStyle},SparseLabelPosition:function(){return SparseLabelPosition},TangentOrientation:function(){return TangentOrientation},WellLabelPicking:function(){return WellLabelPicking},__namedExportsOrder:function(){return __namedExportsOrder}});var mathjs__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/mathjs/lib/esm/core/create.js"),mathjs__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/mathjs/lib/esm/entry/allFactoriesAny.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_layers__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/subsurface-viewer/src/layers/index.ts"),_layers_wells_layers_wellLabelLayer__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/subsurface-viewer/src/layers/wells/layers/wellLabelLayer.ts"),_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/subsurface-viewer/src/SubsurfaceViewer.tsx"),_constant_argTypes__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/subsurface-viewer/src/storybook/constant/argTypes.ts"),_util_color__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./packages/subsurface-viewer/src/storybook/util/color.ts"),_storybook_test__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs");const math=(0,mathjs__WEBPACK_IMPORTED_MODULE_6__.v)(mathjs__WEBPACK_IMPORTED_MODULE_7__.Q,{randomSeed:"1984"}),randomFunc=math?.random?math.random:Math.random,DEFAULT_VIEWS={layout:[1,2],viewports:[{id:"view_1",show3D:!1,layerIds:["well-layer","well-labels"]},{id:"view_2",show3D:!0,layerIds:["well-layer","axes-layer-3d","well-labels"]}]},SPLIT_VIEWS={layout:[1,2],viewports:[{id:"view_1",show3D:!1,layerIds:["well-layer","label-2d"]},{id:"view_2",show3D:!0,layerIds:["well-layer","axes-layer-3d","label-3d"]}]},WELL_LAYER_PROPS={id:"well-layer",wellNameVisible:!1,wellHeadStyle:{size:6}},getRandomDeviation=(magnitude=10,mean=5)=>randomFunc()*(2*mean-.5*magnitude)*Math.PI/180,createSyntheticWell=(index,headPosition,sampleCount=20,segmentLength=150,dipDeviationMagnitude=10)=>{const name=`Well ${index}`,avgDipDeviation=randomFunc()*dipDeviationMagnitude,avgAzimuthDeviation=5*randomFunc()-2.5,maxDip=.5*Math.PI+.05,coordinates=[headPosition],leadCount=Math.trunc(randomFunc()*(sampleCount-3))+3;for(let i=0;i<leadCount;i++){const x=coordinates[coordinates.length-1][0],y=coordinates[coordinates.length-1][1],z=coordinates[coordinates.length-1][2]+segmentLength;coordinates.push([x,y,z])}let previousAzimuth=randomFunc()*Math.PI*2,previousDip=0;for(let i=0;i<sampleCount-leadCount;i++){const prevSample=coordinates[coordinates.length-1],azimuth=previousAzimuth+getRandomDeviation(5,avgAzimuthDeviation),dip=Math.min(previousDip+getRandomDeviation(dipDeviationMagnitude,avgDipDeviation),maxDip),x=prevSample[0]+segmentLength*Math.cos(azimuth)*Math.sin(dip),y=prevSample[1]+segmentLength*Math.sin(azimuth)*Math.sin(dip),z=prevSample[2]+segmentLength*Math.cos(dip);coordinates.push([x,y,z]),previousAzimuth=azimuth,previousDip=dip}return{type:"Feature",properties:{name:name,md:[],color:[100+Math.floor(155*randomFunc()),100+Math.floor(155*randomFunc()),100+Math.floor(155*randomFunc()),255]},geometry:{type:"GeometryCollection",geometries:[{type:"Point",coordinates:headPosition},{type:"LineString",coordinates:coordinates}]}}},SYNTHETIC_WELL_HEADS=((count=100)=>{const wellHeads=[];for(let i=0;i<count;i++){const headPosition=[456e3+(1e4*randomFunc()-2e3),6785e3+(8e3*randomFunc()-2e3),0];wellHeads.push(headPosition)}return wellHeads})(),createSyntheticWellCollection=(wellCount=1e3,wellHeadCount=100,{sampleCount:sampleCount,segmentLength:segmentLength,dipDeviationMagnitude:dipDeviationMagnitude}={sampleCount:20,segmentLength:150,dipDeviationMagnitude:20})=>{const wellHeads=SYNTHETIC_WELL_HEADS.slice(0,wellHeadCount),wells=[];for(let i=0;i<wellCount;i++){const wellPerClusterCount=Math.trunc(wellCount/wellHeadCount)+1,headPosition=wellHeads[Math.trunc(i/wellPerClusterCount)],syntheticWell=createSyntheticWell(i,headPosition,sampleCount,segmentLength,dipDeviationMagnitude);wells.push(syntheticWell)}return{type:"FeatureCollection",features:wells}},useSyntheticWellCollection=(wellCount=1e3,wellHeadCount=100,{sampleCount:sampleCount,segmentLength:segmentLength,dipDeviationMagnitude:dipDeviationMagnitude}={sampleCount:20,segmentLength:150,dipDeviationMagnitude:10})=>react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>createSyntheticWellCollection(wellCount,wellHeadCount,{sampleCount:sampleCount,segmentLength:segmentLength,dipDeviationMagnitude:dipDeviationMagnitude})),[wellCount,wellHeadCount,sampleCount,segmentLength,dipDeviationMagnitude]),SYNTHETIC_WELLS=createSyntheticWellCollection(1e3),AXES_LAYERS=[new _layers__WEBPACK_IMPORTED_MODULE_1__.AxesLayer({id:"axes-layer-3d",bounds:[45e4,6781e3,0,464e3,6791e3,3500]})],DEFAULT_LABEL_PROPS={id:"well-labels",data:SYNTHETIC_WELLS.features},getSyntheticWells=wellCount=>({type:"FeatureCollection",features:SYNTHETIC_WELLS.features.slice(0,wellCount)}),Default={render:({wellCount:wellCount})=>{const data=getSyntheticWells(wellCount),wellLayer=new _layers__WEBPACK_IMPORTED_MODULE_1__.WellsLayer({...WELL_LAYER_PROPS,data:data}),labelLayer=new _layers_wells_layers_wellLabelLayer__WEBPACK_IMPORTED_MODULE_2__.U({...DEFAULT_LABEL_PROPS,data:data.features}),propsWithLayers={id:"default",layers:[...AXES_LAYERS,wellLayer,labelLayer],views:DEFAULT_VIEWS};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_3__.A,propsWithLayers)}},WellLabelPicking={render:()=>{const data=getSyntheticWells(10),wellLayer=new _layers__WEBPACK_IMPORTED_MODULE_1__.WellsLayer({...WELL_LAYER_PROPS,data:data}),labelLayer=new _layers_wells_layers_wellLabelLayer__WEBPACK_IMPORTED_MODULE_2__.U({...DEFAULT_LABEL_PROPS,data:data.features,background:!0,getSize:100}),propsWithLayers={id:"default",cameraPosition:{target:[458305,6785369,0],zoom:0,rotationX:0,rotationOrbit:40},layers:[...AXES_LAYERS,wellLayer,labelLayer],views:{layout:[1,1],viewports:[{id:"view_1",show3D:!1,layerIds:["well-layer","axes-layer-3d","well-labels"]}]}};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_3__.A,propsWithLayers)},play:async()=>{const canvas=document.querySelector("canvas");if(canvas&&await _storybook_test__WEBPACK_IMPORTED_MODULE_5__.Q4.click(canvas,{delay:500}),!canvas)return;const leftViewCenterPosition={x:canvas.clientLeft+canvas.clientWidth/2,y:canvas.clientTop+canvas.clientHeight/2};await _storybook_test__WEBPACK_IMPORTED_MODULE_5__.Q4.hover(canvas,{delay:500}),await _storybook_test__WEBPACK_IMPORTED_MODULE_5__.rC.mouseMove(canvas,{clientX:0,clientY:0,delay:500}),await _storybook_test__WEBPACK_IMPORTED_MODULE_5__.rC.mouseMove(canvas,{clientX:leftViewCenterPosition.x,clientY:leftViewCenterPosition.y,delay:500})}},LabelPosition={render:({wellCount:wellCount,getPositionAlongPath:getPositionAlongPath,sampleCount:sampleCount,segmentLength:segmentLength,dipDeviationMagnitude:dipDeviationMagnitude})=>{const data=useSyntheticWellCollection(wellCount,100,{sampleCount:sampleCount,segmentLength:segmentLength,dipDeviationMagnitude:dipDeviationMagnitude}),wellLayer=new _layers__WEBPACK_IMPORTED_MODULE_1__.WellsLayer({...WELL_LAYER_PROPS,data:data}),labelLayer=new _layers_wells_layers_wellLabelLayer__WEBPACK_IMPORTED_MODULE_2__.U({...DEFAULT_LABEL_PROPS,getPositionAlongPath:getPositionAlongPath,data:data.features}),propsWithLayers={id:"position",layers:[...AXES_LAYERS,wellLayer,labelLayer],views:DEFAULT_VIEWS};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_3__.A,propsWithLayers)},argTypes:{..._constant_argTypes__WEBPACK_IMPORTED_MODULE_4__.XO,..._constant_argTypes__WEBPACK_IMPORTED_MODULE_4__.ke},args:{getPositionAlongPath:.5,sampleCount:20,segmentLength:150,dipDeviationMagnitude:10}},LabelAutoPosition={render:({wellCount:wellCount,getPositionAlongPath:getPositionAlongPath,orientation:orientation,background:background})=>{const data=getSyntheticWells(wellCount),labelProps={autoPosition:!0,data:data.features,getPositionAlongPath:getPositionAlongPath,orientation:orientation,background:background},wellLayer=new _layers__WEBPACK_IMPORTED_MODULE_1__.WellsLayer({...WELL_LAYER_PROPS,data:data}),labelLayer2d=new _layers_wells_layers_wellLabelLayer__WEBPACK_IMPORTED_MODULE_2__.U({id:"label-2d",...labelProps}),labelLayer3d=new _layers_wells_layers_wellLabelLayer__WEBPACK_IMPORTED_MODULE_2__.U({id:"label-3d",...labelProps}),propsWithLayers={id:"position",layers:[...AXES_LAYERS,wellLayer,labelLayer2d,labelLayer3d],views:react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>({...SPLIT_VIEWS,viewports:[{...SPLIT_VIEWS.viewports[0],zoom:-2},{...SPLIT_VIEWS.viewports[1]}]})),[])};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_3__.A,propsWithLayers)},argTypes:{..._constant_argTypes__WEBPACK_IMPORTED_MODULE_4__.XO,..._constant_argTypes__WEBPACK_IMPORTED_MODULE_4__.yM},args:{getPositionAlongPath:0,orientation:_layers_wells_layers_wellLabelLayer__WEBPACK_IMPORTED_MODULE_2__.$.HORIZONTAL,background:!0},parameters:{docs:{description:{story:"Auto position label along the well trajectory. The label will be repositioned if it falls outside the view."}}}},TangentOrientation={render:({wellCount:wellCount,getPositionAlongPath:getPositionAlongPath})=>{const data=getSyntheticWells(wellCount),wellLayer=new _layers__WEBPACK_IMPORTED_MODULE_1__.WellsLayer({...WELL_LAYER_PROPS,data:data}),labelProps={orientation:_layers_wells_layers_wellLabelLayer__WEBPACK_IMPORTED_MODULE_2__.$.TANGENT,data:data.features,getPositionAlongPath:getPositionAlongPath},labelLayer2d=new _layers_wells_layers_wellLabelLayer__WEBPACK_IMPORTED_MODULE_2__.U({id:"label-2d",...labelProps}),labelLayer3d=new _layers_wells_layers_wellLabelLayer__WEBPACK_IMPORTED_MODULE_2__.U({id:"label-3d",...labelProps}),propsWithLayers={id:"orientation",layers:[...AXES_LAYERS,wellLayer,labelLayer2d,labelLayer3d],views:SPLIT_VIEWS};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_3__.A,propsWithLayers)},argTypes:_constant_argTypes__WEBPACK_IMPORTED_MODULE_4__.XO,args:{getPositionAlongPath:.5}},LabelStyle={render:({wellCount:wellCount,getPositionAlongPath:getPositionAlongPath,getSize:getSize,orientation:orientation,background:background,getBorderWidth:getBorderWidth,...props})=>{const data=getSyntheticWells(wellCount),labelProps={getPositionAlongPath:getPositionAlongPath,data:data.features,getSize:getSize,getColor:(0,_util_color__WEBPACK_IMPORTED_MODULE_8__.l)(props.color),background:background,getBorderColor:(0,_util_color__WEBPACK_IMPORTED_MODULE_8__.l)(props.borderColor),getBorderWidth:getBorderWidth,getBackgroundColor:(0,_util_color__WEBPACK_IMPORTED_MODULE_8__.l)(props.bgColor),orientation:orientation},wellLayer=new _layers__WEBPACK_IMPORTED_MODULE_1__.WellsLayer({...WELL_LAYER_PROPS,data:data}),labelLayer2d=new _layers_wells_layers_wellLabelLayer__WEBPACK_IMPORTED_MODULE_2__.U({...labelProps,id:"label-2d"}),labelLayer3d=new _layers_wells_layers_wellLabelLayer__WEBPACK_IMPORTED_MODULE_2__.U({...labelProps,id:"label-3d"}),propsWithLayers={id:"style",layers:[...AXES_LAYERS,wellLayer,labelLayer2d,labelLayer3d],views:SPLIT_VIEWS};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_3__.A,propsWithLayers)},args:{getSize:15,orientation:_layers_wells_layers_wellLabelLayer__WEBPACK_IMPORTED_MODULE_2__.$.HORIZONTAL,color:"yellow",background:!0,borderColor:"black",getBorderWidth:2,bgColor:"grey",getPositionAlongPath:.5},argTypes:{..._constant_argTypes__WEBPACK_IMPORTED_MODULE_4__.XO,..._constant_argTypes__WEBPACK_IMPORTED_MODULE_4__.Ll,..._constant_argTypes__WEBPACK_IMPORTED_MODULE_4__.yM}},SparseLabelPosition={render:({wellCount:wellCount,getPositionAlongPath:getPositionAlongPath,sampleCount:sampleCount,segmentLength:segmentLength,dipDeviationMagnitude:dipDeviationMagnitude})=>{const data=useSyntheticWellCollection(wellCount,100,{sampleCount:sampleCount,segmentLength:segmentLength,dipDeviationMagnitude:dipDeviationMagnitude}),wellLayer=new _layers__WEBPACK_IMPORTED_MODULE_1__.WellsLayer({...WELL_LAYER_PROPS,data:data}),labelLayer=new _layers_wells_layers_wellLabelLayer__WEBPACK_IMPORTED_MODULE_2__.U({...DEFAULT_LABEL_PROPS,getPositionAlongPath:getPositionAlongPath,data:data.features}),propsWithLayers={id:"position",layers:[...AXES_LAYERS,wellLayer,labelLayer],views:DEFAULT_VIEWS};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_3__.A,propsWithLayers)},argTypes:{..._constant_argTypes__WEBPACK_IMPORTED_MODULE_4__.XO,..._constant_argTypes__WEBPACK_IMPORTED_MODULE_4__.ke},args:{getPositionAlongPath:.5,sampleCount:5,segmentLength:600,dipDeviationMagnitude:80},parameters:{docs:{description:{story:"Label position along a sparsely sampled well trajectory."}}}};__webpack_exports__.default={title:"SubsurfaceViewer / Well Label Layer",parameters:{docs:{description:{component:"Layer for displaying well labels"},story:{height:"700px"}}},argTypes:{wellCount:{control:{type:"range",min:1,max:1e3,step:1}}},args:{wellCount:10}};const __namedExportsOrder=["Default","WellLabelPicking","LabelPosition","LabelAutoPosition","TangentOrientation","LabelStyle","SparseLabelPosition"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: ({\n    wellCount\n  }) => {\n    const data = getSyntheticWells(wellCount);\n    const wellLayer = new WellsLayer({\n      ...WELL_LAYER_PROPS,\n      data\n    });\n    const labelLayer = new WellLabelLayer({\n      ...DEFAULT_LABEL_PROPS,\n      data: data.features\n    });\n    const propsWithLayers = {\n      id: "default",\n      layers: [...AXES_LAYERS, wellLayer, labelLayer],\n      views: DEFAULT_VIEWS\n    };\n    return <SubsurfaceViewer {...propsWithLayers} />;\n  }\n}',...Default.parameters?.docs?.source}}},WellLabelPicking.parameters={...WellLabelPicking.parameters,docs:{...WellLabelPicking.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const camera: ViewStateType = {\n      target: [458305, 6785369, 0],\n      zoom: 0,\n      rotationX: 0,\n      rotationOrbit: 40\n    };\n    const data = getSyntheticWells(10);\n    const wellLayer = new WellsLayer({\n      ...WELL_LAYER_PROPS,\n      data\n    });\n    const labelLayer = new WellLabelLayer({\n      ...DEFAULT_LABEL_PROPS,\n      data: data.features,\n      background: true,\n      getSize: 100\n    });\n    const propsWithLayers = {\n      id: "default",\n      cameraPosition: camera,\n      layers: [...AXES_LAYERS, wellLayer, labelLayer],\n      views: {\n        layout: [1, 1],\n        viewports: [{\n          id: "view_1",\n          show3D: false,\n          layerIds: ["well-layer", "axes-layer-3d", "well-labels"]\n        }]\n      } as ViewsType\n    };\n    return <SubsurfaceViewer {...propsWithLayers} />;\n  },\n  play: async () => {\n    const delay = 500;\n    const canvas = document.querySelector("canvas");\n    if (canvas) {\n      await userEvent.click(canvas, {\n        delay\n      });\n    }\n    if (!canvas) {\n      return;\n    }\n    const leftViewCenterPosition = {\n      x: canvas.clientLeft + canvas.clientWidth / 2,\n      y: canvas.clientTop + canvas.clientHeight / 2\n    };\n    await userEvent.hover(canvas, {\n      delay\n    });\n    await fireEvent.mouseMove(canvas, {\n      clientX: 0,\n      clientY: 0,\n      delay\n    });\n    await fireEvent.mouseMove(canvas, {\n      clientX: leftViewCenterPosition.x,\n      clientY: leftViewCenterPosition.y,\n      delay\n    });\n  }\n}',...WellLabelPicking.parameters?.docs?.source}}},LabelPosition.parameters={...LabelPosition.parameters,docs:{...LabelPosition.parameters?.docs,source:{originalSource:'{\n  render: ({\n    wellCount,\n    getPositionAlongPath,\n    sampleCount,\n    segmentLength,\n    dipDeviationMagnitude\n  }) => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const data = useSyntheticWellCollection(wellCount, 100, {\n      sampleCount,\n      segmentLength,\n      dipDeviationMagnitude\n    });\n    const wellLayer = new WellsLayer({\n      ...WELL_LAYER_PROPS,\n      data\n    });\n    const labelLayer = new WellLabelLayer({\n      ...DEFAULT_LABEL_PROPS,\n      getPositionAlongPath,\n      data: data.features\n    });\n    const propsWithLayers = {\n      id: "position",\n      layers: [...AXES_LAYERS, wellLayer, labelLayer],\n      views: DEFAULT_VIEWS\n    };\n    return <SubsurfaceViewer {...propsWithLayers} />;\n  },\n  argTypes: {\n    ...LABEL_POSITION_ARGTYPES,\n    ...TRAJECTORY_SIMULATION_ARGTYPES\n  },\n  args: {\n    getPositionAlongPath: 0.5,\n    sampleCount: 20,\n    segmentLength: 150,\n    dipDeviationMagnitude: 10\n  }\n}',...LabelPosition.parameters?.docs?.source}}},LabelAutoPosition.parameters={...LabelAutoPosition.parameters,docs:{...LabelAutoPosition.parameters?.docs,source:{originalSource:'{\n  render: ({\n    wellCount,\n    getPositionAlongPath,\n    orientation,\n    background\n  }) => {\n    const data = getSyntheticWells(wellCount);\n    const labelProps = {\n      autoPosition: true,\n      data: data.features,\n      getPositionAlongPath,\n      orientation,\n      background\n    };\n    const wellLayer = new WellsLayer({\n      ...WELL_LAYER_PROPS,\n      data\n    });\n    const labelLayer2d = new WellLabelLayer({\n      id: "label-2d",\n      ...labelProps\n    });\n    const labelLayer3d = new WellLabelLayer({\n      id: "label-3d",\n      ...labelProps\n    });\n    const layers = [...AXES_LAYERS, wellLayer, labelLayer2d, labelLayer3d];\n\n    // Viewport is reset on views object identity change, so it needs to be memoized\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const views: ViewsType = React.useMemo(() => ({\n      ...SPLIT_VIEWS,\n      viewports: [{\n        ...SPLIT_VIEWS.viewports[0],\n        // Zoom in in order to trigger auto-positioning.\n        zoom: -2\n      }, {\n        ...SPLIT_VIEWS.viewports[1]\n      }]\n    }), []);\n    const propsWithLayers = {\n      id: "position",\n      layers,\n      views\n    };\n    return <SubsurfaceViewer {...propsWithLayers} />;\n  },\n  argTypes: {\n    ...LABEL_POSITION_ARGTYPES,\n    ...LABEL_ORIENTATION_ARGTYPES\n  },\n  args: {\n    getPositionAlongPath: 0,\n    orientation: LabelOrientation.HORIZONTAL,\n    background: true\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: "Auto position label along the well trajectory. The label will be repositioned if it falls outside the view."\n      }\n    }\n  }\n}',...LabelAutoPosition.parameters?.docs?.source}}},TangentOrientation.parameters={...TangentOrientation.parameters,docs:{...TangentOrientation.parameters?.docs,source:{originalSource:'{\n  render: ({\n    wellCount,\n    getPositionAlongPath\n  }) => {\n    const data = getSyntheticWells(wellCount);\n    const wellLayer = new WellsLayer({\n      ...WELL_LAYER_PROPS,\n      data\n    });\n    const labelProps = {\n      orientation: LabelOrientation.TANGENT,\n      data: data.features,\n      getPositionAlongPath\n    };\n    const labelLayer2d = new WellLabelLayer({\n      id: "label-2d",\n      ...labelProps\n    });\n    const labelLayer3d = new WellLabelLayer({\n      id: "label-3d",\n      ...labelProps\n    });\n    const layers = [...AXES_LAYERS, wellLayer, labelLayer2d, labelLayer3d];\n    const propsWithLayers = {\n      id: "orientation",\n      layers,\n      views: SPLIT_VIEWS\n    };\n    return <SubsurfaceViewer {...propsWithLayers} />;\n  },\n  argTypes: LABEL_POSITION_ARGTYPES,\n  args: {\n    getPositionAlongPath: 0.5\n  }\n}',...TangentOrientation.parameters?.docs?.source}}},LabelStyle.parameters={...LabelStyle.parameters,docs:{...LabelStyle.parameters?.docs,source:{originalSource:'{\n  render: ({\n    wellCount,\n    getPositionAlongPath,\n    getSize,\n    orientation,\n    background,\n    getBorderWidth,\n    ...props\n  }) => {\n    const data = getSyntheticWells(wellCount);\n    const labelProps = {\n      getPositionAlongPath,\n      data: data.features,\n      getSize,\n      getColor: getRgba(props.color),\n      background,\n      getBorderColor: getRgba(props.borderColor),\n      getBorderWidth,\n      getBackgroundColor: getRgba(props.bgColor),\n      orientation\n    };\n    const wellLayer = new WellsLayer({\n      ...WELL_LAYER_PROPS,\n      data\n    });\n    const labelLayer2d = new WellLabelLayer({\n      ...labelProps,\n      id: "label-2d"\n    });\n    const labelLayer3d = new WellLabelLayer({\n      ...labelProps,\n      id: "label-3d"\n    });\n    const layers = [...AXES_LAYERS, wellLayer, labelLayer2d, labelLayer3d];\n    const propsWithLayers = {\n      id: "style",\n      layers,\n      views: SPLIT_VIEWS\n    };\n    return <SubsurfaceViewer {...propsWithLayers} />;\n  },\n  args: {\n    getSize: 15,\n    orientation: LabelOrientation.HORIZONTAL,\n    color: "yellow",\n    background: true,\n    borderColor: "black",\n    getBorderWidth: 2,\n    bgColor: "grey",\n    getPositionAlongPath: 0.5\n  },\n  argTypes: {\n    ...LABEL_POSITION_ARGTYPES,\n    ...LABEL_SIZE_ARGTYPES,\n    ...LABEL_ORIENTATION_ARGTYPES\n  }\n}',...LabelStyle.parameters?.docs?.source}}},SparseLabelPosition.parameters={...SparseLabelPosition.parameters,docs:{...SparseLabelPosition.parameters?.docs,source:{originalSource:'{\n  render: ({\n    wellCount,\n    getPositionAlongPath,\n    sampleCount,\n    segmentLength,\n    dipDeviationMagnitude\n  }) => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const data = useSyntheticWellCollection(wellCount, 100, {\n      sampleCount,\n      segmentLength,\n      dipDeviationMagnitude\n    });\n    const wellLayer = new WellsLayer({\n      ...WELL_LAYER_PROPS,\n      data\n    });\n    const labelLayer = new WellLabelLayer({\n      ...DEFAULT_LABEL_PROPS,\n      getPositionAlongPath,\n      data: data.features\n    });\n    const propsWithLayers = {\n      id: "position",\n      layers: [...AXES_LAYERS, wellLayer, labelLayer],\n      views: DEFAULT_VIEWS\n    };\n    return <SubsurfaceViewer {...propsWithLayers} />;\n  },\n  argTypes: {\n    ...LABEL_POSITION_ARGTYPES,\n    ...TRAJECTORY_SIMULATION_ARGTYPES\n  },\n  args: {\n    getPositionAlongPath: 0.5,\n    sampleCount: 5,\n    segmentLength: 600,\n    dipDeviationMagnitude: 80\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: "Label position along a sparsely sampled well trajectory."\n      }\n    }\n  }\n}',...SparseLabelPosition.parameters?.docs?.source}}}},"./packages/subsurface-viewer/src/storybook/constant/argTypes.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Ll:function(){return LABEL_SIZE_ARGTYPES},XO:function(){return LABEL_POSITION_ARGTYPES},ke:function(){return TRAJECTORY_SIMULATION_ARGTYPES},nc:function(){return LABEL_MERGE_RADIUS_ARGTYPES},yM:function(){return LABEL_ORIENTATION_ARGTYPES}});const LABEL_POSITION_ARGTYPES={getPositionAlongPath:{control:{type:"range",min:0,max:1,step:.01}}},LABEL_SIZE_ARGTYPES={getSize:{control:{type:"range",min:0,max:50,step:1}}},LABEL_ORIENTATION_ARGTYPES={orientation:{options:["horizontal","tangent"],control:{type:"select"}}},TRAJECTORY_SIMULATION_ARGTYPES={sampleCount:{control:{type:"range",min:1,max:100,step:1}},segmentLength:{control:{type:"range",min:1,max:1e3,step:1}},dipDeviationMagnitude:{control:{type:"range",min:0,max:90,step:1}}},LABEL_MERGE_RADIUS_ARGTYPES={mergeRadius:{control:{type:"range",min:0,max:2e3,step:1}}}},"./packages/subsurface-viewer/src/storybook/util/color.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{l:function(){return getRgba}});var d3_color__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/d3-color/src/color.js");function getRgba(color){const c=(0,d3_color__WEBPACK_IMPORTED_MODULE_0__.Qh)(color);return[c.r,c.g,c.b,255*c.opacity]}}}]);