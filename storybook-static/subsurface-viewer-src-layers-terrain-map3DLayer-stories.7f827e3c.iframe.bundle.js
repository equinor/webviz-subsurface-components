"use strict";(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[3943],{"./packages/subsurface-viewer/src/layers/terrain/map3DLayer.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BreakpointColorMap:function(){return BreakpointColorMap},ColorMapRange:function(){return ColorMapRange},DefaultColorScale:function(){return DefaultColorScale},GradientFunctionColorMap:function(){return GradientFunctionColorMap},MapLayer3d:function(){return MapLayer3d},Readout:function(){return Readout},StepFunctionColorMap:function(){return StepFunctionColorMap},__namedExportsOrder:function(){return __namedExportsOrder}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),_components_Map__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/subsurface-viewer/src/components/Map.tsx"),_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/subsurface-viewer/src/SubsurfaceViewer.tsx"),_components_InfoCard__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/subsurface-viewer/src/components/InfoCard.tsx"),_mui_material__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mui/material/Slider/Slider.js"),_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@emerson-eps/color-tables/dist/index.js");const classes={main:"MapLayer3d-main",legend:"MapLayer3d-legend"},Root=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_5__.ZP)("div")({[`& .${classes.main}`]:{height:500,border:"1px solid black",position:"relative"},[`& .${classes.legend}`]:{width:100,position:"absolute",top:"0",right:"0"}});__webpack_exports__.default={parameters:{storySource:{source:' // remove when ready to fix these.\n\nimport React from "react";\nimport { styled } from "@mui/material/styles";\nimport { useHoverInfo } from "../../components/Map";\nimport SubsurfaceViewer from "../../SubsurfaceViewer";\nimport InfoCard from "../../components/InfoCard";\nimport { Slider } from "@mui/material";\nimport { ContinuousLegend } from "@emerson-eps/color-tables";\nconst PREFIX = "MapLayer3d";\nconst classes = {\n  main: `${PREFIX}-main`,\n  legend: `${PREFIX}-legend`\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled("div")({\n  [`& .${classes.main}`]: {\n    height: 500,\n    border: "1px solid black",\n    position: "relative"\n  },\n  [`& .${classes.legend}`]: {\n    width: 100,\n    position: "absolute",\n    top: "0",\n    right: "0"\n  }\n});\nexport default {\n  component: SubsurfaceViewer,\n  title: "SubsurfaceViewer / Map 3D Delatin mesh Layer"\n};\nconst meshMapLayer = {\n  "@@type": "Map3DLayer",\n  id: "mesh-layer",\n  bounds: [432205, 6475078, 437720, 6481113],\n  mesh: "hugin_depth_25_m_normalized_margin.png",\n  meshValueRange: [2782, 3513],\n  propertyTexture: "kh_netmap_25_m_normalized_margin.png",\n  propertyValueRange: [-3071, 41048],\n  contours: [0, 50.0],\n  isContoursDepth: true\n};\nconst defaultArgs = {\n  bounds: [432205, 6475078, 437720, 6481113]\n};\nconst defaultParameters = {\n  docs: {\n    inlineStories: false,\n    iframeHeight: 500\n  }\n};\nconst axes = {\n  "@@type": "AxesLayer",\n  id: "axes-layer",\n  bounds: [432205, 6475078, 0, 437720, 6481113, 3500]\n};\nconst north_arrow_layer = {\n  "@@type": "NorthArrow3DLayer",\n  id: "north-arrow-layer"\n};\nexport const MapLayer3d = args => {\n  return /*#__PURE__*/React.createElement(SubsurfaceViewer, args);\n};\nMapLayer3d.args = {\n  id: "map",\n  layers: [axes, meshMapLayer, north_arrow_layer],\n  bounds: [432205, 6475078, 437720, 6481113],\n  views: {\n    layout: [1, 1],\n    viewports: [{\n      id: "view_1",\n      show3D: true\n    }]\n  }\n};\nMapLayer3d.parameters = {\n  docs: {\n    ...defaultParameters.docs,\n    description: {\n      story: "3d example."\n    }\n  }\n};\nfunction gradientColorMap(x) {\n  return [255 - x * 255, 255 - x * 100, 255 * x];\n}\nfunction nearestColorMap(x) {\n  if (x > 0.5) return [100, 255, 255];else if (x > 0.1) return [255, 100, 255];\n  return [255, 255, 100];\n}\nfunction breakpointColorMap(x, breakpoint) {\n  if (x > breakpoint) return [0, 50, 200];\n  return [255, 255, 0];\n}\nfunction createColorMap(breakpoint) {\n  return value => breakpointColorMap(value, breakpoint);\n}\nexport const GradientFunctionColorMap = () => {\n  const args = {\n    ...defaultArgs,\n    id: "gradient-color-map",\n    layers: [{\n      ...meshMapLayer,\n      colorMapFunction: gradientColorMap\n    }]\n  };\n  return /*#__PURE__*/React.createElement(SubsurfaceViewer, args);\n};\nGradientFunctionColorMap.parameters = {\n  docs: {\n    ...defaultParameters.docs,\n    description: {\n      story: "Example using gradient color mapping function."\n    }\n  }\n};\nexport const StepFunctionColorMap = () => {\n  const args = {\n    ...defaultArgs,\n    id: "nearest-color-map",\n    layers: [{\n      ...meshMapLayer,\n      colorMapFunction: nearestColorMap\n    }]\n  };\n  return /*#__PURE__*/React.createElement(SubsurfaceViewer, args);\n};\nStepFunctionColorMap.parameters = {\n  docs: {\n    ...defaultParameters.docs,\n    description: {\n      story: "Example using step color mapping function."\n    }\n  }\n};\nexport const DefaultColorScale = () => {\n  const args = {\n    ...defaultArgs,\n    id: "default-color-scale",\n    layers: [{\n      ...meshMapLayer\n    }]\n  };\n  return /*#__PURE__*/React.createElement(SubsurfaceViewer, args);\n};\nDefaultColorScale.parameters = {\n  docs: {\n    ...defaultParameters.docs,\n    description: {\n      story: "Default color scale."\n    }\n  }\n};\nexport const Readout = () => {\n  const [hoverInfo, hoverCallback] = useHoverInfo();\n  const args = React.useMemo(() => {\n    return {\n      ...defaultArgs,\n      id: "readout",\n      layers: [{\n        ...meshMapLayer\n      }],\n      coords: {\n        visible: false\n      },\n      onMouseEvent: hoverCallback\n    };\n  }, [hoverCallback]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SubsurfaceViewer, args), hoverInfo && /*#__PURE__*/React.createElement(InfoCard, {\n    pickInfos: hoverInfo\n  }));\n};\nReadout.parameters = {\n  docs: {\n    ...defaultParameters.docs,\n    description: {\n      story: "Readout example."\n    }\n  }\n};\nexport const BreakpointColorMap = args => {\n  const [breakpoint, setBreakpoint] = React.useState(0.5);\n  const colorMap = React.useCallback(value => {\n    return createColorMap(breakpoint)(value);\n  }, [breakpoint]);\n  const props = React.useMemo(() => {\n    return {\n      ...args,\n      bounds: [432205, 6475078, 437720, 6481113],\n      layers: [{\n        ...meshMapLayer,\n        colorMapFunction: colorMap\n      }],\n      legend: {\n        visible: false\n      }\n    };\n  }, [breakpoint]);\n  const handleChange = React.useCallback((_event, value) => {\n    setBreakpoint(value / 100);\n  }, []);\n  return /*#__PURE__*/React.createElement(Root, null, /*#__PURE__*/React.createElement("div", {\n    className: classes.main\n  }, /*#__PURE__*/React.createElement(SubsurfaceViewer, props), /*#__PURE__*/React.createElement("div", {\n    className: classes.legend\n  }, /*#__PURE__*/React.createElement(ContinuousLegend, {\n    min: meshMapLayer.propertyValueRange[0],\n    max: meshMapLayer.propertyValueRange[1]\n  }))), /*#__PURE__*/React.createElement(Slider, {\n    min: 0,\n    max: 100,\n    defaultValue: 50,\n    step: 1,\n    onChange: handleChange\n  }));\n};\nBreakpointColorMap.args = {\n  ...defaultArgs,\n  id: "breakpoint-color-map"\n};\nBreakpointColorMap.parameters = {\n  docs: {\n    ...defaultParameters.docs,\n    description: {\n      story: "Example using a color scale with a breakpoint."\n    }\n  }\n};\nexport const ColorMapRange = args => {\n  const [colorMapUpper, setColorMapUpper] = React.useState(41048);\n  const props = React.useMemo(() => {\n    return {\n      ...args,\n      bounds: [432205, 6475078, 437720, 6481113],\n      layers: [{\n        ...meshMapLayer,\n        colorMapName: "Seismic",\n        colorMapRange: [-3071, colorMapUpper],\n        colorMapClampColor: false\n      }],\n      legend: {\n        visible: true\n      }\n    };\n  }, [colorMapUpper]);\n  const handleChange = React.useCallback((_event, value) => {\n    setColorMapUpper(value);\n  }, []);\n  return /*#__PURE__*/React.createElement(Root, null, /*#__PURE__*/React.createElement("div", {\n    className: classes.main\n  }, /*#__PURE__*/React.createElement(SubsurfaceViewer, props)), /*#__PURE__*/React.createElement(Slider, {\n    min: 10000,\n    max: 41048,\n    defaultValue: 41048,\n    step: 1,\n    onChange: handleChange\n  }));\n};\nColorMapRange.args = {\n  ...defaultArgs,\n  id: "breakpoint-color-map"\n};\nColorMapRange.parameters = {\n  docs: {\n    ...defaultParameters.docs,\n    description: {\n      story: \'Example changin the colorcamp range ("ColorMapRange" property).\'\n    }\n  }\n};',locationsMap:{"map-layer-3-d":{startLoc:{col:26,line:63},endLoc:{col:1,line:65},startBody:{col:26,line:63},endBody:{col:1,line:65}},"gradient-function-color-map":{startLoc:{col:40,line:100},endLoc:{col:1,line:110},startBody:{col:40,line:100},endBody:{col:1,line:110}},"step-function-color-map":{startLoc:{col:36,line:119},endLoc:{col:1,line:129},startBody:{col:36,line:119},endBody:{col:1,line:129}},"default-color-scale":{startLoc:{col:33,line:138},endLoc:{col:1,line:147},startBody:{col:33,line:138},endBody:{col:1,line:147}},readout:{startLoc:{col:23,line:156},endLoc:{col:1,line:174},startBody:{col:23,line:156},endBody:{col:1,line:174}},"breakpoint-color-map":{startLoc:{col:34,line:183},endLoc:{col:1,line:218},startBody:{col:34,line:183},endBody:{col:1,line:218}},"color-map-range":{startLoc:{col:29,line:231},endLoc:{col:1,line:260},startBody:{col:29,line:231},endBody:{col:1,line:260}}}}},component:_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__.Z,title:"SubsurfaceViewer / Map 3D Delatin mesh Layer"};const meshMapLayer={"@@type":"Map3DLayer",id:"mesh-layer",bounds:[432205,6475078,437720,6481113],mesh:"hugin_depth_25_m_normalized_margin.png",meshValueRange:[2782,3513],propertyTexture:"kh_netmap_25_m_normalized_margin.png",propertyValueRange:[-3071,41048],contours:[0,50],isContoursDepth:!0},defaultArgs={bounds:[432205,6475078,437720,6481113]},defaultParameters_docs={inlineStories:!1,iframeHeight:500},MapLayer3d=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__.Z,args);function gradientColorMap(x){return[255-255*x,255-100*x,255*x]}function nearestColorMap(x){return x>.5?[100,255,255]:x>.1?[255,100,255]:[255,255,100]}MapLayer3d.args={id:"map",layers:[{"@@type":"AxesLayer",id:"axes-layer",bounds:[432205,6475078,0,437720,6481113,3500]},meshMapLayer,{"@@type":"NorthArrow3DLayer",id:"north-arrow-layer"}],bounds:[432205,6475078,437720,6481113],views:{layout:[1,1],viewports:[{id:"view_1",show3D:!0}]}},MapLayer3d.parameters={docs:{...defaultParameters_docs,description:{story:"3d example."}}};const GradientFunctionColorMap=()=>{const args={...defaultArgs,id:"gradient-color-map",layers:[{...meshMapLayer,colorMapFunction:gradientColorMap}]};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__.Z,args)};GradientFunctionColorMap.parameters={docs:{...defaultParameters_docs,description:{story:"Example using gradient color mapping function."}}};const StepFunctionColorMap=()=>{const args={...defaultArgs,id:"nearest-color-map",layers:[{...meshMapLayer,colorMapFunction:nearestColorMap}]};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__.Z,args)};StepFunctionColorMap.parameters={docs:{...defaultParameters_docs,description:{story:"Example using step color mapping function."}}};const DefaultColorScale=()=>{const args={...defaultArgs,id:"default-color-scale",layers:[{...meshMapLayer}]};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__.Z,args)};DefaultColorScale.parameters={docs:{...defaultParameters_docs,description:{story:"Default color scale."}}};const Readout=()=>{const[hoverInfo,hoverCallback]=(0,_components_Map__WEBPACK_IMPORTED_MODULE_1__.oO)(),args=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>({...defaultArgs,id:"readout",layers:[{...meshMapLayer}],coords:{visible:!1},onMouseEvent:hoverCallback})),[hoverCallback]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__.Z,args),hoverInfo&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_InfoCard__WEBPACK_IMPORTED_MODULE_3__.Z,{pickInfos:hoverInfo}))};Readout.parameters={docs:{...defaultParameters_docs,description:{story:"Readout example."}}};const BreakpointColorMap=args=>{const[breakpoint,setBreakpoint]=react__WEBPACK_IMPORTED_MODULE_0__.useState(.5),colorMap=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((value=>function createColorMap(breakpoint){return value=>function breakpointColorMap(x,breakpoint){return x>breakpoint?[0,50,200]:[255,255,0]}(value,breakpoint)}(breakpoint)(value)),[breakpoint]),props=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>({...args,bounds:[432205,6475078,437720,6481113],layers:[{...meshMapLayer,colorMapFunction:colorMap}],legend:{visible:!1}})),[breakpoint]),handleChange=react__WEBPACK_IMPORTED_MODULE_0__.useCallback(((_event,value)=>{setBreakpoint(value/100)}),[]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Root,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:classes.main},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__.Z,props),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:classes.legend},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_4__.sG,{min:meshMapLayer.propertyValueRange[0],max:meshMapLayer.propertyValueRange[1]}))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__.ZP,{min:0,max:100,defaultValue:50,step:1,onChange:handleChange}))};BreakpointColorMap.args={...defaultArgs,id:"breakpoint-color-map"},BreakpointColorMap.parameters={docs:{...defaultParameters_docs,description:{story:"Example using a color scale with a breakpoint."}}};const ColorMapRange=args=>{const[colorMapUpper,setColorMapUpper]=react__WEBPACK_IMPORTED_MODULE_0__.useState(41048),props=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>({...args,bounds:[432205,6475078,437720,6481113],layers:[{...meshMapLayer,colorMapName:"Seismic",colorMapRange:[-3071,colorMapUpper],colorMapClampColor:!1}],legend:{visible:!0}})),[colorMapUpper]),handleChange=react__WEBPACK_IMPORTED_MODULE_0__.useCallback(((_event,value)=>{setColorMapUpper(value)}),[]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Root,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:classes.main},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_2__.Z,props)),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__.ZP,{min:1e4,max:41048,defaultValue:41048,step:1,onChange:handleChange}))};ColorMapRange.args={...defaultArgs,id:"breakpoint-color-map"},ColorMapRange.parameters={docs:{...defaultParameters_docs,description:{story:'Example changin the colorcamp range ("ColorMapRange" property).'}}},MapLayer3d.parameters={...MapLayer3d.parameters,docs:{...MapLayer3d.parameters?.docs,source:{originalSource:"args => {\n  return <SubsurfaceViewer {...args} />;\n}",...MapLayer3d.parameters?.docs?.source}}},GradientFunctionColorMap.parameters={...GradientFunctionColorMap.parameters,docs:{...GradientFunctionColorMap.parameters?.docs,source:{originalSource:'() => {\n  const args = {\n    ...defaultArgs,\n    id: "gradient-color-map",\n    layers: [{\n      ...meshMapLayer,\n      colorMapFunction: gradientColorMap\n    }]\n  };\n  return <SubsurfaceViewer {...args} />;\n}',...GradientFunctionColorMap.parameters?.docs?.source}}},StepFunctionColorMap.parameters={...StepFunctionColorMap.parameters,docs:{...StepFunctionColorMap.parameters?.docs,source:{originalSource:'() => {\n  const args = {\n    ...defaultArgs,\n    id: "nearest-color-map",\n    layers: [{\n      ...meshMapLayer,\n      colorMapFunction: nearestColorMap\n    }]\n  };\n  return <SubsurfaceViewer {...args} />;\n}',...StepFunctionColorMap.parameters?.docs?.source}}},DefaultColorScale.parameters={...DefaultColorScale.parameters,docs:{...DefaultColorScale.parameters?.docs,source:{originalSource:'() => {\n  const args = {\n    ...defaultArgs,\n    id: "default-color-scale",\n    layers: [{\n      ...meshMapLayer\n    }]\n  };\n  return <SubsurfaceViewer {...args} />;\n}',...DefaultColorScale.parameters?.docs?.source}}},Readout.parameters={...Readout.parameters,docs:{...Readout.parameters?.docs,source:{originalSource:'() => {\n  const [hoverInfo, hoverCallback] = useHoverInfo();\n  const args = React.useMemo(() => {\n    return {\n      ...defaultArgs,\n      id: "readout",\n      layers: [{\n        ...meshMapLayer\n      }],\n      coords: {\n        visible: false\n      },\n      onMouseEvent: hoverCallback\n    };\n  }, [hoverCallback]);\n  return <>\n            <SubsurfaceViewer {...args} />\n            {hoverInfo && <InfoCard pickInfos={hoverInfo} />}\n        </>;\n}',...Readout.parameters?.docs?.source}}},BreakpointColorMap.parameters={...BreakpointColorMap.parameters,docs:{...BreakpointColorMap.parameters?.docs,source:{originalSource:"args => {\n  const [breakpoint, setBreakpoint] = React.useState<number>(0.5);\n  const colorMap = React.useCallback((value: number) => {\n    return createColorMap(breakpoint)(value);\n  }, [breakpoint]);\n  const props = React.useMemo(() => {\n    return {\n      ...args,\n      bounds: ([432205, 6475078, 437720, 6481113] as NumberQuad),\n      layers: [{\n        ...meshMapLayer,\n        colorMapFunction: colorMap\n      }],\n      legend: {\n        visible: false\n      }\n    };\n  }, [breakpoint]);\n  const handleChange = React.useCallback((_event: unknown, value: number | number[]) => {\n    setBreakpoint((value as number) / 100);\n  }, []);\n  return <Root>\n            <div className={classes.main}>\n                <SubsurfaceViewer {...props} />\n                <div className={classes.legend}>\n                    <ContinuousLegend min={meshMapLayer.propertyValueRange[0]} max={meshMapLayer.propertyValueRange[1]} />\n                </div>\n            </div>\n            <Slider min={0} max={100} defaultValue={50} step={1} onChange={handleChange} />\n        </Root>;\n}",...BreakpointColorMap.parameters?.docs?.source}}},ColorMapRange.parameters={...ColorMapRange.parameters,docs:{...ColorMapRange.parameters?.docs,source:{originalSource:'args => {\n  const [colorMapUpper, setColorMapUpper] = React.useState<number>(41048);\n  const props = React.useMemo(() => {\n    return {\n      ...args,\n      bounds: ([432205, 6475078, 437720, 6481113] as NumberQuad),\n      layers: [{\n        ...meshMapLayer,\n        colorMapName: "Seismic",\n        colorMapRange: [-3071, colorMapUpper],\n        colorMapClampColor: false\n      }],\n      legend: {\n        visible: true\n      }\n    };\n  }, [colorMapUpper]);\n  const handleChange = React.useCallback((_event: Event, value: number | number[]) => {\n    setColorMapUpper((value as number));\n  }, []);\n  return <Root>\n            <div className={classes.main}>\n                <SubsurfaceViewer {...props} />\n            </div>\n            <Slider min={10000} max={41048} defaultValue={41048} step={1} onChange={handleChange} />\n        </Root>;\n}',...ColorMapRange.parameters?.docs?.source}}};const __namedExportsOrder=["MapLayer3d","GradientFunctionColorMap","StepFunctionColorMap","DefaultColorScale","Readout","BreakpointColorMap","ColorMapRange"]}}]);