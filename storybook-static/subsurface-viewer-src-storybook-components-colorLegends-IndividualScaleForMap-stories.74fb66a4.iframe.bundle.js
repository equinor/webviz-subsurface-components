"use strict";(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[1670],{"./packages/subsurface-viewer/src/storybook/components/colorLegends/IndividualScaleForMap.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{IndividualScaleForMap:function(){return IndividualScaleForMap},__namedExportsOrder:function(){return __namedExportsOrder}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_deck_gl_core_typed__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@deck.gl/core/dist/esm/views/view.js"),_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@emerson-eps/color-tables/dist/index.js"),_example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../example-data/deckgl-map.json"),_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/subsurface-viewer/src/SubsurfaceViewer.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const stories={parameters:{storySource:{source:'function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from "react";\nimport { View } from "@deck.gl/core/typed";\nimport { ColorLegend } from "@emerson-eps/color-tables";\nimport exampleData from "../../../../../../../example-data/deckgl-map.json";\nimport SubsurfaceViewer from "../../../SubsurfaceViewer";\nconst stories = {\n  component: SubsurfaceViewer,\n  title: "SubsurfaceViewer/Components/ColorLegends"\n};\nexport default stories;\n\n// Template for when edited data needs to be captured.\nconst EditDataTemplate = args => {\n  const [editedData, setEditedData] = React.useState(args.editedData);\n  React.useEffect(() => {\n    setEditedData(args.editedData);\n  }, [args.editedData]);\n  return /*#__PURE__*/React.createElement(SubsurfaceViewer, _extends({}, args, {\n    editedData: editedData,\n    setProps: updatedProps => {\n      setEditedData(updatedProps.editedData);\n    }\n  }), /*#__PURE__*/React.createElement(React.Fragment, null,\n  /*#__PURE__*/\n  \n  /* @ts-expect-error */\n  React.createElement(View, {\n    id: "view_1"\n  }, /*#__PURE__*/React.createElement(ColorLegend, {\n    min: 3000,\n    max: 3100,\n    horizontal: true,\n    dataObjectName: "Rainbow",\n    colorName: "Rainbow"\n  })),\n  /*#__PURE__*/\n  \n  /* @ts-expect-error */\n  React.createElement(View, {\n    id: "view_2"\n  }, /*#__PURE__*/React.createElement(ColorLegend, {\n    min: 3000,\n    max: 3100,\n    horizontal: true,\n    dataObjectName: "Porosity",\n    colorName: "Porosity"\n  })),\n  /*#__PURE__*/\n  \n  /* @ts-expect-error */\n  React.createElement(View, {\n    id: "view_3"\n  }, /*#__PURE__*/React.createElement(ColorLegend, {\n    min: 3000,\n    max: 3100,\n    horizontal: true,\n    dataObjectName: "Permeability",\n    colorName: "Permeability"\n  })),\n  /*#__PURE__*/\n  \n  /* @ts-expect-error */\n  React.createElement(View, {\n    id: "view_4"\n  }, /*#__PURE__*/React.createElement(ColorLegend, {\n    min: 3000,\n    max: 3100,\n    horizontal: true,\n    dataObjectName: "Seismic",\n    colorName: "Seismic"\n  }))));\n};\n\n// 4 maps with individual color scales for each map\nexport const IndividualScaleForMap = {\n  name: "Individual ContinuousLegend",\n  args: {\n    ...exampleData[0],\n    layers: [{\n      ...exampleData[0].layers[0],\n      id: "colormap-layer"\n    }, {\n      ...exampleData[0].layers[0],\n      colorMapRange: [3000, 3100],\n      valueRange: [3000, 3100],\n      id: "colormap-2-layer",\n      colorMapName: "Porosity"\n    }, {\n      ...exampleData[0].layers[0],\n      colorMapRange: [3000, 3100],\n      valueRange: [3000, 3100],\n      id: "colormap-3-layer",\n      colorMapName: "Permeability"\n    }, {\n      ...exampleData[0].layers[0],\n      colorMapRange: [3000, 3100],\n      valueRange: [3000, 3100],\n      id: "colormap-4-layer",\n      colorMapName: "Seismic"\n    }],\n    views: {\n      layout: [2, 2],\n      showLabel: true,\n      viewports: [{\n        id: "view_1",\n        name: "Colormap 1 layer",\n        show3D: false,\n        layerIds: ["colormap-layer"]\n      }, {\n        id: "view_2",\n        name: "Colormap 2 layer",\n        show3D: false,\n        layerIds: ["colormap-2-layer"]\n      }, {\n        id: "view_3",\n        name: "Colormap 3 layer",\n        show3D: false,\n        layerIds: ["colormap-3-layer"]\n      }, {\n        id: "view_4",\n        name: "Colormap 4 layer",\n        show3D: false,\n        layerIds: ["colormap-4-layer"]\n      }]\n    }\n    \n  },\n  parameters: {\n    docs: {\n      description: {\n        story: "Four maps with individual color scales for each map"\n      },\n      inlineStories: false,\n      iframeHeight: 500\n    }\n  },\n  render: args => /*#__PURE__*/React.createElement(EditDataTemplate, args)\n};',locationsMap:{"individual-scale-for-map":{startLoc:{col:37,line:76},endLoc:{col:1,line:139},startBody:{col:37,line:76},endBody:{col:1,line:139}}}}},component:_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_3__.Z,title:"SubsurfaceViewer/Components/ColorLegends"};__webpack_exports__.default=stories;const EditDataTemplate=args=>{const[editedData,setEditedData]=react__WEBPACK_IMPORTED_MODULE_0__.useState(args.editedData);return react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{setEditedData(args.editedData)}),[args.editedData]),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_3__.Z,_extends({},args,{editedData:editedData,setProps:updatedProps=>{setEditedData(updatedProps.editedData)}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_deck_gl_core_typed__WEBPACK_IMPORTED_MODULE_4__.Z,{id:"view_1"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_1__.n6,{min:3e3,max:3100,horizontal:!0,dataObjectName:"Rainbow",colorName:"Rainbow"})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_deck_gl_core_typed__WEBPACK_IMPORTED_MODULE_4__.Z,{id:"view_2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_1__.n6,{min:3e3,max:3100,horizontal:!0,dataObjectName:"Porosity",colorName:"Porosity"})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_deck_gl_core_typed__WEBPACK_IMPORTED_MODULE_4__.Z,{id:"view_3"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_1__.n6,{min:3e3,max:3100,horizontal:!0,dataObjectName:"Permeability",colorName:"Permeability"})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_deck_gl_core_typed__WEBPACK_IMPORTED_MODULE_4__.Z,{id:"view_4"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_1__.n6,{min:3e3,max:3100,horizontal:!0,dataObjectName:"Seismic",colorName:"Seismic"}))))},IndividualScaleForMap={name:"Individual ContinuousLegend",args:{..._example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0],layers:[{..._example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0].layers[0],id:"colormap-layer"},{..._example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0].layers[0],colorMapRange:[3e3,3100],valueRange:[3e3,3100],id:"colormap-2-layer",colorMapName:"Porosity"},{..._example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0].layers[0],colorMapRange:[3e3,3100],valueRange:[3e3,3100],id:"colormap-3-layer",colorMapName:"Permeability"},{..._example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0].layers[0],colorMapRange:[3e3,3100],valueRange:[3e3,3100],id:"colormap-4-layer",colorMapName:"Seismic"}],views:{layout:[2,2],showLabel:!0,viewports:[{id:"view_1",name:"Colormap 1 layer",show3D:!1,layerIds:["colormap-layer"]},{id:"view_2",name:"Colormap 2 layer",show3D:!1,layerIds:["colormap-2-layer"]},{id:"view_3",name:"Colormap 3 layer",show3D:!1,layerIds:["colormap-3-layer"]},{id:"view_4",name:"Colormap 4 layer",show3D:!1,layerIds:["colormap-4-layer"]}]}},parameters:{docs:{description:{story:"Four maps with individual color scales for each map"},inlineStories:!1,iframeHeight:500}},render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(EditDataTemplate,args)};IndividualScaleForMap.parameters={...IndividualScaleForMap.parameters,docs:{...IndividualScaleForMap.parameters?.docs,source:{originalSource:'{\n  name: "Individual ContinuousLegend",\n  args: ({\n    ...exampleData[0],\n    layers: [{\n      ...exampleData[0].layers[0],\n      id: "colormap-layer"\n    }, {\n      ...exampleData[0].layers[0],\n      colorMapRange: [3000, 3100],\n      valueRange: [3000, 3100],\n      id: "colormap-2-layer",\n      colorMapName: "Porosity"\n    }, {\n      ...exampleData[0].layers[0],\n      colorMapRange: [3000, 3100],\n      valueRange: [3000, 3100],\n      id: "colormap-3-layer",\n      colorMapName: "Permeability"\n    }, {\n      ...exampleData[0].layers[0],\n      colorMapRange: [3000, 3100],\n      valueRange: [3000, 3100],\n      id: "colormap-4-layer",\n      colorMapName: "Seismic"\n    }],\n    views: {\n      layout: [2, 2],\n      showLabel: true,\n      viewports: [{\n        id: "view_1",\n        name: "Colormap 1 layer",\n        show3D: false,\n        layerIds: ["colormap-layer"]\n      }, {\n        id: "view_2",\n        name: "Colormap 2 layer",\n        show3D: false,\n        layerIds: ["colormap-2-layer"]\n      }, {\n        id: "view_3",\n        name: "Colormap 3 layer",\n        show3D: false,\n        layerIds: ["colormap-3-layer"]\n      }, {\n        id: "view_4",\n        name: "Colormap 4 layer",\n        show3D: false,\n        layerIds: ["colormap-4-layer"]\n      }]\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } as any),\n  parameters: {\n    docs: {\n      description: {\n        story: "Four maps with individual color scales for each map"\n      },\n      inlineStories: false,\n      iframeHeight: 500\n    }\n  },\n  render: args => <EditDataTemplate {...args} />\n}',...IndividualScaleForMap.parameters?.docs?.source}}};const __namedExportsOrder=["IndividualScaleForMap"]},"../example-data/deckgl-map.json":function(module){module.exports=JSON.parse('[{"id":"DeckGL-Map","coords":{"visible":true,"multiPicking":true,"pickDepth":10},"scale":{"visible":true,"incrementValue":100,"widthPerUnit":100,"cssStyle":{"left":10,"top":10}},"coordinateUnit":"m","resources":{"propertyMap":"propertyMap.png","depthMap":"propertyMap.png","wellsData":"volve_wells.json","logData":"volve_logs.json"},"bounds":[432205,6475078,437720,6481113],"layers":[{"@@type":"ColormapLayer","image":"@@#resources.propertyMap","rotDeg":0,"bounds":[432205,6475078,437720,6481113],"colorMapName":"Rainbow","valueRange":[2782,3513],"colorMapRange":[2782,3513]},{"@@type":"Hillshading2DLayer","bounds":[432205,6475078,437720,6481113],"valueRange":[2782,3513],"rotDeg":0,"image":"@@#resources.depthMap"},{"@@type":"Map3DLayer","bounds":[432205,6475078,437720,6481113],"meshMaxError":5,"mesh":"hugin_depth_25_m_normalized_margin.png","meshValueRange":[2782,3513],"propertyTexture":"kh_netmap_25_m_normalized_margin.png","propertyValueRange":[2782,3513],"rotDeg":0,"contours":[0,50],"isContoursDepth":true,"colorMapName":"Physics","colorMapRange":[2782,3513],"visible":false},{"@@type":"WellsLayer","data":"@@#resources.wellsData","logData":"@@#resources.logData","logrunName":"BLOCKING","logName":"ZONELOG","logColor":"Stratigraphy"},{"@@type":"FaultPolygonsLayer","data":"fault_polygons.geojson"},{"@@type":"PieChartLayer","data":"piechart.json"},{"@@type":"NorthArrow3DLayer","visible":true},{"@@type":"DrawingLayer"}],"editedData":{},"views":{"layout":[1,1],"showLabel":false,"viewports":[{"id":"view_1","show3D":false,"layerIds":[]}]}}]')}}]);