"use strict";(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[9141],{"./packages/subsurface-viewer/src/layers/grid3d/grid3dLayer.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Simgrid:function(){return Simgrid},Simgrid2x:function(){return Simgrid2x},Simgrid4x:function(){return Simgrid4x},Simgrid8xIJonly:function(){return Simgrid8xIJonly},SimgridArrayInput:function(){return SimgridArrayInput},__namedExportsOrder:function(){return __namedExportsOrder}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/subsurface-viewer/src/SubsurfaceViewer.tsx");__webpack_exports__.default={parameters:{storySource:{source:'import React from "react";\nimport SubsurfaceViewer from "../../SubsurfaceViewer";\nexport default {\n  component: SubsurfaceViewer,\n  title: "SubsurfaceViewer/Experimental Grid3D"\n};\nconst Template = args => /*#__PURE__*/React.createElement(SubsurfaceViewer, args);\nconst defaultProps = {\n  bounds: [456150, 5925800, 467400, 5939500],\n  views: {\n    layout: [1, 1],\n    viewports: [{\n      id: "view_1",\n      show3D: true\n    }]\n  }\n};\n\n// Grid 3d story\nconst grid3dLayer = {\n  "@@type": "Grid3DLayer",\n  id: "Grid3DLayer",\n  material: true,\n  colorMapName: "Rainbow",\n  ZIncreasingDownwards: false\n};\nconst axes = {\n  "@@type": "AxesLayer",\n  id: "axes-layer2",\n  bounds: [453150, 5925800, 0, 469400, 5939500, 2000]\n};\nconst parameters = {\n  docs: {\n    description: {\n      story: "Simgrid."\n    },\n    inlineStories: false,\n    iframeHeight: 500\n  }\n};\nexport const Simgrid = Template.bind({});\nSimgrid.args = {\n  ...defaultProps,\n  id: "grid-3d",\n  layers: [axes, {\n    ...grid3dLayer,\n    pointsData: "vtk-grid/Simgrid_points.json",\n    polysData: "vtk-grid/Simgrid_polys.json",\n    propertiesData: "vtk-grid/Simgrid_scalar.json"\n  }]\n};\nSimgrid.parameters = parameters;\nexport const SimgridArrayInput = Template.bind({});\nSimgridArrayInput.args = {\n  ...defaultProps,\n  id: "grid-3darray",\n  layers: [axes, {\n    ...grid3dLayer,\n    pointsData: [456063, 5935991, -1729, 456063, 5935991, -1731, 456138, 5935861.518843642, -1727.820068359375, 456138.5, 5935861.5, -1726.3526611328125, 456193.90625, 5936066, -1730.7259521484375, 456193.8825946293, 5936065.981075703, -1732.200439453125, 456268.9375, 5935936.5, -1726.6915283203125],\n    polysData: [4, 0, 1, 2, 3, 4, 0, 4, 5, 1, 4, 0, 3, 6, 4],\n    propertiesData: [0.2, 0.6, 0.8]\n  }]\n};\nSimgridArrayInput.parameters = parameters;\nexport const Simgrid2x = Template.bind({});\nSimgrid2x.args = {\n  ...defaultProps,\n  id: "grid-3d",\n  layers: [axes, {\n    ...grid3dLayer,\n    pointsData: "vtk-grid/Simgrid2x_points.json",\n    polysData: "vtk-grid/Simgrid2x_polys.json",\n    propertiesData: "vtk-grid/Simgrid2x_scalar.json"\n  }]\n};\nSimgrid2x.parameters = parameters;\nexport const Simgrid4x = Template.bind({});\nSimgrid4x.args = {\n  ...defaultProps,\n  id: "grid-3d",\n  layers: [axes, {\n    ...grid3dLayer,\n    pointsData: "vtk-grid/Simgrid4x_points.json",\n    polysData: "vtk-grid/Simgrid4x_polys.json",\n    propertiesData: "vtk-grid/Simgrid4x_scalar.json"\n  }]\n};\nSimgrid4x.parameters = parameters;\nexport const Simgrid8xIJonly = Template.bind({});\nSimgrid8xIJonly.args = {\n  ...defaultProps,\n  id: "grid-3d",\n  layers: [axes, {\n    ...grid3dLayer,\n    pointsData: "vtk-grid/Simgrid8xIJonly_points.json",\n    polysData: "vtk-grid/Simgrid8xIJonly_polys.json",\n    propertiesData: "vtk-grid/Simgrid8xIJonly_scalar.json"\n  }]\n};\nSimgrid8xIJonly.parameters = parameters;\n\n// // Intersection story.\n// const intersection_axes = {\n//     "@@type": "AxesLayer",\n//     id: "axes-layer2",\n//     bounds: [463256, 5930542.5, -9060, 464465, 5932768, -7999],\n// };\n\n// const intersection = {\n//     "@@type": "Grid3DLayer",\n//     id: "Grid3DLayer",\n//     pointsData: "vtk-grid/intersection_points.json",\n//     polysData: "vtk-grid/intersection_polys.json",\n//     propertiesData: "vtk-grid/intersection_scalar.json",\n//     material: true,\n//     colorMapName: "Rainbow",\n//     scaleZ: 5,\n// };\n\n// export const Intersection = Template.bind({});\n// Intersection.args = {\n//     ...defaultProps,\n//     id: "grid-3d",\n//     layers: [intersection_axes, intersection],\n// };\n\n// Intersection.parameters = {\n//     docs: {\n//         description: {\n//             story: "3D grid intersection geometry using vtk polydata format.",\n//         },\n//         inlineStories: false,\n//         iframeHeight: 500,\n//     },\n// };\nSimgrid.parameters = {\n  ...Simgrid.parameters,\n  docs: {\n    ...Simgrid.parameters?.docs,\n    source: {\n      originalSource: "args => <SubsurfaceViewer {...args} />",\n      ...Simgrid.parameters?.docs?.source\n    }\n  }\n};\nSimgridArrayInput.parameters = {\n  ...SimgridArrayInput.parameters,\n  docs: {\n    ...SimgridArrayInput.parameters?.docs,\n    source: {\n      originalSource: "args => <SubsurfaceViewer {...args} />",\n      ...SimgridArrayInput.parameters?.docs?.source\n    }\n  }\n};\nSimgrid2x.parameters = {\n  ...Simgrid2x.parameters,\n  docs: {\n    ...Simgrid2x.parameters?.docs,\n    source: {\n      originalSource: "args => <SubsurfaceViewer {...args} />",\n      ...Simgrid2x.parameters?.docs?.source\n    }\n  }\n};\nSimgrid4x.parameters = {\n  ...Simgrid4x.parameters,\n  docs: {\n    ...Simgrid4x.parameters?.docs,\n    source: {\n      originalSource: "args => <SubsurfaceViewer {...args} />",\n      ...Simgrid4x.parameters?.docs?.source\n    }\n  }\n};\nSimgrid8xIJonly.parameters = {\n  ...Simgrid8xIJonly.parameters,\n  docs: {\n    ...Simgrid8xIJonly.parameters?.docs,\n    source: {\n      originalSource: "args => <SubsurfaceViewer {...args} />",\n      ...Simgrid8xIJonly.parameters?.docs?.source\n    }\n  }\n};',locationsMap:{simgrid:{startLoc:{col:17,line:7},endLoc:{col:81,line:7},startBody:{col:17,line:7},endBody:{col:81,line:7}},"simgrid-array-input":{startLoc:{col:17,line:7},endLoc:{col:81,line:7},startBody:{col:17,line:7},endBody:{col:81,line:7}},"simgrid-2-x":{startLoc:{col:17,line:7},endLoc:{col:81,line:7},startBody:{col:17,line:7},endBody:{col:81,line:7}},"simgrid-4-x":{startLoc:{col:17,line:7},endLoc:{col:81,line:7},startBody:{col:17,line:7},endBody:{col:81,line:7}},"simgrid-8-x-i-jonly":{startLoc:{col:17,line:7},endLoc:{col:81,line:7},startBody:{col:17,line:7},endBody:{col:81,line:7}}}}},component:_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,title:"SubsurfaceViewer/Experimental Grid3D"};const Template=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,args),defaultProps={bounds:[456150,5925800,467400,5939500],views:{layout:[1,1],viewports:[{id:"view_1",show3D:!0}]}},grid3dLayer={"@@type":"Grid3DLayer",id:"Grid3DLayer",material:!0,colorMapName:"Rainbow",ZIncreasingDownwards:!1},axes={"@@type":"AxesLayer",id:"axes-layer2",bounds:[453150,5925800,0,469400,5939500,2e3]},parameters={docs:{description:{story:"Simgrid."},inlineStories:!1,iframeHeight:500}},Simgrid=Template.bind({});Simgrid.args={...defaultProps,id:"grid-3d",layers:[axes,{...grid3dLayer,pointsData:"vtk-grid/Simgrid_points.json",polysData:"vtk-grid/Simgrid_polys.json",propertiesData:"vtk-grid/Simgrid_scalar.json"}]},Simgrid.parameters=parameters;const SimgridArrayInput=Template.bind({});SimgridArrayInput.args={...defaultProps,id:"grid-3darray",layers:[axes,{...grid3dLayer,pointsData:[456063,5935991,-1729,456063,5935991,-1731,456138,5935861.518843642,-1727.820068359375,456138.5,5935861.5,-1726.3526611328125,456193.90625,5936066,-1730.7259521484375,456193.8825946293,5936065.981075703,-1732.200439453125,456268.9375,5935936.5,-1726.6915283203125],polysData:[4,0,1,2,3,4,0,4,5,1,4,0,3,6,4],propertiesData:[.2,.6,.8]}]},SimgridArrayInput.parameters=parameters;const Simgrid2x=Template.bind({});Simgrid2x.args={...defaultProps,id:"grid-3d",layers:[axes,{...grid3dLayer,pointsData:"vtk-grid/Simgrid2x_points.json",polysData:"vtk-grid/Simgrid2x_polys.json",propertiesData:"vtk-grid/Simgrid2x_scalar.json"}]},Simgrid2x.parameters=parameters;const Simgrid4x=Template.bind({});Simgrid4x.args={...defaultProps,id:"grid-3d",layers:[axes,{...grid3dLayer,pointsData:"vtk-grid/Simgrid4x_points.json",polysData:"vtk-grid/Simgrid4x_polys.json",propertiesData:"vtk-grid/Simgrid4x_scalar.json"}]},Simgrid4x.parameters=parameters;const Simgrid8xIJonly=Template.bind({});Simgrid8xIJonly.args={...defaultProps,id:"grid-3d",layers:[axes,{...grid3dLayer,pointsData:"vtk-grid/Simgrid8xIJonly_points.json",polysData:"vtk-grid/Simgrid8xIJonly_polys.json",propertiesData:"vtk-grid/Simgrid8xIJonly_scalar.json"}]},Simgrid8xIJonly.parameters=parameters,Simgrid.parameters={...Simgrid.parameters,docs:{...Simgrid.parameters?.docs,source:{originalSource:"args => <SubsurfaceViewer {...args} />",...Simgrid.parameters?.docs?.source}}},SimgridArrayInput.parameters={...SimgridArrayInput.parameters,docs:{...SimgridArrayInput.parameters?.docs,source:{originalSource:"args => <SubsurfaceViewer {...args} />",...SimgridArrayInput.parameters?.docs?.source}}},Simgrid2x.parameters={...Simgrid2x.parameters,docs:{...Simgrid2x.parameters?.docs,source:{originalSource:"args => <SubsurfaceViewer {...args} />",...Simgrid2x.parameters?.docs?.source}}},Simgrid4x.parameters={...Simgrid4x.parameters,docs:{...Simgrid4x.parameters?.docs,source:{originalSource:"args => <SubsurfaceViewer {...args} />",...Simgrid4x.parameters?.docs?.source}}},Simgrid8xIJonly.parameters={...Simgrid8xIJonly.parameters,docs:{...Simgrid8xIJonly.parameters?.docs,source:{originalSource:"args => <SubsurfaceViewer {...args} />",...Simgrid8xIJonly.parameters?.docs?.source}}};const __namedExportsOrder=["Simgrid","SimgridArrayInput","Simgrid2x","Simgrid4x","Simgrid8xIJonly"]}}]);