"use strict";(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[1308],{"./packages/subsurface-viewer/src/storybook/sharedSettings.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{BX:function(){return EditedDataTemplate},D$:function(){return northArrowLayer},DW:function(){return customLayerWithPolygonDataProps},Dh:function(){return hillshadingLayer},HV:function(){return mainStyle},Jl:function(){return hugin2DBounds},M1:function(){return customLayerWithPolylineData},M8:function(){return volveWellsResources},Ng:function(){return customLayerWithTextData},On:function(){return volveWellsWithLogsLayer},Pl:function(){return default3DViews},QH:function(){return huginAxes3DLayer},R4:function(){return defaultStoryParameters},Rd:function(){return customLayerWithPolygonData},Sh:function(){return classes},Wj:function(){return colormapLayer},as:function(){return hugin25mDepthMapLayer},cs:function(){return hugin5mKhNetmapMapLayer},e1:function(){return hugin25mKhNetmapMapLayerPng},ex:function(){return volveWellsLayer},fC:function(){return Root},iH:function(){return redAxes2DLayer},vj:function(){return subsufaceProps},vz:function(){return hugin25mKhNetmapMapLayer},y8:function(){return volveWellsFromResourcesLayer},yP:function(){return hugin3DBounds},z:function(){return volveWellsBounds},zs:function(){return default2DViews}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/subsurface-viewer/src/SubsurfaceViewer.tsx"),_example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../example-data/deckgl-map.json");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const defaultStoryParameters={docs:{inlineStories:!1,iframeHeight:500}},classes={main:"default-main"},mainStyle={[`& .${classes.main}`]:{width:750,height:500,top:"50%",left:"50%",transform:"translate(-50%, -50%)",border:"1px solid black",background:"azure",position:"absolute"}},Root=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_3__.ZP)("div")(mainStyle),subsufaceProps=_example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0],colormapLayer={..._example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0].layers[0],id:"colormap-layer"},hillshadingLayer={..._example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0].layers[1],id:"hillshading-layer"},redAxes2DLayer={"@@type":"Axes2DLayer",id:"axes-layer",marginH:80,marginV:30,isLeftRuler:!0,isRightRuler:!1,isBottomRuler:!0,isTopRuler:!1,backgroundColor:[155,0,0,255]},hugin2DOrigin=[432150,6475800],hugin2DBounds=[432150,6475800,439400,6481500],hugin3DBounds=[432150,6475800,-2e3,439400,6481500,-3500],huginAxes3DLayer={"@@type":"AxesLayer",id:"axes-layer2",bounds:[432150,6475800,2e3,439400,6481500,3500]},northArrowLayer={"@@type":"NorthArrow3DLayer",id:"north-arrow-layer"},volveWellsResources={resources:{wellsData:"./volve_wells.json"}},volveWellsFromResourcesLayer={"@@type":"WellsLayer",id:"volve-wells",data:"@@#resources.wellsData",ZIncreasingDownwards:!1},volveWellsLayer={"@@type":"WellsLayer",id:"volve-wells",data:"./volve_wells.json",ZIncreasingDownwards:!1},volveWellsBounds=[432150,6475800,439400,6481500],volveWellsWithLogsLayer={"@@type":"WellsLayer",id:"volve-wells-with-logs",data:"./volve_wells.json",logData:"./volve_logs.json",logrunName:"BLOCKING",logName:"ZONELOG",logColor:"Stratigraphy",ZIncreasingDownwards:!1},hugin25mDepthMapLayer={"@@type":"MapLayer",id:"hugin_depth",meshData:"hugin_depth_25_m.float32",frame:{origin:hugin2DOrigin,count:[291,229],increment:[25,25],rotDeg:0},propertiesData:"hugin_depth_25_m.float32",contours:[0,100],isContoursDepth:!0,gridLines:!1,smoothShading:!0,material:!0},hugin25mKhNetmapMapLayer={...hugin25mDepthMapLayer,id:"hugin_kh_netmap",propertiesData:"kh_netmap_25_m.float32",colorMapName:"Physics"},hugin25mKhNetmapMapLayerPng={...hugin25mDepthMapLayer,meshData:"hugin_depth_25_m.png",propertiesData:"kh_netmap_25_m.png",colorMapName:"Physics"},hugin5mKhNetmapMapLayer={"@@type":"MapLayer",id:"mesh-layer",meshUrl:"hugin_depth_5_m.float32",frame:{origin:hugin2DOrigin,count:[1451,1141],increment:[5,5],rotDeg:0},propertiesUrl:"kh_netmap_5_m.float32",contours:[0,100],colorMapName:"Physics"},default2DViews={layout:[1,1],viewports:[{id:"view_1",show3D:!1}]},default3DViews={layout:[1,1],viewports:[{id:"view_1",show3D:!0}]},customLayerWithPolylineData={"@@type":"GeoJsonLayer",id:"geojson-line-layer",name:"Line",data:{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:{type:"LineString",coordinates:[[434e3,6477500],[435500,6477500]]}}]},getLineWidth:20,lineWidthMinPixels:2},customLayerWithPolygonDataProps={id:"geojson-layer",data:{type:"Feature",properties:{},geometry:{type:"Polygon",coordinates:[[[434562,6477595],[434562,6478595],[435062,6478595],[435062,6477595],[434562,6477595]]]}},getLineWidth:1,lineWidthMinPixels:1,lineWidthMaxPixels:1,getLineColor:[0,0,0],getFillColor:[255,255,0],opacity:1},customLayerWithPolygonData={...customLayerWithPolygonDataProps,"@@type":"GeoJsonLayer"},customLayerWithTextData={"@@type":"TextLayer",id:"text-layer",name:"Text",data:[{name:"Custom GeoJson layer",coordinates:[434800,6478695]}],pickable:!0,getPosition:d=>d.coordinates,getText:d=>d.name,getColor:[255,0,0],getSize:16,getAngle:0,getTextAnchor:"middle",getAlignmentBaseline:"center"},EditedDataTemplate=args=>{const[editedData,setEditedData]=react__WEBPACK_IMPORTED_MODULE_0__.useState(args.editedData);return react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{setEditedData(args.editedData)}),[args.editedData]),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,_extends({},args,{editedData:editedData,setProps:updatedProps=>{setEditedData(updatedProps.editedData)}}))};EditedDataTemplate.__docgenInfo={description:"",methods:[],displayName:"EditedDataTemplate",props:{id:{required:!0,tsType:{name:"string"},description:""},resources:{required:!1,tsType:{name:"Record",elements:[{name:"string"},{name:"unknown"}],raw:"Record<string, unknown>"},description:""},layers:{required:!1,tsType:{name:"Array",elements:[{name:"union",raw:"| Record<string, unknown>\n| Layer\n| false\n| null\n| undefined",elements:[{name:"Record",elements:[{name:"string"},{name:"unknown"}],raw:"Record<string, unknown>"},{name:"Layer"},{name:"literal",value:"false"},{name:"null"},{name:"undefined"}]}],raw:"TLayerDefinition[]"},description:"Array of externally created layers or layer definition records or JSON strings.\nAdd '@@typedArraySupport' : true in a layer definition in order to\nuse typed arrays as inputs."},bounds:{required:!1,tsType:{name:"union",raw:"[number, number, number, number] | BoundsAccessor",elements:[{name:"tuple",raw:"[number, number, number, number]",elements:[{name:"number"},{name:"number"},{name:"number"},{name:"number"}]},{name:"signature",type:"function",raw:"() => BoundingBox2D",signature:{arguments:[],return:{name:"tuple",raw:"[number, number, number, number]",elements:[{name:"number"},{name:"number"},{name:"number"},{name:"number"}]}}}]},description:""},cameraPosition:{required:!1,tsType:{name:"union",raw:"ViewStateType | undefined",elements:[{name:"ViewStateType"},{name:"undefined"}]},description:""},triggerHome:{required:!1,tsType:{name:"number"},description:""},views:{required:!1,tsType:{name:"ViewsType"},description:""},coords:{required:!1,tsType:{name:"signature",type:"object",raw:"{\n    visible?: boolean | null;\n    multiPicking?: boolean | null;\n    pickDepth?: number | null;\n}",signature:{properties:[{key:"visible",value:{name:"union",raw:"boolean | null",elements:[{name:"boolean"},{name:"null"}],required:!1}},{key:"multiPicking",value:{name:"union",raw:"boolean | null",elements:[{name:"boolean"},{name:"null"}],required:!1}},{key:"pickDepth",value:{name:"union",raw:"number | null",elements:[{name:"number"},{name:"null"}],required:!1}}]}},description:""},scale:{required:!1,tsType:{name:"signature",type:"object",raw:"{\n    visible?: boolean | null;\n    incrementValue?: number | null;\n    widthPerUnit?: number | null;\n    cssStyle?: Record<string, unknown> | null;\n}",signature:{properties:[{key:"visible",value:{name:"union",raw:"boolean | null",elements:[{name:"boolean"},{name:"null"}],required:!1}},{key:"incrementValue",value:{name:"union",raw:"number | null",elements:[{name:"number"},{name:"null"}],required:!1}},{key:"widthPerUnit",value:{name:"union",raw:"number | null",elements:[{name:"number"},{name:"null"}],required:!1}},{key:"cssStyle",value:{name:"union",raw:"Record<string, unknown> | null",elements:[{name:"Record",elements:[{name:"string"},{name:"unknown"}],raw:"Record<string, unknown>"},{name:"null"}],required:!1}}]}},description:""},coordinateUnit:{required:!1,tsType:{name:"Unit"},description:""},colorTables:{required:!1,tsType:{name:"colorTablesArray"},description:""},editedData:{required:!1,tsType:{name:"Record",elements:[{name:"string"},{name:"unknown"}],raw:"Record<string, unknown>"},description:""},setProps:{required:!1,tsType:{name:"signature",type:"function",raw:"(data: Record<string, unknown>) => void",signature:{arguments:[{type:{name:"Record",elements:[{name:"string"},{name:"unknown"}],raw:"Record<string, unknown>"},name:"data"}],return:{name:"void"}}},description:""},checkDatafileSchema:{required:!1,tsType:{name:"boolean"},description:"Validate JSON datafile against schema"},onMouseEvent:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: MapMouseEvent) => void",signature:{arguments:[{type:{name:"MapMouseEvent"},name:"event"}],return:{name:"void"}}},description:"For get mouse events"},getCameraPosition:{required:!1,tsType:{name:"signature",type:"function",raw:"(input: ViewStateType) => void",signature:{arguments:[{type:{name:"ViewStateType"},name:"input"}],return:{name:"void"}}},description:""},onRenderingProgress:{required:!1,tsType:{name:"signature",type:"function",raw:"(progress: number) => void",signature:{arguments:[{type:{name:"number"},name:"progress"}],return:{name:"void"}}},description:"Will be called while layers are processed to rendered data.\n@param progress vlaue between 0 and 100."},onDragStart:{required:!1,tsType:{name:"signature",type:"function",raw:"(info: PickingInfo, event: MjolnirGestureEvent) => void",signature:{arguments:[{type:{name:"PickingInfo"},name:"info"},{type:{name:"MjolnirGestureEvent"},name:"event"}],return:{name:"void"}}},description:""},onDragEnd:{required:!1,tsType:{name:"signature",type:"function",raw:"(info: PickingInfo, event: MjolnirGestureEvent) => void",signature:{arguments:[{type:{name:"PickingInfo"},name:"info"},{type:{name:"MjolnirGestureEvent"},name:"event"}],return:{name:"void"}}},description:""},triggerResetMultipleWells:{required:!1,tsType:{name:"number"},description:""},selection:{required:!1,tsType:{name:"signature",type:"object",raw:"{\n    well: string | undefined;\n    selection: [number | undefined, number | undefined] | undefined;\n}",signature:{properties:[{key:"well",value:{name:"union",raw:"string | undefined",elements:[{name:"string"},{name:"undefined"}],required:!0}},{key:"selection",value:{name:"union",raw:"[number | undefined, number | undefined] | undefined",elements:[{name:"tuple",raw:"[number | undefined, number | undefined]",elements:[{name:"union",raw:"number | undefined",elements:[{name:"number"},{name:"undefined"}]},{name:"union",raw:"number | undefined",elements:[{name:"number"},{name:"undefined"}]}]},{name:"undefined"}],required:!0}}]}},description:"Range selection of the current well"},getTooltip:{required:!1,tsType:{name:"signature",type:"function",raw:"(\n    info: PickingInfo\n) => string | Record<string, unknown> | null",signature:{arguments:[{type:{name:"PickingInfo"},name:"info"}],return:{name:"union",raw:"string | Record<string, unknown> | null",elements:[{name:"string"},{name:"Record",elements:[{name:"string"},{name:"unknown"}],raw:"Record<string, unknown>"},{name:"null"}]}}},description:"Override default tooltip with a callback."},lights:{required:!1,tsType:{name:"signature",type:"object",raw:"{\n    headLight?: {\n        intensity: number;\n        color?: [number, number, number];\n    };\n    ambientLight?: {\n        intensity: number;\n        color?: [number, number, number];\n    };\n    pointLights?: [\n        {\n            intensity: number;\n            position: [number, number, number];\n            color?: [number, number, number];\n        },\n    ];\n\n    directionalLights?: [\n        {\n            intensity: number;\n            direction: [number, number, number];\n            color?: [number, number, number];\n        },\n    ];\n}",signature:{properties:[{key:"headLight",value:{name:"signature",type:"object",raw:"{\n    intensity: number;\n    color?: [number, number, number];\n}",signature:{properties:[{key:"intensity",value:{name:"number",required:!0}},{key:"color",value:{name:"tuple",raw:"[number, number, number]",elements:[{name:"number"},{name:"number"},{name:"number"}],required:!1}}]},required:!1}},{key:"ambientLight",value:{name:"signature",type:"object",raw:"{\n    intensity: number;\n    color?: [number, number, number];\n}",signature:{properties:[{key:"intensity",value:{name:"number",required:!0}},{key:"color",value:{name:"tuple",raw:"[number, number, number]",elements:[{name:"number"},{name:"number"},{name:"number"}],required:!1}}]},required:!1}},{key:"pointLights",value:{name:"tuple",raw:"[\n    {\n        intensity: number;\n        position: [number, number, number];\n        color?: [number, number, number];\n    },\n]",elements:[{name:"signature",type:"object",raw:"{\n    intensity: number;\n    position: [number, number, number];\n    color?: [number, number, number];\n}",signature:{properties:[{key:"intensity",value:{name:"number",required:!0}},{key:"position",value:{name:"tuple",raw:"[number, number, number]",elements:[{name:"number"},{name:"number"},{name:"number"}],required:!0}},{key:"color",value:{name:"tuple",raw:"[number, number, number]",elements:[{name:"number"},{name:"number"},{name:"number"}],required:!1}}]}}],required:!1}},{key:"directionalLights",value:{name:"tuple",raw:"[\n    {\n        intensity: number;\n        direction: [number, number, number];\n        color?: [number, number, number];\n    },\n]",elements:[{name:"signature",type:"object",raw:"{\n    intensity: number;\n    direction: [number, number, number];\n    color?: [number, number, number];\n}",signature:{properties:[{key:"intensity",value:{name:"number",required:!0}},{key:"direction",value:{name:"tuple",raw:"[number, number, number]",elements:[{name:"number"},{name:"number"},{name:"number"}],required:!0}},{key:"color",value:{name:"tuple",raw:"[number, number, number]",elements:[{name:"number"},{name:"number"},{name:"number"}],required:!1}}]}}],required:!1}}]}},description:""},children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},verticalScale:{required:!1,tsType:{name:"number"},description:"A vertical scale factor, used to scale items in the view vertically"}}}},"../example-data/deckgl-map.json":function(module){module.exports=JSON.parse('[{"id":"DeckGL-Map","coords":{"visible":true,"multiPicking":true,"pickDepth":10},"scale":{"visible":true,"incrementValue":100,"widthPerUnit":100,"cssStyle":{"left":10,"top":10}},"coordinateUnit":"m","resources":{"propertyMap":"propertyMap.png","depthMap":"propertyMap.png","wellsData":"volve_wells.json","logData":"volve_logs.json"},"bounds":[432205,6475078,437720,6481113],"layers":[{"@@type":"ColormapLayer","image":"@@#resources.propertyMap","rotDeg":0,"bounds":[432205,6475078,437720,6481113],"colorMapName":"Rainbow","valueRange":[2782,3513],"colorMapRange":[2782,3513]},{"@@type":"Hillshading2DLayer","bounds":[432205,6475078,437720,6481113],"valueRange":[2782,3513],"rotDeg":0,"image":"@@#resources.depthMap"},{"@@type":"WellsLayer","data":"@@#resources.wellsData","logData":"@@#resources.logData","logrunName":"BLOCKING","logName":"ZONELOG","logColor":"Stratigraphy"},{"@@type":"FaultPolygonsLayer","data":"fault_polygons.geojson"},{"@@type":"PieChartLayer","data":"piechart.json"},{"@@type":"NorthArrow3DLayer","visible":true},{"@@type":"DrawingLayer"}],"editedData":{},"views":{"layout":[1,1],"showLabel":false,"viewports":[{"id":"view_1","show3D":false,"layerIds":[]}]}}]')}}]);