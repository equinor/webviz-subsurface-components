"use strict";(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[5490],{"./packages/well-log-viewer/src/components/WellLogView.stories.jsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:function(){return Default},Discrete:function(){return Discrete},__namedExportsOrder:function(){return __namedExportsOrder}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_WellLogView__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/well-log-viewer/src/components/WellLogView.tsx"),_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@emerson-eps/color-tables/dist/index.js"),_utils_axes__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/well-log-viewer/src/utils/axes.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}__webpack_exports__.default={component:_WellLogView__WEBPACK_IMPORTED_MODULE_1__.ZP,title:"WellLogViewer/Components/WellLogView",parameters:{storySource:{source:'function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from "react";\nimport WellLogView from "./WellLogView";\nimport { argTypesWellLogViewProp } from "./WellLogView";\nimport { colorTables } from "@emerson-eps/color-tables";\nconst ComponentCode = \'<WellLogView id="WellLogView" \\r\\n\' + "    horizontal=false \\r\\n" + \'    welllog={require("../../../../../example-data/L898MUD.json")[0]} \\r\\n\' + \'    template={require("../../../../../example-data/welllog_template_1.json")} \\r\\n\' + "    colorTables={colorTables} \\r\\n" + "/>";\nimport { axisTitles, axisMnemos } from "../utils/axes";\nexport default {\n  component: WellLogView,\n  title: "WellLogViewer/Components/WellLogView",\n  parameters: {\n    docs: {\n      description: {\n        component: "WellLogView is a basic react component to wrap [videx-wellog](https://github.com/equinor/videx-wellog) library for drawing well log data"\n      }\n    },\n    componentSource: {\n      code: ComponentCode,\n      language: "javascript"\n    }\n  },\n  argTypes: {\n    ...argTypesWellLogViewProp,\n    id: {\n      description: "The ID of this component, used to identify dash components in callbacks. The ID needs to be unique across all of the components in an app."\n    }\n  }\n};\nconst Template = args => {\n  return /*#__PURE__*/React.createElement("div", {\n    style: {\n      height: "92vh"\n    }\n  }, /*#__PURE__*/React.createElement("div", {\n    style: {\n      width: "100%",\n      height: "100%"\n    }\n  }, /*#__PURE__*/React.createElement(WellLogView, _extends({\n    id: "WellLogView"\n  }, args))));\n};\nconst welllogDefault = require("../../../../../example-data/L898MUD.json")[0];\nexport const Default = Template.bind({});\nDefault.args = {\n  id: "Well-Log-View",\n  horizontal: false,\n  welllog: welllogDefault,\n  template: require("../../../../../example-data/welllog_template_1.json"),\n  viewTitle: /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("i", null, "Well"), " ", /*#__PURE__*/React.createElement("b", null, welllogDefault.header.well)),\n  colorTables: colorTables,\n  axisTitles: axisTitles,\n  axisMnemos: axisMnemos\n};\nconst welllogDiscrete = require("../../../../../example-data/volve_logs.json")[0];\nexport const Discrete = Template.bind({});\nDiscrete.args = {\n  id: "Well-Log-View-Discrete",\n  horizontal: false,\n  welllog: welllogDiscrete,\n  template: require("../../../../../example-data/welllog_template_2.json"),\n  viewTitle: "Well \'" + welllogDiscrete.header.well + "\'",\n  colorTables: colorTables,\n  axisTitles: axisTitles,\n  axisMnemos: axisMnemos,\n  options: {\n    checkDatafileSchema: true\n  }\n};\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: "args => {\\n  return <div style={{\\n    height: \\"92vh\\"\\n  }}>\\n            <div style={{\\n      width: \\"100%\\",\\n      height: \\"100%\\"\\n    }}>\\n                <WellLogView id=\\"WellLogView\\" {...args} />\\n            </div>\\n        </div>;\\n}",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};\nDiscrete.parameters = {\n  ...Discrete.parameters,\n  docs: {\n    ...Discrete.parameters?.docs,\n    source: {\n      originalSource: "args => {\\n  return <div style={{\\n    height: \\"92vh\\"\\n  }}>\\n            <div style={{\\n      width: \\"100%\\",\\n      height: \\"100%\\"\\n    }}>\\n                <WellLogView id=\\"WellLogView\\" {...args} />\\n            </div>\\n        </div>;\\n}",\n      ...Discrete.parameters?.docs?.source\n    }\n  }\n};',locationsMap:{default:{startLoc:{col:17,line:29},endLoc:{col:1,line:42},startBody:{col:17,line:29},endBody:{col:1,line:42}},discrete:{startLoc:{col:17,line:29},endLoc:{col:1,line:42},startBody:{col:17,line:29},endBody:{col:1,line:42}}}},docs:{description:{component:"WellLogView is a basic react component to wrap [videx-wellog](https://github.com/equinor/videx-wellog) library for drawing well log data"}},componentSource:{code:'<WellLogView id="WellLogView" \r\n    horizontal=false \r\n    welllog={require("../../../../../example-data/L898MUD.json")[0]} \r\n    template={require("../../../../../example-data/welllog_template_1.json")} \r\n    colorTables={colorTables} \r\n/>',language:"javascript"}},argTypes:{..._WellLogView__WEBPACK_IMPORTED_MODULE_1__.WH,id:{description:"The ID of this component, used to identify dash components in callbacks. The ID needs to be unique across all of the components in an app."}}};const Template=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{height:"92vh"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"100%",height:"100%"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_WellLogView__WEBPACK_IMPORTED_MODULE_1__.ZP,_extends({id:"WellLogView"},args)))),welllogDefault=__webpack_require__("../example-data/L898MUD.json")[0],Default=Template.bind({});Default.args={id:"Well-Log-View",horizontal:!1,welllog:welllogDefault,template:__webpack_require__("../example-data/welllog_template_1.json"),viewTitle:react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("i",null,"Well")," ",react__WEBPACK_IMPORTED_MODULE_0__.createElement("b",null,welllogDefault.header.well)),colorTables:_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_2__.Su,axisTitles:_utils_axes__WEBPACK_IMPORTED_MODULE_3__.b,axisMnemos:_utils_axes__WEBPACK_IMPORTED_MODULE_3__.H};const welllogDiscrete=__webpack_require__("../example-data/volve_logs.json")[0],Discrete=Template.bind({});Discrete.args={id:"Well-Log-View-Discrete",horizontal:!1,welllog:welllogDiscrete,template:__webpack_require__("../example-data/welllog_template_2.json"),viewTitle:"Well '"+welllogDiscrete.header.well+"'",colorTables:_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_2__.Su,axisTitles:_utils_axes__WEBPACK_IMPORTED_MODULE_3__.b,axisMnemos:_utils_axes__WEBPACK_IMPORTED_MODULE_3__.H,options:{checkDatafileSchema:!0}},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => {\n  return <div style={{\n    height: "92vh"\n  }}>\n            <div style={{\n      width: "100%",\n      height: "100%"\n    }}>\n                <WellLogView id="WellLogView" {...args} />\n            </div>\n        </div>;\n}',...Default.parameters?.docs?.source}}},Discrete.parameters={...Discrete.parameters,docs:{...Discrete.parameters?.docs,source:{originalSource:'args => {\n  return <div style={{\n    height: "92vh"\n  }}>\n            <div style={{\n      width: "100%",\n      height: "100%"\n    }}>\n                <WellLogView id="WellLogView" {...args} />\n            </div>\n        </div>;\n}',...Discrete.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Discrete"]}}]);