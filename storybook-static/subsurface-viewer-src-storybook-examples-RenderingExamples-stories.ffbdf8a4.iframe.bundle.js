"use strict";(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[4062],{"./packages/subsurface-viewer/src/storybook/examples/RenderingExamples.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DepthTest:function(){return DepthTest},IsRenderedCallback:function(){return IsRenderedCallback},LightsStory:function(){return LightsStory},__namedExportsOrder:function(){return __namedExportsOrder}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_deck_gl_mesh_layers_typed__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@deck.gl/mesh-layers/dist/esm/simple-mesh-layer/simple-mesh-layer.js"),_luma_gl_engine__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/@luma.gl/engine/dist/esm/geometries/sphere-geometry.js"),_mui_material_Slider__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@mui/material/Slider/Slider.js"),_mui_material_Stack__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mui/material/Stack/Stack.js"),_mui_material_Switch__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@mui/material/Switch/Switch.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/subsurface-viewer/src/SubsurfaceViewer.tsx"),_layers__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/subsurface-viewer/src/layers/index.ts"),_layers_grid3d_test_data_TruncatedSnubCube__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/subsurface-viewer/src/layers/grid3d/test_data/TruncatedSnubCube.ts"),_sharedSettings__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/subsurface-viewer/src/storybook/sharedSettings.tsx");const stories={parameters:{storySource:{source:'import React from "react";\nimport { SimpleMeshLayer } from "@deck.gl/mesh-layers/typed";\nimport { SphereGeometry } from "@luma.gl/engine";\nimport Slider from "@mui/material/Slider";\nimport Stack from "@mui/material/Stack";\nimport Switch from "@mui/material/Switch";\nimport { styled } from "@mui/material/styles";\nimport SubsurfaceViewer from "../../SubsurfaceViewer";\nimport { AxesLayer, Grid3DLayer } from "../../layers";\nimport { Points as SnubCubePoints, Faces as SnubCubeFaces, VertexCount as SnubCubeVertexCount } from "../../layers/grid3d/test_data/TruncatedSnubCube";\nimport { mainStyle as defaultmainStyle, default3DViews, huginMapDepthPropLayerPng, huginMeshMapLayerPng, volveWellsLayer, hugin2DBounds } from "../sharedSettings";\nconst stories = {\n  component: SubsurfaceViewer,\n  title: "SubsurfaceViewer/Examples/Rendering",\n  args: {\n    // Add a reset button for all the stories.\n    // Somehow, I do not manage to add the triggerHome to the general "unset" controls :/\n    triggerHome: 0\n  }\n};\nexport default stories;\nconst classes = {\n  main: "default-main",\n  mainWithButton: "main-with-button"\n};\nconst Root = styled("div")({\n  ...defaultmainStyle,\n  [`& .${classes.mainWithButton}`]: {\n    height: 500,\n    border: "1px solid black",\n    background: "azure",\n    position: "relative"\n  }\n});\nconst volveWellsNoDepthTestLayer = {\n  ...volveWellsLayer,\n  id: "wells-layer-no-depth-test",\n  depthTest: false\n};\nexport const DepthTest = {\n  args: {\n    id: "DepthTest",\n    layers: [huginMapDepthPropLayerPng, volveWellsLayer, volveWellsNoDepthTestLayer],\n    views: {\n      layout: [1, 2],\n      viewports: [{\n        id: "view_1",\n        layerIds: [huginMapDepthPropLayerPng.id, volveWellsLayer.id],\n        show3D: false,\n        isSync: true\n      }, {\n        id: "view_2",\n        layerIds: [huginMapDepthPropLayerPng.id, volveWellsNoDepthTestLayer.id],\n        show3D: false,\n        isSync: true\n      }]\n    }\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: "Example using the depthTest property. If this is set to false it will disable depth testing for the layer"\n      }\n    }\n  },\n  render: args => /*#__PURE__*/React.createElement(Root, null, /*#__PURE__*/React.createElement("div", {\n    className: classes.mainWithButton\n  }, /*#__PURE__*/React.createElement(SubsurfaceViewer, args)), /*#__PURE__*/React.createElement("h4", null, "View on the right depthTest for the wells layer property is set to false and wells layer is given last so that it will be painted on top. On the left parts of the wells are hidden beneath the surface."))\n};\nconst IsRenderedComponent = props => {\n  const [layers, setLayers] = React.useState([volveWellsLayer]);\n  const [label, setLabel] = React.useState("");\n  const handleChange = () => {\n    if (layers.length === 1) {\n      setLayers([volveWellsLayer, huginMeshMapLayerPng]);\n    } else if (layers.length === 2) {\n      setLayers([]);\n    } else {\n      setLayers([volveWellsLayer]);\n    }\n  };\n  const props2 = {\n    ...props,\n    onRenderingProgress: progress => {\n      console.log("onRenderingProgress", progress);\n      setLabel(progress === 100 ? "LOADED" : `${progress} %`);\n    },\n    layers\n  };\n  return /*#__PURE__*/React.createElement(Root, null, /*#__PURE__*/React.createElement("div", {\n    className: classes.mainWithButton\n  }, /*#__PURE__*/React.createElement(SubsurfaceViewer, props2)), /*#__PURE__*/React.createElement("label", null, "Add big map layer "), /*#__PURE__*/React.createElement("button", {\n    onClick: handleChange\n  }, "Change layers"), /*#__PURE__*/React.createElement("label", null, "State from onRenderingProgress: ", label));\n};\nexport const IsRenderedCallback = {\n  args: {\n    id: "DeckGL-Map",\n    layers: [huginMeshMapLayerPng, volveWellsLayer],\n    bounds: hugin2DBounds,\n    views: {\n      layout: [1, 1],\n      viewports: [{\n        id: "view_1",\n        show3D: true\n      }]\n    }\n  },\n  parameters: {\n    docs: {\n      inlineStories: false,\n      iframeHeight: 500,\n      description: {\n        story: "IsRenderedCallback will report in console when triggered"\n      }\n    }\n  },\n  render: args => /*#__PURE__*/React.createElement(IsRenderedComponent, args)\n};\nconst LightsStoryComponent = args => {\n  const [headLight, setHeadLight] = React.useState(false);\n  const [ambientLight, setAmbientLight] = React.useState(false);\n  const [pointLight, setPointLight] = React.useState(false);\n  const [directionalLight, setDirectionalLight] = React.useState(false);\n  const [headLightIntensity, setHeadLightIntensity] = React.useState(1.0);\n  const [ambientLightIntensity, setAmbientLightIntensity] = React.useState(1.0);\n  const [pointLightIntensity, setPointLightIntensity] = React.useState(1.0);\n  const [directionslLightIntensity, setDirectionslLightIntensity] = React.useState(1.0);\n  let lights = {};\n  if (headLight) {\n    lights = {\n      ...lights,\n      headLight: {\n        intensity: headLightIntensity\n      }\n    };\n  }\n  if (ambientLight) {\n    lights = {\n      ...lights,\n      ambientLight: {\n        intensity: ambientLightIntensity\n      }\n    };\n  }\n  if (pointLight) {\n    lights = {\n      ...lights,\n      pointLights: [{\n        intensity: pointLightIntensity,\n        position: [-50, -50, -50],\n        color: [0, 255, 0]\n      }]\n    };\n  }\n  if (directionalLight) {\n    lights = {\n      ...lights,\n      directionalLights: [{\n        intensity: directionslLightIntensity,\n        direction: [-1, 0, -1],\n        color: [255, 0, 0]\n      }]\n    };\n  }\n  const props = {\n    lights,\n    ...args\n  };\n  return /*#__PURE__*/React.createElement(Root, null, /*#__PURE__*/React.createElement("div", {\n    className: classes.mainWithButton\n  }, /*#__PURE__*/React.createElement(SubsurfaceViewer, props)), /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    alignItems: "center",\n    spacing: 10\n  }, /*#__PURE__*/React.createElement(Stack, null, /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement("label", null, "Head Light "), /*#__PURE__*/React.createElement(Switch, {\n    onClick: () => {\n      setHeadLight(!headLight);\n    }\n  })), /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: 100,\n    valueLabelDisplay: "auto",\n    onChange: (_event, value) => {\n      setHeadLightIntensity(value / 100);\n    }\n  })), /*#__PURE__*/React.createElement(Stack, null, /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement("label", null, "Ambient Light "), /*#__PURE__*/React.createElement(Switch, {\n    onClick: () => {\n      setAmbientLight(!ambientLight);\n    }\n  })), /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: 100,\n    valueLabelDisplay: "auto",\n    onChange: (_event, value) => {\n      setAmbientLightIntensity(value / 100);\n    }\n  })), /*#__PURE__*/React.createElement(Stack, null, /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement("label", null, "Point Light "), /*#__PURE__*/React.createElement(Switch, {\n    onClick: () => {\n      setPointLight(!pointLight);\n    }\n  })), /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: 100,\n    valueLabelDisplay: "auto",\n    onChange: (_event, value) => {\n      setPointLightIntensity(value / 100);\n    }\n  })), /*#__PURE__*/React.createElement(Stack, null, /*#__PURE__*/React.createElement(Stack, {\n    direction: "row",\n    alignItems: "center"\n  }, /*#__PURE__*/React.createElement("label", null, "Directional Light "), /*#__PURE__*/React.createElement(Switch, {\n    onClick: () => {\n      setDirectionalLight(!directionalLight);\n    }\n  })), /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: 100,\n    valueLabelDisplay: "auto",\n    onChange: (_event, value) => {\n      setDirectionslLightIntensity(value / 100);\n    }\n  }))));\n};\nexport const LightsStory = {\n  args: {\n    id: "DeckGL-Map",\n    bounds: [-100, -100, 50, 50],\n    layers: [new AxesLayer({\n      id: "polyhedral-cells-axes",\n      bounds: [-100, -50, -50, 50, 50, 50]\n    }),\n    // unfortunately, SimpleMeshLayer can not be specified as a Record<string, any> :(\n    new SimpleMeshLayer({\n      id: "sphere",\n      data: [{}],\n      mesh: new SphereGeometry({\n        nlat: 100,\n        nlong: 100,\n        radius: 30\n      }),\n      wireframe: false,\n      getPosition: [-75, 0, 0],\n      getColor: [255, 255, 255],\n      material: true\n    }), new Grid3DLayer({\n      id: "Grid3DLayer",\n      material: true,\n      colorMapFunction: () => [255, 255, 255],\n      pointsData: SnubCubePoints.map(v => 35 * v),\n      polysData: SnubCubeFaces,\n      propertiesData: Array(SnubCubeVertexCount).fill(0)\n    })],\n    views: default3DViews\n  },\n  parameters: {\n    docs: {\n      inlineStories: false,\n      iframeHeight: 500,\n      description: {\n        story: "Using different light sources"\n      }\n    }\n  },\n  render: args => /*#__PURE__*/React.createElement(LightsStoryComponent, args)\n};',locationsMap:{"depth-test":{startLoc:{col:25,line:40},endLoc:{col:1,line:69},startBody:{col:25,line:40},endBody:{col:1,line:69}},"is-rendered-callback":{startLoc:{col:34,line:96},endLoc:{col:1,line:119},startBody:{col:34,line:96},endBody:{col:1,line:119}},"lights-story":{startLoc:{col:27,line:230},endLoc:{col:1,line:271},startBody:{col:27,line:230},endBody:{col:1,line:271}}}}},component:_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,title:"SubsurfaceViewer/Examples/Rendering",args:{triggerHome:0}};__webpack_exports__.default=stories;const classes_mainWithButton="main-with-button",Root=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_5__.ZP)("div")({..._sharedSettings__WEBPACK_IMPORTED_MODULE_4__.HV,[`& .${classes_mainWithButton}`]:{height:500,border:"1px solid black",background:"azure",position:"relative"}}),volveWellsNoDepthTestLayer={..._sharedSettings__WEBPACK_IMPORTED_MODULE_4__.ex,id:"wells-layer-no-depth-test",depthTest:!1},DepthTest={args:{id:"DepthTest",layers:[_sharedSettings__WEBPACK_IMPORTED_MODULE_4__.DU,_sharedSettings__WEBPACK_IMPORTED_MODULE_4__.ex,volveWellsNoDepthTestLayer],views:{layout:[1,2],viewports:[{id:"view_1",layerIds:[_sharedSettings__WEBPACK_IMPORTED_MODULE_4__.DU.id,_sharedSettings__WEBPACK_IMPORTED_MODULE_4__.ex.id],show3D:!1,isSync:!0},{id:"view_2",layerIds:[_sharedSettings__WEBPACK_IMPORTED_MODULE_4__.DU.id,volveWellsNoDepthTestLayer.id],show3D:!1,isSync:!0}]}},parameters:{docs:{description:{story:"Example using the depthTest property. If this is set to false it will disable depth testing for the layer"}}},render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(Root,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:classes_mainWithButton},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,args)),react__WEBPACK_IMPORTED_MODULE_0__.createElement("h4",null,"View on the right depthTest for the wells layer property is set to false and wells layer is given last so that it will be painted on top. On the left parts of the wells are hidden beneath the surface."))},IsRenderedComponent=props=>{const[layers,setLayers]=react__WEBPACK_IMPORTED_MODULE_0__.useState([_sharedSettings__WEBPACK_IMPORTED_MODULE_4__.ex]),[label,setLabel]=react__WEBPACK_IMPORTED_MODULE_0__.useState(""),props2={...props,onRenderingProgress:progress=>{console.log("onRenderingProgress",progress),setLabel(100===progress?"LOADED":`${progress} %`)},layers:layers};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Root,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:classes_mainWithButton},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,props2)),react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",null,"Add big map layer "),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{onClick:()=>{1===layers.length?setLayers([_sharedSettings__WEBPACK_IMPORTED_MODULE_4__.ex,_sharedSettings__WEBPACK_IMPORTED_MODULE_4__.wL]):2===layers.length?setLayers([]):setLayers([_sharedSettings__WEBPACK_IMPORTED_MODULE_4__.ex])}},"Change layers"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",null,"State from onRenderingProgress: ",label))},IsRenderedCallback={args:{id:"DeckGL-Map",layers:[_sharedSettings__WEBPACK_IMPORTED_MODULE_4__.wL,_sharedSettings__WEBPACK_IMPORTED_MODULE_4__.ex],bounds:_sharedSettings__WEBPACK_IMPORTED_MODULE_4__.Jl,views:{layout:[1,1],viewports:[{id:"view_1",show3D:!0}]}},parameters:{docs:{inlineStories:!1,iframeHeight:500,description:{story:"IsRenderedCallback will report in console when triggered"}}},render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(IsRenderedComponent,args)},LightsStoryComponent=args=>{const[headLight,setHeadLight]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1),[ambientLight,setAmbientLight]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1),[pointLight,setPointLight]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1),[directionalLight,setDirectionalLight]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1),[headLightIntensity,setHeadLightIntensity]=react__WEBPACK_IMPORTED_MODULE_0__.useState(1),[ambientLightIntensity,setAmbientLightIntensity]=react__WEBPACK_IMPORTED_MODULE_0__.useState(1),[pointLightIntensity,setPointLightIntensity]=react__WEBPACK_IMPORTED_MODULE_0__.useState(1),[directionslLightIntensity,setDirectionslLightIntensity]=react__WEBPACK_IMPORTED_MODULE_0__.useState(1);let lights={};headLight&&(lights={...lights,headLight:{intensity:headLightIntensity}}),ambientLight&&(lights={...lights,ambientLight:{intensity:ambientLightIntensity}}),pointLight&&(lights={...lights,pointLights:[{intensity:pointLightIntensity,position:[-50,-50,-50],color:[0,255,0]}]}),directionalLight&&(lights={...lights,directionalLights:[{intensity:directionslLightIntensity,direction:[-1,0,-1],color:[255,0,0]}]});const props={lights:lights,...args};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Root,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:classes_mainWithButton},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,props)),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_6__.Z,{direction:"row",alignItems:"center",spacing:10},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_6__.Z,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_6__.Z,{direction:"row",alignItems:"center"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",null,"Head Light "),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Switch__WEBPACK_IMPORTED_MODULE_7__.Z,{onClick:()=>{setHeadLight(!headLight)}})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Slider__WEBPACK_IMPORTED_MODULE_8__.ZP,{defaultValue:100,valueLabelDisplay:"auto",onChange:(_event,value)=>{setHeadLightIntensity(value/100)}})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_6__.Z,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_6__.Z,{direction:"row",alignItems:"center"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",null,"Ambient Light "),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Switch__WEBPACK_IMPORTED_MODULE_7__.Z,{onClick:()=>{setAmbientLight(!ambientLight)}})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Slider__WEBPACK_IMPORTED_MODULE_8__.ZP,{defaultValue:100,valueLabelDisplay:"auto",onChange:(_event,value)=>{setAmbientLightIntensity(value/100)}})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_6__.Z,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_6__.Z,{direction:"row",alignItems:"center"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",null,"Point Light "),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Switch__WEBPACK_IMPORTED_MODULE_7__.Z,{onClick:()=>{setPointLight(!pointLight)}})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Slider__WEBPACK_IMPORTED_MODULE_8__.ZP,{defaultValue:100,valueLabelDisplay:"auto",onChange:(_event,value)=>{setPointLightIntensity(value/100)}})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_6__.Z,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_6__.Z,{direction:"row",alignItems:"center"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",null,"Directional Light "),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Switch__WEBPACK_IMPORTED_MODULE_7__.Z,{onClick:()=>{setDirectionalLight(!directionalLight)}})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Slider__WEBPACK_IMPORTED_MODULE_8__.ZP,{defaultValue:100,valueLabelDisplay:"auto",onChange:(_event,value)=>{setDirectionslLightIntensity(value/100)}}))))},LightsStory={args:{id:"DeckGL-Map",bounds:[-100,-100,50,50],layers:[new _layers__WEBPACK_IMPORTED_MODULE_2__.AxesLayer({id:"polyhedral-cells-axes",bounds:[-100,-50,-50,50,50,50]}),new _deck_gl_mesh_layers_typed__WEBPACK_IMPORTED_MODULE_9__.Z({id:"sphere",data:[{}],mesh:new _luma_gl_engine__WEBPACK_IMPORTED_MODULE_10__.Z({nlat:100,nlong:100,radius:30}),wireframe:!1,getPosition:[-75,0,0],getColor:[255,255,255],material:!0}),new _layers__WEBPACK_IMPORTED_MODULE_2__.Grid3DLayer({id:"Grid3DLayer",material:!0,colorMapFunction:()=>[255,255,255],pointsData:_layers_grid3d_test_data_TruncatedSnubCube__WEBPACK_IMPORTED_MODULE_3__.wo.map((v=>35*v)),polysData:_layers_grid3d_test_data_TruncatedSnubCube__WEBPACK_IMPORTED_MODULE_3__.OQ,propertiesData:Array(_layers_grid3d_test_data_TruncatedSnubCube__WEBPACK_IMPORTED_MODULE_3__.sr).fill(0)})],views:_sharedSettings__WEBPACK_IMPORTED_MODULE_4__.Pl},parameters:{docs:{inlineStories:!1,iframeHeight:500,description:{story:"Using different light sources"}}},render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(LightsStoryComponent,args)};DepthTest.parameters={...DepthTest.parameters,docs:{...DepthTest.parameters?.docs,source:{originalSource:'{\n  args: {\n    id: "DepthTest",\n    layers: [huginMapDepthPropLayerPng, volveWellsLayer, volveWellsNoDepthTestLayer],\n    views: {\n      layout: [1, 2],\n      viewports: [{\n        id: "view_1",\n        layerIds: [huginMapDepthPropLayerPng.id, volveWellsLayer.id],\n        show3D: false,\n        isSync: true\n      }, {\n        id: "view_2",\n        layerIds: [huginMapDepthPropLayerPng.id, volveWellsNoDepthTestLayer.id],\n        show3D: false,\n        isSync: true\n      }]\n    }\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: "Example using the depthTest property. If this is set to false it will disable depth testing for the layer"\n      }\n    }\n  },\n  render: args => <Root>\n            <div className={classes.mainWithButton}>\n                <SubsurfaceViewer {...args} />\n            </div>\n            <h4>\n                View on the right depthTest for the wells layer property is set\n                to false and wells layer is given last so that it will be\n                painted on top. On the left parts of the wells are hidden\n                beneath the surface.\n            </h4>\n        </Root>\n}',...DepthTest.parameters?.docs?.source}}},IsRenderedCallback.parameters={...IsRenderedCallback.parameters,docs:{...IsRenderedCallback.parameters?.docs,source:{originalSource:'{\n  args: {\n    id: "DeckGL-Map",\n    layers: [huginMeshMapLayerPng, volveWellsLayer],\n    bounds: hugin2DBounds,\n    views: {\n      layout: [1, 1],\n      viewports: [{\n        id: "view_1",\n        show3D: true\n      }]\n    }\n  },\n  parameters: {\n    docs: {\n      inlineStories: false,\n      iframeHeight: 500,\n      description: {\n        story: "IsRenderedCallback will report in console when triggered"\n      }\n    }\n  },\n  render: args => <IsRenderedComponent {...args} />\n}',...IsRenderedCallback.parameters?.docs?.source}}},LightsStory.parameters={...LightsStory.parameters,docs:{...LightsStory.parameters?.docs,source:{originalSource:'{\n  args: {\n    id: "DeckGL-Map",\n    bounds: [-100, -100, 50, 50],\n    layers: [new AxesLayer({\n      id: "polyhedral-cells-axes",\n      bounds: [-100, -50, -50, 50, 50, 50]\n    }),\n    // unfortunately, SimpleMeshLayer can not be specified as a Record<string, any> :(\n    new SimpleMeshLayer({\n      id: "sphere",\n      data: [{}],\n      mesh: new SphereGeometry({\n        nlat: 100,\n        nlong: 100,\n        radius: 30\n      }),\n      wireframe: false,\n      getPosition: [-75, 0, 0],\n      getColor: [255, 255, 255],\n      material: true\n    }), (new Grid3DLayer({\n      id: "Grid3DLayer",\n      material: true,\n      colorMapFunction: () => [255, 255, 255],\n      pointsData: SnubCubePoints.map(v => 35 * v),\n      polysData: SnubCubeFaces,\n      propertiesData: Array(SnubCubeVertexCount).fill(0)\n    }) as Layer<Record<string, never>>)],\n    views: default3DViews\n  },\n  parameters: {\n    docs: {\n      inlineStories: false,\n      iframeHeight: 500,\n      description: {\n        story: "Using different light sources"\n      }\n    }\n  },\n  render: args => <LightsStoryComponent {...args} />\n}',...LightsStory.parameters?.docs?.source}}};const __namedExportsOrder=["DepthTest","IsRenderedCallback","LightsStory"]},"./packages/subsurface-viewer/src/layers/grid3d/test_data/TruncatedSnubCube.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{OQ:function(){return Faces},sr:function(){return VertexCount},wo:function(){return Points}});const C0=.03022517647727011,C1=.03630716729159513,C2=.040977806224636225,C3=.04564293957876494,C4=.051724930393089966,C5=.08744289047276839,C6=.08897531081303763,C7=.09641163211454777,C8=.10383500001768008,C9=.10536742035794933,C10=.2450214662773631,C11=.25213479294506524,C12=.25578852648697925,C13=.2594078935254808,C14=.266521220193183,C15=.30296894256435697,C16=.3107539819206035,C17=.3137398958061564,C18=.3166836571239303,C19=.32446869648017684,C20=.3415821603133315,C21=.3421516282996725,C22=.3496389843387572,C23=.35707936458297945,C24=.35764883256932045,C25=.3919404789469772,C26=.40221538330780837,C27=.40271740948195195,C28=.40316532850196596,C29=.4134402328627971,C30=.4223523523667726,C31=.4257635648947752,C32=.43136191452063516,C33=.43690230845586675,C34=.44031352098386933,C35=.4714793574054987,C36=.47546003791984226,C37=.4804922200139097,C38=.4854598455082518,C39=.4894405260225954,C40=.6319974061364817,C41=.6358614860540425,C42=.6398421665683861,C43=.6410027320851348,C44=.6420771755897583,C45=.6439380803776656,C46=.647947477795688,C47=.6499219360216627,C49=.6855579590791095,C48=.6519281583100315,C50=.6889691716071121,C51=.6930683858709402,C52=.697074482834414,C53=.7004856953624166,C54=.7657290432607724,C55=.7691698956742122,C56=.7697393636605533,C57=.7720413833524075,C58=.7732108302879603,C59=.7742763923737797,C60=.7747913160528183,C61=.7797391712489629,C62=.7803086392353038,C63=.7805887324654148,C64=.9227051570193641,C65=.9237364928727411,C66=.9244082055612856,C67=.9268980705658701,C68=.9274353460160546,C69=.9278480157600277,C70=.9303378807646123,C71=.9310095934531567,C72=.9320409293065338,Points=[C72,-C25,-C2,-C72,C25,-C2,C25,C72,-C2,-C25,-C72,-C2,C71,-C15,C12,-C71,C15,C12,C15,C71,C12,-C15,-C71,C12,C10,C70,-C17,-C10,-C70,-C17,C70,-C10,-C17,-C70,C10,-C17,C0,C69,C27,-C0,-C69,C27,C69,-C0,C27,-C69,C0,C27,C28,-C1,-C68,-C28,C1,-C68,C1,C28,-C68,-C1,-C28,-C68,C26,C3,C68,-C26,-C3,C68,C3,-C26,C68,-C3,C26,C68,C18,-C11,C68,-C18,C11,C68,C11,C18,C68,-C11,-C18,C68,C16,C13,-C68,-C16,-C13,-C68,C13,-C16,-C68,-C13,C16,-C68,C4,-C67,-C27,-C4,C67,-C27,C67,C4,-C27,-C67,-C4,-C27,C14,-C66,C17,-C14,C66,C17,C66,C14,C17,-C66,-C14,C17,C65,C19,-C12,-C65,-C19,-C12,C19,-C65,-C12,-C19,C65,-C12,C64,C29,C2,-C64,-C29,C2,C29,-C64,C2,-C29,C64,C2,C63,-C40,-C7,-C63,C40,-C7,C40,C63,-C7,-C40,-C63,-C7,C62,-C35,C32,-C62,C35,C32,C35,C62,C32,-C35,-C62,C32,C30,C61,-C37,-C30,-C61,-C37,C61,-C30,-C37,-C61,C30,-C37,C38,-C31,C60,-C38,C31,C60,C31,C38,C60,-C31,-C38,C60,C36,C33,-C60,-C36,-C33,-C60,C33,-C36,-C60,-C33,C36,-C60,C5,C59,C43,-C5,-C59,C43,C59,-C5,C43,-C59,C5,C43,C44,-C6,-C58,-C44,C6,-C58,C6,C44,-C58,-C6,-C44,-C58,C42,C8,C58,-C42,-C8,C58,C8,-C42,C58,-C8,C42,C58,C9,-C57,-C43,-C9,C57,-C43,C57,C9,-C43,-C57,-C9,-C43,C34,-C56,C37,-C34,C56,C37,C56,C34,C37,-C56,-C34,C37,C55,C39,-C32,-C55,-C39,-C32,C39,-C55,-C32,-C39,C55,-C32,C54,C47,C7,-C54,-C47,C7,C47,-C54,C7,-C47,C54,C7,C53,-C41,-C22,-C53,C41,-C22,C41,C53,-C22,-C41,-C53,-C22,C20,C52,C45,-C20,-C52,C45,C52,-C20,C45,-C52,C20,C45,C46,-C21,-C51,-C46,C21,-C51,C21,C46,-C51,-C21,-C46,-C51,C42,C23,C51,-C42,-C23,C51,C23,-C42,C51,-C23,C42,C51,C24,-C50,-C45,-C24,C50,-C45,C50,C24,-C45,-C50,-C24,-C45,C49,C48,C22,-C49,-C48,C22,C48,-C49,C22,-C48,C49,C22],Faces=[8,0,10,34,40,44,38,14,4,8,1,11,35,41,45,39,15,5,8,2,8,33,43,47,37,12,6,8,3,9,32,42,46,36,13,7,8,16,30,19,29,17,31,18,28,8,20,26,23,25,21,27,22,24,6,52,102,60,110,84,118,6,53,103,61,111,85,119,6,54,100,62,108,86,116,6,55,101,63,109,87,117,6,56,98,88,114,64,106,6,57,99,89,115,65,107,6,58,96,90,112,66,104,6,59,97,91,113,67,105,6,0,4,52,118,94,48,6,1,5,53,119,95,49,6,2,6,54,116,92,50,6,3,7,55,117,93,51,6,8,56,106,74,81,33,6,9,57,107,75,80,32,6,10,58,104,72,82,34,6,11,59,105,73,83,35,6,12,37,85,111,79,68,6,13,36,84,110,78,69,6,14,38,86,108,76,70,6,15,39,87,109,77,71,6,16,28,64,114,82,72,6,17,29,65,115,83,73,6,18,31,67,113,81,74,6,19,30,66,112,80,75,6,20,24,60,102,70,76,6,21,25,61,103,71,77,6,22,27,63,101,69,78,6,23,26,62,100,68,79,6,40,88,98,50,92,44,6,41,89,99,51,93,45,6,42,90,96,48,94,46,6,43,91,97,49,95,47,5,0,48,96,58,10,5,1,49,97,59,11,5,2,50,98,56,8,5,3,51,99,57,9,5,4,14,70,102,52,5,5,15,71,103,53,5,6,12,68,100,54,5,7,13,69,101,55,5,16,72,104,66,30,5,17,73,105,67,31,5,18,74,106,64,28,5,19,75,107,65,29,5,20,76,108,62,26,5,21,77,109,63,27,5,22,78,110,60,24,5,23,79,111,61,25,5,32,80,112,90,42,5,33,81,113,91,43,5,34,82,114,88,40,5,35,83,115,89,41,5,36,46,94,118,84,5,37,47,95,119,85,5,38,44,92,116,86,5,39,45,93,117,87],VertexCount=354},"./packages/subsurface-viewer/src/storybook/sharedSettings.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{BX:function(){return EditedDataTemplate},D$:function(){return northArrowLayer},DU:function(){return huginMapDepthPropLayerPng},Dh:function(){return hillshadingLayer},HV:function(){return mainStyle},Jl:function(){return hugin2DBounds},M1:function(){return customLayerWithPolylineData},Ng:function(){return customLayerWithTextData},On:function(){return volveWellsWithLogsLayer},PQ:function(){return huginMapNetmapPropLayerPng},Pl:function(){return default3DViews},QH:function(){return huginAxes3DLayer},Rd:function(){return customLayerWithPolygonData},Sh:function(){return classes},Wj:function(){return colormapLayer},ex:function(){return volveWellsLayer},fC:function(){return Root},iH:function(){return redAxes2DLayer},vj:function(){return subsufaceProps},wL:function(){return huginMeshMapLayerPng},yP:function(){return hugin3DBounds},z:function(){return volveWellsBounds}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/subsurface-viewer/src/SubsurfaceViewer.tsx"),_example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../example-data/deckgl-map.json");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const classes={main:"default-main"},mainStyle={[`& .${classes.main}`]:{width:750,height:500,top:"50%",left:"50%",transform:"translate(-50%, -50%)",border:"1px solid black",background:"azure",position:"absolute"}},Root=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_3__.ZP)("div")(mainStyle),subsufaceProps=_example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0],colormapLayer={..._example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0].layers[0],id:"colormap-layer"},hillshadingLayer={..._example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0].layers[1],id:"hillshading-layer"},redAxes2DLayer=(_example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0].layers[2],{"@@type":"Axes2DLayer",id:"axes-layer",marginH:80,marginV:30,isLeftRuler:!0,isRightRuler:!1,isBottomRuler:!0,isTopRuler:!1,backgroundColor:[155,0,0,255]}),hugin2DBounds=[432150,6475800,439400,6481500],hugin3DBounds=[432150,6475800,-2e3,439400,6481500,-3500],huginAxes3DLayer={"@@type":"AxesLayer",id:"axes-layer2",bounds:[432150,6475800,2e3,439400,6481500,3500]},northArrowLayer={"@@type":"NorthArrow3DLayer",id:"north-arrow-layer"},volveWellsLayer={"@@type":"WellsLayer",id:"volve-wells",data:"./volve_wells.json"},volveWellsBounds=[432150,6475800,439400,6481500],volveWellsWithLogsLayer={"@@type":"WellsLayer",id:"volve-wells-with-logs",data:"./volve_wells.json",logData:"./volve_logs.json",logrunName:"BLOCKING",logName:"ZONELOG",logColor:"Stratigraphy"},huginMapDepthPropLayerPng={"@@type":"MapLayer",id:"hugin_depth",meshData:"hugin_depth_25_m.float32",frame:{origin:[432150,6475800],count:[291,229],increment:[25,25],rotDeg:0},propertiesData:"hugin_depth_25_m.float32",contours:[0,100],material:!1},huginMapNetmapPropLayerPng={...huginMapDepthPropLayerPng,id:"hugin_kh_netmap",propertiesData:"kh_netmap_25_m.float32"},huginMeshMapLayerPng={"@@type":"MapLayer",id:"hugin-mesh-layer",meshData:"hugin_depth_25_m.png",frame:{origin:[432150,6475800],count:[291,229],increment:[25,25],rotDeg:0},propertiesData:"kh_netmap_25_m.png",contours:[0,100],isContoursDepth:!0,gridLines:!1,material:!0,smoothShading:!0,colorMapName:"Physics",ZIncreasingDownwards:!0},default3DViews={layout:[1,1],viewports:[{id:"view_1",show3D:!0}]},customLayerWithPolylineData={"@@type":"GeoJsonLayer",id:"geojson-line-layer",name:"Line",data:{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:{type:"LineString",coordinates:[[434e3,6477500],[435500,6477500]]}}]},getLineWidth:20,lineWidthMinPixels:2},customLayerWithPolygonData={"@@type":"GeoJsonLayer",id:"geojson-layer",name:"Polygon",data:{type:"Feature",properties:{},geometry:{type:"Polygon",coordinates:[[[434562,6477595],[434562,6478595],[435062,6478595],[435062,6477595],[434562,6477595]]]}},getLineWidth:20,lineWidthMinPixels:2,getLineColor:[0,255,255],getFillColor:[0,255,0],opacity:.3},customLayerWithTextData={"@@type":"TextLayer",id:"text-layer",name:"Text",data:[{name:"Custom GeoJson layer",coordinates:[434800,6478695]}],pickable:!0,getPosition:d=>d.coordinates,getText:d=>d.name,getColor:[255,0,0],getSize:16,getAngle:0,getTextAnchor:"middle",getAlignmentBaseline:"center"},EditedDataTemplate=args=>{const[editedData,setEditedData]=react__WEBPACK_IMPORTED_MODULE_0__.useState(args.editedData);return react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{setEditedData(args.editedData)}),[args.editedData]),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,_extends({},args,{editedData:editedData,setProps:updatedProps=>{setEditedData(updatedProps.editedData)}}))};try{Root.displayName="Root",Root.__docgenInfo={description:"",displayName:"Root",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/subsurface-viewer/src/storybook/sharedSettings.tsx#Root"]={docgenInfo:Root.__docgenInfo,name:"Root",path:"packages/subsurface-viewer/src/storybook/sharedSettings.tsx#Root"})}catch(__react_docgen_typescript_loader_error){}try{EditedDataTemplate.displayName="EditedDataTemplate",EditedDataTemplate.__docgenInfo={description:"",displayName:"EditedDataTemplate",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},resources:{defaultValue:null,description:"",name:"resources",required:!1,type:{name:"Record<string, unknown>"}},layers:{defaultValue:null,description:"",name:"layers",required:!1,type:{name:"Record<string, unknown>[] | LayersList"}},bounds:{defaultValue:null,description:"",name:"bounds",required:!1,type:{name:"[number, number, number, number] | BoundsAccessor"}},cameraPosition:{defaultValue:null,description:"",name:"cameraPosition",required:!1,type:{name:"ViewStateType"}},triggerHome:{defaultValue:null,description:"",name:"triggerHome",required:!1,type:{name:"number"}},views:{defaultValue:null,description:"",name:"views",required:!1,type:{name:"ViewsType"}},coords:{defaultValue:null,description:"",name:"coords",required:!1,type:{name:"{ visible?: boolean | null; multiPicking?: boolean | null; pickDepth?: number | null | undefined; } | undefined"}},scale:{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"{ visible?: boolean | null; incrementValue?: number | null; widthPerUnit?: number | null | undefined; cssStyle?: Record<string, unknown> | null | undefined; } | undefined"}},coordinateUnit:{defaultValue:null,description:"",name:"coordinateUnit",required:!1,type:{name:"enum",value:[{value:'"m"'},{value:'"mm"'},{value:'"cm"'},{value:'"km"'},{value:'"in"'},{value:'"ft-us"'},{value:'"ft"'},{value:'"mi"'},{value:'"mm2"'},{value:'"cm2"'},{value:'"m2"'},{value:'"ha"'},{value:'"km2"'},{value:'"in2"'},{value:'"ft2"'},{value:'"ac"'},{value:'"mi2"'},{value:'"mcg"'},{value:'"mg"'},{value:'"g"'},{value:'"kg"'},{value:'"oz"'},{value:'"lb"'},{value:'"mt"'},{value:'"t"'},{value:'"mm3"'},{value:'"cm3"'},{value:'"ml"'},{value:'"l"'},{value:'"kl"'},{value:'"m3"'},{value:'"km3"'},{value:'"tsp"'},{value:'"Tbs"'},{value:'"in3"'},{value:'"fl-oz"'},{value:'"cup"'},{value:'"pnt"'},{value:'"qt"'},{value:'"gal"'},{value:'"ft3"'},{value:'"yd3"'},{value:'"mm3/s"'},{value:'"cm3/s"'},{value:'"ml/s"'},{value:'"cl/s"'},{value:'"dl/s"'},{value:'"l/s"'},{value:'"l/min"'},{value:'"l/h"'},{value:'"kl/s"'},{value:'"kl/min"'},{value:'"kl/h"'},{value:'"m3/s"'},{value:'"m3/min"'},{value:'"m3/h"'},{value:'"km3/s"'},{value:'"tsp/s"'},{value:'"Tbs/s"'},{value:'"in3/s"'},{value:'"in3/min"'},{value:'"in3/h"'},{value:'"fl-oz/s"'},{value:'"fl-oz/min"'},{value:'"fl-oz/h"'},{value:'"cup/s"'},{value:'"pnt/s"'},{value:'"pnt/min"'},{value:'"pnt/h"'},{value:'"qt/s"'},{value:'"gal/s"'},{value:'"gal/min"'},{value:'"gal/h"'},{value:'"ft3/s"'},{value:'"ft3/min"'},{value:'"ft3/h"'},{value:'"yd3/s"'},{value:'"yd3/min"'},{value:'"yd3/h"'},{value:'"C"'},{value:'"F"'},{value:'"K"'},{value:'"R"'},{value:'"ns"'},{value:'"mu"'},{value:'"ms"'},{value:'"s"'},{value:'"min"'},{value:'"h"'},{value:'"d"'},{value:'"week"'},{value:'"month"'},{value:'"year"'},{value:'"Hz"'},{value:'"mHz"'},{value:'"kHz"'},{value:'"MHz"'},{value:'"GHz"'},{value:'"THz"'},{value:'"rpm"'},{value:'"deg/s"'},{value:'"rad/s"'},{value:'"m/s"'},{value:'"km/h"'},{value:'"m/h"'},{value:'"knot"'},{value:'"ft/s"'},{value:'"s/m"'},{value:'"min/km"'},{value:'"s/ft"'},{value:'"Pa"'},{value:'"hPa"'},{value:'"kPa"'},{value:'"MPa"'},{value:'"bar"'},{value:'"torr"'},{value:'"psi"'},{value:'"ksi"'},{value:'"b"'},{value:'"Kb"'},{value:'"Mb"'},{value:'"Gb"'},{value:'"Tb"'},{value:'"B"'},{value:'"KB"'},{value:'"MB"'},{value:'"GB"'},{value:'"TB"'},{value:'"lx"'},{value:'"ft-cd"'},{value:'"ppm"'},{value:'"ppb"'},{value:'"ppt"'},{value:'"ppq"'},{value:'"V"'},{value:'"mV"'},{value:'"kV"'},{value:'"A"'},{value:'"mA"'},{value:'"kA"'},{value:'"W"'},{value:'"mW"'},{value:'"kW"'},{value:'"MW"'},{value:'"GW"'},{value:'"VA"'},{value:'"mVA"'},{value:'"kVA"'},{value:'"MVA"'},{value:'"GVA"'},{value:'"VAR"'},{value:'"mVAR"'},{value:'"kVAR"'},{value:'"MVAR"'},{value:'"GVAR"'},{value:'"Wh"'},{value:'"mWh"'},{value:'"kWh"'},{value:'"MWh"'},{value:'"GWh"'},{value:'"J"'},{value:'"kJ"'},{value:'"VARh"'},{value:'"mVARh"'},{value:'"kVARh"'},{value:'"MVARh"'},{value:'"GVARH"'},{value:'"deg"'},{value:'"rad"'},{value:'"grad"'},{value:'"arcmin"'},{value:'"arcsec"'}]}},colorTables:{defaultValue:null,description:"",name:"colorTables",required:!1,type:{name:"colorTablesArray"}},editedData:{defaultValue:null,description:"",name:"editedData",required:!1,type:{name:"Record<string, unknown>"}},setProps:{defaultValue:null,description:"",name:"setProps",required:!1,type:{name:"((data: Record<string, unknown>) => void)"}},checkDatafileSchema:{defaultValue:null,description:"Validate JSON datafile against schema",name:"checkDatafileSchema",required:!1,type:{name:"boolean"}},onMouseEvent:{defaultValue:null,description:"For get mouse events",name:"onMouseEvent",required:!1,type:{name:"((event: MapMouseEvent) => void)"}},getCameraPosition:{defaultValue:null,description:"",name:"getCameraPosition",required:!1,type:{name:"((input: ViewStateType) => void)"}},onRenderingProgress:{defaultValue:null,description:"Will be called while layers are processed to rendered data.\n@param progress vlaue between 0 and 100.",name:"onRenderingProgress",required:!1,type:{name:"((progress: number) => void)"}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:"((info: PickingInfo, event: MjolnirGestureEvent) => void)"}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:"((info: PickingInfo, event: MjolnirGestureEvent) => void)"}},triggerResetMultipleWells:{defaultValue:null,description:"",name:"triggerResetMultipleWells",required:!1,type:{name:"number"}},selection:{defaultValue:null,description:"Range selection of the current well",name:"selection",required:!1,type:{name:"{ well: string; selection: [number, number | undefined] | undefined; } | undefined"}},getTooltip:{defaultValue:null,description:"Override default tooltip with a callback.",name:"getTooltip",required:!1,type:{name:"TooltipCallback"}},lights:{defaultValue:null,description:"",name:"lights",required:!1,type:{name:"LightsType"}},typedArraySupport:{defaultValue:null,description:"If set to true allows to use typed arrays in layer description JS objects.",name:"typedArraySupport",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/subsurface-viewer/src/storybook/sharedSettings.tsx#EditedDataTemplate"]={docgenInfo:EditedDataTemplate.__docgenInfo,name:"EditedDataTemplate",path:"packages/subsurface-viewer/src/storybook/sharedSettings.tsx#EditedDataTemplate"})}catch(__react_docgen_typescript_loader_error){}},"../example-data/deckgl-map.json":function(module){module.exports=JSON.parse('[{"id":"DeckGL-Map","coords":{"visible":true,"multiPicking":true,"pickDepth":10},"scale":{"visible":true,"incrementValue":100,"widthPerUnit":100,"cssStyle":{"left":10,"top":10}},"coordinateUnit":"m","resources":{"propertyMap":"propertyMap.png","depthMap":"propertyMap.png","wellsData":"volve_wells.json","logData":"volve_logs.json"},"bounds":[432205,6475078,437720,6481113],"layers":[{"@@type":"ColormapLayer","image":"@@#resources.propertyMap","rotDeg":0,"bounds":[432205,6475078,437720,6481113],"colorMapName":"Rainbow","valueRange":[2782,3513],"colorMapRange":[2782,3513]},{"@@type":"Hillshading2DLayer","bounds":[432205,6475078,437720,6481113],"valueRange":[2782,3513],"rotDeg":0,"image":"@@#resources.depthMap"},{"@@type":"Map3DLayer","bounds":[432205,6475078,437720,6481113],"meshMaxError":5,"mesh":"hugin_depth_25_m_normalized_margin.png","meshValueRange":[2782,3513],"propertyTexture":"kh_netmap_25_m_normalized_margin.png","propertyValueRange":[2782,3513],"rotDeg":0,"contours":[0,50],"isContoursDepth":true,"colorMapName":"Physics","colorMapRange":[2782,3513],"visible":false},{"@@type":"WellsLayer","data":"@@#resources.wellsData","logData":"@@#resources.logData","logrunName":"BLOCKING","logName":"ZONELOG","logColor":"Stratigraphy"},{"@@type":"FaultPolygonsLayer","data":"fault_polygons.geojson"},{"@@type":"PieChartLayer","data":"piechart.json"},{"@@type":"NorthArrow3DLayer","visible":true},{"@@type":"DrawingLayer"}],"editedData":{},"views":{"layout":[1,1],"showLabel":false,"viewports":[{"id":"view_1","show3D":false,"layerIds":[]}]}}]')}}]);