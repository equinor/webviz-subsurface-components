/*! For license information please see 1194.d9970681.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[1194],{"./node_modules/@deck.gl/core/dist/controllers/controller.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return Controller}});var transition=__webpack_require__("./node_modules/@deck.gl/core/dist/transitions/transition.js");const noop=()=>{},TRANSITION_EVENTS_SNAP_TO_END=2,TRANSITION_EVENTS_IGNORE=3,DEFAULT_EASING=t=>t,DEFAULT_INTERRUPTION=1;class TransitionManager{constructor(opts){this._onTransitionUpdate=transition=>{const{time:time,settings:{interpolator:interpolator,startProps:startProps,endProps:endProps,duration:duration,easing:easing}}=transition,t=easing(time/duration),viewport=interpolator.interpolateProps(startProps,endProps,t);this.propsInTransition=this.getControllerState({...this.props,...viewport}).getViewportProps(),this.onViewStateChange({viewState:this.propsInTransition,oldViewState:this.props})},this.getControllerState=opts.getControllerState,this.propsInTransition=null,this.transition=new transition.A(opts.timeline),this.onViewStateChange=opts.onViewStateChange||noop,this.onStateChange=opts.onStateChange||noop}finalize(){this.transition.cancel()}getViewportInTransition(){return this.propsInTransition}processViewStateChange(nextProps){let transitionTriggered=!1;const currentProps=this.props;if(this.props=nextProps,!currentProps||this._shouldIgnoreViewportChange(currentProps,nextProps))return!1;if(this._isTransitionEnabled(nextProps)){let startProps=currentProps;if(this.transition.inProgress){const{interruption:interruption,endProps:endProps}=this.transition.settings;startProps={...currentProps,...interruption===TRANSITION_EVENTS_SNAP_TO_END?endProps:this.propsInTransition||currentProps}}this._triggerTransition(startProps,nextProps),transitionTriggered=!0}else this.transition.cancel();return transitionTriggered}updateTransition(){this.transition.update()}_isTransitionEnabled(props){const{transitionDuration:transitionDuration,transitionInterpolator:transitionInterpolator}=props;return(transitionDuration>0||"auto"===transitionDuration)&&Boolean(transitionInterpolator)}_isUpdateDueToCurrentTransition(props){return!(!this.transition.inProgress||!this.propsInTransition)&&this.transition.settings.interpolator.arePropsEqual(props,this.propsInTransition)}_shouldIgnoreViewportChange(currentProps,nextProps){if(this.transition.inProgress){return this.transition.settings.interruption===TRANSITION_EVENTS_IGNORE||this._isUpdateDueToCurrentTransition(nextProps)}return!this._isTransitionEnabled(nextProps)||nextProps.transitionInterpolator.arePropsEqual(currentProps,nextProps)}_triggerTransition(startProps,endProps){const startViewstate=this.getControllerState(startProps),endViewStateProps=this.getControllerState(endProps).shortestPathFrom(startViewstate),transitionInterpolator=endProps.transitionInterpolator,duration=transitionInterpolator.getDuration?transitionInterpolator.getDuration(startProps,endProps):endProps.transitionDuration;if(0===duration)return;const initialProps=transitionInterpolator.initializeProps(startProps,endViewStateProps);this.propsInTransition={};const transitionSettings={duration:duration,easing:endProps.transitionEasing||DEFAULT_EASING,interpolator:transitionInterpolator,interruption:endProps.transitionInterruption||DEFAULT_INTERRUPTION,startProps:initialProps.start,endProps:initialProps.end,onStart:endProps.onTransitionStart,onUpdate:this._onTransitionUpdate,onInterrupt:this._onTransitionEnd(endProps.onTransitionInterrupt),onEnd:this._onTransitionEnd(endProps.onTransitionEnd)};this.transition.start(transitionSettings),this.onStateChange({inTransition:!0}),this.updateTransition()}_onTransitionEnd(callback){return transition=>{this.propsInTransition=null,this.onStateChange({inTransition:!1,isZooming:!1,isPanning:!1,isRotating:!1}),callback?.(transition)}}}var linear_interpolator=__webpack_require__("./node_modules/@deck.gl/core/dist/transitions/linear-interpolator.js");const NO_TRANSITION_PROPS={transitionDuration:0},INERTIA_EASING=t=>1-(1-t)*(1-t),EVENT_TYPES_WHEEL=["wheel"],EVENT_TYPES_PAN=["panstart","panmove","panend"],EVENT_TYPES_PINCH=["pinchstart","pinchmove","pinchend"],EVENT_TYPES_TRIPLE_PAN=["tripanstart","tripanmove","tripanend"],EVENT_TYPES_DOUBLE_TAP=["doubletap"],EVENT_TYPES_KEYBOARD=["keydown"],pinchEventWorkaround={};class Controller{constructor(opts){this.state={},this._events={},this._interactionState={isDragging:!1},this._customEvents=[],this._eventStartBlocked=null,this._panMove=!1,this.invertPan=!1,this.dragMode="rotate",this.inertia=0,this.scrollZoom=!0,this.dragPan=!0,this.dragRotate=!0,this.doubleClickZoom=!0,this.touchZoom=!0,this.touchRotate=!1,this.keyboard=!0,this.transitionManager=new TransitionManager({...opts,getControllerState:props=>new this.ControllerState(props),onViewStateChange:this._onTransition.bind(this),onStateChange:this._setInteractionState.bind(this)}),this.handleEvent=this.handleEvent.bind(this),this.eventManager=opts.eventManager,this.onViewStateChange=opts.onViewStateChange||(()=>{}),this.onStateChange=opts.onStateChange||(()=>{}),this.makeViewport=opts.makeViewport}set events(customEvents){this.toggleEvents(this._customEvents,!1),this.toggleEvents(customEvents,!0),this._customEvents=customEvents,this.props&&this.setProps(this.props)}finalize(){for(const eventName in this._events)this._events[eventName]&&this.eventManager?.off(eventName,this.handleEvent);this.transitionManager.finalize()}handleEvent(event){this._controllerState=void 0;const eventStartBlocked=this._eventStartBlocked;switch(event.type){case"panstart":return!eventStartBlocked&&this._onPanStart(event);case"panmove":return this._onPan(event);case"panend":return this._onPanEnd(event);case"pinchstart":return!eventStartBlocked&&this._onPinchStart(event);case"pinchmove":return this._onPinch(event);case"pinchend":return this._onPinchEnd(event);case"tripanstart":return!eventStartBlocked&&this._onTriplePanStart(event);case"tripanmove":return this._onTriplePan(event);case"tripanend":return this._onTriplePanEnd(event);case"doubletap":return this._onDoubleTap(event);case"wheel":return this._onWheel(event);case"keydown":return this._onKeyDown(event);default:return!1}}get controllerState(){return this._controllerState=this._controllerState||new this.ControllerState({makeViewport:this.makeViewport,...this.props,...this.state}),this._controllerState}getCenter(event){const{x:x,y:y}=this.props,{offsetCenter:offsetCenter}=event;return[offsetCenter.x-x,offsetCenter.y-y]}isPointInBounds(pos,event){const{width:width,height:height}=this.props;if(event&&event.handled)return!1;const inside=pos[0]>=0&&pos[0]<=width&&pos[1]>=0&&pos[1]<=height;return inside&&event&&event.stopPropagation(),inside}isFunctionKeyPressed(event){const{srcEvent:srcEvent}=event;return Boolean(srcEvent.metaKey||srcEvent.altKey||srcEvent.ctrlKey||srcEvent.shiftKey)}isDragging(){return this._interactionState.isDragging||!1}blockEvents(timeout){const timer=setTimeout((()=>{this._eventStartBlocked===timer&&(this._eventStartBlocked=null)}),timeout);this._eventStartBlocked=timer}setProps(props){props.dragMode&&(this.dragMode=props.dragMode),this.props=props,"transitionInterpolator"in props||(props.transitionInterpolator=this._getTransitionProps().transitionInterpolator),this.transitionManager.processViewStateChange(props);const{inertia:inertia}=props;this.inertia=Number.isFinite(inertia)?inertia:!0===inertia?300:0;const{scrollZoom:scrollZoom=!0,dragPan:dragPan=!0,dragRotate:dragRotate=!0,doubleClickZoom:doubleClickZoom=!0,touchZoom:touchZoom=!0,touchRotate:touchRotate=!1,keyboard:keyboard=!0}=props,isInteractive=Boolean(this.onViewStateChange);this.toggleEvents(EVENT_TYPES_WHEEL,isInteractive&&scrollZoom),this.toggleEvents(EVENT_TYPES_PAN,isInteractive),this.toggleEvents(EVENT_TYPES_PINCH,isInteractive&&(touchZoom||touchRotate)),this.toggleEvents(EVENT_TYPES_TRIPLE_PAN,isInteractive&&touchRotate),this.toggleEvents(EVENT_TYPES_DOUBLE_TAP,isInteractive&&doubleClickZoom),this.toggleEvents(EVENT_TYPES_KEYBOARD,isInteractive&&keyboard),this.scrollZoom=scrollZoom,this.dragPan=dragPan,this.dragRotate=dragRotate,this.doubleClickZoom=doubleClickZoom,this.touchZoom=touchZoom,this.touchRotate=touchRotate,this.keyboard=keyboard}updateTransition(){this.transitionManager.updateTransition()}toggleEvents(eventNames,enabled){this.eventManager&&eventNames.forEach((eventName=>{this._events[eventName]!==enabled&&(this._events[eventName]=enabled,enabled?this.eventManager.on(eventName,this.handleEvent):this.eventManager.off(eventName,this.handleEvent))}))}updateViewport(newControllerState,extraProps=null,interactionState={}){const viewState={...newControllerState.getViewportProps(),...extraProps},changed=this.controllerState!==newControllerState;if(this.state=newControllerState.getState(),this._setInteractionState(interactionState),changed){const oldViewState=this.controllerState&&this.controllerState.getViewportProps();this.onViewStateChange&&this.onViewStateChange({viewState:viewState,interactionState:this._interactionState,oldViewState:oldViewState,viewId:this.props.id})}}_onTransition(params){this.onViewStateChange({...params,interactionState:this._interactionState,viewId:this.props.id})}_setInteractionState(newStates){Object.assign(this._interactionState,newStates),this.onStateChange(this._interactionState)}_onPanStart(event){const pos=this.getCenter(event);if(!this.isPointInBounds(pos,event))return!1;let alternateMode=this.isFunctionKeyPressed(event)||event.rightButton||!1;(this.invertPan||"pan"===this.dragMode)&&(alternateMode=!alternateMode);const newControllerState=this.controllerState[alternateMode?"panStart":"rotateStart"]({pos:pos});return this._panMove=alternateMode,this.updateViewport(newControllerState,NO_TRANSITION_PROPS,{isDragging:!0}),!0}_onPan(event){return!!this.isDragging()&&(this._panMove?this._onPanMove(event):this._onPanRotate(event))}_onPanEnd(event){return!!this.isDragging()&&(this._panMove?this._onPanMoveEnd(event):this._onPanRotateEnd(event))}_onPanMove(event){if(!this.dragPan)return!1;const pos=this.getCenter(event),newControllerState=this.controllerState.pan({pos:pos});return this.updateViewport(newControllerState,NO_TRANSITION_PROPS,{isDragging:!0,isPanning:!0}),!0}_onPanMoveEnd(event){const{inertia:inertia}=this;if(this.dragPan&&inertia&&event.velocity){const pos=this.getCenter(event),endPos=[pos[0]+event.velocityX*inertia/2,pos[1]+event.velocityY*inertia/2],newControllerState=this.controllerState.pan({pos:endPos}).panEnd();this.updateViewport(newControllerState,{...this._getTransitionProps(),transitionDuration:inertia,transitionEasing:INERTIA_EASING},{isDragging:!1,isPanning:!0})}else{const newControllerState=this.controllerState.panEnd();this.updateViewport(newControllerState,null,{isDragging:!1,isPanning:!1})}return!0}_onPanRotate(event){if(!this.dragRotate)return!1;const pos=this.getCenter(event),newControllerState=this.controllerState.rotate({pos:pos});return this.updateViewport(newControllerState,NO_TRANSITION_PROPS,{isDragging:!0,isRotating:!0}),!0}_onPanRotateEnd(event){const{inertia:inertia}=this;if(this.dragRotate&&inertia&&event.velocity){const pos=this.getCenter(event),endPos=[pos[0]+event.velocityX*inertia/2,pos[1]+event.velocityY*inertia/2],newControllerState=this.controllerState.rotate({pos:endPos}).rotateEnd();this.updateViewport(newControllerState,{...this._getTransitionProps(),transitionDuration:inertia,transitionEasing:INERTIA_EASING},{isDragging:!1,isRotating:!0})}else{const newControllerState=this.controllerState.rotateEnd();this.updateViewport(newControllerState,null,{isDragging:!1,isRotating:!1})}return!0}_onWheel(event){if(!this.scrollZoom)return!1;const pos=this.getCenter(event);if(!this.isPointInBounds(pos,event))return!1;event.srcEvent.preventDefault();const{speed:speed=.01,smooth:smooth=!1}=!0===this.scrollZoom?{}:this.scrollZoom,{delta:delta}=event;let scale=2/(1+Math.exp(-Math.abs(delta*speed)));delta<0&&0!==scale&&(scale=1/scale);const newControllerState=this.controllerState.zoom({pos:pos,scale:scale});return this.updateViewport(newControllerState,{...this._getTransitionProps({around:pos}),transitionDuration:smooth?250:1},{isZooming:!0,isPanning:!0}),!0}_onTriplePanStart(event){const pos=this.getCenter(event);if(!this.isPointInBounds(pos,event))return!1;const newControllerState=this.controllerState.rotateStart({pos:pos});return this.updateViewport(newControllerState,NO_TRANSITION_PROPS,{isDragging:!0}),!0}_onTriplePan(event){if(!this.touchRotate)return!1;if(!this.isDragging())return!1;const pos=this.getCenter(event);pos[0]-=event.deltaX;const newControllerState=this.controllerState.rotate({pos:pos});return this.updateViewport(newControllerState,NO_TRANSITION_PROPS,{isDragging:!0,isRotating:!0}),!0}_onTriplePanEnd(event){if(!this.isDragging())return!1;const{inertia:inertia}=this;if(this.touchRotate&&inertia&&event.velocityY){const pos=this.getCenter(event),endPos=[pos[0],pos[1]+=event.velocityY*inertia/2],newControllerState=this.controllerState.rotate({pos:endPos});this.updateViewport(newControllerState,{...this._getTransitionProps(),transitionDuration:inertia,transitionEasing:INERTIA_EASING},{isDragging:!1,isRotating:!0}),this.blockEvents(inertia)}else{const newControllerState=this.controllerState.rotateEnd();this.updateViewport(newControllerState,null,{isDragging:!1,isRotating:!1})}return!0}_onPinchStart(event){const pos=this.getCenter(event);if(!this.isPointInBounds(pos,event))return!1;const newControllerState=this.controllerState.zoomStart({pos:pos}).rotateStart({pos:pos});return pinchEventWorkaround._startPinchRotation=event.rotation,pinchEventWorkaround._lastPinchEvent=event,this.updateViewport(newControllerState,NO_TRANSITION_PROPS,{isDragging:!0}),!0}_onPinch(event){if(!this.touchZoom&&!this.touchRotate)return!1;if(!this.isDragging())return!1;let newControllerState=this.controllerState;if(this.touchZoom){const{scale:scale}=event,pos=this.getCenter(event);newControllerState=newControllerState.zoom({pos:pos,scale:scale})}if(this.touchRotate){const{rotation:rotation}=event;newControllerState=newControllerState.rotate({deltaAngleX:pinchEventWorkaround._startPinchRotation-rotation})}return this.updateViewport(newControllerState,NO_TRANSITION_PROPS,{isDragging:!0,isPanning:this.touchZoom,isZooming:this.touchZoom,isRotating:this.touchRotate}),pinchEventWorkaround._lastPinchEvent=event,!0}_onPinchEnd(event){if(!this.isDragging())return!1;const{inertia:inertia}=this,{_lastPinchEvent:_lastPinchEvent}=pinchEventWorkaround;if(this.touchZoom&&inertia&&_lastPinchEvent&&event.scale!==_lastPinchEvent.scale){const pos=this.getCenter(event);let newControllerState=this.controllerState.rotateEnd();const z=Math.log2(event.scale),velocityZ=(z-Math.log2(_lastPinchEvent.scale))/(event.deltaTime-_lastPinchEvent.deltaTime),endScale=Math.pow(2,z+velocityZ*inertia/2);newControllerState=newControllerState.zoom({pos:pos,scale:endScale}).zoomEnd(),this.updateViewport(newControllerState,{...this._getTransitionProps({around:pos}),transitionDuration:inertia,transitionEasing:INERTIA_EASING},{isDragging:!1,isPanning:this.touchZoom,isZooming:this.touchZoom,isRotating:!1}),this.blockEvents(inertia)}else{const newControllerState=this.controllerState.zoomEnd().rotateEnd();this.updateViewport(newControllerState,null,{isDragging:!1,isPanning:!1,isZooming:!1,isRotating:!1})}return pinchEventWorkaround._startPinchRotation=null,pinchEventWorkaround._lastPinchEvent=null,!0}_onDoubleTap(event){if(!this.doubleClickZoom)return!1;const pos=this.getCenter(event);if(!this.isPointInBounds(pos,event))return!1;const isZoomOut=this.isFunctionKeyPressed(event),newControllerState=this.controllerState.zoom({pos:pos,scale:isZoomOut?.5:2});return this.updateViewport(newControllerState,this._getTransitionProps({around:pos}),{isZooming:!0,isPanning:!0}),this.blockEvents(100),!0}_onKeyDown(event){if(!this.keyboard)return!1;const funcKey=this.isFunctionKeyPressed(event),{zoomSpeed:zoomSpeed,moveSpeed:moveSpeed,rotateSpeedX:rotateSpeedX,rotateSpeedY:rotateSpeedY}=!0===this.keyboard?{}:this.keyboard,{controllerState:controllerState}=this;let newControllerState;const interactionState={};switch(event.srcEvent.code){case"Minus":newControllerState=funcKey?controllerState.zoomOut(zoomSpeed).zoomOut(zoomSpeed):controllerState.zoomOut(zoomSpeed),interactionState.isZooming=!0;break;case"Equal":newControllerState=funcKey?controllerState.zoomIn(zoomSpeed).zoomIn(zoomSpeed):controllerState.zoomIn(zoomSpeed),interactionState.isZooming=!0;break;case"ArrowLeft":funcKey?(newControllerState=controllerState.rotateLeft(rotateSpeedX),interactionState.isRotating=!0):(newControllerState=controllerState.moveLeft(moveSpeed),interactionState.isPanning=!0);break;case"ArrowRight":funcKey?(newControllerState=controllerState.rotateRight(rotateSpeedX),interactionState.isRotating=!0):(newControllerState=controllerState.moveRight(moveSpeed),interactionState.isPanning=!0);break;case"ArrowUp":funcKey?(newControllerState=controllerState.rotateUp(rotateSpeedY),interactionState.isRotating=!0):(newControllerState=controllerState.moveUp(moveSpeed),interactionState.isPanning=!0);break;case"ArrowDown":funcKey?(newControllerState=controllerState.rotateDown(rotateSpeedY),interactionState.isRotating=!0):(newControllerState=controllerState.moveDown(moveSpeed),interactionState.isPanning=!0);break;default:return!1}return this.updateViewport(newControllerState,this._getTransitionProps(),interactionState),!0}_getTransitionProps(opts){const{transition:transition}=this;return transition&&transition.transitionInterpolator?opts?{...transition,transitionInterpolator:new linear_interpolator.A({...opts,...transition.transitionInterpolator.opts,makeViewport:this.controllerState.makeViewport})}:transition:NO_TRANSITION_PROPS}}},"./node_modules/@deck.gl/core/dist/controllers/orbit-controller.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return OrbitController},c:function(){return OrbitState}});var _math_gl_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js"),_controller_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@deck.gl/core/dist/controllers/controller.js"),_view_state_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@deck.gl/core/dist/controllers/view-state.js"),_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/math-utils.js"),_transitions_linear_interpolator_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@deck.gl/core/dist/transitions/linear-interpolator.js");class OrbitState extends _view_state_js__WEBPACK_IMPORTED_MODULE_0__.A{constructor(options){const{width:width,height:height,rotationX:rotationX=0,rotationOrbit:rotationOrbit=0,target:target=[0,0,0],zoom:zoom=0,minRotationX:minRotationX=-90,maxRotationX:maxRotationX=90,minZoom:minZoom=-1/0,maxZoom:maxZoom=1/0,startPanPosition:startPanPosition,startRotatePos:startRotatePos,startRotationX:startRotationX,startRotationOrbit:startRotationOrbit,startZoomPosition:startZoomPosition,startZoom:startZoom}=options;super({width:width,height:height,rotationX:rotationX,rotationOrbit:rotationOrbit,target:target,zoom:zoom,minRotationX:minRotationX,maxRotationX:maxRotationX,minZoom:minZoom,maxZoom:maxZoom},{startPanPosition:startPanPosition,startRotatePos:startRotatePos,startRotationX:startRotationX,startRotationOrbit:startRotationOrbit,startZoomPosition:startZoomPosition,startZoom:startZoom}),this.makeViewport=options.makeViewport}panStart({pos:pos}){return this._getUpdatedState({startPanPosition:this._unproject(pos)})}pan({pos:pos,startPosition:startPosition}){const startPanPosition=this.getState().startPanPosition||startPosition;if(!startPanPosition)return this;const newProps=this.makeViewport(this.getViewportProps()).panByPosition(startPanPosition,pos);return this._getUpdatedState(newProps)}panEnd(){return this._getUpdatedState({startPanPosition:null})}rotateStart({pos:pos}){return this._getUpdatedState({startRotatePos:pos,startRotationX:this.getViewportProps().rotationX,startRotationOrbit:this.getViewportProps().rotationOrbit})}rotate({pos:pos,deltaAngleX:deltaAngleX=0,deltaAngleY:deltaAngleY=0}){const{startRotatePos:startRotatePos,startRotationX:startRotationX,startRotationOrbit:startRotationOrbit}=this.getState(),{width:width,height:height}=this.getViewportProps();if(!startRotatePos||void 0===startRotationX||void 0===startRotationOrbit)return this;let newRotation;if(pos){let deltaScaleX=(pos[0]-startRotatePos[0])/width;(startRotationX<-90||startRotationX>90)&&(deltaScaleX*=-1),newRotation={rotationX:startRotationX+180*((pos[1]-startRotatePos[1])/height),rotationOrbit:startRotationOrbit+180*deltaScaleX}}else newRotation={rotationX:startRotationX+deltaAngleY,rotationOrbit:startRotationOrbit+deltaAngleX};return this._getUpdatedState(newRotation)}rotateEnd(){return this._getUpdatedState({startRotationX:null,startRotationOrbit:null})}shortestPathFrom(viewState){const fromProps=viewState.getViewportProps(),props={...this.getViewportProps()},{rotationOrbit:rotationOrbit}=props;return Math.abs(rotationOrbit-fromProps.rotationOrbit)>180&&(props.rotationOrbit=rotationOrbit<0?rotationOrbit+360:rotationOrbit-360),props}zoomStart({pos:pos}){return this._getUpdatedState({startZoomPosition:this._unproject(pos),startZoom:this.getViewportProps().zoom})}zoom({pos:pos,startPos:startPos,scale:scale}){let{startZoom:startZoom,startZoomPosition:startZoomPosition}=this.getState();if(startZoomPosition||(startZoom=this.getViewportProps().zoom,startZoomPosition=this._unproject(startPos)||this._unproject(pos)),!startZoomPosition)return this;const newZoom=this._calculateNewZoom({scale:scale,startZoom:startZoom}),zoomedViewport=this.makeViewport({...this.getViewportProps(),zoom:newZoom});return this._getUpdatedState({zoom:newZoom,...zoomedViewport.panByPosition(startZoomPosition,pos)})}zoomEnd(){return this._getUpdatedState({startZoomPosition:null,startZoom:null})}zoomIn(speed=2){return this._getUpdatedState({zoom:this._calculateNewZoom({scale:speed})})}zoomOut(speed=2){return this._getUpdatedState({zoom:this._calculateNewZoom({scale:1/speed})})}moveLeft(speed=50){return this._panFromCenter([-speed,0])}moveRight(speed=50){return this._panFromCenter([speed,0])}moveUp(speed=50){return this._panFromCenter([0,-speed])}moveDown(speed=50){return this._panFromCenter([0,speed])}rotateLeft(speed=15){return this._getUpdatedState({rotationOrbit:this.getViewportProps().rotationOrbit-speed})}rotateRight(speed=15){return this._getUpdatedState({rotationOrbit:this.getViewportProps().rotationOrbit+speed})}rotateUp(speed=10){return this._getUpdatedState({rotationX:this.getViewportProps().rotationX-speed})}rotateDown(speed=10){return this._getUpdatedState({rotationX:this.getViewportProps().rotationX+speed})}_unproject(pos){const viewport=this.makeViewport(this.getViewportProps());return pos&&viewport.unproject(pos)}_calculateNewZoom({scale:scale,startZoom:startZoom}){const{maxZoom:maxZoom,minZoom:minZoom}=this.getViewportProps();void 0===startZoom&&(startZoom=this.getViewportProps().zoom);const zoom=startZoom+Math.log2(scale);return(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_1__.qE)(zoom,minZoom,maxZoom)}_panFromCenter(offset){const{width:width,height:height,target:target}=this.getViewportProps();return this.pan({startPosition:target,pos:[width/2+offset[0],height/2+offset[1]]})}_getUpdatedState(newProps){return new this.constructor({makeViewport:this.makeViewport,...this.getViewportProps(),...this.getState(),...newProps})}applyConstraints(props){const{maxZoom:maxZoom,minZoom:minZoom,zoom:zoom,maxRotationX:maxRotationX,minRotationX:minRotationX,rotationOrbit:rotationOrbit}=props;return props.zoom=Array.isArray(zoom)?[(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_1__.qE)(zoom[0],minZoom,maxZoom),(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_1__.qE)(zoom[1],minZoom,maxZoom)]:(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_1__.qE)(zoom,minZoom,maxZoom),props.rotationX=(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_1__.qE)(props.rotationX,minRotationX,maxRotationX),(rotationOrbit<-180||rotationOrbit>180)&&(props.rotationOrbit=(0,_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_2__.zi)(rotationOrbit+180,360)-180),props}}class OrbitController extends _controller_js__WEBPACK_IMPORTED_MODULE_3__.A{constructor(){super(...arguments),this.ControllerState=OrbitState,this.transition={transitionDuration:300,transitionInterpolator:new _transitions_linear_interpolator_js__WEBPACK_IMPORTED_MODULE_4__.A({transitionProps:{compare:["target","zoom","rotationX","rotationOrbit"],required:["target","zoom"]}})}}}},"./node_modules/@deck.gl/core/dist/controllers/orthographic-controller.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return OrthographicController}});var _math_gl_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js"),_controller_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@deck.gl/core/dist/controllers/controller.js"),_orbit_controller_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@deck.gl/core/dist/controllers/orbit-controller.js"),_transitions_linear_interpolator_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@deck.gl/core/dist/transitions/linear-interpolator.js");class OrthographicState extends _orbit_controller_js__WEBPACK_IMPORTED_MODULE_0__.c{constructor(props){super(props),this.zoomAxis=props.zoomAxis||"all"}_calculateNewZoom({scale:scale,startZoom:startZoom}){const{maxZoom:maxZoom,minZoom:minZoom}=this.getViewportProps();void 0===startZoom&&(startZoom=this.getViewportProps().zoom);let deltaZoom=Math.log2(scale);if(Array.isArray(startZoom)){let[newZoomX,newZoomY]=startZoom;switch(this.zoomAxis){case"X":newZoomX=(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_1__.qE)(newZoomX+deltaZoom,minZoom,maxZoom);break;case"Y":newZoomY=(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_1__.qE)(newZoomY+deltaZoom,minZoom,maxZoom);break;default:let z=Math.min(newZoomX+deltaZoom,newZoomY+deltaZoom);z<minZoom&&(deltaZoom+=minZoom-z),z=Math.max(newZoomX+deltaZoom,newZoomY+deltaZoom),z>maxZoom&&(deltaZoom+=maxZoom-z),newZoomX+=deltaZoom,newZoomY+=deltaZoom}return[newZoomX,newZoomY]}return(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_1__.qE)(startZoom+deltaZoom,minZoom,maxZoom)}}class OrthographicController extends _controller_js__WEBPACK_IMPORTED_MODULE_2__.A{constructor(){super(...arguments),this.ControllerState=OrthographicState,this.transition={transitionDuration:300,transitionInterpolator:new _transitions_linear_interpolator_js__WEBPACK_IMPORTED_MODULE_3__.A(["target","zoom"])},this.dragMode="pan"}_onPanRotate(){return!1}}},"./node_modules/@deck.gl/core/dist/controllers/view-state.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return ViewState}});class ViewState{constructor(props,state){this._viewportProps=this.applyConstraints(props),this._state=state}getViewportProps(){return this._viewportProps}getState(){return this._state}}},"./node_modules/@deck.gl/core/dist/effects/lighting/ambient-light.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{$:function(){return AmbientLight}});const DEFAULT_LIGHT_COLOR=[255,255,255],DEFAULT_LIGHT_INTENSITY=1;let idCount=0;class AmbientLight{constructor(props={}){this.type="ambient";const{color:color=DEFAULT_LIGHT_COLOR}=props,{intensity:intensity=DEFAULT_LIGHT_INTENSITY}=props;this.id=props.id||"ambient-"+idCount++,this.color=color,this.intensity=intensity}}},"./node_modules/@deck.gl/core/dist/effects/lighting/directional-light.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{Z:function(){return DirectionalLight}});var _math_gl_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/classes/vector3.js");const DEFAULT_LIGHT_COLOR=[255,255,255],DEFAULT_LIGHT_INTENSITY=1,DEFAULT_LIGHT_DIRECTION=[0,0,-1];let idCount=0;class DirectionalLight{constructor(props={}){this.type="directional";const{color:color=DEFAULT_LIGHT_COLOR}=props,{intensity:intensity=DEFAULT_LIGHT_INTENSITY}=props,{direction:direction=DEFAULT_LIGHT_DIRECTION}=props,{_shadow:_shadow=!1}=props;this.id=props.id||"directional-"+idCount++,this.color=color,this.intensity=intensity,this.type="directional",this.direction=new _math_gl_core__WEBPACK_IMPORTED_MODULE_0__.P(direction).normalize().toArray(),this.shadow=_shadow}getProjectedLight(opts){return this}}},"./node_modules/@deck.gl/core/dist/effects/lighting/lighting-effect.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return LightingEffect}});var ambient_light=__webpack_require__("./node_modules/@deck.gl/core/dist/effects/lighting/ambient-light.js"),directional_light=__webpack_require__("./node_modules/@deck.gl/core/dist/effects/lighting/directional-light.js"),matrix4=__webpack_require__("./node_modules/@math.gl/core/dist/classes/matrix4.js"),vector3=__webpack_require__("./node_modules/@math.gl/core/dist/classes/vector3.js"),layers_pass=__webpack_require__("./node_modules/@deck.gl/core/dist/passes/layers-pass.js");class ShadowPass extends layers_pass.A{constructor(device,props){super(device,props),this.shadowMap=device.createTexture({width:1,height:1,sampler:{minFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"}}),this.depthBuffer=device.createTexture({format:"depth16unorm",width:1,height:1,mipmaps:!1,dataFormat:6402,type:5125}),this.fbo=device.createFramebuffer({id:"shadowmap",width:1,height:1,colorAttachments:[this.shadowMap],depthStencilAttachment:this.depthBuffer})}render(params){const target=this.fbo,pixelRatio=this.device.canvasContext.cssToDeviceRatio(),viewport=params.viewports[0],width=viewport.width*pixelRatio,height=viewport.height*pixelRatio;width===target.width&&height===target.height||target.resize({width:width,height:height}),super.render({...params,clearColor:[1,1,1,1],target:target,pass:"shadow"})}getLayerParameters(layer,layerIndex,viewport){return{...layer.props.parameters,blend:!1,depthRange:[0,1],depthTest:!0}}shouldDrawLayer(layer){return!1!==layer.props.shadowEnabled}getModuleParameters(){return{drawToShadowMap:!0}}delete(){this.fbo&&(this.fbo.destroy(),this.fbo=null),this.shadowMap&&(this.shadowMap.destroy(),this.shadowMap=null),this.depthBuffer&&(this.depthBuffer.destroy(),this.depthBuffer=null)}}var constants=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/constants.js"),project=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/project/project.js"),memoize=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/memoize.js"),dist=__webpack_require__("./node_modules/@math.gl/web-mercator/dist/index.js");const getMemoizedViewportCenterPosition=(0,memoize.A)((function getViewportCenterPosition({viewport:viewport,center:center}){return new matrix4.k(viewport.viewProjectionMatrix).invert().transform(center)})),getMemoizedViewProjectionMatrices=(0,memoize.A)((function getViewProjectionMatrices({viewport:viewport,shadowMatrices:shadowMatrices}){const projectionMatrices=[],pixelUnprojectionMatrix=viewport.pixelUnprojectionMatrix,farZ=viewport.isGeospatial?void 0:1,corners=[[0,0,farZ],[viewport.width,0,farZ],[0,viewport.height,farZ],[viewport.width,viewport.height,farZ],[0,0,-1],[viewport.width,0,-1],[0,viewport.height,-1],[viewport.width,viewport.height,-1]].map((pixel=>function screenToCommonSpace(xyz,pixelUnprojectionMatrix){const[x,y,z]=xyz,coord=(0,dist.xJ)([x,y,z],pixelUnprojectionMatrix);if(Number.isFinite(z))return coord;return[coord[0],coord[1],0]}(pixel,pixelUnprojectionMatrix)));for(const shadowMatrix of shadowMatrices){const viewMatrix=shadowMatrix.clone().translate(new vector3.P(viewport.center).negate()),positions=corners.map((corner=>viewMatrix.transform(corner))),projectionMatrix=(new matrix4.k).ortho({left:Math.min(...positions.map((position=>position[0]))),right:Math.max(...positions.map((position=>position[0]))),bottom:Math.min(...positions.map((position=>position[1]))),top:Math.max(...positions.map((position=>position[1]))),near:Math.min(...positions.map((position=>-position[2]))),far:Math.max(...positions.map((position=>-position[2])))});projectionMatrices.push(projectionMatrix.multiplyRight(shadowMatrix))}return projectionMatrices})),DEFAULT_SHADOW_COLOR=[0,0,0,1],VECTOR_TO_POINT_MATRIX=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0];var shadow={name:"shadow",dependencies:[project.A],vs:"\nconst int max_lights = 2;\nuniform mat4 shadow_uViewProjectionMatrices[max_lights];\nuniform vec4 shadow_uProjectCenters[max_lights];\nuniform bool shadow_uDrawShadowMap;\nuniform bool shadow_uUseShadowMap;\nuniform int shadow_uLightId;\nuniform float shadow_uLightCount;\n\nout vec3 shadow_vPosition[max_lights];\n\nvec4 shadow_setVertexPosition(vec4 position_commonspace) {\n  if (shadow_uDrawShadowMap) {\n    return project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[shadow_uLightId], shadow_uProjectCenters[shadow_uLightId]);\n  }\n  if (shadow_uUseShadowMap) {\n    for (int i = 0; i < max_lights; i++) {\n      if(i < int(shadow_uLightCount)) {\n        vec4 shadowMap_position = project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[i], shadow_uProjectCenters[i]);\n        shadow_vPosition[i] = (shadowMap_position.xyz / shadowMap_position.w + 1.0) / 2.0;\n      }\n    }\n  }\n  return gl_Position;\n}\n",fs:"\nconst int max_lights = 2;\nuniform bool shadow_uDrawShadowMap;\nuniform bool shadow_uUseShadowMap;\nuniform sampler2D shadow_uShadowMap0;\nuniform sampler2D shadow_uShadowMap1;\nuniform vec4 shadow_uColor;\nuniform float shadow_uLightCount;\n\nin vec3 shadow_vPosition[max_lights];\n\nconst vec4 bitPackShift = vec4(1.0, 255.0, 65025.0, 16581375.0);\nconst vec4 bitUnpackShift = 1.0 / bitPackShift;\nconst vec4 bitMask = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0,  0.0);\n\nfloat shadow_getShadowWeight(vec3 position, sampler2D shadowMap) {\n  vec4 rgbaDepth = texture(shadowMap, position.xy);\n\n  float z = dot(rgbaDepth, bitUnpackShift);\n  return smoothstep(0.001, 0.01, position.z - z);\n}\n\nvec4 shadow_filterShadowColor(vec4 color) {\n  if (shadow_uDrawShadowMap) {\n    vec4 rgbaDepth = fract(gl_FragCoord.z * bitPackShift);\n    rgbaDepth -= rgbaDepth.gbaa * bitMask;\n    return rgbaDepth;\n  }\n  if (shadow_uUseShadowMap) {\n    float shadowAlpha = 0.0;\n    shadowAlpha += shadow_getShadowWeight(shadow_vPosition[0], shadow_uShadowMap0);\n    if(shadow_uLightCount > 1.0) {\n      shadowAlpha += shadow_getShadowWeight(shadow_vPosition[1], shadow_uShadowMap1);\n    }\n    shadowAlpha *= shadow_uColor.a / shadow_uLightCount;\n    float blendedAlpha = shadowAlpha + color.a * (1.0 - shadowAlpha);\n\n    return vec4(\n      mix(color.rgb, shadow_uColor.rgb, shadowAlpha / blendedAlpha),\n      blendedAlpha\n    );\n  }\n  return color;\n}\n",inject:{"vs:DECKGL_FILTER_GL_POSITION":"\n    position = shadow_setVertexPosition(geometry.position);\n    ","fs:DECKGL_FILTER_COLOR":"\n    color = shadow_filterShadowColor(color);\n    "},getUniforms:(opts={},context={})=>"viewport"in opts&&(opts.drawToShadowMap||opts.shadowMaps&&opts.shadowMaps.length>0)?function createShadowUniforms(opts,context){const{shadowEnabled:shadowEnabled=!0}=opts;if(!shadowEnabled||!opts.shadowMatrices||!opts.shadowMatrices.length)return{shadow_uDrawShadowMap:!1,shadow_uUseShadowMap:!1,shadow_uShadowMap0:opts.dummyShadowMap,shadow_uShadowMap1:opts.dummyShadowMap};const uniforms={shadow_uDrawShadowMap:Boolean(opts.drawToShadowMap),shadow_uUseShadowMap:!!opts.shadowMaps&&opts.shadowMaps.length>0,shadow_uColor:opts.shadowColor||DEFAULT_SHADOW_COLOR,shadow_uLightId:opts.shadowLightId||0,shadow_uLightCount:opts.shadowMatrices.length},center=getMemoizedViewportCenterPosition({viewport:opts.viewport,center:context.project_uCenter}),projectCenters=[],viewProjectionMatrices=getMemoizedViewProjectionMatrices({shadowMatrices:opts.shadowMatrices,viewport:opts.viewport}).slice();for(let i=0;i<opts.shadowMatrices.length;i++){const viewProjectionMatrix=viewProjectionMatrices[i],viewProjectionMatrixCentered=viewProjectionMatrix.clone().translate(new vector3.P(opts.viewport.center).negate());context.project_uCoordinateSystem===constants.rf.LNGLAT&&context.project_uProjectionMode===constants.Kx.WEB_MERCATOR?(viewProjectionMatrices[i]=viewProjectionMatrixCentered,projectCenters[i]=center):(viewProjectionMatrices[i]=viewProjectionMatrix.clone().multiplyRight(VECTOR_TO_POINT_MATRIX),projectCenters[i]=viewProjectionMatrixCentered.transform(center))}for(let i=0;i<viewProjectionMatrices.length;i++)uniforms[`shadow_uViewProjectionMatrices[${i}]`]=viewProjectionMatrices[i],uniforms[`shadow_uProjectCenters[${i}]`]=projectCenters[i];for(let i=0;i<2;i++)uniforms[`shadow_uShadowMap${i}`]=opts.shadowMaps&&opts.shadowMaps[i]||opts.dummyShadowMap;return uniforms}(opts,context):{}};const DEFAULT_AMBIENT_LIGHT_PROPS={color:[255,255,255],intensity:1},DEFAULT_DIRECTIONAL_LIGHT_PROPS=[{color:[255,255,255],intensity:1,direction:[-1,3,-1]},{color:[255,255,255],intensity:.9,direction:[1,-8,-2.5]}],lighting_effect_DEFAULT_SHADOW_COLOR=[0,0,0,200/255];class LightingEffect{constructor(props={}){this.id="lighting-effect",this.shadowColor=lighting_effect_DEFAULT_SHADOW_COLOR,this.shadow=!1,this.ambientLight=null,this.directionalLights=[],this.pointLights=[],this.shadowPasses=[],this.shadowMaps=[],this.dummyShadowMap=null,this.setProps(props)}setup(context){this.context=context;const{device:device,deck:deck}=context;this.shadow&&!this.dummyShadowMap&&(this._createShadowPasses(device),deck._addDefaultShaderModule(shadow),this.dummyShadowMap=device.createTexture({width:1,height:1}))}setProps(props){this.ambientLight=null,this.directionalLights=[],this.pointLights=[];for(const key in props){const lightSource=props[key];switch(lightSource.type){case"ambient":this.ambientLight=lightSource;break;case"directional":this.directionalLights.push(lightSource);break;case"point":this.pointLights.push(lightSource)}}this._applyDefaultLights(),this.shadow=this.directionalLights.some((light=>light.shadow)),this.context&&this.setup(this.context),this.props=props}preRender({layers:layers,layerFilter:layerFilter,viewports:viewports,onViewportActive:onViewportActive,views:views}){if(this.shadow){this.shadowMatrices=this._calculateMatrices();for(let i=0;i<this.shadowPasses.length;i++){this.shadowPasses[i].render({layers:layers,layerFilter:layerFilter,viewports:viewports,onViewportActive:onViewportActive,views:views,moduleParameters:{shadowLightId:i,dummyShadowMap:this.dummyShadowMap,shadowMatrices:this.shadowMatrices}})}}}getModuleParameters(layer){const parameters=this.shadow?{shadowMaps:this.shadowMaps,dummyShadowMap:this.dummyShadowMap,shadowColor:this.shadowColor,shadowMatrices:this.shadowMatrices}:{};return parameters.lightSources={ambientLight:this.ambientLight,directionalLights:this.directionalLights.map((directionalLight=>directionalLight.getProjectedLight({layer:layer}))),pointLights:this.pointLights.map((pointLight=>pointLight.getProjectedLight({layer:layer})))},parameters}cleanup(context){for(const shadowPass of this.shadowPasses)shadowPass.delete();this.shadowPasses.length=0,this.shadowMaps.length=0,this.dummyShadowMap&&(this.dummyShadowMap.destroy(),this.dummyShadowMap=null,context.deck._removeDefaultShaderModule(shadow))}_calculateMatrices(){const lightMatrices=[];for(const light of this.directionalLights){const viewMatrix=(new matrix4.k).lookAt({eye:new vector3.P(light.direction).negate()});lightMatrices.push(viewMatrix)}return lightMatrices}_createShadowPasses(device){for(let i=0;i<this.directionalLights.length;i++){const shadowPass=new ShadowPass(device);this.shadowPasses[i]=shadowPass,this.shadowMaps[i]=shadowPass.shadowMap}}_applyDefaultLights(){const{ambientLight:ambientLight,pointLights:pointLights,directionalLights:directionalLights}=this;ambientLight||0!==pointLights.length||0!==directionalLights.length||(this.ambientLight=new ambient_light.$(DEFAULT_AMBIENT_LIGHT_PROPS),this.directionalLights.push(new directional_light.Z(DEFAULT_DIRECTIONAL_LIGHT_PROPS[0]),new directional_light.Z(DEFAULT_DIRECTIONAL_LIGHT_PROPS[1])))}}},"./node_modules/@deck.gl/core/dist/passes/layers-pass.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return LayersPass}});class Pass{constructor(device,props={id:"pass"}){const{id:id}=props;this.id=id,this.device=device,this.props={...props}}setProps(props){Object.assign(this.props,props)}render(params){}cleanup(){}}class LayersPass extends Pass{constructor(){super(...arguments),this._lastRenderIndex=-1}render(options){const[width,height]=this.device.canvasContext.getDrawingBufferSize(),clearCanvas=options.clearCanvas??!0,clearColor=options.clearColor??(!!clearCanvas&&[0,0,0,0]),clearDepth=!!clearCanvas&&1,clearStencil=!!clearCanvas&&0,colorMask=options.colorMask??15,parameters={viewport:[0,0,width,height]};options.colorMask&&(parameters.colorMask=colorMask),options.scissorRect&&(parameters.scissorRect=options.scissorRect);const renderPass=this.device.beginRenderPass({framebuffer:options.target,parameters:parameters,clearColor:clearColor,clearDepth:clearDepth,clearStencil:clearStencil});try{return this._drawLayers(renderPass,options)}finally{renderPass.end()}}_drawLayers(renderPass,options){const{target:target,moduleParameters:moduleParameters,viewports:viewports,views:views,onViewportActive:onViewportActive,clearStack:clearStack=!0}=options;options.pass=options.pass||"unknown",clearStack&&(this._lastRenderIndex=-1);const renderStats=[];for(const viewport of viewports){const view=views&&views[viewport.id];onViewportActive?.(viewport);const drawLayerParams=this._getDrawLayerParams(viewport,options),subViewports=viewport.subViewports||[viewport];for(const subViewport of subViewports){const stats=this._drawLayersInViewport(renderPass,{target:target,moduleParameters:moduleParameters,viewport:subViewport,view:view,pass:options.pass,layers:options.layers},drawLayerParams);renderStats.push(stats)}}return renderStats}_getDrawLayerParams(viewport,{layers:layers,pass:pass,isPicking:isPicking=!1,layerFilter:layerFilter,cullRect:cullRect,effects:effects,moduleParameters:moduleParameters},evaluateShouldDrawOnly=!1){const drawLayerParams=[],indexResolver=layerIndexResolver(this._lastRenderIndex+1),drawContext={layer:layers[0],viewport:viewport,isPicking:isPicking,renderPass:pass,cullRect:cullRect},layerFilterCache={};for(let layerIndex=0;layerIndex<layers.length;layerIndex++){const layer=layers[layerIndex],shouldDrawLayer=this._shouldDrawLayer(layer,drawContext,layerFilter,layerFilterCache),layerParam={shouldDrawLayer:shouldDrawLayer};shouldDrawLayer&&!evaluateShouldDrawOnly&&(layerParam.layerRenderIndex=indexResolver(layer,shouldDrawLayer),layerParam.moduleParameters=this._getModuleParameters(layer,effects,pass,moduleParameters),layerParam.layerParameters={...layer.context.deck?.props.parameters,...this.getLayerParameters(layer,layerIndex,viewport)}),drawLayerParams[layerIndex]=layerParam}return drawLayerParams}_drawLayersInViewport(renderPass,{layers:layers,moduleParameters:globalModuleParameters,pass:pass,target:target,viewport:viewport,view:view},drawLayerParams){const glViewport=function getGLViewport(device,{moduleParameters:moduleParameters,target:target,viewport:viewport}){const pixelRatio=moduleParameters&&moduleParameters.devicePixelRatio||device.canvasContext.cssToDeviceRatio(),[,drawingBufferHeight]=device.canvasContext.getDrawingBufferSize(),height=target?target.height:drawingBufferHeight,dimensions=viewport;return[dimensions.x*pixelRatio,height-(dimensions.y+dimensions.height)*pixelRatio,dimensions.width*pixelRatio,dimensions.height*pixelRatio]}(this.device,{moduleParameters:globalModuleParameters,target:target,viewport:viewport});if(view&&view.props.clear){const clearOpts=!0===view.props.clear?{color:!0,depth:!0}:view.props.clear;this.device.withParametersWebGL({scissorTest:!0,scissor:glViewport},(()=>this.device.clearWebGL(clearOpts)))}const renderStatus={totalCount:layers.length,visibleCount:0,compositeCount:0,pickableCount:0};renderPass.setParameters({viewport:glViewport});for(let layerIndex=0;layerIndex<layers.length;layerIndex++){const layer=layers[layerIndex],{shouldDrawLayer:shouldDrawLayer,layerRenderIndex:layerRenderIndex,moduleParameters:moduleParameters,layerParameters:layerParameters}=drawLayerParams[layerIndex];if(shouldDrawLayer&&layer.props.pickable&&renderStatus.pickableCount++,layer.isComposite)renderStatus.compositeCount++;else if(shouldDrawLayer){renderStatus.visibleCount++,this._lastRenderIndex=Math.max(this._lastRenderIndex,layerRenderIndex),moduleParameters.viewport=viewport,layer.context.renderPass=renderPass;try{layer._drawLayer({renderPass:renderPass,moduleParameters:moduleParameters,uniforms:{layerIndex:layerRenderIndex},parameters:layerParameters})}catch(err){layer.raiseError(err,`drawing ${layer} to ${pass}`)}}}return renderStatus}shouldDrawLayer(layer){return!0}getModuleParameters(layer,effects){return null}getLayerParameters(layer,layerIndex,viewport){return layer.props.parameters}_shouldDrawLayer(layer,drawContext,layerFilter,layerFilterCache){if(!(layer.props.visible&&this.shouldDrawLayer(layer)))return!1;drawContext.layer=layer;let parent=layer.parent;for(;parent;){if(!parent.props.visible||!parent.filterSubLayer(drawContext))return!1;drawContext.layer=parent,parent=parent.parent}if(layerFilter){const rootLayerId=drawContext.layer.id;if(rootLayerId in layerFilterCache||(layerFilterCache[rootLayerId]=layerFilter(drawContext)),!layerFilterCache[rootLayerId])return!1}return layer.activateViewport(drawContext.viewport),!0}_getModuleParameters(layer,effects,pass,overrides){const devicePixelRatio=this.device.canvasContext.cssToDeviceRatio(),moduleParameters=Object.assign(Object.create(layer.internalState?.propsInTransition||layer.props),{autoWrapLongitude:layer.wrapLongitude,viewport:layer.context.viewport,mousePosition:layer.context.mousePosition,picking:{isActive:0},devicePixelRatio:devicePixelRatio});if(effects)for(const effect of effects)Object.assign(moduleParameters,effect.getModuleParameters?.(layer));return Object.assign(moduleParameters,this.getModuleParameters(layer,effects),overrides)}}function layerIndexResolver(startIndex=0,layerIndices={}){const resolvers={},resolveLayerIndex=(layer,isDrawn)=>{const indexOverride=layer.props._offset,layerId=layer.id,parentId=layer.parent&&layer.parent.id;let index;if(parentId&&!(parentId in layerIndices)&&resolveLayerIndex(layer.parent,!1),parentId in resolvers){const resolver=resolvers[parentId]=resolvers[parentId]||layerIndexResolver(layerIndices[parentId],layerIndices);index=resolver(layer,isDrawn),resolvers[layerId]=resolver}else Number.isFinite(indexOverride)?(index=indexOverride+(layerIndices[parentId]||0),resolvers[layerId]=null):index=startIndex;return isDrawn&&index>=startIndex&&(startIndex=index+1),layerIndices[layerId]=index,index};return resolveLayerIndex}},"./node_modules/@deck.gl/core/dist/shaderlib/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{cN:function(){return getShaderAssembler}});var _luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/lib/shader-assembler.js");const DEFAULT_MODULES=[__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/project/project.js").A],SHADER_HOOKS=["vs:DECKGL_FILTER_SIZE(inout vec3 size, VertexGeometry geometry)","vs:DECKGL_FILTER_GL_POSITION(inout vec4 position, VertexGeometry geometry)","vs:DECKGL_FILTER_COLOR(inout vec4 color, VertexGeometry geometry)","fs:DECKGL_FILTER_COLOR(inout vec4 color, FragmentGeometry geometry)"];function getShaderAssembler(){const shaderAssembler=_luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_1__._.getDefaultShaderAssembler();for(const shaderModule of DEFAULT_MODULES)shaderAssembler.addDefaultModule(shaderModule);for(const shaderHook of SHADER_HOOKS)shaderAssembler.addShaderHook(shaderHook);return shaderAssembler}},"./node_modules/@deck.gl/core/dist/transitions/linear-interpolator.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return LinearInterpolator}});var common=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js"),assert=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/assert.js");class TransitionInterpolator{constructor(opts){const{compare:compare,extract:extract,required:required}=opts;this._propsToCompare=compare,this._propsToExtract=extract||compare,this._requiredProps=required}arePropsEqual(currentProps,nextProps){for(const key of this._propsToCompare)if(!(key in currentProps)||!(key in nextProps)||!(0,common.aI)(currentProps[key],nextProps[key]))return!1;return!0}initializeProps(startProps,endProps){const startViewStateProps={},endViewStateProps={};for(const key of this._propsToExtract)(key in startProps||key in endProps)&&(startViewStateProps[key]=startProps[key],endViewStateProps[key]=endProps[key]);return this._checkRequiredProps(startViewStateProps),this._checkRequiredProps(endViewStateProps),{start:startViewStateProps,end:endViewStateProps}}getDuration(startProps,endProps){return endProps.transitionDuration}_checkRequiredProps(props){this._requiredProps&&this._requiredProps.forEach((propName=>{const value=props[propName];(0,assert.A)(Number.isFinite(value)||Array.isArray(value),`${propName} is required for transition`)}))}}const DEFAULT_PROPS=["longitude","latitude","zoom","bearing","pitch"],DEFAULT_REQUIRED_PROPS=["longitude","latitude","zoom"];class LinearInterpolator extends TransitionInterpolator{constructor(opts={}){const transitionProps=Array.isArray(opts)?opts:opts.transitionProps,normalizedOpts=Array.isArray(opts)?{}:opts;normalizedOpts.transitionProps=Array.isArray(transitionProps)?{compare:transitionProps,required:transitionProps}:transitionProps||{compare:DEFAULT_PROPS,required:DEFAULT_REQUIRED_PROPS},super(normalizedOpts.transitionProps),this.opts=normalizedOpts}initializeProps(startProps,endProps){const result=super.initializeProps(startProps,endProps),{makeViewport:makeViewport,around:around}=this.opts;if(makeViewport&&around){const startViewport=makeViewport(startProps),endViewport=makeViewport(endProps),aroundPosition=startViewport.unproject(around);result.start.around=around,Object.assign(result.end,{around:endViewport.project(aroundPosition),aroundPosition:aroundPosition,width:endProps.width,height:endProps.height})}return result}interpolateProps(startProps,endProps,t){const propsInTransition={};for(const key of this._propsToExtract)propsInTransition[key]=(0,common.Cc)(startProps[key]||0,endProps[key]||0,t);if(endProps.aroundPosition&&this.opts.makeViewport){const viewport=this.opts.makeViewport({...endProps,...propsInTransition});Object.assign(propsInTransition,viewport.panByPosition(endProps.aroundPosition,(0,common.Cc)(startProps.around,endProps.around,t)))}return propsInTransition}}},"./node_modules/@deck.gl/core/dist/viewports/orthographic-viewport.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return OrthographicViewport}});var _viewports_viewport_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@deck.gl/core/dist/viewports/viewport.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@math.gl/core/dist/classes/matrix4.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec2.js"),_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/web-mercator/dist/index.js");const viewMatrix=(new _math_gl_core__WEBPACK_IMPORTED_MODULE_1__.k).lookAt({eye:[0,0,1]});function getProjectionMatrix({width:width,height:height,near:near,far:far,padding:padding}){let left=-width/2,right=width/2,bottom=-height/2,top=height/2;if(padding){const{left:l=0,right:r=0,top:t=0,bottom:b=0}=padding,offsetX=(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_2__.qE)((l+width-r)/2,0,width)-width/2,offsetY=(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_2__.qE)((t+height-b)/2,0,height)-height/2;left-=offsetX,right-=offsetX,bottom+=offsetY,top+=offsetY}return(new _math_gl_core__WEBPACK_IMPORTED_MODULE_1__.k).ortho({left:left,right:right,bottom:bottom,top:top,near:near,far:far})}class OrthographicViewport extends _viewports_viewport_js__WEBPACK_IMPORTED_MODULE_3__.A{constructor(props){const{width:width,height:height,near:near=.1,far:far=1e3,zoom:zoom=0,target:target=[0,0,0],padding:padding=null,flipY:flipY=!0}=props,zoomX=Array.isArray(zoom)?zoom[0]:zoom,zoomY=Array.isArray(zoom)?zoom[1]:zoom,zoom_=Math.min(zoomX,zoomY),scale=Math.pow(2,zoom_);let distanceScales;if(zoomX!==zoomY){const scaleX=Math.pow(2,zoomX),scaleY=Math.pow(2,zoomY);distanceScales={unitsPerMeter:[scaleX/scale,scaleY/scale,1],metersPerUnit:[scale/scaleX,scale/scaleY,1]}}super({...props,longitude:void 0,position:target,viewMatrix:viewMatrix.clone().scale([scale,scale*(flipY?-1:1),scale]),projectionMatrix:getProjectionMatrix({width:width||1,height:height||1,padding:padding,near:near,far:far}),zoom:zoom_,distanceScales:distanceScales})}projectFlat([X,Y]){const{unitsPerMeter:unitsPerMeter}=this.distanceScales;return[X*unitsPerMeter[0],Y*unitsPerMeter[1]]}unprojectFlat([x,y]){const{metersPerUnit:metersPerUnit}=this.distanceScales;return[x*metersPerUnit[0],y*metersPerUnit[1]]}panByPosition(coords,pixel){const fromLocation=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.xJ)(pixel,this.pixelUnprojectionMatrix),toLocation=this.projectFlat(coords),translate=_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.WQ([],toLocation,_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.ze([],fromLocation)),newCenter=_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.WQ([],this.center,translate);return{target:this.unprojectFlat(newCenter)}}}},"./node_modules/@deck.gl/core/dist/views/map-view.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return map_view}});var view=__webpack_require__("./node_modules/@deck.gl/core/dist/views/view.js"),web_mercator_viewport=__webpack_require__("./node_modules/@deck.gl/core/dist/viewports/web-mercator-viewport.js"),common=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js"),controller=__webpack_require__("./node_modules/@deck.gl/core/dist/controllers/controller.js"),view_state=__webpack_require__("./node_modules/@deck.gl/core/dist/controllers/view-state.js"),dist=__webpack_require__("./node_modules/@math.gl/web-mercator/dist/index.js"),assert=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/assert.js"),linear_interpolator=__webpack_require__("./node_modules/@deck.gl/core/dist/transitions/linear-interpolator.js");class MapState extends view_state.A{constructor(options){const{width:width,height:height,latitude:latitude,longitude:longitude,zoom:zoom,bearing:bearing=0,pitch:pitch=0,altitude:altitude=1.5,position:position=[0,0,0],maxZoom:maxZoom=20,minZoom:minZoom=0,maxPitch:maxPitch=60,minPitch:minPitch=0,startPanLngLat:startPanLngLat,startZoomLngLat:startZoomLngLat,startRotatePos:startRotatePos,startBearing:startBearing,startPitch:startPitch,startZoom:startZoom,normalize:normalize=!0}=options;(0,assert.A)(Number.isFinite(longitude)),(0,assert.A)(Number.isFinite(latitude)),(0,assert.A)(Number.isFinite(zoom)),super({width:width,height:height,latitude:latitude,longitude:longitude,zoom:zoom,bearing:bearing,pitch:pitch,altitude:altitude,maxZoom:maxZoom,minZoom:minZoom,maxPitch:maxPitch,minPitch:minPitch,normalize:normalize,position:position},{startPanLngLat:startPanLngLat,startZoomLngLat:startZoomLngLat,startRotatePos:startRotatePos,startBearing:startBearing,startPitch:startPitch,startZoom:startZoom}),this.makeViewport=options.makeViewport}panStart({pos:pos}){return this._getUpdatedState({startPanLngLat:this._unproject(pos)})}pan({pos:pos,startPos:startPos}){const startPanLngLat=this.getState().startPanLngLat||this._unproject(startPos);if(!startPanLngLat)return this;const newProps=this.makeViewport(this.getViewportProps()).panByPosition(startPanLngLat,pos);return this._getUpdatedState(newProps)}panEnd(){return this._getUpdatedState({startPanLngLat:null})}rotateStart({pos:pos}){return this._getUpdatedState({startRotatePos:pos,startBearing:this.getViewportProps().bearing,startPitch:this.getViewportProps().pitch})}rotate({pos:pos,deltaAngleX:deltaAngleX=0,deltaAngleY:deltaAngleY=0}){const{startRotatePos:startRotatePos,startBearing:startBearing,startPitch:startPitch}=this.getState();if(!startRotatePos||void 0===startBearing||void 0===startPitch)return this;let newRotation;return newRotation=pos?this._getNewRotation(pos,startRotatePos,startPitch,startBearing):{bearing:startBearing+deltaAngleX,pitch:startPitch+deltaAngleY},this._getUpdatedState(newRotation)}rotateEnd(){return this._getUpdatedState({startBearing:null,startPitch:null})}zoomStart({pos:pos}){return this._getUpdatedState({startZoomLngLat:this._unproject(pos),startZoom:this.getViewportProps().zoom})}zoom({pos:pos,startPos:startPos,scale:scale}){let{startZoom:startZoom,startZoomLngLat:startZoomLngLat}=this.getState();if(startZoomLngLat||(startZoom=this.getViewportProps().zoom,startZoomLngLat=this._unproject(startPos)||this._unproject(pos)),!startZoomLngLat)return this;const{maxZoom:maxZoom,minZoom:minZoom}=this.getViewportProps();let zoom=startZoom+Math.log2(scale);zoom=(0,common.qE)(zoom,minZoom,maxZoom);const zoomedViewport=this.makeViewport({...this.getViewportProps(),zoom:zoom});return this._getUpdatedState({zoom:zoom,...zoomedViewport.panByPosition(startZoomLngLat,pos)})}zoomEnd(){return this._getUpdatedState({startZoomLngLat:null,startZoom:null})}zoomIn(speed=2){return this._zoomFromCenter(speed)}zoomOut(speed=2){return this._zoomFromCenter(1/speed)}moveLeft(speed=100){return this._panFromCenter([speed,0])}moveRight(speed=100){return this._panFromCenter([-speed,0])}moveUp(speed=100){return this._panFromCenter([0,speed])}moveDown(speed=100){return this._panFromCenter([0,-speed])}rotateLeft(speed=15){return this._getUpdatedState({bearing:this.getViewportProps().bearing-speed})}rotateRight(speed=15){return this._getUpdatedState({bearing:this.getViewportProps().bearing+speed})}rotateUp(speed=10){return this._getUpdatedState({pitch:this.getViewportProps().pitch+speed})}rotateDown(speed=10){return this._getUpdatedState({pitch:this.getViewportProps().pitch-speed})}shortestPathFrom(viewState){const fromProps=viewState.getViewportProps(),props={...this.getViewportProps()},{bearing:bearing,longitude:longitude}=props;return Math.abs(bearing-fromProps.bearing)>180&&(props.bearing=bearing<0?bearing+360:bearing-360),Math.abs(longitude-fromProps.longitude)>180&&(props.longitude=longitude<0?longitude+360:longitude-360),props}applyConstraints(props){const{maxZoom:maxZoom,minZoom:minZoom,zoom:zoom}=props;props.zoom=(0,common.qE)(zoom,minZoom,maxZoom);const{maxPitch:maxPitch,minPitch:minPitch,pitch:pitch}=props;props.pitch=(0,common.qE)(pitch,minPitch,maxPitch);const{normalize:normalize=!0}=props;return normalize&&Object.assign(props,(0,dist.CK)(props)),props}_zoomFromCenter(scale){const{width:width,height:height}=this.getViewportProps();return this.zoom({pos:[width/2,height/2],scale:scale})}_panFromCenter(offset){const{width:width,height:height}=this.getViewportProps();return this.pan({startPos:[width/2,height/2],pos:[width/2+offset[0],height/2+offset[1]]})}_getUpdatedState(newProps){return new this.constructor({makeViewport:this.makeViewport,...this.getViewportProps(),...this.getState(),...newProps})}_unproject(pos){const viewport=this.makeViewport(this.getViewportProps());return pos&&viewport.unproject(pos)}_getNewRotation(pos,startPos,startPitch,startBearing){const deltaX=pos[0]-startPos[0],deltaY=pos[1]-startPos[1],centerY=pos[1],startY=startPos[1],{width:width,height:height}=this.getViewportProps(),deltaScaleX=deltaX/width;let deltaScaleY=0;deltaY>0?Math.abs(height-startY)>5&&(deltaScaleY=deltaY/(startY-height)*1.2):deltaY<0&&startY>5&&(deltaScaleY=1-centerY/startY),deltaScaleY=(0,common.qE)(deltaScaleY,-1,1);const{minPitch:minPitch,maxPitch:maxPitch}=this.getViewportProps();let pitch=startPitch;return deltaScaleY>0?pitch=startPitch+deltaScaleY*(maxPitch-startPitch):deltaScaleY<0&&(pitch=startPitch-deltaScaleY*(minPitch-startPitch)),{pitch:pitch,bearing:startBearing+180*deltaScaleX}}}class MapController extends controller.A{constructor(){super(...arguments),this.ControllerState=MapState,this.transition={transitionDuration:300,transitionInterpolator:new linear_interpolator.A({transitionProps:{compare:["longitude","latitude","zoom","bearing","pitch","position"],required:["longitude","latitude","zoom"]}})},this.dragMode="pan"}setProps(props){props.position=props.position||[0,0,0];const oldProps=this.props;super.setProps(props);(!oldProps||oldProps.height!==props.height)&&this.updateViewport(new this.ControllerState({makeViewport:this.makeViewport,...props,...this.state}))}}class MapView extends view.A{constructor(props={}){super(props)}get ViewportType(){return web_mercator_viewport.A}get ControllerType(){return MapController}}MapView.displayName="MapView";var map_view=MapView},"./node_modules/@deck.gl/core/dist/views/orthographic-view.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var _view_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@deck.gl/core/dist/views/view.js"),_viewports_orthographic_viewport_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@deck.gl/core/dist/viewports/orthographic-viewport.js"),_controllers_orthographic_controller_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@deck.gl/core/dist/controllers/orthographic-controller.js");class OrthographicView extends _view_js__WEBPACK_IMPORTED_MODULE_0__.A{constructor(props={}){super(props)}get ViewportType(){return _viewports_orthographic_viewport_js__WEBPACK_IMPORTED_MODULE_1__.A}get ControllerType(){return _controllers_orthographic_controller_js__WEBPACK_IMPORTED_MODULE_2__.A}}OrthographicView.displayName="OrthographicView",__webpack_exports__.A=OrthographicView},"./node_modules/@deck.gl/core/dist/views/view.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return View}});const PERCENT_OR_PIXELS_REGEX=/([0-9]+\.?[0-9]*)(%|px)/;function parsePosition(value){switch(typeof value){case"number":return{position:value,relative:!1};case"string":const match=PERCENT_OR_PIXELS_REGEX.exec(value);if(match&&match.length>=3){const relative="%"===match[2],position=parseFloat(match[1]);return{position:relative?position/100:position,relative:relative}}default:throw new Error(`Could not parse position string ${value}`)}}function getPosition(position,extent){return position.relative?Math.round(position.position*extent):position.position}var deep_equal=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/deep-equal.js");class View{constructor(props){const{id:id,x:x=0,y:y=0,width:width="100%",height:height="100%",padding:padding=null}=props;this.id=id||this.constructor.displayName||"view",this.props={...props,id:this.id},this._x=parsePosition(x),this._y=parsePosition(y),this._width=parsePosition(width),this._height=parsePosition(height),this._padding=padding&&{left:parsePosition(padding.left||0),right:parsePosition(padding.right||0),top:parsePosition(padding.top||0),bottom:parsePosition(padding.bottom||0)},this.equals=this.equals.bind(this),Object.seal(this)}equals(view){return this===view||this.ViewportType===view.ViewportType&&(0,deep_equal.b)(this.props,view.props,2)}makeViewport({width:width,height:height,viewState:viewState}){viewState=this.filterViewState(viewState);const viewportDimensions=this.getDimensions({width:width,height:height});return viewportDimensions.height&&viewportDimensions.width?new this.ViewportType({...viewState,...this.props,...viewportDimensions}):null}getViewStateId(){const{viewState:viewState}=this.props;return"string"==typeof viewState?viewState:viewState?.id||this.id}filterViewState(viewState){if(this.props.viewState&&"object"==typeof this.props.viewState){if(!this.props.viewState.id)return this.props.viewState;const newViewState={...viewState};for(const key in this.props.viewState)"id"!==key&&(newViewState[key]=this.props.viewState[key]);return newViewState}return viewState}getDimensions({width:width,height:height}){const dimensions={x:getPosition(this._x,width),y:getPosition(this._y,height),width:getPosition(this._width,width),height:getPosition(this._height,height)};return this._padding&&(dimensions.padding={left:getPosition(this._padding.left,width),top:getPosition(this._padding.top,height),right:getPosition(this._padding.right,width),bottom:getPosition(this._padding.bottom,height)}),dimensions}get controller(){const opts=this.props.controller;return opts?!0===opts?{type:this.ControllerType}:"function"==typeof opts?{type:opts}:{type:this.ControllerType,...opts}:null}}},"./node_modules/@deck.gl/react/dist/deckgl.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return deckgl}});var react=__webpack_require__("./node_modules/react/index.js");let channelHandles=1,animationHandles=1;class Timeline{time=0;channels=new Map;animations=new Map;playing=!1;lastEngineTime=-1;constructor(){}addChannel(props){const{delay:delay=0,duration:duration=Number.POSITIVE_INFINITY,rate:rate=1,repeat:repeat=1}=props,channelId=channelHandles++,channel={time:0,delay:delay,duration:duration,rate:rate,repeat:repeat};return this._setChannelTime(channel,this.time),this.channels.set(channelId,channel),channelId}removeChannel(channelId){this.channels.delete(channelId);for(const[animationHandle,animation]of this.animations)animation.channel===channelId&&this.detachAnimation(animationHandle)}isFinished(channelId){const channel=this.channels.get(channelId);return void 0!==channel&&this.time>=channel.delay+channel.duration*channel.repeat}getTime(channelId){if(void 0===channelId)return this.time;const channel=this.channels.get(channelId);return void 0===channel?-1:channel.time}setTime(time){this.time=Math.max(0,time);const channels=this.channels.values();for(const channel of channels)this._setChannelTime(channel,this.time);const animations=this.animations.values();for(const animationData of animations){const{animation:animation,channel:channel}=animationData;animation.setTime(this.getTime(channel))}}play(){this.playing=!0}pause(){this.playing=!1,this.lastEngineTime=-1}reset(){this.setTime(0)}attachAnimation(animation,channelHandle){const animationHandle=animationHandles++;return this.animations.set(animationHandle,{animation:animation,channel:channelHandle}),animation.setTime(this.getTime(channelHandle)),animationHandle}detachAnimation(channelId){this.animations.delete(channelId)}update(engineTime){this.playing&&(-1===this.lastEngineTime&&(this.lastEngineTime=engineTime),this.setTime(this.time+(engineTime-this.lastEngineTime)),this.lastEngineTime=engineTime)}_setChannelTime(channel,time){const offsetTime=time-channel.delay;offsetTime>=channel.duration*channel.repeat?channel.time=channel.duration*channel.rate:(channel.time=Math.max(0,offsetTime)%channel.duration,channel.time*=channel.rate)}}var shaderlib=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/index.js"),constants=__webpack_require__("./node_modules/@deck.gl/core/dist/lifecycle/constants.js"),log=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/log.js"),debug=__webpack_require__("./node_modules/@deck.gl/core/dist/debug/index.js"),flatten=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/flatten.js"),dist=__webpack_require__("./node_modules/@probe.gl/stats/dist/index.js"),load=__webpack_require__("./node_modules/@loaders.gl/core/dist/lib/api/load.js");class Resource{constructor(id,data,context){this._loadCount=0,this._subscribers=new Set,this.id=id,this.context=context,this.setData(data)}subscribe(consumer){this._subscribers.add(consumer)}unsubscribe(consumer){this._subscribers.delete(consumer)}inUse(){return this._subscribers.size>0}delete(){}getData(){return this.isLoaded?this._error?Promise.reject(this._error):this._content:this._loader.then((()=>this.getData()))}setData(data,forceUpdate){if(data===this._data&&!forceUpdate)return;this._data=data;const loadCount=++this._loadCount;let loader=data;"string"==typeof data&&(loader=(0,load.H)(data)),loader instanceof Promise?(this.isLoaded=!1,this._loader=loader.then((result=>{this._loadCount===loadCount&&(this.isLoaded=!0,this._error=void 0,this._content=result)})).catch((error=>{this._loadCount===loadCount&&(this.isLoaded=!0,this._error=error||!0)}))):(this.isLoaded=!0,this._error=void 0,this._content=data);for(const subscriber of this._subscribers)subscriber.onChange(this.getData())}}class ResourceManager{constructor(props){this.protocol=props.protocol||"resource://",this._context={device:props.device,gl:props.device?.gl,resourceManager:this},this._resources={},this._consumers={},this._pruneRequest=null}contains(resourceId){return!!resourceId.startsWith(this.protocol)||resourceId in this._resources}add({resourceId:resourceId,data:data,forceUpdate:forceUpdate=!1,persistent:persistent=!0}){let res=this._resources[resourceId];res?res.setData(data,forceUpdate):(res=new Resource(resourceId,data,this._context),this._resources[resourceId]=res),res.persistent=persistent}remove(resourceId){const res=this._resources[resourceId];res&&(res.delete(),delete this._resources[resourceId])}unsubscribe({consumerId:consumerId}){const consumer=this._consumers[consumerId];if(consumer){for(const requestId in consumer){const request=consumer[requestId],resource=this._resources[request.resourceId];resource&&resource.unsubscribe(request)}delete this._consumers[consumerId],this.prune()}}subscribe({resourceId:resourceId,onChange:onChange,consumerId:consumerId,requestId:requestId="default"}){const{_resources:resources,protocol:protocol}=this;resourceId.startsWith(protocol)&&(resources[resourceId=resourceId.replace(protocol,"")]||this.add({resourceId:resourceId,data:null,persistent:!1}));const res=resources[resourceId];if(this._track(consumerId,requestId,res,onChange),res)return res.getData()}prune(){this._pruneRequest||(this._pruneRequest=setTimeout((()=>this._prune()),0))}finalize(){for(const key in this._resources)this._resources[key].delete()}_track(consumerId,requestId,resource,onChange){const consumers=this._consumers,consumer=consumers[consumerId]=consumers[consumerId]||{};let request=consumer[requestId];const oldResource=request&&request.resourceId&&this._resources[request.resourceId];oldResource&&(oldResource.unsubscribe(request),this.prune()),resource&&(request?(request.onChange=onChange,request.resourceId=resource.id):request={onChange:onChange,resourceId:resource.id},consumer[requestId]=request,resource.subscribe(request))}_prune(){this._pruneRequest=null;for(const key of Object.keys(this._resources)){const res=this._resources[key];res.persistent||res.inUse()||(res.delete(),delete this._resources[key])}}}var viewports_viewport=__webpack_require__("./node_modules/@deck.gl/core/dist/viewports/viewport.js");class LayerManager{constructor(device,props){this._lastRenderedLayers=[],this._needsRedraw=!1,this._needsUpdate=!1,this._nextLayers=null,this._debug=!1,this._defaultShaderModulesChanged=!1,this.activateViewport=viewport=>{(0,debug.A)("layerManager.activateViewport",this,viewport),viewport&&(this.context.viewport=viewport)};const{deck:deck,stats:stats,viewport:viewport,timeline:timeline}=props||{};this.layers=[],this.resourceManager=new ResourceManager({device:device,protocol:"deck://"}),this.context={mousePosition:null,userData:{},layerManager:this,device:device,gl:device?.gl,deck:deck,shaderAssembler:(0,shaderlib.cN)(),defaultShaderModules:[],renderPass:void 0,stats:stats||new dist.Uz({id:"deck.gl"}),viewport:viewport||new viewports_viewport.A({id:"DEFAULT-INITIAL-VIEWPORT"}),timeline:timeline||new Timeline,resourceManager:this.resourceManager,onError:void 0},Object.seal(this)}finalize(){this.resourceManager.finalize();for(const layer of this.layers)this._finalizeLayer(layer)}needsRedraw(opts={clearRedrawFlags:!1}){let redraw=this._needsRedraw;opts.clearRedrawFlags&&(this._needsRedraw=!1);for(const layer of this.layers){const layerNeedsRedraw=layer.getNeedsRedraw(opts);redraw=redraw||layerNeedsRedraw}return redraw}needsUpdate(){return this._nextLayers&&this._nextLayers!==this._lastRenderedLayers?"layers changed":this._defaultShaderModulesChanged?"shader modules changed":this._needsUpdate}setNeedsRedraw(reason){this._needsRedraw=this._needsRedraw||reason}setNeedsUpdate(reason){this._needsUpdate=this._needsUpdate||reason}getLayers({layerIds:layerIds}={}){return layerIds?this.layers.filter((layer=>layerIds.find((layerId=>0===layer.id.indexOf(layerId))))):this.layers}setProps(props){"debug"in props&&(this._debug=props.debug),"userData"in props&&(this.context.userData=props.userData),"layers"in props&&(this._nextLayers=props.layers),"onError"in props&&(this.context.onError=props.onError)}setLayers(newLayers,reason){(0,debug.A)("layerManager.setLayers",this,reason,newLayers),this._lastRenderedLayers=newLayers;const flatLayers=(0,flatten.B)(newLayers,Boolean);for(const layer of flatLayers)layer.context=this.context;this._updateLayers(this.layers,flatLayers)}updateLayers(){const reason=this.needsUpdate();reason&&(this.setNeedsRedraw(`updating layers: ${reason}`),this.setLayers(this._nextLayers||this._lastRenderedLayers,reason)),this._nextLayers=null}addDefaultShaderModule(module){const{defaultShaderModules:defaultShaderModules}=this.context;defaultShaderModules.find((m=>m.name===module.name))||(defaultShaderModules.push(module),this._defaultShaderModulesChanged=!0)}removeDefaultShaderModule(module){const{defaultShaderModules:defaultShaderModules}=this.context,i=defaultShaderModules.findIndex((m=>m.name===module.name));i>=0&&(defaultShaderModules.splice(i,1),this._defaultShaderModulesChanged=!0)}_handleError(stage,error,layer){layer.raiseError(error,`${stage} of ${layer}`)}_updateLayers(oldLayers,newLayers){const oldLayerMap={};for(const oldLayer of oldLayers)oldLayerMap[oldLayer.id]?log.A.warn(`Multiple old layers with same id ${oldLayer.id}`)():oldLayerMap[oldLayer.id]=oldLayer;if(this._defaultShaderModulesChanged){for(const layer of oldLayers)layer.setNeedsUpdate(),layer.setChangeFlags({extensionsChanged:!0});this._defaultShaderModulesChanged=!1}const generatedLayers=[];this._updateSublayersRecursively(newLayers,oldLayerMap,generatedLayers),this._finalizeOldLayers(oldLayerMap);let needsUpdate=!1;for(const layer of generatedLayers)if(layer.hasUniformTransition()){needsUpdate=`Uniform transition in ${layer}`;break}this._needsUpdate=needsUpdate,this.layers=generatedLayers}_updateSublayersRecursively(newLayers,oldLayerMap,generatedLayers){for(const newLayer of newLayers){newLayer.context=this.context;const oldLayer=oldLayerMap[newLayer.id];null===oldLayer&&log.A.warn(`Multiple new layers with same id ${newLayer.id}`)(),oldLayerMap[newLayer.id]=null;let sublayers=null;try{this._debug&&oldLayer!==newLayer&&newLayer.validateProps(),oldLayer?(this._transferLayerState(oldLayer,newLayer),this._updateLayer(newLayer)):this._initializeLayer(newLayer),generatedLayers.push(newLayer),sublayers=newLayer.isComposite?newLayer.getSubLayers():null}catch(err){this._handleError("matching",err,newLayer)}sublayers&&this._updateSublayersRecursively(sublayers,oldLayerMap,generatedLayers)}}_finalizeOldLayers(oldLayerMap){for(const layerId in oldLayerMap){const layer=oldLayerMap[layerId];layer&&this._finalizeLayer(layer)}}_initializeLayer(layer){try{layer._initialize(),layer.lifecycle=constants.VD.INITIALIZED}catch(err){this._handleError("initialization",err,layer)}}_transferLayerState(oldLayer,newLayer){newLayer._transferState(oldLayer),newLayer.lifecycle=constants.VD.MATCHED,newLayer!==oldLayer&&(oldLayer.lifecycle=constants.VD.AWAITING_GC)}_updateLayer(layer){try{layer._update()}catch(err){this._handleError("update",err,layer)}}_finalizeLayer(layer){this._needsRedraw=this._needsRedraw||`finalized ${layer}`,layer.lifecycle=constants.VD.AWAITING_FINALIZATION;try{layer._finalize(),layer.lifecycle=constants.VD.FINALIZED}catch(err){this._handleError("finalization",err,layer)}}}var deep_equal=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/deep-equal.js");class ViewManager{constructor(props){this.views=[],this.width=100,this.height=100,this.viewState={},this.controllers={},this.timeline=props.timeline,this._viewports=[],this._viewportMap={},this._isUpdating=!1,this._needsRedraw="First render",this._needsUpdate="Initialize",this._eventManager=props.eventManager,this._eventCallbacks={onViewStateChange:props.onViewStateChange,onInteractionStateChange:props.onInteractionStateChange},Object.seal(this),this.setProps(props)}finalize(){for(const key in this.controllers){const controller=this.controllers[key];controller&&controller.finalize()}this.controllers={}}needsRedraw(opts={clearRedrawFlags:!1}){const redraw=this._needsRedraw;return opts.clearRedrawFlags&&(this._needsRedraw=!1),redraw}setNeedsUpdate(reason){this._needsUpdate=this._needsUpdate||reason,this._needsRedraw=this._needsRedraw||reason}updateViewStates(){for(const viewId in this.controllers){const controller=this.controllers[viewId];controller&&controller.updateTransition()}}getViewports(rect){return rect?this._viewports.filter((viewport=>viewport.containsPixel(rect))):this._viewports}getViews(){const viewMap={};return this.views.forEach((view=>{viewMap[view.id]=view})),viewMap}getView(viewId){return this.views.find((view=>view.id===viewId))}getViewState(viewOrViewId){const view="string"==typeof viewOrViewId?this.getView(viewOrViewId):viewOrViewId,viewState=view&&this.viewState[view.getViewStateId()]||this.viewState;return view?view.filterViewState(viewState):viewState}getViewport(viewId){return this._viewportMap[viewId]}unproject(xyz,opts){const viewports=this.getViewports(),pixel={x:xyz[0],y:xyz[1]};for(let i=viewports.length-1;i>=0;--i){const viewport=viewports[i];if(viewport.containsPixel(pixel)){const p=xyz.slice();return p[0]-=viewport.x,p[1]-=viewport.y,viewport.unproject(p,opts)}}return null}setProps(props){props.views&&this._setViews(props.views),props.viewState&&this._setViewState(props.viewState),("width"in props||"height"in props)&&this._setSize(props.width,props.height),this._isUpdating||this._update()}_update(){this._isUpdating=!0,this._needsUpdate&&(this._needsUpdate=!1,this._rebuildViewports()),this._needsUpdate&&(this._needsUpdate=!1,this._rebuildViewports()),this._isUpdating=!1}_setSize(width,height){width===this.width&&height===this.height||(this.width=width,this.height=height,this.setNeedsUpdate("Size changed"))}_setViews(views){views=(0,flatten.B)(views,Boolean);this._diffViews(views,this.views)&&this.setNeedsUpdate("views changed"),this.views=views}_setViewState(viewState){if(viewState){!(0,deep_equal.b)(viewState,this.viewState,3)&&this.setNeedsUpdate("viewState changed"),this.viewState=viewState}else log.A.warn("missing `viewState` or `initialViewState`")()}_createController(view,props){return new(0,props.type)({timeline:this.timeline,eventManager:this._eventManager,onViewStateChange:this._eventCallbacks.onViewStateChange,onStateChange:this._eventCallbacks.onInteractionStateChange,makeViewport:viewState=>this.getView(view.id)?.makeViewport({viewState:viewState,width:this.width,height:this.height})})}_updateController(view,viewState,viewport,controller){const controllerProps=view.controller;if(controllerProps&&viewport){const resolvedProps={...viewState,...controllerProps,id:view.id,x:viewport.x,y:viewport.y,width:viewport.width,height:viewport.height};return controller&&controller.constructor===controllerProps.type||(controller=this._createController(view,resolvedProps)),controller&&controller.setProps(resolvedProps),controller}return null}_rebuildViewports(){const{views:views}=this,oldControllers=this.controllers;this._viewports=[],this.controllers={};let invalidateControllers=!1;for(let i=views.length;i--;){const view=views[i],viewState=this.getViewState(view),viewport=view.makeViewport({viewState:viewState,width:this.width,height:this.height});let oldController=oldControllers[view.id];const hasController=Boolean(view.controller);hasController&&!oldController&&(invalidateControllers=!0),!invalidateControllers&&hasController||!oldController||(oldController.finalize(),oldController=null),this.controllers[view.id]=this._updateController(view,viewState,viewport,oldController),viewport&&this._viewports.unshift(viewport)}for(const id in oldControllers){const oldController=oldControllers[id];oldController&&!this.controllers[id]&&oldController.finalize()}this._buildViewportMap()}_buildViewportMap(){this._viewportMap={},this._viewports.forEach((viewport=>{viewport.id&&(this._viewportMap[viewport.id]=this._viewportMap[viewport.id]||viewport)}))}_diffViews(newViews,oldViews){return newViews.length!==oldViews.length||newViews.some(((_,i)=>!newViews[i].equals(oldViews[i])))}}var map_view=__webpack_require__("./node_modules/@deck.gl/core/dist/views/map-view.js"),lighting_effect=__webpack_require__("./node_modules/@deck.gl/core/dist/effects/lighting/lighting-effect.js");const DEFAULT_LIGHTING_EFFECT=new lighting_effect.A;class EffectManager{constructor(context){this._resolvedEffects=[],this._defaultEffects=[],this.effects=[],this._context=context,this._needsRedraw="Initial render",this._setEffects([])}addDefaultEffect(effect){const defaultEffects=this._defaultEffects;if(!defaultEffects.find((e=>e.id===effect.id))){const index=defaultEffects.findIndex((e=>function compareEffects(e1,e2){return(e1.order??1/0)-(e2.order??1/0)}(e,effect)>0));index<0?defaultEffects.push(effect):defaultEffects.splice(index,0,effect),effect.setup(this._context),this._setEffects(this.effects)}}setProps(props){"effects"in props&&((0,deep_equal.b)(props.effects,this.effects,1)||this._setEffects(props.effects))}needsRedraw(opts={clearRedrawFlags:!1}){const redraw=this._needsRedraw;return opts.clearRedrawFlags&&(this._needsRedraw=!1),redraw}getEffects(){return this._resolvedEffects}_setEffects(effects){const oldEffectsMap={};for(const effect of this.effects)oldEffectsMap[effect.id]=effect;const nextEffects=[];for(const effect of effects){const oldEffect=oldEffectsMap[effect.id];let effectToAdd=effect;oldEffect&&oldEffect!==effect?oldEffect.setProps?(oldEffect.setProps(effect.props),effectToAdd=oldEffect):oldEffect.cleanup(this._context):oldEffect||effect.setup(this._context),nextEffects.push(effectToAdd),delete oldEffectsMap[effect.id]}for(const removedEffectId in oldEffectsMap)oldEffectsMap[removedEffectId].cleanup(this._context);this.effects=nextEffects,this._resolvedEffects=nextEffects.concat(this._defaultEffects),effects.some((effect=>effect instanceof lighting_effect.A))||this._resolvedEffects.push(DEFAULT_LIGHTING_EFFECT),this._needsRedraw="effects changed"}finalize(){for(const effect of this._resolvedEffects)effect.cleanup(this._context);this.effects.length=0,this._resolvedEffects.length=0,this._defaultEffects.length=0}}var layers_pass=__webpack_require__("./node_modules/@deck.gl/core/dist/passes/layers-pass.js");class DrawLayersPass extends layers_pass.A{shouldDrawLayer(layer){const{operation:operation}=layer.props;return operation.includes("draw")||operation.includes("terrain")}}const PICKING_BLENDING={blendColorOperation:"add",blendColorSrcFactor:"one",blendColorDstFactor:"zero",blendAlphaOperation:"add",blendAlphaSrcFactor:"constant-alpha",blendAlphaDstFactor:"zero"};class PickLayersPass extends layers_pass.A{constructor(){super(...arguments),this._colorEncoderState=null}render(props){return"pickingFBO"in props?this._drawPickingBuffer(props):super.render(props)}_drawPickingBuffer({layers:layers,layerFilter:layerFilter,views:views,viewports:viewports,onViewportActive:onViewportActive,pickingFBO:pickingFBO,deviceRect:{x:x,y:y,width:width,height:height},cullRect:cullRect,effects:effects,pass:pass="picking",pickZ:pickZ,moduleParameters:moduleParameters}){this.pickZ=pickZ;const colorEncoderState=this._resetColorEncoder(pickZ),scissorRect=[x,y,width,height],renderStatus=super.render({target:pickingFBO,layers:layers,layerFilter:layerFilter,views:views,viewports:viewports,onViewportActive:onViewportActive,cullRect:cullRect,effects:effects?.filter((e=>e.useInPicking)),pass:pass,isPicking:!0,moduleParameters:moduleParameters,clearColor:[0,0,0,0],colorMask:15,scissorRect:scissorRect});this._colorEncoderState=null;return{decodePickingColor:colorEncoderState&&decodeColor.bind(null,colorEncoderState),stats:renderStatus}}shouldDrawLayer(layer){const{pickable:pickable,operation:operation}=layer.props;return pickable&&operation.includes("draw")||operation.includes("terrain")||operation.includes("mask")}getModuleParameters(){return{picking:{isActive:1,isAttribute:this.pickZ},lightSources:{}}}getLayerParameters(layer,layerIndex,viewport){const pickParameters={depthMask:!0,depthTest:!0,depthRange:[0,1],...layer.props.parameters},{pickable:pickable,operation:operation}=layer.props;return!this._colorEncoderState||operation.includes("terrain")?pickParameters.blend=!1:pickable&&operation.includes("draw")&&(Object.assign(pickParameters,PICKING_BLENDING),pickParameters.blend=!0,pickParameters.blendColor=function encodeColor(encoded,layer,viewport){const{byLayer:byLayer,byAlpha:byAlpha}=encoded;let a,entry=byLayer.get(layer);entry?(entry.viewports.push(viewport),a=entry.a):(a=byLayer.size+1,a<=255?(entry={a:a,layer:layer,viewports:[viewport]},byLayer.set(layer,entry),byAlpha[a]=entry):(log.A.warn("Too many pickable layers, only picking the first 255")(),a=0));return[0,0,0,a/255]}(this._colorEncoderState,layer,viewport)),pickParameters}_resetColorEncoder(pickZ){return this._colorEncoderState=pickZ?null:{byLayer:new Map,byAlpha:[]},this._colorEncoderState}}function decodeColor(encoded,pickedColor){const entry=encoded.byAlpha[pickedColor[3]];return entry&&{pickedLayer:entry.layer,pickedViewports:entry.viewports,pickedObjectIndex:entry.layer.decodePickingColor(pickedColor)}}class DeckRenderer{constructor(device){this.device=device,this.layerFilter=null,this.drawPickingColors=!1,this.drawLayersPass=new DrawLayersPass(device),this.pickLayersPass=new PickLayersPass(device),this.renderCount=0,this._needsRedraw="Initial render",this.renderBuffers=[],this.lastPostProcessEffect=null}setProps(props){this.layerFilter!==props.layerFilter&&(this.layerFilter=props.layerFilter,this._needsRedraw="layerFilter changed"),this.drawPickingColors!==props.drawPickingColors&&(this.drawPickingColors=props.drawPickingColors,this._needsRedraw="drawPickingColors changed")}renderLayers(opts){if(!opts.viewports.length)return;const layerPass=this.drawPickingColors?this.pickLayersPass:this.drawLayersPass,renderOpts={layerFilter:this.layerFilter,isPicking:this.drawPickingColors,...opts};renderOpts.effects&&this._preRender(renderOpts.effects,renderOpts);const outputBuffer=this.lastPostProcessEffect?this.renderBuffers[0]:renderOpts.target;this.lastPostProcessEffect&&(renderOpts.clearColor=[0,0,0,0],renderOpts.clearCanvas=!0);const renderStats=layerPass.render({...renderOpts,target:outputBuffer});renderOpts.effects&&this._postRender(renderOpts.effects,renderOpts),this.renderCount++,(0,debug.A)("deckRenderer.renderLayers",this,renderStats,opts)}needsRedraw(opts={clearRedrawFlags:!1}){const redraw=this._needsRedraw;return opts.clearRedrawFlags&&(this._needsRedraw=!1),redraw}finalize(){const{renderBuffers:renderBuffers}=this;for(const buffer of renderBuffers)buffer.delete();renderBuffers.length=0}_preRender(effects,opts){this.lastPostProcessEffect=null,opts.preRenderStats=opts.preRenderStats||{};for(const effect of effects)opts.preRenderStats[effect.id]=effect.preRender(opts),effect.postRender&&(this.lastPostProcessEffect=effect.id);this.lastPostProcessEffect&&this._resizeRenderBuffers()}_resizeRenderBuffers(){const{renderBuffers:renderBuffers}=this,size=this.device.canvasContext.getDrawingBufferSize();0===renderBuffers.length&&[0,1].map((i=>{const texture=this.device.createTexture({sampler:{minFilter:"linear",magFilter:"linear"}});renderBuffers.push(this.device.createFramebuffer({id:`deck-renderbuffer-${i}`,colorAttachments:[texture]}))}));for(const buffer of renderBuffers)buffer.resize(size)}_postRender(effects,opts){const{renderBuffers:renderBuffers}=this,params={...opts,inputBuffer:renderBuffers[0],swapBuffer:renderBuffers[1]};for(const effect of effects)if(effect.postRender){params.target=effect.id===this.lastPostProcessEffect?opts.target:void 0;const buffer=effect.postRender(params);params.inputBuffer=buffer,params.swapBuffer=buffer===renderBuffers[0]?renderBuffers[1]:renderBuffers[0]}}}const NO_PICKED_OBJECT={pickedColor:null,pickedObjectIndex:-1};function getClosestObject({pickedColors:pickedColors,decodePickingColor:decodePickingColor,deviceX:deviceX,deviceY:deviceY,deviceRadius:deviceRadius,deviceRect:deviceRect}){const{x:x,y:y,width:width,height:height}=deviceRect;let minSquareDistanceToCenter=deviceRadius*deviceRadius,closestPixelIndex=-1,i=0;for(let row=0;row<height;row++){const dy=row+y-deviceY,dy2=dy*dy;if(dy2>minSquareDistanceToCenter)i+=4*width;else for(let col=0;col<width;col++){if(pickedColors[i+3]-1>=0){const dx=col+x-deviceX,d2=dx*dx+dy2;d2<=minSquareDistanceToCenter&&(minSquareDistanceToCenter=d2,closestPixelIndex=i)}i+=4}}if(closestPixelIndex>=0){const pickedColor=pickedColors.slice(closestPixelIndex,closestPixelIndex+4),pickedObject=decodePickingColor(pickedColor);if(pickedObject){const dy=Math.floor(closestPixelIndex/4/width),dx=closestPixelIndex/4-dy*width;return{...pickedObject,pickedColor:pickedColor,pickedX:x+dx,pickedY:y+dy}}log.A.error("Picked non-existent layer. Is picking buffer corrupt?")()}return NO_PICKED_OBJECT}function getEmptyPickingInfo({pickInfo:pickInfo,viewports:viewports,pixelRatio:pixelRatio,x:x,y:y,z:z}){let coordinate,pickedViewport=viewports[0];if(viewports.length>1&&(pickedViewport=function getViewportFromCoordinates(viewports,pixel){for(let i=viewports.length-1;i>=0;i--){const viewport=viewports[i];if(viewport.containsPixel(pixel))return viewport}return viewports[0]}(pickInfo?.pickedViewports||viewports,{x:x,y:y})),pickedViewport){const point=[x-pickedViewport.x,y-pickedViewport.y];void 0!==z&&(point[2]=z),coordinate=pickedViewport.unproject(point)}return{color:null,layer:null,viewport:pickedViewport,index:-1,picked:!1,x:x,y:y,pixel:[x,y],coordinate:coordinate,devicePixel:pickInfo&&"pickedX"in pickInfo?[pickInfo.pickedX,pickInfo.pickedY]:void 0,pixelRatio:pixelRatio}}function processPickInfo(opts){const{pickInfo:pickInfo,lastPickedInfo:lastPickedInfo,mode:mode,layers:layers}=opts,{pickedColor:pickedColor,pickedLayer:pickedLayer,pickedObjectIndex:pickedObjectIndex}=pickInfo,affectedLayers=pickedLayer?[pickedLayer]:[];if("hover"===mode){const lastPickedPixelIndex=lastPickedInfo.index,lastPickedLayerId=lastPickedInfo.layerId,pickedLayerId=pickedLayer?pickedLayer.props.id:null;if(pickedLayerId!==lastPickedLayerId||pickedObjectIndex!==lastPickedPixelIndex){if(pickedLayerId!==lastPickedLayerId){const lastPickedLayer=layers.find((layer=>layer.props.id===lastPickedLayerId));lastPickedLayer&&affectedLayers.unshift(lastPickedLayer)}lastPickedInfo.layerId=pickedLayerId,lastPickedInfo.index=pickedObjectIndex,lastPickedInfo.info=null}}const baseInfo=getEmptyPickingInfo(opts),infos=new Map;return infos.set(null,baseInfo),affectedLayers.forEach((layer=>{let info={...baseInfo};layer===pickedLayer&&(info.color=pickedColor,info.index=pickedObjectIndex,info.picked=!0),info=getLayerPickingInfo({layer:layer,info:info,mode:mode});const rootLayer=info.layer;layer===pickedLayer&&"hover"===mode&&(lastPickedInfo.info=info),infos.set(rootLayer.id,info),"hover"===mode&&rootLayer.updateAutoHighlight(info)})),infos}function getLayerPickingInfo({layer:layer,info:info,mode:mode}){for(;layer&&info;){const sourceLayer=info.layer||null;info.sourceLayer=sourceLayer,info.layer=layer,info=layer.getPickingInfo({info:info,mode:mode,sourceLayer:sourceLayer}),layer=layer.parent}return info}class DeckPicker{constructor(device){this._pickable=!0,this.device=device,this.pickLayersPass=new PickLayersPass(device),this.lastPickedInfo={index:-1,layerId:null,info:null}}setProps(props){"layerFilter"in props&&(this.layerFilter=props.layerFilter),"_pickable"in props&&(this._pickable=props._pickable)}finalize(){this.pickingFBO&&this.pickingFBO.destroy(),this.depthFBO&&this.depthFBO.destroy()}pickObject(opts){return this._pickClosestObject(opts)}pickObjects(opts){return this._pickVisibleObjects(opts)}getLastPickedObject({x:x,y:y,layers:layers,viewports:viewports},lastPickedInfo=this.lastPickedInfo.info){const lastPickedLayerId=lastPickedInfo&&lastPickedInfo.layer&&lastPickedInfo.layer.id,lastPickedViewportId=lastPickedInfo&&lastPickedInfo.viewport&&lastPickedInfo.viewport.id,layer=lastPickedLayerId?layers.find((l=>l.id===lastPickedLayerId)):null,viewport=lastPickedViewportId&&viewports.find((v=>v.id===lastPickedViewportId))||viewports[0],coordinate=viewport&&viewport.unproject([x-viewport.x,y-viewport.y]),info={x:x,y:y,viewport:viewport,coordinate:coordinate,layer:layer};return{...lastPickedInfo,...info}}_resizeBuffer(){if(!this.pickingFBO&&(this.pickingFBO=this.device.createFramebuffer({colorAttachments:["rgba8unorm"],depthStencilAttachment:"depth16unorm"}),this.device.isTextureFormatRenderable("rgba32float"))){const depthFBO=this.device.createFramebuffer({colorAttachments:["rgba32float"],depthStencilAttachment:"depth16unorm"});this.depthFBO=depthFBO}const{canvas:canvas}=this.device.getCanvasContext();this.pickingFBO?.resize({width:canvas.width,height:canvas.height}),this.depthFBO?.resize({width:canvas.width,height:canvas.height})}_getPickable(layers){if(!1===this._pickable)return null;const pickableLayers=layers.filter((layer=>this.pickLayersPass.shouldDrawLayer(layer)&&!layer.isComposite));return pickableLayers.length?pickableLayers:null}_pickClosestObject({layers:layers,views:views,viewports:viewports,x:x,y:y,radius:radius=0,depth:depth=1,mode:mode="query",unproject3D:unproject3D,onViewportActive:onViewportActive,effects:effects}){const pixelRatio=this.device.canvasContext.cssToDeviceRatio(),pickableLayers=this._getPickable(layers);if(!pickableLayers||0===viewports.length)return{result:[],emptyInfo:getEmptyPickingInfo({viewports:viewports,x:x,y:y,pixelRatio:pixelRatio})};this._resizeBuffer();const devicePixelRange=this.device.canvasContext.cssToDevicePixels([x,y],!0),devicePixel=[devicePixelRange.x+Math.floor(devicePixelRange.width/2),devicePixelRange.y+Math.floor(devicePixelRange.height/2)],deviceRadius=Math.round(radius*pixelRatio),{width:width,height:height}=this.pickingFBO,deviceRect=this._getPickingRect({deviceX:devicePixel[0],deviceY:devicePixel[1],deviceRadius:deviceRadius,deviceWidth:width,deviceHeight:height}),cullRect={x:x-radius,y:y-radius,width:2*radius+1,height:2*radius+1};let infos;const result=[],affectedLayers=new Set;for(let i=0;i<depth;i++){let pickInfo,z;if(deviceRect){pickInfo=getClosestObject({...this._drawAndSample({layers:pickableLayers,views:views,viewports:viewports,onViewportActive:onViewportActive,deviceRect:deviceRect,cullRect:cullRect,effects:effects,pass:`picking:${mode}`}),deviceX:devicePixel[0],deviceY:devicePixel[1],deviceRadius:deviceRadius,deviceRect:deviceRect})}else pickInfo={pickedColor:null,pickedObjectIndex:-1};if(pickInfo.pickedLayer&&unproject3D&&this.depthFBO){const{pickedColors:pickedColors2}=this._drawAndSample({layers:[pickInfo.pickedLayer],views:views,viewports:viewports,onViewportActive:onViewportActive,deviceRect:{x:pickInfo.pickedX,y:pickInfo.pickedY,width:1,height:1},cullRect:cullRect,effects:effects,pass:`picking:${mode}:z`},!0);pickedColors2[3]&&(z=pickedColors2[0])}pickInfo.pickedLayer&&i+1<depth&&(affectedLayers.add(pickInfo.pickedLayer),pickInfo.pickedLayer.disablePickingIndex(pickInfo.pickedObjectIndex)),infos=processPickInfo({pickInfo:pickInfo,lastPickedInfo:this.lastPickedInfo,mode:mode,layers:pickableLayers,viewports:viewports,x:x,y:y,z:z,pixelRatio:pixelRatio});for(const info of infos.values())info.layer&&result.push(info);if(!pickInfo.pickedColor)break}for(const layer of affectedLayers)layer.restorePickingColors();return{result:result,emptyInfo:infos.get(null)}}_pickVisibleObjects({layers:layers,views:views,viewports:viewports,x:x,y:y,width:width=1,height:height=1,mode:mode="query",maxObjects:maxObjects=null,onViewportActive:onViewportActive,effects:effects}){const pickableLayers=this._getPickable(layers);if(!pickableLayers||0===viewports.length)return[];this._resizeBuffer();const pixelRatio=this.device.canvasContext.cssToDeviceRatio(),leftTop=this.device.canvasContext.cssToDevicePixels([x,y],!0),deviceLeft=leftTop.x,deviceTop=leftTop.y+leftTop.height,rightBottom=this.device.canvasContext.cssToDevicePixels([x+width,y+height],!0),deviceRight=rightBottom.x+rightBottom.width,deviceBottom=rightBottom.y,deviceRect={x:deviceLeft,y:deviceBottom,width:deviceRight-deviceLeft,height:deviceTop-deviceBottom},pickInfos=function getUniqueObjects({pickedColors:pickedColors,decodePickingColor:decodePickingColor}){const uniqueColors=new Map;if(pickedColors)for(let i=0;i<pickedColors.length;i+=4)if(pickedColors[i+3]-1>=0){const pickedColor=pickedColors.slice(i,i+4),colorKey=pickedColor.join(",");if(!uniqueColors.has(colorKey)){const pickedObject=decodePickingColor(pickedColor);pickedObject?uniqueColors.set(colorKey,{...pickedObject,color:pickedColor}):log.A.error("Picked non-existent layer. Is picking buffer corrupt?")()}}return Array.from(uniqueColors.values())}(this._drawAndSample({layers:pickableLayers,views:views,viewports:viewports,onViewportActive:onViewportActive,deviceRect:deviceRect,cullRect:{x:x,y:y,width:width,height:height},effects:effects,pass:`picking:${mode}`})),uniquePickedObjects=new Map,uniqueInfos=[],limitMaxObjects=Number.isFinite(maxObjects);for(let i=0;i<pickInfos.length&&!(limitMaxObjects&&uniqueInfos.length>=maxObjects);i++){const pickInfo=pickInfos[i];let info={color:pickInfo.pickedColor,layer:null,index:pickInfo.pickedObjectIndex,picked:!0,x:x,y:y,pixelRatio:pixelRatio};info=getLayerPickingInfo({layer:pickInfo.pickedLayer,info:info,mode:mode});const pickedLayerId=info.layer.id;uniquePickedObjects.has(pickedLayerId)||uniquePickedObjects.set(pickedLayerId,new Set);const uniqueObjectsInLayer=uniquePickedObjects.get(pickedLayerId),pickedObjectKey=info.object??info.index;uniqueObjectsInLayer.has(pickedObjectKey)||(uniqueObjectsInLayer.add(pickedObjectKey),uniqueInfos.push(info))}return uniqueInfos}_drawAndSample({layers:layers,views:views,viewports:viewports,onViewportActive:onViewportActive,deviceRect:deviceRect,cullRect:cullRect,effects:effects,pass:pass},pickZ=!1){const pickingFBO=pickZ?this.depthFBO:this.pickingFBO,opts={layers:layers,layerFilter:this.layerFilter,views:views,viewports:viewports,onViewportActive:onViewportActive,pickingFBO:pickingFBO,deviceRect:deviceRect,cullRect:cullRect,effects:effects,pass:pass,pickZ:pickZ,preRenderStats:{}};for(const effect of effects)effect.useInPicking&&(opts.preRenderStats[effect.id]=effect.preRender(opts));const{decodePickingColor:decodePickingColor}=this.pickLayersPass.render(opts),{x:x,y:y,width:width,height:height}=deviceRect,pickedColors=new(pickZ?Float32Array:Uint8Array)(width*height*4);return this.device.readPixelsToArrayWebGL(pickingFBO,{sourceX:x,sourceY:y,sourceWidth:width,sourceHeight:height,target:pickedColors}),{pickedColors:pickedColors,decodePickingColor:decodePickingColor}}_getPickingRect({deviceX:deviceX,deviceY:deviceY,deviceRadius:deviceRadius,deviceWidth:deviceWidth,deviceHeight:deviceHeight}){const x=Math.max(0,deviceX-deviceRadius),y=Math.max(0,deviceY-deviceRadius),width=Math.min(deviceWidth,deviceX+deviceRadius+1)-x,height=Math.min(deviceHeight,deviceY+deviceRadius+1)-y;return width<=0||height<=0?null:{x:x,y:y,width:width,height:height}}}var lib_constants=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/constants.js");const PLACEMENTS={"top-left":{top:0,left:0},"top-right":{top:0,right:0},"bottom-left":{bottom:0,left:0},"bottom-right":{bottom:0,right:0},fill:{top:0,left:0,bottom:0,right:0}},DEFAULT_PLACEMENT="top-left";class WidgetManager{constructor({deck:deck,parentElement:parentElement}){this.defaultWidgets=[],this.widgets=[],this.resolvedWidgets=[],this.containers={},this.lastViewports={},this.deck=deck,this.parentElement=parentElement}getWidgets(){return this.resolvedWidgets}setProps(props){props.widgets&&!(0,deep_equal.b)(props.widgets,this.widgets,1)&&this._setWidgets(props.widgets)}finalize(){for(const widget of this.getWidgets())this._remove(widget);this.defaultWidgets.length=0,this.resolvedWidgets.length=0;for(const id in this.containers)this.containers[id].remove()}addDefault(widget){this.defaultWidgets.find((w=>w.id===widget.id))||(this._add(widget),this.defaultWidgets.push(widget),this._setWidgets(this.widgets))}_setWidgets(nextWidgets){const oldWidgetMap={};for(const widget of this.resolvedWidgets)oldWidgetMap[widget.id]=widget;this.resolvedWidgets.length=0;for(const widget of this.defaultWidgets)oldWidgetMap[widget.id]=null,this.resolvedWidgets.push(widget);for(let widget of nextWidgets){const oldWidget=oldWidgetMap[widget.id];oldWidget?oldWidget.viewId!==widget.viewId||oldWidget.placement!==widget.placement?(this._remove(oldWidget),this._add(widget)):widget!==oldWidget&&(oldWidget.setProps(widget.props),widget=oldWidget):this._add(widget),oldWidgetMap[widget.id]=null,this.resolvedWidgets.push(widget)}for(const id in oldWidgetMap){const oldWidget=oldWidgetMap[id];oldWidget&&this._remove(oldWidget)}this.widgets=nextWidgets}_add(widget){const{viewId:viewId=null,placement:placement=DEFAULT_PLACEMENT}=widget,element=widget.onAdd({deck:this.deck,viewId:viewId});element&&this._getContainer(viewId,placement).append(element),widget._element=element}_remove(widget){widget.onRemove(),widget._element&&widget._element.remove(),widget._element=void 0}_getContainer(viewId,placement){const containerId=viewId||"__root";let viewContainer=this.containers[containerId];viewContainer||(viewContainer=document.createElement("div"),viewContainer.style.pointerEvents="none",viewContainer.style.position="absolute",viewContainer.style.overflow="hidden",this.parentElement?.append(viewContainer),this.containers[containerId]=viewContainer);let container=viewContainer.querySelector(`.${placement}`);return container||(container=document.createElement("div"),container.className=placement,container.style.position="absolute",container.style.zIndex="2",Object.assign(container.style,PLACEMENTS[placement]),viewContainer.append(container)),container}_updateContainers(){const canvasWidth=this.deck.width,canvasHeight=this.deck.height;for(const id in this.containers){const viewport=this.lastViewports[id]||null,visible="__root"===id||viewport,container=this.containers[id];visible?(container.style.display="block",container.style.left=`${viewport?viewport.x:0}px`,container.style.top=`${viewport?viewport.y:0}px`,container.style.width=`${viewport?viewport.width:canvasWidth}px`,container.style.height=`${viewport?viewport.height:canvasHeight}px`):container.style.display="none"}}onRedraw({viewports:viewports,layers:layers}){const viewportsById=viewports.reduce(((acc,v)=>(acc[v.id]=v,acc)),{}),{lastViewports:lastViewports}=this;for(const widget of this.getWidgets()){const{viewId:viewId}=widget;if(viewId){const viewport=viewportsById[viewId];viewport&&(widget.onViewportChange&&!viewport.equals(lastViewports[viewId])&&widget.onViewportChange(viewport),widget.onRedraw?.({viewports:[viewport],layers:layers}))}else{if(widget.onViewportChange)for(const viewport of viewports)viewport.equals(lastViewports[viewport.id])||widget.onViewportChange(viewport);widget.onRedraw?.({viewports:viewports,layers:layers})}}this.lastViewports=viewportsById,this._updateContainers()}onHover(info,event){for(const widget of this.getWidgets()){const{viewId:viewId}=widget;viewId&&viewId!==info.viewport?.id||widget.onHover?.(info,event)}}onEvent(info,event){const eventOptions=lib_constants.qY[event.type];if(eventOptions)for(const widget of this.getWidgets()){const{viewId:viewId}=widget;viewId&&viewId!==info.viewport?.id||widget[eventOptions.handler]?.(info,event)}}}const defaultStyle={zIndex:"1",position:"absolute",pointerEvents:"none",color:"#a0a7b4",backgroundColor:"#29323c",padding:"10px",top:"0",left:"0",display:"none"};class Tooltip{constructor(){this.id="default-tooltip",this.placement="fill",this.props={},this.isVisible=!1}onAdd({deck:deck}){const el=document.createElement("div");return el.className="deck-tooltip",Object.assign(el.style,defaultStyle),this.deck=deck,this.element=el,el}onRemove(){this.deck=void 0,this.element=void 0}setProps(){}onViewportChange(viewport){this.isVisible&&viewport.id===this.lastViewport?.id&&viewport!==this.lastViewport&&this.setTooltip(null)}onHover(info){const{deck:deck}=this,getTooltip=deck&&deck.props.getTooltip;if(!getTooltip)return;const displayInfo=getTooltip(info);this.lastViewport=info.viewport,this.setTooltip(displayInfo,info.x,info.y)}setTooltip(displayInfo,x,y){const el=this.element;if(el){if("string"==typeof displayInfo)el.innerText=displayInfo;else{if(!displayInfo)return this.isVisible=!1,void(el.style.display="none");displayInfo.text&&(el.innerText=displayInfo.text),displayInfo.html&&(el.innerHTML=displayInfo.html),displayInfo.className&&(el.className=displayInfo.className)}this.isVisible=!0,el.style.display="block",el.style.transform=`translate(${x}px, ${y}px)`,displayInfo&&"object"==typeof displayInfo&&"style"in displayInfo&&Object.assign(el.style,displayInfo.style)}}}var typed_array_manager=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/typed-array-manager.js"),register_loaders=__webpack_require__("./node_modules/@loaders.gl/core/dist/lib/api/register-loaders.js"),image_loader=__webpack_require__("./node_modules/@loaders.gl/images/dist/image-loader.js");var json_loader={dataType:null,batchType:null,id:"JSON",name:"JSON",module:"",version:"",options:{},extensions:["json","geojson"],mimeTypes:["application/json","application/geo+json"],testText:function isJSON(text){const firstChar=text[0],lastChar=text[text.length-1];return"{"===firstChar&&"}"===lastChar||"["===firstChar&&"]"===lastChar},parseTextSync:JSON.parse};const VERSION=function checkVersion(){const existingVersion=globalThis.deck&&globalThis.deck.VERSION;if(existingVersion&&"9.0.40"!==existingVersion)throw new Error(`deck.gl - multiple versions detected: ${existingVersion} vs 9.0.40`);return existingVersion||(log.A.log(1,"deck.gl 9.0.40")(),globalThis.deck={...globalThis.deck,VERSION:"9.0.40",version:"9.0.40",log:log.A,_registerLoggers:debug.k},(0,register_loaders.mk)([json_loader,[image_loader.$,{imagebitmap:{premultiplyAlpha:"none"}}]])),"9.0.40"}();var is_browser=__webpack_require__("./node_modules/@probe.gl/env/dist/lib/is-browser.js"),utils_log=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/log.js");const lumaStats=new class StatsManager{stats=new Map;getStats(name){return this.get(name)}get(name){return this.stats.has(name)||this.stats.set(name,new dist.Uz({id:name})),this.stats.get(name)}};const init_VERSION=function initializeLuma(){if(globalThis.luma&&"9.0.27"!==globalThis.luma.VERSION)throw new Error(`luma.gl - multiple VERSIONs detected: ${globalThis.luma.VERSION} vs 9.0.27`);return globalThis.luma||((0,is_browser.B)()&&utils_log.R.log(1,"9.0.27 - set luma.log.level=1 (or higher) to trace rendering")(),globalThis.luma=globalThis.luma||{VERSION:"9.0.27",version:"9.0.27",log:utils_log.R,stats:lumaStats}),"9.0.27"}();var utils=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/utils.js"),buffer=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/buffer.js"),decode_data_type=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/type-utils/decode-data-type.js");const COMPRESSED_TEXTURE_FORMAT_PREFIXES=["bc1","bc2","bc3","bc4","bc5","bc6","bc7","etc1","etc2","eac","atc","astc","pvrtc"],REGEX=/^(rg?b?a?)([0-9]*)([a-z]*)(-srgb)?(-webgl|-unsized)?$/;function decodeTextureFormat(format){const matches=REGEX.exec(format);if(matches){const[,format,length,type,srgb,suffix]=matches;if(format){const dataType=`${type}${length}`,decodedType=(0,decode_data_type.l)(dataType);return{format:format,components:format.length,srgb:"-srgb"===srgb,unsized:"-unsized"===suffix,webgl:"-webgl"===suffix,...decodedType}}}return function decodeNonStandardFormat(format){const data=EXCEPTIONS[format];if(!data)throw new Error(`Unknown format ${format}`);return{format:data.format||"",components:data.components||data.format?.length||1,byteLength:data.bpp||1,srgb:!1,unsized:!1}}(format)}const EXCEPTIONS={"rgba4unorm-webgl":{format:"rgba",bpp:2},"rgb565unorm-webgl":{format:"rgb",bpp:2},"rgb5a1unorm-webgl":{format:"rgba",bbp:2},rgb9e5ufloat:{format:"rgb",bbp:4},rg11b10ufloat:{format:"rgb",bbp:4},rgb10a2unorm:{format:"rgba",bbp:4},"rgb10a2uint-webgl":{format:"rgba",bbp:4},stencil8:{components:1,bpp:1,a:"stencil"},depth16unorm:{components:1,bpp:2,a:"depth"},depth24plus:{components:1,bpp:3,a:"depth"},depth32float:{components:1,bpp:4,a:"depth"},"depth24plus-stencil8":{components:2,bpp:4,a:"depth-stencil"},"depth24unorm-stencil8":{components:2,bpp:4,a:"depth-stencil"},"depth32float-stencil8":{components:2,bpp:4,a:"depth-stencil"}};class DeviceLimits{}class DeviceFeatures{features;disabledFeatures;constructor(features=[],disabledFeatures){this.features=new Set(features),this.disabledFeatures=disabledFeatures||{}}*[Symbol.iterator](){yield*this.features}has(feature){return!this.disabledFeatures[feature]&&this.features.has(feature)}}class Device{static defaultProps={id:null,canvas:null,container:null,manageState:!0,width:800,height:600,requestMaxLimits:!0,debug:Boolean(utils_log.R.get("debug")),spector:Boolean(utils_log.R.get("spector")||utils_log.R.get("spectorjs")),break:[],initalizeFeatures:!0,disabledFeatures:{"compilation-status-async-webgl":!0},gl:null,onError:error=>utils_log.R.error(error.message)};get[Symbol.toStringTag](){return"Device"}static VERSION=init_VERSION;constructor(props){this.props={...Device.defaultProps,...props},this.id=this.props.id||(0,utils.L)(this[Symbol.toStringTag].toLowerCase())}id;props;userData={};statsManager=lumaStats;_lumaData={};isTextureFormatCompressed(format){return function isTextureFormatCompressed(textureFormat){return COMPRESSED_TEXTURE_FORMAT_PREFIXES.some((prefix=>textureFormat.startsWith(prefix)))}(format)}loseDevice(){return!1}getCanvasContext(){if(!this.canvasContext)throw new Error("Device has no CanvasContext");return this.canvasContext}createTexture(props){return(props instanceof Promise||"string"==typeof props)&&(props={data:props}),this._createTexture(props)}createCommandEncoder(props={}){throw new Error("not implemented")}readPixelsToArrayWebGL(source,options){throw new Error("not implemented")}readPixelsToBufferWebGL(source,options){throw new Error("not implemented")}setParametersWebGL(parameters){throw new Error("not implemented")}getParametersWebGL(parameters){throw new Error("not implemented")}withParametersWebGL(parameters,func){throw new Error("not implemented")}clearWebGL(options){throw new Error("not implemented")}resetWebGL(){throw new Error("not implemented")}timestamp=0;incrementTimestamp(){return this.timestamp++}onError(error){this.props.onError(error)}_getBufferProps(props){(props instanceof ArrayBuffer||ArrayBuffer.isView(props))&&(props={data:props});const newProps={...props};return(props.usage||0)&buffer.h.INDEX&&!props.indexType&&(props.data instanceof Uint32Array?newProps.indexType="uint32":props.data instanceof Uint16Array?newProps.indexType="uint16":utils_log.R.warn("indices buffer content must be of integer type")()),newProps}}var utils_assert=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/assert.js");const deviceMap=new Map;class luma{static defaultProps={...Device.defaultProps,type:"best-available",devices:void 0};static stats=lumaStats;static log=utils_log.R;static registerDevices(deviceClasses){for(const deviceClass of deviceClasses)(0,utils_assert.v)(deviceClass.type&&deviceClass.isSupported&&deviceClass.create),deviceMap.set(deviceClass.type,deviceClass)}static getAvailableDevices(){return Array.from(deviceMap).map((Device=>Device.type))}static getSupportedDevices(){return Array.from(deviceMap).filter((Device=>Device.isSupported())).map((Device=>Device.type))}static setDefaultDeviceProps(props){Object.assign(Device.defaultProps,props)}static async attachDevice(props){const devices=getDeviceMap(props.devices)||deviceMap;if(props.handle instanceof WebGL2RenderingContext){const WebGLDevice=devices.get("webgl");if(WebGLDevice)return await WebGLDevice.attach(props.handle)}if(null===props.handle){const UnknownDevice=devices.get("unknown");if(UnknownDevice)return await UnknownDevice.attach(null)}throw new Error("Failed to attach device. Ensure `@luma.gl/webgl` and/or `@luma.gl/webgpu` modules are imported.")}static async createDevice(props={}){(props={...luma.defaultProps,...props}).gl&&(props.type="webgl");const devices=getDeviceMap(props.devices)||deviceMap;let WebGPUDevice,WebGLDevice;switch(props.type){case"webgpu":if(WebGPUDevice=devices.get("webgpu"),WebGPUDevice)return await WebGPUDevice.create(props);break;case"webgl":if(WebGLDevice=devices.get("webgl"),WebGLDevice)return await WebGLDevice.create(props);break;case"unknown":const UnknownDevice=devices.get("unknown");if(UnknownDevice)return await UnknownDevice.create(props);break;case"best-available":if(WebGPUDevice=devices.get("webgpu"),WebGPUDevice?.isSupported?.())return await WebGPUDevice.create(props);if(WebGLDevice=devices.get("webgl"),WebGLDevice?.isSupported?.())return await WebGLDevice.create(props)}throw new Error("No matching device found. Ensure `@luma.gl/webgl` and/or `@luma.gl/webgpu` modules are imported.")}static enforceWebGL2(enforce=!0){const prototype=HTMLCanvasElement.prototype;if(!enforce&&prototype.originalGetContext)return prototype.getContext=prototype.originalGetContext,void(prototype.originalGetContext=void 0);prototype.originalGetContext=prototype.getContext,prototype.getContext=function(contextId,options){return"webgl"===contextId||"experimental-webgl"===contextId?this.originalGetContext("webgl2",options):this.originalGetContext(contextId,options)}}}function getDeviceMap(deviceClasses){if(!deviceClasses||0===deviceClasses?.length)return null;const map=new Map;for(const deviceClass of deviceClasses)map.set(deviceClass.type,deviceClass);return map}const isPage=(0,is_browser.B)()&&"undefined"!=typeof document,isPageLoaded=()=>isPage&&"complete"===document.readyState,DEFAULT_CANVAS_CONTEXT_PROPS={canvas:null,width:800,height:600,useDevicePixels:!0,autoResize:!0,container:null,visible:!0,colorSpace:"srgb",alphaMode:"opaque"};class CanvasContext{id;props;canvas;htmlCanvas;offscreenCanvas;type;width=1;height=1;resizeObserver;_canvasSizeInfo={clientWidth:0,clientHeight:0,devicePixelRatio:1};static get isPageLoaded(){return isPageLoaded()}static pageLoaded=function getPageLoadPromise(){if(isPageLoaded()||"undefined"==typeof window)return Promise.resolve();return new Promise((resolve=>{window.addEventListener("load",(()=>resolve()))}))}();constructor(props){if(this.props={...DEFAULT_CANVAS_CONTEXT_PROPS,...props},props=this.props,!(0,is_browser.B)())return this.id="node-canvas-context",this.type="node",this.width=this.props.width,this.height=this.props.height,void(this.canvas=null);if(props.canvas)"string"==typeof props.canvas?this.canvas=function getCanvasFromDOM(canvasId){const canvas=document.getElementById(canvasId);if(!canvas&&!isPageLoaded())throw new Error(`Accessing '${canvasId}' before page was loaded`);if(!(canvas instanceof HTMLCanvasElement))throw new Error("Object is not a canvas element");return canvas}(props.canvas):this.canvas=props.canvas;else{const canvas=function createCanvas(props){const{width:width,height:height}=props,targetCanvas=document.createElement("canvas");return targetCanvas.id="lumagl-auto-created-canvas",targetCanvas.width=width||1,targetCanvas.height=height||1,targetCanvas.style.width=Number.isFinite(width)?`${width}px`:"100%",targetCanvas.style.height=Number.isFinite(height)?`${height}px`:"100%",targetCanvas}(props),container=function getContainer(container){if("string"==typeof container){const element=document.getElementById(container);if(!element&&!isPageLoaded())throw new Error(`Accessing '${container}' before page was loaded`);if(!element)throw new Error(`${container} is not an HTML element`);return element}if(container)return container;return document.body}(props?.container||null);container.insertBefore(canvas,container.firstChild),this.canvas=canvas,props?.visible||(this.canvas.style.visibility="hidden")}this.canvas instanceof HTMLCanvasElement?(this.id=this.canvas.id,this.type="html-canvas",this.htmlCanvas=this.canvas):(this.id="offscreen-canvas",this.type="offscreen-canvas",this.offscreenCanvas=this.canvas),this.canvas instanceof HTMLCanvasElement&&props.autoResize&&(this.resizeObserver=new ResizeObserver((entries=>{for(const entry of entries)entry.target===this.canvas&&this.update()})),this.resizeObserver.observe(this.canvas))}getDevicePixelRatio(useDevicePixels){if("undefined"!=typeof OffscreenCanvas&&this.canvas instanceof OffscreenCanvas)return 1;if(!(useDevicePixels=void 0===useDevicePixels?this.props.useDevicePixels:useDevicePixels)||useDevicePixels<=0)return 1;if(!0===useDevicePixels){return"undefined"!=typeof window&&window.devicePixelRatio||1}return useDevicePixels}getPixelSize(){switch(this.type){case"node":return[this.width,this.height];case"offscreen-canvas":return[this.canvas.width,this.canvas.height];case"html-canvas":const dpr=this.getDevicePixelRatio(),canvas=this.canvas;return canvas.parentElement?[canvas.clientWidth*dpr,canvas.clientHeight*dpr]:[this.canvas.width,this.canvas.height];default:throw new Error(this.type)}}getAspect(){const[width,height]=this.getPixelSize();return width/height}cssToDeviceRatio(){try{const[drawingBufferWidth]=this.getDrawingBufferSize(),{clientWidth:clientWidth}=this._canvasSizeInfo;return clientWidth?drawingBufferWidth/clientWidth:1}catch{return 1}}cssToDevicePixels(cssPixel,yInvert=!0){const ratio=this.cssToDeviceRatio(),[width,height]=this.getDrawingBufferSize();return function scalePixels(pixel,ratio,width,height,yInvert){const point=pixel,x=scaleX(point[0],ratio,width);let y=scaleY(point[1],ratio,height,yInvert),t=scaleX(point[0]+1,ratio,width);const xHigh=t===width-1?t:t-1;let yHigh;t=scaleY(point[1]+1,ratio,height,yInvert),yInvert?(t=0===t?t:t+1,yHigh=y,y=t):yHigh=t===height-1?t:t-1;return{x:x,y:y,width:Math.max(xHigh-x+1,1),height:Math.max(yHigh-y+1,1)}}(cssPixel,ratio,width,height,yInvert)}setDevicePixelRatio(devicePixelRatio,options={}){if(!this.htmlCanvas)return;let clientWidth="width"in options?options.width:this.htmlCanvas.clientWidth,clientHeight="height"in options?options.height:this.htmlCanvas.clientHeight;clientWidth&&clientHeight||(utils_log.R.log(1,"Canvas clientWidth/clientHeight is 0")(),devicePixelRatio=1,clientWidth=this.htmlCanvas.width||1,clientHeight=this.htmlCanvas.height||1);const cachedSize=this._canvasSizeInfo;if(cachedSize.clientWidth!==clientWidth||cachedSize.clientHeight!==clientHeight||cachedSize.devicePixelRatio!==devicePixelRatio){let clampedPixelRatio=devicePixelRatio;const canvasWidth=Math.floor(clientWidth*clampedPixelRatio),canvasHeight=Math.floor(clientHeight*clampedPixelRatio);this.htmlCanvas.width=canvasWidth,this.htmlCanvas.height=canvasHeight;const[drawingBufferWidth,drawingBufferHeight]=this.getDrawingBufferSize();drawingBufferWidth===canvasWidth&&drawingBufferHeight===canvasHeight||(clampedPixelRatio=Math.min(drawingBufferWidth/clientWidth,drawingBufferHeight/clientHeight),this.htmlCanvas.width=Math.floor(clientWidth*clampedPixelRatio),this.htmlCanvas.height=Math.floor(clientHeight*clampedPixelRatio),utils_log.R.warn("Device pixel ratio clamped")()),this._canvasSizeInfo.clientWidth=clientWidth,this._canvasSizeInfo.clientHeight=clientHeight,this._canvasSizeInfo.devicePixelRatio=devicePixelRatio}}getDrawingBufferSize(){const gl=this.device.gl;if(!gl)throw new Error("canvas size");return[gl.drawingBufferWidth,gl.drawingBufferHeight]}_setAutoCreatedCanvasId(id){"lumagl-auto-created-canvas"===this.htmlCanvas?.id&&(this.htmlCanvas.id=id)}}function scaleX(x,ratio,width){return Math.min(Math.round(x*ratio),width-1)}function scaleY(y,ratio,height,yInvert){return yInvert?Math.max(0,height-1-Math.round(y*ratio)):Math.min(Math.round(y*ratio),height-1)}const GL_PARAMETER_DEFAULTS={3042:!1,32773:new Float32Array([0,0,0,0]),32777:32774,34877:32774,32969:1,32968:0,32971:1,32970:0,3106:new Float32Array([0,0,0,0]),3107:[!0,!0,!0,!0],2884:!1,2885:1029,2929:!1,2931:1,2932:513,2928:new Float32Array([0,1]),2930:!0,3024:!0,35725:null,36006:null,36007:null,34229:null,34964:null,2886:2305,33170:4352,2849:1,32823:!1,32824:0,10752:0,32926:!1,32928:!1,32938:1,32939:!1,3089:!1,3088:new Int32Array([0,0,1024,1024]),2960:!1,2961:0,2968:4294967295,36005:4294967295,2962:519,2967:0,2963:4294967295,34816:519,36003:0,36004:4294967295,2964:7680,2965:7680,2966:7680,34817:7680,34818:7680,34819:7680,2978:[0,0,1024,1024],36389:null,36662:null,36663:null,35053:null,35055:null,35723:4352,36010:null,35977:!1,3333:4,3317:4,37440:!1,37441:!1,37443:37444,3330:0,3332:0,3331:0,3314:0,32878:0,3316:0,3315:0,32877:0},enable=(gl,value,key)=>value?gl.enable(key):gl.disable(key),hint=(gl,value,key)=>gl.hint(key,value),pixelStorei=(gl,value,key)=>gl.pixelStorei(key,value),bindFramebuffer=(gl,value,key)=>{const target=36006===key?36009:36008;return gl.bindFramebuffer(target,value)},bindBuffer=(gl,value,key)=>{const glTarget={34964:34962,36662:36662,36663:36663,35053:35051,35055:35052}[key];gl.bindBuffer(glTarget,value)};function isArray(array){return Array.isArray(array)||ArrayBuffer.isView(array)&&!(array instanceof DataView)}const GL_PARAMETER_SETTERS={3042:enable,32773:(gl,value)=>gl.blendColor(...value),32777:"blendEquation",34877:"blendEquation",32969:"blendFunc",32968:"blendFunc",32971:"blendFunc",32970:"blendFunc",3106:(gl,value)=>gl.clearColor(...value),3107:(gl,value)=>gl.colorMask(...value),2884:enable,2885:(gl,value)=>gl.cullFace(value),2929:enable,2931:(gl,value)=>gl.clearDepth(value),2932:(gl,value)=>gl.depthFunc(value),2928:(gl,value)=>gl.depthRange(...value),2930:(gl,value)=>gl.depthMask(value),3024:enable,35723:hint,35725:(gl,value)=>gl.useProgram(value),36007:(gl,value)=>gl.bindRenderbuffer(36161,value),36389:(gl,value)=>gl.bindTransformFeedback?.(36386,value),34229:(gl,value)=>gl.bindVertexArray(value),36006:bindFramebuffer,36010:bindFramebuffer,34964:bindBuffer,36662:bindBuffer,36663:bindBuffer,35053:bindBuffer,35055:bindBuffer,2886:(gl,value)=>gl.frontFace(value),33170:hint,2849:(gl,value)=>gl.lineWidth(value),32823:enable,32824:"polygonOffset",10752:"polygonOffset",35977:enable,32926:enable,32928:enable,32938:"sampleCoverage",32939:"sampleCoverage",3089:enable,3088:(gl,value)=>gl.scissor(...value),2960:enable,2961:(gl,value)=>gl.clearStencil(value),2968:(gl,value)=>gl.stencilMaskSeparate(1028,value),36005:(gl,value)=>gl.stencilMaskSeparate(1029,value),2962:"stencilFuncFront",2967:"stencilFuncFront",2963:"stencilFuncFront",34816:"stencilFuncBack",36003:"stencilFuncBack",36004:"stencilFuncBack",2964:"stencilOpFront",2965:"stencilOpFront",2966:"stencilOpFront",34817:"stencilOpBack",34818:"stencilOpBack",34819:"stencilOpBack",2978:(gl,value)=>gl.viewport(...value),34383:enable,10754:enable,12288:enable,12289:enable,12290:enable,12291:enable,12292:enable,12293:enable,12294:enable,12295:enable,3333:pixelStorei,3317:pixelStorei,37440:pixelStorei,37441:pixelStorei,37443:pixelStorei,3330:pixelStorei,3332:pixelStorei,3331:pixelStorei,3314:pixelStorei,32878:pixelStorei,3316:pixelStorei,3315:pixelStorei,32877:pixelStorei,framebuffer:(gl,framebuffer)=>{const handle=framebuffer&&"handle"in framebuffer?framebuffer.handle:framebuffer;return gl.bindFramebuffer(36160,handle)},blend:(gl,value)=>value?gl.enable(3042):gl.disable(3042),blendColor:(gl,value)=>gl.blendColor(...value),blendEquation:(gl,args)=>{const separateModes="number"==typeof args?[args,args]:args;gl.blendEquationSeparate(...separateModes)},blendFunc:(gl,args)=>{const separateFuncs=2===args?.length?[...args,...args]:args;gl.blendFuncSeparate(...separateFuncs)},clearColor:(gl,value)=>gl.clearColor(...value),clearDepth:(gl,value)=>gl.clearDepth(value),clearStencil:(gl,value)=>gl.clearStencil(value),colorMask:(gl,value)=>gl.colorMask(...value),cull:(gl,value)=>value?gl.enable(2884):gl.disable(2884),cullFace:(gl,value)=>gl.cullFace(value),depthTest:(gl,value)=>value?gl.enable(2929):gl.disable(2929),depthFunc:(gl,value)=>gl.depthFunc(value),depthMask:(gl,value)=>gl.depthMask(value),depthRange:(gl,value)=>gl.depthRange(...value),dither:(gl,value)=>value?gl.enable(3024):gl.disable(3024),derivativeHint:(gl,value)=>{gl.hint(35723,value)},frontFace:(gl,value)=>gl.frontFace(value),mipmapHint:(gl,value)=>gl.hint(33170,value),lineWidth:(gl,value)=>gl.lineWidth(value),polygonOffsetFill:(gl,value)=>value?gl.enable(32823):gl.disable(32823),polygonOffset:(gl,value)=>gl.polygonOffset(...value),sampleCoverage:(gl,value)=>gl.sampleCoverage(...value),scissorTest:(gl,value)=>value?gl.enable(3089):gl.disable(3089),scissor:(gl,value)=>gl.scissor(...value),stencilTest:(gl,value)=>value?gl.enable(2960):gl.disable(2960),stencilMask:(gl,value)=>{value=isArray(value)?value:[value,value];const[mask,backMask]=value;gl.stencilMaskSeparate(1028,mask),gl.stencilMaskSeparate(1029,backMask)},stencilFunc:(gl,args)=>{args=isArray(args)&&3===args.length?[...args,...args]:args;const[func,ref,mask,backFunc,backRef,backMask]=args;gl.stencilFuncSeparate(1028,func,ref,mask),gl.stencilFuncSeparate(1029,backFunc,backRef,backMask)},stencilOp:(gl,args)=>{args=isArray(args)&&3===args.length?[...args,...args]:args;const[sfail,dpfail,dppass,backSfail,backDpfail,backDppass]=args;gl.stencilOpSeparate(1028,sfail,dpfail,dppass),gl.stencilOpSeparate(1029,backSfail,backDpfail,backDppass)},viewport:(gl,value)=>gl.viewport(...value)};function getValue(glEnum,values,cache){return void 0!==values[glEnum]?values[glEnum]:cache[glEnum]}const GL_COMPOSITE_PARAMETER_SETTERS={blendEquation:(gl,values,cache)=>gl.blendEquationSeparate(getValue(32777,values,cache),getValue(34877,values,cache)),blendFunc:(gl,values,cache)=>gl.blendFuncSeparate(getValue(32969,values,cache),getValue(32968,values,cache),getValue(32971,values,cache),getValue(32970,values,cache)),polygonOffset:(gl,values,cache)=>gl.polygonOffset(getValue(32824,values,cache),getValue(10752,values,cache)),sampleCoverage:(gl,values,cache)=>gl.sampleCoverage(getValue(32938,values,cache),getValue(32939,values,cache)),stencilFuncFront:(gl,values,cache)=>gl.stencilFuncSeparate(1028,getValue(2962,values,cache),getValue(2967,values,cache),getValue(2963,values,cache)),stencilFuncBack:(gl,values,cache)=>gl.stencilFuncSeparate(1029,getValue(34816,values,cache),getValue(36003,values,cache),getValue(36004,values,cache)),stencilOpFront:(gl,values,cache)=>gl.stencilOpSeparate(1028,getValue(2964,values,cache),getValue(2965,values,cache),getValue(2966,values,cache)),stencilOpBack:(gl,values,cache)=>gl.stencilOpSeparate(1029,getValue(34817,values,cache),getValue(34818,values,cache),getValue(34819,values,cache))},GL_HOOKED_SETTERS={enable:(update,capability)=>update({[capability]:!0}),disable:(update,capability)=>update({[capability]:!1}),pixelStorei:(update,pname,value)=>update({[pname]:value}),hint:(update,pname,hint)=>update({[pname]:hint}),useProgram:(update,value)=>update({35725:value}),bindRenderbuffer:(update,target,value)=>update({36007:value}),bindTransformFeedback:(update,target,value)=>update({36389:value}),bindVertexArray:(update,value)=>update({34229:value}),bindFramebuffer:(update,target,framebuffer)=>{switch(target){case 36160:return update({36006:framebuffer,36010:framebuffer});case 36009:return update({36006:framebuffer});case 36008:return update({36010:framebuffer});default:return null}},bindBuffer:(update,target,buffer)=>{const pname={34962:[34964],36662:[36662],36663:[36663],35051:[35053],35052:[35055]}[target];return pname?update({[pname]:buffer}):{valueChanged:!0}},blendColor:(update,r,g,b,a)=>update({32773:new Float32Array([r,g,b,a])}),blendEquation:(update,mode)=>update({32777:mode,34877:mode}),blendEquationSeparate:(update,modeRGB,modeAlpha)=>update({32777:modeRGB,34877:modeAlpha}),blendFunc:(update,src,dst)=>update({32969:src,32968:dst,32971:src,32970:dst}),blendFuncSeparate:(update,srcRGB,dstRGB,srcAlpha,dstAlpha)=>update({32969:srcRGB,32968:dstRGB,32971:srcAlpha,32970:dstAlpha}),clearColor:(update,r,g,b,a)=>update({3106:new Float32Array([r,g,b,a])}),clearDepth:(update,depth)=>update({2931:depth}),clearStencil:(update,s)=>update({2961:s}),colorMask:(update,r,g,b,a)=>update({3107:[r,g,b,a]}),cullFace:(update,mode)=>update({2885:mode}),depthFunc:(update,func)=>update({2932:func}),depthRange:(update,zNear,zFar)=>update({2928:new Float32Array([zNear,zFar])}),depthMask:(update,mask)=>update({2930:mask}),frontFace:(update,face)=>update({2886:face}),lineWidth:(update,width)=>update({2849:width}),polygonOffset:(update,factor,units)=>update({32824:factor,10752:units}),sampleCoverage:(update,value,invert)=>update({32938:value,32939:invert}),scissor:(update,x,y,width,height)=>update({3088:new Int32Array([x,y,width,height])}),stencilMask:(update,mask)=>update({2968:mask,36005:mask}),stencilMaskSeparate:(update,face,mask)=>update({[1028===face?2968:36005]:mask}),stencilFunc:(update,func,ref,mask)=>update({2962:func,2967:ref,2963:mask,34816:func,36003:ref,36004:mask}),stencilFuncSeparate:(update,face,func,ref,mask)=>update({[1028===face?2962:34816]:func,[1028===face?2967:36003]:ref,[1028===face?2963:36004]:mask}),stencilOp:(update,fail,zfail,zpass)=>update({2964:fail,2965:zfail,2966:zpass,34817:fail,34818:zfail,34819:zpass}),stencilOpSeparate:(update,face,fail,zfail,zpass)=>update({[1028===face?2964:34817]:fail,[1028===face?2965:34818]:zfail,[1028===face?2966:34819]:zpass}),viewport:(update,x,y,width,height)=>update({2978:[x,y,width,height]})},isEnabled=(gl,key)=>gl.isEnabled(key),GL_PARAMETER_GETTERS={3042:isEnabled,2884:isEnabled,2929:isEnabled,3024:isEnabled,32823:isEnabled,32926:isEnabled,32928:isEnabled,3089:isEnabled,2960:isEnabled,35977:isEnabled},NON_CACHE_PARAMETERS=new Set([34016,36388,36387,35983,35368,34965,35739,35738,3074,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34866,34867,34868,35097,32873,35869,32874,34068]);function unified_parameter_api_setGLParameters(gl,parameters){if(function unified_parameter_api_isObjectEmpty(object){for(const key in object)return!1;return!0}(parameters))return;const compositeSetters={};for(const key in parameters){const glConstant=Number(key),setter=GL_PARAMETER_SETTERS[key];setter&&("string"==typeof setter?compositeSetters[setter]=!0:setter(gl,parameters[key],glConstant))}const cache=gl.state&&gl.state.cache;if(cache)for(const key in compositeSetters){(0,GL_COMPOSITE_PARAMETER_SETTERS[key])(gl,parameters,cache)}}function getGLParameters(gl,parameters=GL_PARAMETER_DEFAULTS){if("number"==typeof parameters){const key=parameters,getter=GL_PARAMETER_GETTERS[key];return getter?getter(gl,key):gl.getParameter(key)}const parameterKeys=Array.isArray(parameters)?parameters:Object.keys(parameters),state={};for(const key of parameterKeys){const getter=GL_PARAMETER_GETTERS[key];state[key]=getter?getter(gl,Number(key)):gl.getParameter(Number(key))}return state}function deepArrayEqual(x,y){if(x===y)return!0;const isArrayX=Array.isArray(x)||ArrayBuffer.isView(x),isArrayY=Array.isArray(y)||ArrayBuffer.isView(y);if(isArrayX&&isArrayY&&x.length===y.length){for(let i=0;i<x.length;++i)if(x[i]!==y[i])return!1;return!0}return!1}class GLState{gl;program=null;stateStack=[];enable=!0;cache;log;constructor(gl,{copyState:copyState=!1,log:log=()=>{}}={}){this.gl=gl,this.cache=copyState?getGLParameters(gl):Object.assign({},GL_PARAMETER_DEFAULTS),this.log=log,this._updateCache=this._updateCache.bind(this),Object.seal(this)}push(values={}){this.stateStack.push({})}pop(){(0,utils_assert.v)(this.stateStack.length>0);const oldValues=this.stateStack[this.stateStack.length-1];unified_parameter_api_setGLParameters(this.gl,oldValues),this.stateStack.pop()}_updateCache(values){let oldValue,valueChanged=!1;const oldValues=this.stateStack.length>0?this.stateStack[this.stateStack.length-1]:null;for(const key in values){(0,utils_assert.v)(void 0!==key);const value=values[key],cached=this.cache[key];deepArrayEqual(value,cached)||(valueChanged=!0,oldValue=cached,oldValues&&!(key in oldValues)&&(oldValues[key]=cached),this.cache[key]=value)}return{valueChanged:valueChanged,oldValue:oldValue}}}function getContextState(gl){return gl.state}function trackContextState(gl,options){const{enable:enable=!0,copyState:copyState}=options;if((0,utils_assert.v)(void 0!==copyState),!gl.state){gl.state=new GLState(gl,{copyState:copyState}),function installProgramSpy(gl){const originalUseProgram=gl.useProgram.bind(gl);gl.useProgram=function useProgramLuma(handle){const glState=getContextState(gl);glState.program!==handle&&(originalUseProgram(handle),glState.program=handle)}}(gl);for(const key in GL_HOOKED_SETTERS){installSetterSpy(gl,key,GL_HOOKED_SETTERS[key])}installGetterOverride(gl,"getParameter"),installGetterOverride(gl,"isEnabled")}return getContextState(gl).enable=enable,gl}function track_context_state_pushContextState(gl){let glState=getContextState(gl);glState||(trackContextState(gl,{copyState:!1}),glState=getContextState(gl)),glState.push()}function track_context_state_popContextState(gl){const glState=getContextState(gl);(0,utils_assert.v)(glState),glState.pop()}function installGetterOverride(gl,functionName){const originalGetterFunc=gl[functionName].bind(gl);gl[functionName]=function get(pname){if(void 0===pname||NON_CACHE_PARAMETERS.has(pname))return originalGetterFunc(pname);const glState=getContextState(gl);return pname in glState.cache||(glState.cache[pname]=originalGetterFunc(pname)),glState.enable?glState.cache[pname]:originalGetterFunc(pname)},Object.defineProperty(gl[functionName],"name",{value:`${functionName}-from-cache`,configurable:!1})}function installSetterSpy(gl,functionName,setter){if(!gl[functionName])return;const originalSetterFunc=gl[functionName].bind(gl);gl[functionName]=function set(...params){const glState=getContextState(gl),{valueChanged:valueChanged,oldValue:oldValue}=setter(glState._updateCache,...params);return valueChanged&&originalSetterFunc(...params),oldValue},Object.defineProperty(gl[functionName],"name",{value:`${functionName}-to-cache`,configurable:!1})}const DEFAULT_CONTEXT_PROPS={powerPreference:"high-performance",onContextLost:()=>console.error("WebGL context lost"),onContextRestored:()=>console.info("WebGL context restored")};function getWebGLExtension(gl,name,extensions){return void 0===extensions[name]&&(extensions[name]=gl.getExtension(name)||null),extensions[name]}function getDeviceInfo(gl,extensions){const vendorMasked=gl.getParameter(7936),rendererMasked=gl.getParameter(7937);getWebGLExtension(gl,"WEBGL_debug_renderer_info",extensions);const ext=extensions.WEBGL_debug_renderer_info,vendor=gl.getParameter(ext?ext.UNMASKED_VENDOR_WEBGL:7936)||vendorMasked,renderer=gl.getParameter(ext?ext.UNMASKED_RENDERER_WEBGL:7937)||rendererMasked,version=gl.getParameter(7938),gpu=identifyGPUVendor(vendor,renderer),gpuBackend=function identifyGPUBackend(vendor,renderer){if(/Metal/i.exec(vendor)||/Metal/i.exec(renderer))return"metal";if(/ANGLE/i.exec(vendor)||/ANGLE/i.exec(renderer))return"opengl";return"unknown"}(vendor,renderer),gpuType=function identifyGPUType(vendor,renderer){if(/SwiftShader/i.exec(vendor)||/SwiftShader/i.exec(renderer))return"cpu";switch(identifyGPUVendor(vendor,renderer)){case"intel":return"integrated";case"software":return"cpu";case"unknown":return"unknown";default:return"discrete"}}(vendor,renderer);return{type:"webgl",gpu:gpu,gpuType:gpuType,gpuBackend:gpuBackend,vendor:vendor,renderer:renderer,version:version,shadingLanguage:"glsl",shadingLanguageVersion:300}}function identifyGPUVendor(vendor,renderer){return/NVIDIA/i.exec(vendor)||/NVIDIA/i.exec(renderer)?"nvidia":/INTEL/i.exec(vendor)||/INTEL/i.exec(renderer)?"intel":/Apple/i.exec(vendor)||/Apple/i.exec(renderer)?"apple":/AMD/i.exec(vendor)||/AMD/i.exec(renderer)||/ATI/i.exec(vendor)||/ATI/i.exec(renderer)?"amd":/SwiftShader/i.exec(vendor)||/SwiftShader/i.exec(renderer)?"software":"unknown"}function getGLFromVertexType(dataType){switch(dataType){case"uint8":case"unorm8":return 5121;case"sint8":case"snorm8":return 5120;case"uint16":case"unorm16":return 5123;case"sint16":case"snorm16":return 5122;case"uint32":return 5125;case"sint32":return 5124;case"float16":return 5131;case"float32":return 5126}throw new Error(String(dataType))}const texture_compression_astc="texture-compression-astc",X_S3TC="WEBGL_compressed_texture_s3tc",X_S3TC_SRGB="WEBGL_compressed_texture_s3tc_srgb",X_RGTC="EXT_texture_compression_rgtc",X_BPTC="EXT_texture_compression_bptc",TEXTURE_FEATURES={"float32-renderable-webgl":["EXT_color_buffer_float"],"float16-renderable-webgl":["EXT_color_buffer_half_float"],"rgb9e5ufloat_renderable-webgl":["WEBGL_render_shared_exponent"],"snorm8-renderable-webgl":["EXT_render_snorm"],"norm16-renderable-webgl":["EXT_texture_norm16"],"snorm16-renderable-webgl":["EXT_texture_norm16","EXT_render_snorm"],"float32-filterable":["OES_texture_float_linear"],"float16-filterable-webgl":["OES_texture_half_float_linear"],"texture-filterable-anisotropic-webgl":["EXT_texture_filter_anisotropic"],"texture-blend-float-webgl":["EXT_float_blend"],"texture-compression-bc":[X_S3TC,X_S3TC_SRGB,X_RGTC,X_BPTC],"texture-compression-bc5-webgl":[X_RGTC],"texture-compression-bc7-webgl":[X_BPTC],"texture-compression-etc2":["WEBGL_compressed_texture_etc"],"texture-compression-astc":["WEBGL_compressed_texture_astc"],"texture-compression-etc1-webgl":["WEBGL_compressed_texture_etc1"],"texture-compression-pvrtc-webgl":["WEBGL_compressed_texture_pvrtc"],"texture-compression-atc-webgl":["WEBGL_compressed_texture_atc"]};function checkTextureFeature(gl,feature,extensions){return(TEXTURE_FEATURES[feature]||[]).every((extension=>getWebGLExtension(gl,extension,extensions)))}const TEXTURE_FORMATS={"rgb8unorm-unsized":{gl:6407,b:4,c:2,bpp:4,dataFormat:6407,types:[5121,33635]},"rgba8unorm-unsized":{gl:6408,b:4,c:2,bpp:4,dataFormat:6408,types:[5121,32819,32820]},r8unorm:{gl:33321,b:1,c:1,rb:!0},r8snorm:{gl:36756,b:1,c:1,render:"snorm8-renderable-webgl"},r8uint:{gl:33330,b:1,c:1,rb:!0},r8sint:{gl:33329,b:1,c:1,rb:!0},rg8unorm:{gl:33323,b:2,c:2,rb:!0},rg8snorm:{gl:36757,b:2,c:2,render:"snorm8-renderable-webgl"},rg8uint:{gl:33336,b:2,c:2,rb:!0},rg8sint:{gl:33335,b:2,c:2,rb:!0},r16uint:{gl:33332,b:2,c:1,rb:!0},r16sint:{gl:33331,b:2,c:1,rb:!0},r16float:{gl:33325,b:2,c:1,render:"float16-renderable-webgl",filter:"float16-filterable-webgl",rb:!0},"r16unorm-webgl":{gl:33322,b:2,c:1,f:"norm16-renderable-webgl",rb:!0},"r16snorm-webgl":{gl:36760,b:2,c:1,f:"snorm16-renderable-webgl"},"rgba4unorm-webgl":{gl:32854,b:2,c:4,wgpu:!1,rb:!0},"rgb565unorm-webgl":{gl:36194,b:2,c:4,wgpu:!1,rb:!0},"rgb5a1unorm-webgl":{gl:32855,b:2,c:4,wgpu:!1,rb:!0},"rgb8unorm-webgl":{gl:32849,b:3,c:3,wgpu:!1},"rgb8snorm-webgl":{gl:36758,b:3,c:3,wgpu:!1},rgba8unorm:{gl:32856,b:4,c:2,bpp:4},"rgba8unorm-srgb":{gl:35907,b:4,c:4,bpp:4},rgba8snorm:{gl:36759,b:4,c:4,render:"snorm8-renderable-webgl"},rgba8uint:{gl:36220,b:4,c:4,bpp:4},rgba8sint:{gl:36238,b:4,c:4,bpp:4},bgra8unorm:{b:4,c:4},"bgra8unorm-srgb":{b:4,c:4},rg16uint:{gl:33338,b:4,c:1,bpp:4},rg16sint:{gl:33337,b:4,c:2,bpp:4},rg16float:{gl:33327,bpp:4,b:4,c:2,render:"float16-renderable-webgl",filter:"float16-filterable-webgl",rb:!0},"rg16unorm-webgl":{gl:33324,b:2,c:2,render:"norm16-renderable-webgl"},"rg16snorm-webgl":{gl:36761,b:2,c:2,render:"snorm16-renderable-webgl"},r32uint:{gl:33334,b:4,c:1,bpp:4,rb:!0},r32sint:{gl:33333,b:4,c:1,bpp:4,rb:!0},r32float:{gl:33326,bpp:4,b:4,c:1,render:"float32-renderable-webgl",filter:"float32-filterable"},rgb9e5ufloat:{gl:35901,b:4,c:3,p:1,render:"rgb9e5ufloat_renderable-webgl"},rg11b10ufloat:{gl:35898,b:4,c:3,p:1,render:"float32-renderable-webgl",rb:!0},rgb10a2unorm:{gl:32857,b:4,c:4,p:1,rb:!0},"rgb10a2uint-webgl":{b:4,c:4,gl:36975,p:1,wgpu:!1,bpp:4,rb:!0},"rgb16unorm-webgl":{gl:32852,b:2,c:3,f:"norm16-renderable-webgl"},"rgb16snorm-webgl":{gl:36762,b:2,c:3,f:"norm16-renderable-webgl"},rg32uint:{gl:33340,b:8,c:2,rb:!0},rg32sint:{gl:33339,b:8,c:2,rb:!0},rg32float:{gl:33328,b:8,c:2,render:"float32-renderable-webgl",filter:"float32-filterable",rb:!0},rgba16uint:{gl:36214,b:8,c:4,rb:!0},rgba16sint:{gl:36232,b:8,c:4,rb:!0},rgba16float:{gl:34842,b:8,c:4,render:"float16-renderable-webgl",filter:"float16-filterable-webgl"},"rgba16unorm-webgl":{gl:32859,b:2,c:4,render:"norm16-renderable-webgl",rb:!0},"rgba16snorm-webgl":{gl:36763,b:2,c:4,render:"snorm16-renderable-webgl"},"rgb32float-webgl":{gl:34837,render:"float32-renderable-webgl",filter:"float32-filterable",gl2ext:"EXT_color_buffer_float",dataFormat:6407,types:[5126]},rgba32uint:{gl:36208,b:16,c:4,rb:!0},rgba32sint:{gl:36226,b:16,c:4,rb:!0},rgba32float:{gl:34836,b:16,c:4,render:"float32-renderable-webgl",filter:"float32-filterable",rb:!0},stencil8:{gl:36168,b:1,c:1,attachment:36128,rb:!0},depth16unorm:{gl:33189,b:2,c:1,attachment:36096,dataFormat:6402,types:[5123],rb:!0},depth24plus:{gl:33190,b:3,c:1,attachment:36096,dataFormat:6402,types:[5125]},depth32float:{gl:36012,b:4,c:1,attachment:36096,dataFormat:6402,types:[5126],rb:!0},"depth24plus-stencil8":{gl:35056,b:4,c:2,p:1,attachment:33306,rb:!0,depthTexture:!0,dataFormat:34041,types:[34042]},"depth24unorm-stencil8":{gl:35056,b:4,c:2,p:1,attachment:33306,dataFormat:34041,types:[34042],rb:!0},"depth32float-stencil8":{gl:36013,b:5,c:2,p:1,attachment:33306,dataFormat:34041,types:[36269],rb:!0},"bc1-rgb-unorm-webgl":{gl:33776,x:X_S3TC,f:"texture-compression-bc"},"bc1-rgb-unorm-srgb-webgl":{gl:35916,x:X_S3TC_SRGB,f:"texture-compression-bc"},"bc1-rgba-unorm":{gl:33777,x:X_S3TC,f:"texture-compression-bc"},"bc1-rgba-unorm-srgb":{gl:35916,x:X_S3TC_SRGB,f:"texture-compression-bc"},"bc2-rgba-unorm":{gl:33778,x:X_S3TC,f:"texture-compression-bc"},"bc2-rgba-unorm-srgb":{gl:35918,x:X_S3TC_SRGB,f:"texture-compression-bc"},"bc3-rgba-unorm":{gl:33779,x:X_S3TC,f:"texture-compression-bc"},"bc3-rgba-unorm-srgb":{gl:35919,x:X_S3TC_SRGB,f:"texture-compression-bc"},"bc4-r-unorm":{gl:36283,x:X_RGTC,f:"texture-compression-bc"},"bc4-r-snorm":{gl:36284,x:X_RGTC,f:"texture-compression-bc"},"bc5-rg-unorm":{gl:36285,x:X_RGTC,f:"texture-compression-bc"},"bc5-rg-snorm":{gl:36286,x:X_RGTC,f:"texture-compression-bc"},"bc6h-rgb-ufloat":{gl:36495,x:X_BPTC,f:"texture-compression-bc"},"bc6h-rgb-float":{gl:36494,x:X_BPTC,f:"texture-compression-bc"},"bc7-rgba-unorm":{gl:36492,x:X_BPTC,f:"texture-compression-bc"},"bc7-rgba-unorm-srgb":{gl:36493,x:X_BPTC,f:"texture-compression-bc"},"etc2-rgb8unorm":{gl:37492,f:"texture-compression-etc2"},"etc2-rgb8unorm-srgb":{gl:37494,f:"texture-compression-etc2"},"etc2-rgb8a1unorm":{gl:37496,f:"texture-compression-etc2"},"etc2-rgb8a1unorm-srgb":{gl:37497,f:"texture-compression-etc2"},"etc2-rgba8unorm":{gl:37493,f:"texture-compression-etc2"},"etc2-rgba8unorm-srgb":{gl:37495,f:"texture-compression-etc2"},"eac-r11unorm":{gl:37488,f:"texture-compression-etc2"},"eac-r11snorm":{gl:37489,f:"texture-compression-etc2"},"eac-rg11unorm":{gl:37490,f:"texture-compression-etc2"},"eac-rg11snorm":{gl:37491,f:"texture-compression-etc2"},"astc-4x4-unorm":{gl:37808,f:texture_compression_astc},"astc-4x4-unorm-srgb":{gl:37840,f:texture_compression_astc},"astc-5x4-unorm":{gl:37809,f:texture_compression_astc},"astc-5x4-unorm-srgb":{gl:37841,f:texture_compression_astc},"astc-5x5-unorm":{gl:37810,f:texture_compression_astc},"astc-5x5-unorm-srgb":{gl:37842,f:texture_compression_astc},"astc-6x5-unorm":{gl:37811,f:texture_compression_astc},"astc-6x5-unorm-srgb":{gl:37843,f:texture_compression_astc},"astc-6x6-unorm":{gl:37812,f:texture_compression_astc},"astc-6x6-unorm-srgb":{gl:37844,f:texture_compression_astc},"astc-8x5-unorm":{gl:37813,f:texture_compression_astc},"astc-8x5-unorm-srgb":{gl:37845,f:texture_compression_astc},"astc-8x6-unorm":{gl:37814,f:texture_compression_astc},"astc-8x6-unorm-srgb":{gl:37846,f:texture_compression_astc},"astc-8x8-unorm":{gl:37815,f:texture_compression_astc},"astc-8x8-unorm-srgb":{gl:37847,f:texture_compression_astc},"astc-10x5-unorm":{gl:37819,f:texture_compression_astc},"astc-10x5-unorm-srgb":{gl:37851,f:texture_compression_astc},"astc-10x6-unorm":{gl:37817,f:texture_compression_astc},"astc-10x6-unorm-srgb":{gl:37849,f:texture_compression_astc},"astc-10x8-unorm":{gl:37818,f:texture_compression_astc},"astc-10x8-unorm-srgb":{gl:37850,f:texture_compression_astc},"astc-10x10-unorm":{gl:37819,f:texture_compression_astc},"astc-10x10-unorm-srgb":{gl:37851,f:texture_compression_astc},"astc-12x10-unorm":{gl:37820,f:texture_compression_astc},"astc-12x10-unorm-srgb":{gl:37852,f:texture_compression_astc},"astc-12x12-unorm":{gl:37821,f:texture_compression_astc},"astc-12x12-unorm-srgb":{gl:37853,f:texture_compression_astc},"pvrtc-rgb4unorm-webgl":{gl:35840,f:"texture-compression-pvrtc-webgl"},"pvrtc-rgba4unorm-webgl":{gl:35842,f:"texture-compression-pvrtc-webgl"},"pvrtc-rbg2unorm-webgl":{gl:35841,f:"texture-compression-pvrtc-webgl"},"pvrtc-rgba2unorm-webgl":{gl:35843,f:"texture-compression-pvrtc-webgl"},"etc1-rbg-unorm-webgl":{gl:36196,f:"texture-compression-etc1-webgl"},"atc-rgb-unorm-webgl":{gl:35986,f:"texture-compression-atc-webgl"},"atc-rgba-unorm-webgl":{gl:35986,f:"texture-compression-atc-webgl"},"atc-rgbai-unorm-webgl":{gl:34798,f:"texture-compression-atc-webgl"}},DATA_FORMAT_CHANNELS={6403:1,36244:1,33319:2,33320:2,6407:3,36248:3,6408:4,36249:4,6402:1,34041:1,6406:1,6409:1,6410:2},TYPE_SIZES={5126:4,5125:4,5124:4,5123:2,5122:2,5131:2,5120:1,5121:1};function isTextureFormatSupported(gl,format,extensions){const info=TEXTURE_FORMATS[format];if(!info)return!1;if(void 0===info.gl)return!1;const extension=info.x||info.gl2ext;return!extension||Boolean(getWebGLExtension(gl,extension,extensions))}function convertTextureFormatToGL(format){const formatInfo=TEXTURE_FORMATS[format],webglFormat=formatInfo?.gl;if(void 0===webglFormat)throw new Error(`Unsupported texture format ${format}`);return webglFormat}function getWebGLTextureParameters(format){const formatData=TEXTURE_FORMATS[format],webglFormat=convertTextureFormatToGL(format),decoded=decodeTextureFormat(format);return{format:webglFormat,dataFormat:formatData?.dataFormat||getWebGLPixelDataFormat(decoded.format,decoded.integer,decoded.normalized,webglFormat),type:decoded.dataType?getGLFromVertexType(decoded.dataType):formatData?.types?.[0]||5121,compressed:decoded.compressed}}function getTextureFormatBytesPerPixel(format){const params=getWebGLTextureParameters(format);return(DATA_FORMAT_CHANNELS[params.dataFormat]||4)*(TYPE_SIZES[params.type]||1)}function getWebGLPixelDataFormat(dataFormat,integer,normalized,format){if(6408===format||6407===format)return format;switch(dataFormat){case"r":return integer&&!normalized?36244:6403;case"rg":return integer&&!normalized?33320:33319;case"rgb":return integer&&!normalized?36248:6407;case"rgba":return integer&&!normalized?36249:6408;default:return 6408}}const WEBGL_FEATURES={"depth-clip-control":"EXT_depth_clamp","timer-query-webgl":"EXT_disjoint_timer_query_webgl2","compilation-status-async-webgl":"KHR_parallel_shader_compile","polygon-mode-webgl":"WEBGL_polygon_mode","provoking-vertex-webgl":"WEBGL_provoking_vertex","shader-clip-cull-distance-webgl":"WEBGL_clip_cull_distance","shader-noperspective-interpolation-webgl":"NV_shader_noperspective_interpolation","shader-conservative-depth-webgl":"EXT_conservative_depth"};class WebGLDeviceFeatures extends DeviceFeatures{gl;extensions;testedFeatures=new Set;constructor(gl,extensions,disabledFeatures){super([],disabledFeatures),this.gl=gl,this.extensions=extensions,getWebGLExtension(gl,"EXT_color_buffer_float",extensions)}*[Symbol.iterator](){const features=this.getFeatures();for(const feature of features)this.has(feature)&&(yield feature);return[]}has(feature){return!this.disabledFeatures[feature]&&(this.testedFeatures.has(feature)||(this.testedFeatures.add(feature),function isTextureFeature(feature){return feature in TEXTURE_FEATURES}(feature)&&checkTextureFeature(this.gl,feature,this.extensions)&&this.features.add(feature),this.getWebGLFeature(feature)&&this.features.add(feature)),this.features.has(feature))}initializeFeatures(){const features=this.getFeatures().filter((feature=>"polygon-mode-webgl"!==feature));for(const feature of features)this.has(feature)}getFeatures(){return[...Object.keys(WEBGL_FEATURES),...Object.keys(TEXTURE_FEATURES)]}getWebGLFeature(feature){const featureInfo=WEBGL_FEATURES[feature];return"string"==typeof featureInfo?Boolean(getWebGLExtension(this.gl,featureInfo,this.extensions)):Boolean(featureInfo)}}class WebGLDeviceLimits extends DeviceLimits{get maxTextureDimension1D(){return 0}get maxTextureDimension2D(){return this.getParameter(3379)}get maxTextureDimension3D(){return this.getParameter(32883)}get maxTextureArrayLayers(){return this.getParameter(35071)}get maxBindGroups(){return 0}get maxDynamicUniformBuffersPerPipelineLayout(){return 0}get maxDynamicStorageBuffersPerPipelineLayout(){return 0}get maxSampledTexturesPerShaderStage(){return this.getParameter(35660)}get maxSamplersPerShaderStage(){return this.getParameter(35661)}get maxStorageBuffersPerShaderStage(){return 0}get maxStorageTexturesPerShaderStage(){return 0}get maxUniformBuffersPerShaderStage(){return this.getParameter(35375)}get maxUniformBufferBindingSize(){return this.getParameter(35376)}get maxStorageBufferBindingSize(){return 0}get minUniformBufferOffsetAlignment(){return this.getParameter(35380)}get minStorageBufferOffsetAlignment(){return 0}get maxVertexBuffers(){return 16}get maxVertexAttributes(){return this.getParameter(34921)}get maxVertexBufferArrayStride(){return 2048}get maxInterStageShaderComponents(){return this.getParameter(35659)}get maxComputeWorkgroupStorageSize(){return 0}get maxComputeInvocationsPerWorkgroup(){return 0}get maxComputeWorkgroupSizeX(){return 0}get maxComputeWorkgroupSizeY(){return 0}get maxComputeWorkgroupSizeZ(){return 0}get maxComputeWorkgroupsPerDimension(){return 0}gl;limits={};constructor(gl){super(),this.gl=gl}getParameter(parameter){return void 0===this.limits[parameter]&&(this.limits[parameter]=this.gl.getParameter(parameter)),this.limits[parameter]}}var resource=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/resource.js"),texture=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/texture.js");class Framebuffer extends resource.F{static defaultProps={...resource.F.defaultProps,width:1,height:1,colorAttachments:[],depthStencilAttachment:null};get[Symbol.toStringTag](){return"Framebuffer"}width;height;colorAttachments=[];depthStencilAttachment=null;constructor(device,props={}){super(device,props,Framebuffer.defaultProps),this.width=this.props.width,this.height=this.props.height}resize(size){let updateSize=!size;if(size){const[width,height]=Array.isArray(size)?size:[size.width,size.height];updateSize=updateSize||height!==this.height||width!==this.width,this.width=width,this.height=height}updateSize&&(utils_log.R.log(2,`Resizing framebuffer ${this.id} to ${this.width}x${this.height}`)(),this.resizeAttachments(this.width,this.height))}autoCreateAttachmentTextures(){if(0===this.props.colorAttachments.length&&!this.props.depthStencilAttachment)throw new Error("Framebuffer has noattachments");this.colorAttachments=this.props.colorAttachments.map((attachment=>{if("string"==typeof attachment){const texture=this.createColorTexture(attachment);return this.attachResource(texture),texture.view}return attachment instanceof texture.g?attachment.view:attachment}));const attachment=this.props.depthStencilAttachment;if(attachment)if("string"==typeof attachment){const texture=this.createDepthStencilTexture(attachment);this.attachResource(texture),this.depthStencilAttachment=texture.view}else attachment instanceof texture.g?this.depthStencilAttachment=attachment.view:this.depthStencilAttachment=attachment}createColorTexture(format){return this.device.createTexture({id:"color-attachment",usage:texture.g.RENDER_ATTACHMENT,format:format,width:this.width,height:this.height})}createDepthStencilTexture(format){return this.device.createTexture({id:"depth-stencil-attachment",usage:texture.g.RENDER_ATTACHMENT,format:format,width:this.width,height:this.height})}resizeAttachments(width,height){for(let i=0;i<this.colorAttachments.length;++i)if(this.colorAttachments[i]){const resizedTexture=this.device._createTexture({...this.colorAttachments[i].props,width:width,height:height});this.destroyAttachedResource(this.colorAttachments[i]),this.colorAttachments[i]=resizedTexture.view,this.attachResource(resizedTexture.view)}if(this.depthStencilAttachment){const resizedTexture=this.device._createTexture({...this.depthStencilAttachment.props,width:width,height:height});this.destroyAttachedResource(this.depthStencilAttachment),this.depthStencilAttachment=resizedTexture.view,this.attachResource(resizedTexture)}}}let pathPrefix="";async function loadImage(url,opts){return await new Promise(((resolve,reject)=>{try{const image=new Image;image.onload=()=>resolve(image),image.onerror=()=>reject(new Error(`Could not load image ${url}.`)),image.crossOrigin=opts?.crossOrigin||"anonymous",image.src=url.startsWith("http")?url:pathPrefix+url}catch(error){reject(error)}}))}async function loadScript(scriptUrl,scriptId){const head=document.getElementsByTagName("head")[0];if(!head)throw new Error("loadScript");const script=document.createElement("script");return script.setAttribute("type","text/javascript"),script.setAttribute("src",scriptUrl),scriptId&&(script.id=scriptId),new Promise(((resolve,reject)=>{script.onload=resolve,script.onerror=error=>reject(new Error(`Unable to load script '${scriptUrl}': ${error}`)),head.appendChild(script)}))}function with_parameters_withGLParameters(gl,parameters,func){if(function with_parameters_isObjectEmpty(object){for(const key in object)return!1;return!0}(parameters))return func(gl);const{nocatch:nocatch=!0}=parameters;let value;if(track_context_state_pushContextState(gl),unified_parameter_api_setGLParameters(gl,parameters),nocatch)value=func(gl),track_context_state_popContextState(gl);else try{value=func(gl)}finally{track_context_state_popContextState(gl)}return value}function setDeviceParameters(device,parameters){const webglDevice=device,{gl:gl}=webglDevice;if(parameters.cullMode)switch(parameters.cullMode){case"none":gl.disable(2884);break;case"front":gl.enable(2884),gl.cullFace(1028);break;case"back":gl.enable(2884),gl.cullFace(1029)}if(parameters.frontFace&&gl.frontFace(map("frontFace",parameters.frontFace,{ccw:2305,cw:2304})),parameters.unclippedDepth&&device.features.has("depth-clip-control")&&gl.enable(34383),void 0!==parameters.depthBias&&(gl.enable(32823),gl.polygonOffset(parameters.depthBias,parameters.depthBiasSlopeScale||0)),parameters.provokingVertex&&device.features.has("provoking-vertex-webgl")){const ext=webglDevice.getExtension("WEBGL_provoking_vertex").WEBGL_provoking_vertex,vertex=map("provokingVertex",parameters.provokingVertex,{first:36429,last:36430});ext?.provokingVertexWEBGL(vertex)}if((parameters.polygonMode||parameters.polygonOffsetLine)&&device.features.has("polygon-mode-webgl")){if(parameters.polygonMode){const ext=webglDevice.getExtension("WEBGL_polygon_mode").WEBGL_polygon_mode,mode=map("polygonMode",parameters.polygonMode,{fill:6914,line:6913});ext?.polygonModeWEBGL(1028,mode),ext?.polygonModeWEBGL(1029,mode)}parameters.polygonOffsetLine&&gl.enable(10754)}if(device.features.has("shader-clip-cull-distance-webgl")&&(parameters.clipDistance0&&gl.enable(12288),parameters.clipDistance1&&gl.enable(12289),parameters.clipDistance2&&gl.enable(12290),parameters.clipDistance3&&gl.enable(12291),parameters.clipDistance4&&gl.enable(12292),parameters.clipDistance5&&gl.enable(12293),parameters.clipDistance6&&gl.enable(12294),parameters.clipDistance7&&gl.enable(12295)),void 0!==parameters.depthWriteEnabled&&gl.depthMask(function mapBoolean(parameter,value){return value}(0,parameters.depthWriteEnabled)),parameters.depthCompare&&("always"!==parameters.depthCompare?gl.enable(2929):gl.disable(2929),gl.depthFunc(convertCompareFunction("depthCompare",parameters.depthCompare))),parameters.stencilWriteMask){const mask=parameters.stencilWriteMask;gl.stencilMaskSeparate(1028,mask),gl.stencilMaskSeparate(1029,mask)}if(parameters.stencilReadMask&&utils_log.R.warn("stencilReadMask not supported under WebGL"),parameters.stencilCompare){const mask=parameters.stencilReadMask||4294967295,glValue=convertCompareFunction("depthCompare",parameters.stencilCompare);"always"!==parameters.stencilCompare?gl.enable(2960):gl.disable(2960),gl.stencilFuncSeparate(1028,glValue,0,mask),gl.stencilFuncSeparate(1029,glValue,0,mask)}if(parameters.stencilPassOperation&&parameters.stencilFailOperation&&parameters.stencilDepthFailOperation){const dppass=convertStencilOperation("stencilPassOperation",parameters.stencilPassOperation),sfail=convertStencilOperation("stencilFailOperation",parameters.stencilFailOperation),dpfail=convertStencilOperation("stencilDepthFailOperation",parameters.stencilDepthFailOperation);gl.stencilOpSeparate(1028,sfail,dpfail,dppass),gl.stencilOpSeparate(1029,sfail,dpfail,dppass)}if(parameters.blendColorOperation||parameters.blendAlphaOperation){gl.enable(3042);const colorEquation=convertBlendOperationToEquation("blendColorOperation",parameters.blendColorOperation||"add"),alphaEquation=convertBlendOperationToEquation("blendAlphaOperation",parameters.blendAlphaOperation||"add");gl.blendEquationSeparate(colorEquation,alphaEquation);const colorSrcFactor=convertBlendFactorToFunction("blendColorSrcFactor",parameters.blendColorSrcFactor||"one"),colorDstFactor=convertBlendFactorToFunction("blendColorDstFactor",parameters.blendColorDstFactor||"zero"),alphaSrcFactor=convertBlendFactorToFunction("blendAlphaSrcFactor",parameters.blendAlphaSrcFactor||"one"),alphaDstFactor=convertBlendFactorToFunction("blendAlphaDstFactor",parameters.blendAlphaDstFactor||"zero");gl.blendFuncSeparate(colorSrcFactor,colorDstFactor,alphaSrcFactor,alphaDstFactor)}}function convertCompareFunction(parameter,value){return map(parameter,value,{never:512,less:513,equal:514,"less-equal":515,greater:516,"not-equal":517,"greater-equal":518,always:519})}function convertStencilOperation(parameter,value){return map(parameter,value,{keep:7680,zero:0,replace:7681,invert:5386,"increment-clamp":7682,"decrement-clamp":7683,"increment-wrap":34055,"decrement-wrap":34056})}function convertBlendOperationToEquation(parameter,value){return map(parameter,value,{add:32774,subtract:32778,"reverse-subtract":32779,min:32775,max:32776})}function convertBlendFactorToFunction(parameter,value){return map(parameter,value,{one:1,zero:0,"src-color":768,"one-minus-src-color":769,"dst-color":774,"one-minus-dst-color":775,"src-alpha":770,"one-minus-src-alpha":771,"dst-alpha":772,"one-minus-dst-alpha":773,"src-alpha-saturated":776,"constant-color":32769,"one-minus-constant-color":32770,"constant-alpha":32771,"one-minus-constant-alpha":32772})}function map(parameter,value,valueMap){if(!(value in valueMap))throw new Error(function message(parameter,value){return`Illegal parameter ${value} for ${parameter}`}(parameter,value));return valueMap[value]}function convertSamplerParametersToWebGL(props){const params={};return props.addressModeU&&(params[10242]=convertAddressMode(props.addressModeU)),props.addressModeV&&(params[10243]=convertAddressMode(props.addressModeV)),props.addressModeW&&(params[32882]=convertAddressMode(props.addressModeW)),props.magFilter&&(params[10240]=convertMaxFilterMode(props.magFilter)),(props.minFilter||props.mipmapFilter)&&(params[10241]=function convertMinFilterMode(minFilter,mipmapFilter){if(!mipmapFilter)return convertMaxFilterMode(minFilter);switch(minFilter){case"nearest":return"nearest"===mipmapFilter?9984:9986;case"linear":return"nearest"===mipmapFilter?9985:9987}}(props.minFilter||"linear",props.mipmapFilter)),void 0!==props.lodMinClamp&&(params[33082]=props.lodMinClamp),void 0!==props.lodMaxClamp&&(params[33083]=props.lodMaxClamp),"comparison-sampler"===props.type&&(params[34892]=34894),props.compare&&(params[34893]=convertCompareFunction("compare",props.compare)),props.maxAnisotropy&&(params[34046]=props.maxAnisotropy),params}function convertAddressMode(addressMode){switch(addressMode){case"clamp-to-edge":return 33071;case"repeat":return 10497;case"mirror-repeat":return 33648}}function convertMaxFilterMode(maxFilter){switch(maxFilter){case"nearest":return 9728;case"linear":return 9729}}class WEBGLBuffer extends buffer.h{device;gl;handle;glTarget;glUsage;glIndexType=5123;byteLength;bytesUsed;constructor(device,props={}){super(device,props),this.device=device,this.gl=this.device.gl;const handle="object"==typeof props?props.handle:void 0;this.handle=handle||this.gl.createBuffer(),device.setSpectorMetadata(this.handle,{...this.props,data:typeof this.props.data}),this.glTarget=function getWebGLTarget(usage){if(usage&buffer.h.INDEX)return 34963;if(usage&buffer.h.VERTEX)return 34962;if(usage&buffer.h.UNIFORM)return 35345;return 34962}(this.props.usage),this.glUsage=function getWebGLUsage(usage){if(usage&buffer.h.INDEX)return 35044;if(usage&buffer.h.VERTEX)return 35044;if(usage&buffer.h.UNIFORM)return 35048;return 35044}(this.props.usage),this.glIndexType="uint32"===this.props.indexType?5125:5123,props.data?this._initWithData(props.data,props.byteOffset,props.byteLength):this._initWithByteLength(props.byteLength||0)}_initWithData(data,byteOffset=0,byteLength=data.byteLength+byteOffset){const glTarget=this.glTarget;this.gl.bindBuffer(glTarget,this.handle),this.gl.bufferData(glTarget,byteLength,this.glUsage),this.gl.bufferSubData(glTarget,byteOffset,data),this.gl.bindBuffer(glTarget,null),this.bytesUsed=byteLength,this.byteLength=byteLength,this._setDebugData(data,byteOffset,byteLength),this.trackAllocatedMemory(byteLength)}_initWithByteLength(byteLength){(0,utils_assert.v)(byteLength>=0);let data=byteLength;0===byteLength&&(data=new Float32Array(0));const glTarget=this.glTarget;return this.gl.bindBuffer(glTarget,this.handle),this.gl.bufferData(glTarget,data,this.glUsage),this.gl.bindBuffer(glTarget,null),this.bytesUsed=byteLength,this.byteLength=byteLength,this._setDebugData(null,0,byteLength),this.trackAllocatedMemory(byteLength),this}destroy(){!this.destroyed&&this.handle&&(this.removeStats(),this.trackDeallocatedMemory(),this.gl.deleteBuffer(this.handle),this.destroyed=!0,this.handle=null)}write(data,byteOffset=0){this.gl.bindBuffer(36663,this.handle),this.gl.bufferSubData(36663,byteOffset,data),this.gl.bindBuffer(36663,null),this._setDebugData(data,byteOffset,data.byteLength)}async readAsync(byteOffset=0,byteLength){return this.readSyncWebGL(byteOffset,byteLength)}readSyncWebGL(byteOffset=0,byteLength){byteLength=byteLength??this.byteLength-byteOffset;const data=new Uint8Array(byteLength);return this.gl.bindBuffer(36662,this.handle),this.gl.getBufferSubData(36662,byteOffset,data,0,byteLength),this.gl.bindBuffer(36662,null),this._setDebugData(data,byteOffset,byteLength),data}}var sampler=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/sampler.js");class WEBGLSampler extends sampler.L{device;handle;parameters;constructor(device,props){super(device,props),this.device=device,this.parameters=convertSamplerParametersToWebGL(props),this.handle=this.handle||this.device.gl.createSampler(),this._setSamplerParameters(this.parameters)}destroy(){this.handle&&(this.device.gl.deleteSampler(this.handle),this.handle=void 0)}toString(){return`Sampler(${this.id},${JSON.stringify(this.props)})`}_setSamplerParameters(parameters){for(const[pname,value]of Object.entries(parameters)){const param=Number(pname);switch(param){case 33082:case 33083:this.device.gl.samplerParameterf(this.handle,param,value);break;default:this.device.gl.samplerParameteri(this.handle,param,value)}}}}var texture_view=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/texture-view.js");class WEBGLTextureView extends texture_view.X{device;gl;handle;texture;constructor(device,props){super(device,{...texture.g.defaultProps,...props}),this.device=device,this.gl=this.device.gl,this.handle=null,this.texture=props.texture}}const DEFAULT_WEBGL_TEXTURE_PROPS={parameters:{},pixelStore:{},pixels:null,border:0,dataFormat:void 0,textureUnit:void 0,target:void 0};class WEBGLTexture extends texture.g{static FACES=[34069,34070,34071,34072,34073,34074];MAX_ATTRIBUTES;device;gl;handle;sampler=void 0;view=void 0;glFormat=void 0;type=void 0;dataFormat=void 0;mipmaps=void 0;target;textureUnit=void 0;loaded=!1;_video;constructor(device,props){super(device,{...DEFAULT_WEBGL_TEXTURE_PROPS,format:"rgba8unorm",...props}),this.device=device,this.gl=this.device.gl,this.handle=this.props.handle||this.gl.createTexture(),this.device.setSpectorMetadata(this.handle,{...this.props,data:typeof this.props.data}),this.glFormat=6408,this.target=function getWebGLTextureTarget(props){switch(props.dimension){case"2d":return 3553;case"cube":return 34067;case"2d-array":return 35866;case"3d":return 32879;default:throw new Error(props.dimension)}}(this.props),this.loaded=!1,"string"==typeof this.props?.data&&Object.assign(this.props,{data:loadImage(this.props.data)}),this.initialize(this.props),Object.seal(this)}destroy(){this.handle&&(this.gl.deleteTexture(this.handle),this.removeStats(),this.trackDeallocatedMemory("Texture"),this.destroyed=!0)}toString(){return`Texture(${this.id},${this.width}x${this.height})`}createView(props){return new WEBGLTextureView(this.device,{...props,texture:this})}initialize(props={}){if("cube"===this.props.dimension)return this.initializeCube(props);let data=props.data;if(data instanceof Promise)return data.then((resolvedImageData=>this.initialize(Object.assign({},props,{pixels:resolvedImageData,data:resolvedImageData})))),this;const isVideo="undefined"!=typeof HTMLVideoElement&&data instanceof HTMLVideoElement;if(isVideo&&data.readyState<HTMLVideoElement.HAVE_METADATA)return this._video=null,data.addEventListener("loadeddata",(()=>this.initialize(props))),this;const{parameters:parameters={}}=props,{pixels:pixels=null,pixelStore:pixelStore={},textureUnit:textureUnit,mipmaps:mipmaps=!0}=props;data||(data=pixels);let{width:width,height:height,dataFormat:dataFormat,type:type,compressed:compressed=!1}=props;const{depth:depth=0}=props,glFormat=convertTextureFormatToGL(props.format);return({width:width,height:height,compressed:compressed,dataFormat:dataFormat,type:type}=this._deduceParameters({format:props.format,type:type,dataFormat:dataFormat,compressed:compressed,data:data,width:width,height:height})),this.width=width,this.height=height,this.glFormat=glFormat,this.type=type,this.dataFormat=dataFormat,this.textureUnit=textureUnit,Number.isFinite(this.textureUnit)&&(this.gl.activeTexture(33984+this.textureUnit),this.gl.bindTexture(this.target,this.handle)),this.mipmaps=mipmaps,this.setImageData({data:data,width:width,height:height,depth:depth,format:props.format,type:type,dataFormat:dataFormat,parameters:pixelStore,compressed:compressed}),this.setSampler(props.sampler),this._setSamplerParameters(parameters),this.view=this.createView({...this.props,mipLevelCount:1,arrayLayerCount:1}),mipmaps&&this.device.isTextureFormatFilterable(props.format)&&this.generateMipmap(),isVideo&&(this._video={video:data,parameters:parameters,lastTime:data.readyState>=HTMLVideoElement.HAVE_CURRENT_DATA?data.currentTime:-1}),this}initializeCube(props){const{mipmaps:mipmaps=!0,parameters:parameters={}}=props;return this.setCubeMapImageData(props).then((()=>{this.loaded=!0,mipmaps&&this.generateMipmap(props),this.setSampler(props.sampler),this._setSamplerParameters(parameters)})),this}setSampler(sampler={}){let samplerProps;sampler instanceof WEBGLSampler?(this.sampler=sampler,samplerProps=sampler.props):(this.sampler=new WEBGLSampler(this.device,sampler),samplerProps=sampler);const parameters=convertSamplerParametersToWebGL(samplerProps);return this._setSamplerParameters(parameters),this}resize(options){const{height:height,width:width,mipmaps:mipmaps=!1}=options;return width!==this.width||height!==this.height?this.initialize({width:width,height:height,format:this.format,type:this.type,dataFormat:this.dataFormat,mipmaps:mipmaps}):this}update(){if(this._video){const{video:video,parameters:parameters,lastTime:lastTime}=this._video;if(lastTime===video.currentTime||video.readyState<HTMLVideoElement.HAVE_CURRENT_DATA)return;this.setSubImageData({data:video,parameters:parameters}),this.mipmaps&&this.generateMipmap(),this._video.lastTime=video.currentTime}}generateMipmap(params={}){return this.mipmaps=!0,this.gl.bindTexture(this.target,this.handle),with_parameters_withGLParameters(this.gl,params,(()=>{this.gl.generateMipmap(this.target)})),this.gl.bindTexture(this.target,null),this}setImageData(options){if("3d"===this.props.dimension||"2d-array"===this.props.dimension)return this.setImageData3D(options);this.trackDeallocatedMemory("Texture");const{target:target=this.target,pixels:pixels=null,level:level=0,glFormat:glFormat=this.glFormat,offset:offset=0,parameters:parameters={}}=options;let{data:data=null,type:type=this.type,width:width=this.width,height:height=this.height,dataFormat:dataFormat=this.dataFormat,compressed:compressed=!1}=options;data||(data=pixels),({type:type,dataFormat:dataFormat,compressed:compressed,width:width,height:height}=this._deduceParameters({format:this.props.format,type:type,dataFormat:dataFormat,compressed:compressed,data:data,width:width,height:height}));const{gl:gl}=this;gl.bindTexture(this.target,this.handle);let dataType=null;if(({data:data,dataType:dataType}=this._getDataType({data:data,compressed:compressed})),with_parameters_withGLParameters(this.gl,parameters,(()=>{switch(dataType){case"null":case"browser-object":gl.texImage2D(target,level,glFormat,width,height,0,dataFormat,type,data);break;case"typed-array":gl.texImage2D(target,level,glFormat,width,height,0,dataFormat,type,data,offset);break;case"buffer":this.device.gl.bindBuffer(35052,data.handle||data),this.device.gl.texImage2D(target,level,glFormat,width,height,0,dataFormat,type,offset),this.device.gl.bindBuffer(35052,null);break;case"compressed":for(const[levelIndex,levelData]of data.entries())gl.compressedTexImage2D(target,levelIndex,levelData.format,levelData.width,levelData.height,0,levelData.data);break;default:(0,utils_assert.v)(!1,"Unknown image data type")}})),data&&data.byteLength)this.trackAllocatedMemory(data.byteLength,"Texture");else{const bytesPerPixel=getTextureFormatBytesPerPixel(this.props.format);this.trackAllocatedMemory(this.width*this.height*bytesPerPixel,"Texture")}return this.loaded=!0,this}setSubImageData({target:target=this.target,pixels:pixels=null,data:data=null,x:x=0,y:y=0,width:width=this.width,height:height=this.height,level:level=0,glFormat:glFormat=this.glFormat,type:type=this.type,dataFormat:dataFormat=this.dataFormat,compressed:compressed=!1,offset:offset=0,parameters:parameters={}}){if(({type:type,dataFormat:dataFormat,compressed:compressed,width:width,height:height}=this._deduceParameters({format:this.props.format,type:type,dataFormat:dataFormat,compressed:compressed,data:data,width:width,height:height})),(0,utils_assert.v)(1===this.depth,"texSubImage not supported for 3D textures"),data||(data=pixels),data&&data.data){const ndarray=data;data=ndarray.data,width=ndarray.shape[0],height=ndarray.shape[1]}data instanceof WEBGLBuffer&&(data=data.handle),this.gl.bindTexture(this.target,this.handle),with_parameters_withGLParameters(this.gl,parameters,(()=>{compressed?this.gl.compressedTexSubImage2D(target,level,x,y,width,height,glFormat,data):null===data?this.gl.texSubImage2D(target,level,x,y,width,height,dataFormat,type,null):ArrayBuffer.isView(data)?this.gl.texSubImage2D(target,level,x,y,width,height,dataFormat,type,data,offset):"undefined"!=typeof WebGLBuffer&&data instanceof WebGLBuffer?(this.device.gl.bindBuffer(35052,data),this.device.gl.texSubImage2D(target,level,x,y,width,height,dataFormat,type,offset),this.device.gl.bindBuffer(35052,null)):this.device.gl.texSubImage2D(target,level,x,y,width,height,dataFormat,type,data)})),this.gl.bindTexture(this.target,null)}copyFramebuffer(opts={}){return utils_log.R.error("Texture.copyFramebuffer({...}) is no logner supported, use copyToTexture(source, target, opts})")(),null}getActiveUnit(){return this.gl.getParameter(34016)-33984}bind(textureUnit=this.textureUnit){const{gl:gl}=this;return void 0!==textureUnit&&(this.textureUnit=textureUnit,gl.activeTexture(33984+textureUnit)),gl.bindTexture(this.target,this.handle),textureUnit}unbind(textureUnit=this.textureUnit){const{gl:gl}=this;return void 0!==textureUnit&&(this.textureUnit=textureUnit,gl.activeTexture(33984+textureUnit)),gl.bindTexture(this.target,null),textureUnit}_getDataType({data:data,compressed:compressed=!1}){return compressed?{data:data,dataType:"compressed"}:null===data?{data:data,dataType:"null"}:ArrayBuffer.isView(data)?{data:data,dataType:"typed-array"}:data instanceof WEBGLBuffer?{data:data.handle,dataType:"buffer"}:"undefined"!=typeof WebGLBuffer&&data instanceof WebGLBuffer?{data:data,dataType:"buffer"}:{data:data,dataType:"browser-object"}}_deduceParameters(opts){const{format:format,data:data}=opts;let{width:width,height:height,dataFormat:dataFormat,type:type,compressed:compressed}=opts;const parameters=getWebGLTextureParameters(format);return dataFormat=dataFormat||parameters.dataFormat,type=type||parameters.type,compressed=compressed||parameters.compressed,({width:width,height:height}=this._deduceImageSize(data,width,height)),{dataFormat:dataFormat,type:type,compressed:compressed,width:width,height:height,format:format,data:data}}_deduceImageSize(data,width,height){let size;return size="undefined"!=typeof ImageData&&data instanceof ImageData?{width:data.width,height:data.height}:"undefined"!=typeof HTMLImageElement&&data instanceof HTMLImageElement?{width:data.naturalWidth,height:data.naturalHeight}:"undefined"!=typeof HTMLCanvasElement&&data instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&data instanceof ImageBitmap?{width:data.width,height:data.height}:"undefined"!=typeof HTMLVideoElement&&data instanceof HTMLVideoElement?{width:data.videoWidth,height:data.videoHeight}:data?{width:width,height:height}:{width:width>=0?width:1,height:height>=0?height:1},(0,utils_assert.v)(size,"Could not deduced texture size"),(0,utils_assert.v)(void 0===width||size.width===width,"Deduced texture width does not match supplied width"),(0,utils_assert.v)(void 0===height||size.height===height,"Deduced texture height does not match supplied height"),size}async setCubeMapImageData(options){const{gl:gl}=this,{width:width,height:height,pixels:pixels,data:data,format:format=6408,type:type=5121}=options,imageDataMap=pixels||data,resolvedFaces=await Promise.all(WEBGLTexture.FACES.map((face=>{const facePixels=imageDataMap[face];return Promise.all(Array.isArray(facePixels)?facePixels:[facePixels])})));this.bind(),WEBGLTexture.FACES.forEach(((face,index)=>{resolvedFaces[index].length>1&&!1!==this.props.mipmaps&&utils_log.R.warn(`${this.id} has mipmap and multiple LODs.`)(),resolvedFaces[index].forEach(((image,lodLevel)=>{width&&height?gl.texImage2D(face,lodLevel,format,width,height,0,format,type,image):gl.texImage2D(face,lodLevel,format,format,type,image)}))})),this.unbind()}setImageDataForFace(options){const{face:face,width:width,height:height,pixels:pixels,data:data,format:format=6408,type:type=5121}=options,{gl:gl}=this,imageData=pixels||data;return this.bind(),imageData instanceof Promise?imageData.then((resolvedImageData=>this.setImageDataForFace(Object.assign({},options,{face:face,data:resolvedImageData,pixels:resolvedImageData})))):this.width||this.height?gl.texImage2D(face,0,format,width,height,0,format,type,imageData):gl.texImage2D(face,0,format,format,type,imageData),this}setImageData3D(options){const{level:level=0,dataFormat:dataFormat,format:format,type:type,width:width,height:height,depth:depth=1,offset:offset=0,data:data,parameters:parameters={}}=options;this.trackDeallocatedMemory("Texture"),this.gl.bindTexture(this.target,this.handle);const webglTextureFormat=getWebGLTextureParameters(format);if(with_parameters_withGLParameters(this.gl,parameters,(()=>{ArrayBuffer.isView(data)&&this.gl.texImage3D(this.target,level,webglTextureFormat.format,width,height,depth,0,webglTextureFormat.dataFormat,webglTextureFormat.type,data),data instanceof WEBGLBuffer&&(this.gl.bindBuffer(35052,data.handle),this.gl.texImage3D(this.target,level,dataFormat,width,height,depth,0,format,type,offset))})),data&&data.byteLength)this.trackAllocatedMemory(data.byteLength,"Texture");else{const bytesPerPixel=getTextureFormatBytesPerPixel(this.props.format);this.trackAllocatedMemory(this.width*this.height*this.depth*bytesPerPixel,"Texture")}return this.loaded=!0,this}_setSamplerParameters(parameters){if(!(0,utils.Z)(parameters)){!function logParameters(parameters){utils_log.R.log(1,"texture sampler parameters",parameters)()}(parameters),this.gl.bindTexture(this.target,this.handle);for(const[pname,pvalue]of Object.entries(parameters)){const param=Number(pname),value=pvalue;switch(param){case 33082:case 33083:this.gl.texParameterf(this.target,param,value);break;default:this.gl.texParameteri(this.target,param,value)}}this.gl.bindTexture(this.target,null)}}}class WEBGLFramebuffer extends Framebuffer{device;gl;handle;get texture(){return this.colorAttachments[0]}constructor(device,props){super(device,props);const isDefaultFramebuffer=null===props.handle;if(this.device=device,this.gl=device.gl,this.handle=this.props.handle||isDefaultFramebuffer?this.props.handle:this.gl.createFramebuffer(),!isDefaultFramebuffer){device.setSpectorMetadata(this.handle,{id:this.props.id,props:this.props}),this.autoCreateAttachmentTextures();const prevHandle=this.gl.bindFramebuffer(36160,this.handle);for(let i=0;i<this.colorAttachments.length;++i){const attachment=this.colorAttachments[i],attachmentPoint=36064+i;attachment&&this._attachOne(attachmentPoint,attachment)}if(this.depthStencilAttachment&&this._attachOne(function getDepthStencilAttachmentWebGL(format){const info=TEXTURE_FORMATS[format];if(!info?.attachment)throw new Error(`${format} is not a depth stencil format`);return info.attachment}(this.depthStencilAttachment.props.format),this.depthStencilAttachment),!1!==props.check){const status=this.gl.checkFramebufferStatus(36160);if(36053!==status)throw new Error(`Framebuffer ${function _getFrameBufferStatus(status){switch(status){case 36053:return"success";case 36054:return"Mismatched attachments";case 36055:return"No attachments";case 36057:return"Height/width mismatch";case 36061:return"Unsupported or split attachments";case 36182:return"Samples mismatch";default:return`${status}`}}(status)}`)}this.gl.bindFramebuffer(36160,prevHandle)}}destroy(){super.destroy(),this.destroyed||null===this.handle||this.gl.deleteFramebuffer(this.handle)}createDepthStencilTexture(format){return new WEBGLTexture(this.device,{id:`${this.id}-depth-stencil`,format:format,width:this.width,height:this.height,mipmaps:!1})}resizeAttachments(width,height){if(null===this.handle)return this.width=this.gl.drawingBufferWidth,this.height=this.gl.drawingBufferHeight,this;void 0===width&&(width=this.gl.drawingBufferWidth),void 0===height&&(height=this.gl.drawingBufferHeight);for(const colorAttachment of this.colorAttachments)colorAttachment.texture.resize({width:width,height:height});return this.depthStencilAttachment&&this.depthStencilAttachment.texture.resize({width:width,height:height}),this}_attachOne(attachmentPoint,attachment){if(Array.isArray(attachment)){const[texture,layer=0,level=0]=attachment;return this._attachTexture(attachmentPoint,texture,layer,level),texture}if(attachment instanceof WEBGLTexture)return this._attachTexture(attachmentPoint,attachment,0,0),attachment;if(attachment instanceof WEBGLTextureView){const textureView=attachment;return this._attachTexture(attachmentPoint,textureView.texture,textureView.props.baseMipLevel,textureView.props.baseArrayLayer),attachment.texture}throw new Error("attach")}_attachTexture(attachment,texture,layer,level){const{gl:gl}=this.device;switch(gl.bindTexture(texture.target,texture.handle),texture.target){case 35866:case 32879:gl.framebufferTextureLayer(36160,attachment,texture.target,level,layer);break;case 34067:const face=function mapIndexToCubeMapFace(layer){return layer<34069?layer+34069:layer}(layer);gl.framebufferTexture2D(36160,attachment,face,texture.handle,level);break;case 3553:gl.framebufferTexture2D(36160,attachment,3553,texture.handle,level);break;default:(0,utils_assert.v)(!1,"Illegal texture type")}gl.bindTexture(texture.target,null)}}class WebGLCanvasContext extends CanvasContext{device;presentationSize;_framebuffer=null;constructor(device,props){super(props),this.device=device,this.presentationSize=[-1,-1],this._setAutoCreatedCanvasId(`${this.device.id}-canvas`),this.update()}getCurrentFramebuffer(){return this.update(),this._framebuffer=this._framebuffer||new WEBGLFramebuffer(this.device,{handle:null}),this._framebuffer}update(){const size=this.getPixelSize();(size[0]!==this.presentationSize[0]||size[1]!==this.presentationSize[1])&&(this.presentationSize=size,this.resize())}resize(options){if(this.device.gl)if(this.canvas){const devicePixelRatio=this.getDevicePixelRatio(options?.useDevicePixels);this.setDevicePixelRatio(devicePixelRatio,options)}else;}commit(){}}const DEFAULT_SPECTOR_PROPS={spector:utils_log.R.get("spector")||utils_log.R.get("spectorjs")};let spector=null,initialized=!1;var webgl_constants=__webpack_require__("./node_modules/@luma.gl/constants/dist/webgl-constants.js");function getWebGLContextData(gl){return gl.luma=gl.luma||{},gl.luma}function makeDebugContext(gl,props={}){return gl?props.debug?function getDebugContext(gl,props){if(!globalThis.WebGLDebugUtils)return utils_log.R.warn("webgl-debug not loaded")(),gl;const data=getWebGLContextData(gl);if(data.debugContext)return data.debugContext;globalThis.WebGLDebugUtils.init({...webgl_constants.GL,...gl});const glDebug=globalThis.WebGLDebugUtils.makeDebugContext(gl,onGLError.bind(null,props),onValidateGLFunc.bind(null,props));for(const key in webgl_constants.GL)key in glDebug||"number"!=typeof webgl_constants.GL[key]||(glDebug[key]=webgl_constants.GL[key]);class WebGLDebugContext{}Object.setPrototypeOf(glDebug,Object.getPrototypeOf(gl)),Object.setPrototypeOf(WebGLDebugContext,glDebug);const debugContext=Object.create(WebGLDebugContext);return data.realContext=gl,data.debugContext=debugContext,debugContext.debug=!0,debugContext}(gl,props):function getRealContext(gl){const data=getWebGLContextData(gl);return data.realContext?data.realContext:gl}(gl):null}function getFunctionString(functionName,functionArgs){functionArgs=Array.from(functionArgs).map((arg=>void 0===arg?"undefined":arg));let args=globalThis.WebGLDebugUtils.glFunctionArgsToString(functionName,functionArgs);return args=`${args.slice(0,100)}${args.length>100?"...":""}`,`gl.${functionName}(${args})`}function onGLError(props,err,functionName,args){args=Array.from(args).map((arg=>void 0===arg?"undefined":arg));const message=`${globalThis.WebGLDebugUtils.glEnumToString(err)} in gl.${functionName}(${globalThis.WebGLDebugUtils.glFunctionArgsToString(functionName,args)})`;if(utils_log.R.error(message)(),props.throwOnError)throw new Error(message)}function onValidateGLFunc(props,functionName,functionArgs){let functionString="";if(utils_log.R.level>=1&&(functionString=getFunctionString(functionName,functionArgs),utils_log.R.log(1,functionString)()),props.break&&props.break.length>0){functionString=functionString||getFunctionString(functionName,functionArgs);props.break.every((breakOn=>-1!==functionString.indexOf(breakOn)))}for(const arg of functionArgs)if(void 0===arg){if(functionString=functionString||getFunctionString(functionName,functionArgs),props.throwOnError)throw new Error(`Undefined argument: ${functionString}`);utils_log.R.error(`Undefined argument: ${functionString}`)()}}var shader=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/shader.js");function getMessageType(messageType){const lowerCaseType=messageType.toLowerCase();return["warning","error","info"].includes(lowerCaseType)?lowerCaseType:"info"}class WEBGLShader extends shader.M{device;handle;constructor(device,props){switch(super(device,props),this.device=device,this.props.stage){case"vertex":this.handle=this.props.handle||this.device.gl.createShader(35633);break;case"fragment":this.handle=this.props.handle||this.device.gl.createShader(35632);break;default:throw new Error(this.props.stage)}this._compile(this.source)}destroy(){this.handle&&(this.removeStats(),this.device.gl.deleteShader(this.handle),this.destroyed=!0)}async getCompilationInfo(){return await this._waitForCompilationComplete(),this.getCompilationInfoSync()}getCompilationInfoSync(){return function parseShaderCompilerLog(errLog){const lines=errLog.split(/\r?\n/),messages=[];for(const line of lines){if(line.length<=1)continue;const segments=line.split(":");if(2===segments.length){const[messageType,message]=segments;messages.push({message:message.trim(),type:getMessageType(messageType),lineNum:0,linePos:0});continue}const[messageType,linePosition,lineNumber,...rest]=segments;let lineNum=parseInt(lineNumber,10);isNaN(lineNum)&&(lineNum=0);let linePos=parseInt(linePosition,10);isNaN(linePos)&&(linePos=0),messages.push({message:rest.join(":").trim(),type:getMessageType(messageType),lineNum:lineNum,linePos:linePos})}return messages}(this.device.gl.getShaderInfoLog(this.handle))}getTranslatedSource(){const ext=this.device.getExtension("WEBGL_debug_shaders").WEBGL_debug_shaders;return ext?.getTranslatedShaderSource(this.handle)}async _compile(source){source=(source=>source.startsWith("#version ")?source:`#version 100\n${source}`)(source);const{gl:gl}=this.device;if(gl.shaderSource(this.handle,source),gl.compileShader(this.handle),0!==utils_log.R.level){if(this.device.features.has("compilation-status-async-webgl"))utils_log.R.once(1,"Shader compilation is asynchronous")(),await this._waitForCompilationComplete(),utils_log.R.info(2,`Shader ${this.id} - async compilation complete: ${this.compilationStatus}`)(),this._getCompilationStatus(),this.debugShader();else if(this._getCompilationStatus(),this.debugShader(),"error"===this.compilationStatus)throw new Error(`GLSL compilation errors in ${this.props.stage} shader ${this.props.id}`)}else this.compilationStatus="pending"}async _waitForCompilationComplete(){const waitMs=async ms=>await new Promise((resolve=>setTimeout(resolve,ms)));if(!this.device.features.has("compilation-status-async-webgl"))return void await waitMs(10);const{gl:gl}=this.device;for(;;){if(gl.getShaderParameter(this.handle,37297))return;await waitMs(10)}}_getCompilationStatus(){this.compilationStatus=this.device.gl.getShaderParameter(this.handle,35713)?"success":"error"}}class RenderPass extends resource.F{static defaultProps={...resource.F.defaultProps,framebuffer:null,parameters:void 0,clearColor:[0,0,0,0],clearDepth:1,clearStencil:0,depthReadOnly:!1,stencilReadOnly:!1,discard:!1,occlusionQuerySet:void 0,timestampQuerySet:void 0,beginTimestampIndex:void 0,endTimestampIndex:void 0};get[Symbol.toStringTag](){return"RenderPass"}constructor(device,props){super(device,props,RenderPass.defaultProps)}}const COLOR_CHANNELS=[1,2,4,8];class WEBGLRenderPass extends RenderPass{device;glParameters;constructor(device,props){super(device,props),this.device=device,track_context_state_pushContextState(this.device.gl),this.setParameters(this.props.parameters),this.clear()}end(){track_context_state_popContextState(this.device.gl)}pushDebugGroup(groupLabel){}popDebugGroup(){}insertDebugMarker(markerLabel){}setParameters(parameters={}){const glParameters={...this.glParameters};this.props.framebuffer&&(glParameters.framebuffer=this.props.framebuffer),this.props.depthReadOnly&&(glParameters.depthMask=!this.props.depthReadOnly),glParameters.stencilMask=this.props.stencilReadOnly?0:1,glParameters[35977]=this.props.discard,parameters.viewport&&(parameters.viewport.length>=6?(glParameters.viewport=parameters.viewport.slice(0,4),glParameters.depthRange=[parameters.viewport[4],parameters.viewport[5]]):glParameters.viewport=parameters.viewport),parameters.scissorRect&&(glParameters.scissorTest=!0,glParameters.scissor=parameters.scissorRect),parameters.blendConstant&&(glParameters.blendColor=parameters.blendConstant),parameters.stencilReference&&(console.warn("RenderPassParameters.stencilReference not yet implemented in WebGL"),parameters[2967]=parameters.stencilReference),parameters.colorMask&&(glParameters.colorMask=COLOR_CHANNELS.map((channel=>Boolean(channel&parameters.colorMask)))),this.glParameters=glParameters,unified_parameter_api_setGLParameters(this.device.gl,glParameters)}beginOcclusionQuery(queryIndex){const webglQuerySet=this.props.occlusionQuerySet;webglQuerySet?.beginOcclusionQuery()}endOcclusionQuery(){const webglQuerySet=this.props.occlusionQuerySet;webglQuerySet?.endOcclusionQuery()}clear(){const glParameters={...this.glParameters};let clearMask=0;!1!==this.props.clearColor&&(clearMask|=16384,glParameters.clearColor=this.props.clearColor),!1!==this.props.clearDepth&&(clearMask|=256,glParameters.clearDepth=this.props.clearDepth),!1!==this.props.clearStencil&&(clearMask|=1024,glParameters.clearStencil=this.props.clearStencil),0!==clearMask&&with_parameters_withGLParameters(this.device.gl,glParameters,(()=>{this.device.gl.clear(clearMask)}))}clearColorBuffer(drawBuffer=0,value=[0,0,0,0]){with_parameters_withGLParameters(this.device.gl,{framebuffer:this.props.framebuffer},(()=>{switch(value.constructor){case Int32Array:this.device.gl.clearBufferiv(6144,drawBuffer,value);break;case Uint32Array:this.device.gl.clearBufferuiv(6144,drawBuffer,value);break;case Float32Array:default:this.device.gl.clearBufferfv(6144,drawBuffer,value)}}))}}var render_pipeline=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/render-pipeline.js");var uniform=__webpack_require__("./node_modules/@luma.gl/core/dist/lib/uniforms/uniform.js"),get_attribute_from_layouts=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/attribute-utils/get-attribute-from-layouts.js");function getTypedArrayFromGLType(glType,options){const{clamped:clamped=!0}=options||{};switch(glType){case 5126:return Float32Array;case 5123:case 33635:case 32819:case 32820:return Uint16Array;case 5125:return Uint32Array;case 5121:return clamped?Uint8ClampedArray:Uint8Array;case 5120:return Int8Array;case 5122:return Int16Array;case 5124:return Int32Array;default:throw new Error("Failed to deduce typed array type from GL constant")}}const DEFAULT_ACCESSOR_VALUES={offset:0,stride:0,type:5126,size:1,divisor:0,normalized:!1,integer:!1},PROP_CHECKS={deprecatedProps:{instanced:"divisor",isInstanced:"divisor"}};class Accessor{offset;stride;type;size;divisor;normalized;integer;buffer;index;static getBytesPerElement(accessor){return getTypedArrayFromGLType(accessor.type||5126).BYTES_PER_ELEMENT}static getBytesPerVertex(accessor){(0,utils_assert.v)(accessor.size);return getTypedArrayFromGLType(accessor.type||5126).BYTES_PER_ELEMENT*accessor.size}static resolve(...accessors){return new Accessor(...[DEFAULT_ACCESSOR_VALUES,...accessors])}constructor(...accessors){accessors.forEach((accessor=>this._assign(accessor))),Object.freeze(this)}toString(){return JSON.stringify(this)}get BYTES_PER_ELEMENT(){return Accessor.getBytesPerElement(this)}get BYTES_PER_VERTEX(){return Accessor.getBytesPerVertex(this)}_assign(props={}){return void 0!==(props=function checkProps(className,props,propChecks){const{removedProps:removedProps={},deprecatedProps:deprecatedProps={},replacedProps:replacedProps={}}=propChecks;for(const propName in removedProps)if(propName in props){const replacement=removedProps[propName]?`${className}.${removedProps[propName]}`:"N/A";utils_log.R.removed(`${className}.${propName}`,replacement)()}for(const propName in deprecatedProps)if(propName in props){const replacementProp=deprecatedProps[propName];utils_log.R.deprecated(`${className}.${propName}`,`${className}.${replacementProp}`)()}let newProps=null;for(const[propName,replacementProp]of Object.entries(replacedProps))propName in props&&(utils_log.R.deprecated(`${className}.${propName}`,`${className}.${replacementProp}`)(),newProps=newProps||Object.assign({},props),newProps[replacementProp]=props[propName],delete newProps[propName]);return newProps||props}("Accessor",props,PROP_CHECKS)).type&&(this.type=props.type,5124!==props.type&&5125!==props.type||(this.integer=!0)),void 0!==props.size&&(this.size=props.size),void 0!==props.offset&&(this.offset=props.offset),void 0!==props.stride&&(this.stride=props.stride),void 0!==props.normalize&&(this.normalized=props.normalize),void 0!==props.normalized&&(this.normalized=props.normalized),void 0!==props.integer&&(this.integer=props.integer),void 0!==props.divisor&&(this.divisor=props.divisor),void 0!==props.buffer&&(this.buffer=props.buffer),void 0!==props.index&&("boolean"==typeof props.index?this.index=props.index?1:0:this.index=props.index),void 0!==props.instanced&&(this.divisor=props.instanced?1:0),void 0!==props.isInstanced&&(this.divisor=props.isInstanced?1:0),void 0===this.offset&&delete this.offset,void 0===this.stride&&delete this.stride,void 0===this.type&&delete this.type,void 0===this.size&&delete this.size,void 0===this.divisor&&delete this.divisor,void 0===this.normalized&&delete this.normalized,void 0===this.integer&&delete this.integer,void 0===this.buffer&&delete this.buffer,void 0===this.index&&delete this.index,this}}const SAMPLER_TYPES=[35678,35680,35679,35682,36289,36292,36293,36298,36299,36300,36303,36306,36307,36308,36311],COMPOSITE_GL_TYPES={5126:[5126,1,"float","f32","float32"],35664:[5126,2,"vec2","vec2<f32>","float32x2"],35665:[5126,3,"vec3","vec3<f32>","float32x3"],35666:[5126,4,"vec4","vec4<f32>","float32x4"],5124:[5124,1,"int","i32","sint32"],35667:[5124,2,"ivec2","vec2<i32>","sint32x2"],35668:[5124,3,"ivec3","vec3<i32>","sint32x3"],35669:[5124,4,"ivec4","vec4<i32>","sint32x4"],5125:[5125,1,"uint","u32","uint32"],36294:[5125,2,"uvec2","vec2<u32>","uint32x2"],36295:[5125,3,"uvec3","vec3<u32>","uint32x3"],36296:[5125,4,"uvec4","vec4<u32>","uint32x4"],35670:[5126,1,"bool","f32","float32"],35671:[5126,2,"bvec2","vec2<f32>","float32x2"],35672:[5126,3,"bvec3","vec3<f32>","float32x3"],35673:[5126,4,"bvec4","vec4<f32>","float32x4"],35674:[5126,8,"mat2","mat2x2<f32>"],35685:[5126,8,"mat2x3","mat2x3<f32>"],35686:[5126,8,"mat2x4","mat2x4<f32>"],35687:[5126,12,"mat3x2","mat3x2<f32>"],35675:[5126,12,"mat3","mat3x3<f32>"],35688:[5126,12,"mat3x4","mat3x4<f32>"],35689:[5126,16,"mat4x2","mat4x2<f32>"],35690:[5126,16,"mat4x3","mat4x3<f32>"],35676:[5126,16,"mat4","mat4x4<f32>"]};function decodeGLUniformType(glUniformType){const typeAndSize=COMPOSITE_GL_TYPES[glUniformType];if(!typeAndSize)throw new Error("uniform");const[glType,components,,format]=typeAndSize;return{format:format,components:components,glType:glType}}function decodeGLAttributeType(glAttributeType){const typeAndSize=COMPOSITE_GL_TYPES[glAttributeType];if(!typeAndSize)throw new Error("attribute");const[,components,,shaderType,vertexFormat]=typeAndSize;return{attributeType:shaderType,vertexFormat:vertexFormat,components:components}}function getShaderLayout(gl,program){const shaderLayout={attributes:[],bindings:[]};shaderLayout.attributes=function readAttributeDeclarations(gl,program){const attributes=[],count=gl.getProgramParameter(program,35721);for(let index=0;index<count;index++){const activeInfo=gl.getActiveAttrib(program,index);if(!activeInfo)throw new Error("activeInfo");const{name:name,type:compositeType}=activeInfo,location=gl.getAttribLocation(program,name);if(location>=0){const{attributeType:attributeType}=decodeGLAttributeType(compositeType),stepMode=/instance/i.test(name)?"instance":"vertex";attributes.push({name:name,location:location,stepMode:stepMode,type:attributeType})}}return attributes.sort(((a,b)=>a.location-b.location)),attributes}(gl,program);const uniformBlocks=function readUniformBlocks(gl,program){const getBlockParameter=(blockIndex,pname)=>gl.getActiveUniformBlockParameter(program,blockIndex,pname),uniformBlocks=[],blockCount=gl.getProgramParameter(program,35382);for(let blockIndex=0;blockIndex<blockCount;blockIndex++){const blockInfo={name:gl.getActiveUniformBlockName(program,blockIndex)||"",location:getBlockParameter(blockIndex,35391),byteLength:getBlockParameter(blockIndex,35392),vertex:getBlockParameter(blockIndex,35396),fragment:getBlockParameter(blockIndex,35398),uniformCount:getBlockParameter(blockIndex,35394),uniforms:[]},uniformIndices=getBlockParameter(blockIndex,35395)||[],uniformType=gl.getActiveUniforms(program,uniformIndices,35383),uniformArrayLength=gl.getActiveUniforms(program,uniformIndices,35384),uniformOffset=gl.getActiveUniforms(program,uniformIndices,35387),uniformStride=gl.getActiveUniforms(program,uniformIndices,35388);for(let i=0;i<blockInfo.uniformCount;++i){const activeInfo=gl.getActiveUniform(program,uniformIndices[i]);if(!activeInfo)throw new Error("activeInfo");blockInfo.uniforms.push({name:activeInfo.name,format:decodeGLUniformType(uniformType[i]).format,type:uniformType[i],arrayLength:uniformArrayLength[i],byteOffset:uniformOffset[i],byteStride:uniformStride[i]})}uniformBlocks.push(blockInfo)}return uniformBlocks.sort(((a,b)=>a.location-b.location)),uniformBlocks}(gl,program);for(const uniformBlock of uniformBlocks){const uniforms=uniformBlock.uniforms.map((uniform=>({name:uniform.name,format:uniform.format,byteOffset:uniform.byteOffset,byteStride:uniform.byteStride,arrayLength:uniform.arrayLength})));shaderLayout.bindings.push({type:"uniform",name:uniformBlock.name,location:uniformBlock.location,visibility:(uniformBlock.vertex?1:0)&(uniformBlock.fragment?2:0),minBindingSize:uniformBlock.byteLength,uniforms:uniforms})}const uniforms=function readUniformBindings(gl,program){const uniforms=[],uniformCount=gl.getProgramParameter(program,35718);for(let i=0;i<uniformCount;i++){const activeInfo=gl.getActiveUniform(program,i);if(!activeInfo)throw new Error("activeInfo");const{name:rawName,size:size,type:type}=activeInfo,{name:name,isArray:isArray}=parseUniformName(rawName);let webglLocation=gl.getUniformLocation(program,name);const uniformInfo={location:webglLocation,name:name,size:size,type:type,isArray:isArray};if(uniforms.push(uniformInfo),uniformInfo.size>1)for(let j=0;j<uniformInfo.size;j++){const elementName=`${name}[${j}]`;webglLocation=gl.getUniformLocation(program,elementName);const arrayElementUniformInfo={...uniformInfo,name:elementName,location:webglLocation};uniforms.push(arrayElementUniformInfo)}}return uniforms}(gl,program);let textureUnit=0;for(const uniform of uniforms)if(type=uniform.type,SAMPLER_TYPES.includes(type)){const{viewDimension:viewDimension,sampleType:sampleType}=getSamplerInfo(uniform.type);shaderLayout.bindings.push({type:"texture",name:uniform.name,location:textureUnit,viewDimension:viewDimension,sampleType:sampleType}),uniform.textureUnit=textureUnit,textureUnit+=1}var type;uniforms.length&&(shaderLayout.uniforms=uniforms);const varyings=function readVaryings(gl,program){const varyings=[],count=gl.getProgramParameter(program,35971);for(let location=0;location<count;location++){const activeInfo=gl.getTransformFeedbackVarying(program,location);if(!activeInfo)throw new Error("activeInfo");const{name:name,type:compositeType,size:size}=activeInfo,{glType:glType,components:components}=decodeGLUniformType(compositeType),varying={location:location,name:name,accessor:new Accessor({type:glType,size:size*components})};varyings.push(varying)}return varyings.sort(((a,b)=>a.location-b.location)),varyings}(gl,program);return varyings?.length&&(shaderLayout.varyings=varyings),shaderLayout}const SAMPLER_UNIFORMS_GL_TO_GPU={35678:["2d","float"],35680:["cube","float"],35679:["3d","float"],35682:["3d","depth"],36289:["2d-array","float"],36292:["2d-array","depth"],36293:["cube","float"],36298:["2d","sint"],36299:["3d","sint"],36300:["cube","sint"],36303:["2d-array","uint"],36306:["2d","uint"],36307:["3d","uint"],36308:["cube","uint"],36311:["2d-array","uint"]};function getSamplerInfo(type){const sampler=SAMPLER_UNIFORMS_GL_TO_GPU[type];if(!sampler)throw new Error("sampler");const[viewDimension,sampleType]=sampler;return{viewDimension:viewDimension,sampleType:sampleType}}function parseUniformName(name){if("]"!==name[name.length-1])return{name:name,length:1,isArray:!1};const matches=/([^[]*)(\[[0-9]+\])?/.exec(name);if(!matches||matches.length<2)throw new Error(`Failed to parse GLSL uniform name ${name}`);return{name:matches[1],length:matches[2]?1:0,isArray:Boolean(matches[2])}}function setUniform(gl,location,type,value){const gl2=gl;let uniformValue=value;!0===uniformValue&&(uniformValue=1),!1===uniformValue&&(uniformValue=0);const arrayValue="number"==typeof uniformValue?[uniformValue]:uniformValue;switch(type){case 35678:case 35680:case 35679:case 35682:case 36289:case 36292:case 36293:case 36298:case 36299:case 36300:case 36303:case 36306:case 36307:case 36308:case 36311:if("number"!=typeof value)throw new Error("samplers must be set to integers");return gl.uniform1i(location,value);case 5126:return gl.uniform1fv(location,arrayValue);case 35664:return gl.uniform2fv(location,arrayValue);case 35665:return gl.uniform3fv(location,arrayValue);case 35666:return gl.uniform4fv(location,arrayValue);case 5124:case 35670:return gl.uniform1iv(location,arrayValue);case 35667:case 35671:return gl.uniform2iv(location,arrayValue);case 35668:case 35672:return gl.uniform3iv(location,arrayValue);case 35669:case 35673:return gl.uniform4iv(location,arrayValue);case 5125:return gl2.uniform1uiv(location,arrayValue,1);case 36294:return gl2.uniform2uiv(location,arrayValue,2);case 36295:return gl2.uniform3uiv(location,arrayValue,3);case 36296:return gl2.uniform4uiv(location,arrayValue,4);case 35674:return gl.uniformMatrix2fv(location,!1,arrayValue);case 35675:return gl.uniformMatrix3fv(location,!1,arrayValue);case 35676:return gl.uniformMatrix4fv(location,!1,arrayValue);case 35685:return gl2.uniformMatrix2x3fv(location,!1,arrayValue);case 35686:return gl2.uniformMatrix2x4fv(location,!1,arrayValue);case 35687:return gl2.uniformMatrix3x2fv(location,!1,arrayValue);case 35688:return gl2.uniformMatrix3x4fv(location,!1,arrayValue);case 35689:return gl2.uniformMatrix4x2fv(location,!1,arrayValue);case 35690:return gl2.uniformMatrix4x3fv(location,!1,arrayValue)}throw new Error("Illegal uniform")}class WEBGLRenderPipeline extends render_pipeline.r{device;handle;vs;fs;introspectedLayout;uniforms={};bindings={};varyings=null;_uniformCount=0;_uniformSetters={};constructor(device,props){super(device,props),this.device=device,this.handle=this.props.handle||this.device.gl.createProgram(),this.device.setSpectorMetadata(this.handle,{id:this.props.id}),this.vs=props.vs,this.fs=props.fs;const{varyings:varyings,bufferMode:bufferMode=35981}=props;switch(varyings&&varyings.length>0&&(this.varyings=varyings,this.device.gl.transformFeedbackVaryings(this.handle,varyings,bufferMode)),this._linkShaders(),utils_log.R.time(1,`RenderPipeline ${this.id} - shaderLayout introspection`)(),this.introspectedLayout=getShaderLayout(this.device.gl,this.handle),utils_log.R.timeEnd(1,`RenderPipeline ${this.id} - shaderLayout introspection`)(),this.shaderLayout=(0,get_attribute_from_layouts.GE)(this.introspectedLayout,props.shaderLayout),this.props.topology){case"triangle-fan-webgl":case"line-loop-webgl":utils_log.R.warn(`Primitive topology ${this.props.topology} is deprecated and will be removed in v9.1`)}}destroy(){this.handle&&(this.device.gl.deleteProgram(this.handle),this.destroyed=!0)}setBindings(bindings,options){for(const[name,value]of Object.entries(bindings)){const binding=this.shaderLayout.bindings.find((binding=>binding.name===name))||this.shaderLayout.bindings.find((binding=>binding.name===`${name}Uniforms`));if(binding){switch(value||utils_log.R.warn(`Unsetting binding "${name}" in render pipeline "${this.id}"`)(),binding.type){case"uniform":if(!(value instanceof WEBGLBuffer||value.buffer instanceof WEBGLBuffer))throw new Error("buffer value");break;case"texture":if(!(value instanceof WEBGLTextureView||value instanceof WEBGLTexture||value instanceof WEBGLFramebuffer))throw new Error("texture value");break;case"sampler":utils_log.R.warn(`Ignoring sampler ${name}`)();break;default:throw new Error(binding.type)}this.bindings[name]=value}else{const validBindings=this.shaderLayout.bindings.map((binding=>`"${binding.name}"`)).join(", ");options?.disableWarnings||utils_log.R.warn(`Unknown binding "${name}" in render pipeline "${this.id}", expected one of ${validBindings}`)()}}}draw(options){const{renderPass:renderPass,parameters:parameters=this.props.parameters,topology:topology=this.props.topology,vertexArray:vertexArray,vertexCount:vertexCount,instanceCount:instanceCount,isInstanced:isInstanced=!1,firstVertex:firstVertex=0,transformFeedback:transformFeedback}=options,glDrawMode=function getGLDrawMode(topology){switch(topology){case"point-list":return 0;case"line-list":return 1;case"line-strip":return 3;case"line-loop-webgl":return 2;case"triangle-list":return 4;case"triangle-strip":return 5;case"triangle-fan-webgl":return 6;default:throw new Error(topology)}}(topology),isIndexed=Boolean(vertexArray.indexBuffer),glIndexType=vertexArray.indexBuffer?.glIndexType;if("success"!==this.linkStatus)return utils_log.R.info(2,`RenderPipeline:${this.id}.draw() aborted - waiting for shader linking`)(),!1;if(!this._areTexturesRenderable()||0===vertexCount)return utils_log.R.info(2,`RenderPipeline:${this.id}.draw() aborted - textures not yet loaded`)(),!1;if(0===vertexCount)return utils_log.R.info(2,`RenderPipeline:${this.id}.draw() aborted - no vertices to draw`)(),!0;this.device.gl.useProgram(this.handle),vertexArray.bindBeforeRender(renderPass),transformFeedback&&transformFeedback.begin(this.props.topology),this._applyBindings(),this._applyUniforms();const webglRenderPass=renderPass;return function withDeviceAndGLParameters(device,parameters,glParameters,func){if((0,utils.Z)(parameters))return func(device);const webglDevice=device;track_context_state_pushContextState(webglDevice.gl);try{return setDeviceParameters(device,parameters),unified_parameter_api_setGLParameters(webglDevice.gl,glParameters),func(device)}finally{track_context_state_popContextState(webglDevice.gl)}}(this.device,parameters,webglRenderPass.glParameters,(()=>{isIndexed&&isInstanced?this.device.gl.drawElementsInstanced(glDrawMode,vertexCount||0,glIndexType,firstVertex,instanceCount||0):isIndexed?this.device.gl.drawElements(glDrawMode,vertexCount||0,glIndexType,firstVertex):isInstanced?this.device.gl.drawArraysInstanced(glDrawMode,firstVertex,vertexCount||0,instanceCount||0):this.device.gl.drawArrays(glDrawMode,firstVertex,vertexCount||0),transformFeedback&&transformFeedback.end()})),vertexArray.unbindAfterRender(renderPass),!0}setUniformsWebGL(uniforms){const{bindings:bindings}=(0,uniform.l)(uniforms);Object.keys(bindings).forEach((name=>{utils_log.R.warn(`Unsupported value "${JSON.stringify(bindings[name])}" used in setUniforms() for key ${name}. Use setBindings() instead?`)()})),Object.assign(this.uniforms,uniforms)}async _linkShaders(){const{gl:gl}=this.device;if(gl.attachShader(this.handle,this.vs.handle),gl.attachShader(this.handle,this.fs.handle),utils_log.R.time(4,`linkProgram for ${this.id}`)(),gl.linkProgram(this.handle),utils_log.R.timeEnd(4,`linkProgram for ${this.id}`)(),utils_log.R.level,!this.device.features.has("compilation-status-async-webgl")){const status=this._getLinkStatus();return void this._reportLinkStatus(status)}utils_log.R.once(1,"RenderPipeline linking is asynchronous")(),await this._waitForLinkComplete(),utils_log.R.info(2,`RenderPipeline ${this.id} - async linking complete: ${this.linkStatus}`)();const status=this._getLinkStatus();this._reportLinkStatus(status)}_reportLinkStatus(status){if("success"!==status){if("error"===this.vs.compilationStatus)throw this.vs.debugShader(),new Error(`Error during compilation of shader ${this.vs.id}`);if("error"===this.fs?.compilationStatus)throw this.fs.debugShader(),new Error(`Error during compilation of shader ${this.fs.id}`);throw new Error(`Error during ${status}: ${this.device.gl.getProgramInfoLog(this.handle)}`)}}_getLinkStatus(){const{gl:gl}=this.device;if(!gl.getProgramParameter(this.handle,35714))return this.linkStatus="error","linking";gl.validateProgram(this.handle);return gl.getProgramParameter(this.handle,35715)?(this.linkStatus="success","success"):(this.linkStatus="error","validation")}async _waitForLinkComplete(){const waitMs=async ms=>await new Promise((resolve=>setTimeout(resolve,ms)));if(!this.device.features.has("compilation-status-async-webgl"))return void await waitMs(10);const{gl:gl}=this.device;for(;;){if(gl.getProgramParameter(this.handle,37297))return;await waitMs(10)}}_areTexturesRenderable(){let texturesRenderable=!0;for(const[,texture]of Object.entries(this.bindings))texture instanceof WEBGLTexture&&(texture.update(),texturesRenderable=texturesRenderable&&texture.loaded);return texturesRenderable}_applyBindings(){if("success"!==this.linkStatus)return;const{gl:gl}=this.device;gl.useProgram(this.handle);let textureUnit=0,uniformBufferIndex=0;for(const binding of this.shaderLayout.bindings){const value=this.bindings[binding.name]||this.bindings[binding.name.replace(/Uniforms$/,"")];if(!value)throw new Error(`No value for binding ${binding.name} in ${this.id}`);switch(binding.type){case"uniform":const{name:name}=binding,location=gl.getUniformBlockIndex(this.handle,name);if(4294967295===location)throw new Error(`Invalid uniform block name ${name}`);gl.uniformBlockBinding(this.handle,uniformBufferIndex,location),value instanceof WEBGLBuffer?gl.bindBufferBase(35345,uniformBufferIndex,value.handle):gl.bindBufferRange(35345,uniformBufferIndex,value.buffer.handle,value.offset||0,value.size||value.buffer.byteLength-value.offset),uniformBufferIndex+=1;break;case"texture":if(!(value instanceof WEBGLTextureView||value instanceof WEBGLTexture||value instanceof WEBGLFramebuffer))throw new Error("texture");let texture;if(value instanceof WEBGLTextureView)texture=value.texture;else if(value instanceof WEBGLTexture)texture=value;else{if(!(value instanceof WEBGLFramebuffer&&value.colorAttachments[0]instanceof WEBGLTextureView))throw new Error("No texture");utils_log.R.warn("Passing framebuffer in texture binding may be deprecated. Use fbo.colorAttachments[0] instead")(),texture=value.colorAttachments[0].texture}gl.activeTexture(33984+textureUnit),gl.bindTexture(texture.target,texture.handle),textureUnit+=1;break;case"sampler":break;case"storage":case"read-only-storage":throw new Error(`binding type '${binding.type}' not supported in WebGL`)}}}_applyUniforms(){for(const uniformLayout of this.shaderLayout.uniforms||[]){const{name:name,location:location,type:type,textureUnit:textureUnit}=uniformLayout,value=this.uniforms[name]??textureUnit;void 0!==value&&setUniform(this.device.gl,location,type,value)}}}class CommandEncoder extends resource.F{static defaultProps={...resource.F.defaultProps,measureExecutionTime:void 0};get[Symbol.toStringTag](){return"CommandEncoder"}constructor(device,props){super(device,props,CommandEncoder.defaultProps)}}class CommandBuffer extends resource.F{static defaultProps={...resource.F.defaultProps};get[Symbol.toStringTag](){return"CommandBuffer"}constructor(device,props){super(device,props,CommandBuffer.defaultProps)}}class WEBGLCommandBuffer extends CommandBuffer{device;commands=[];constructor(device){super(device,{}),this.device=device}submitCommands(commands=this.commands){for(const command of commands)switch(command.name){case"copy-buffer-to-buffer":_copyBufferToBuffer(this.device,command.options);break;case"copy-buffer-to-texture":_copyBufferToTexture(this.device,command.options);break;case"copy-texture-to-buffer":_copyTextureToBuffer(this.device,command.options);break;case"copy-texture-to-texture":_copyTextureToTexture(this.device,command.options)}}}function _copyBufferToBuffer(device,options){const source=options.source,destination=options.destination;device.gl.bindBuffer(36662,source.handle),device.gl.bindBuffer(36663,destination.handle),device.gl.copyBufferSubData(36662,36663,options.sourceOffset??0,options.destinationOffset??0,options.size),device.gl.bindBuffer(36662,null),device.gl.bindBuffer(36663,null)}function _copyBufferToTexture(device,options){throw new Error("Not implemented")}function _copyTextureToBuffer(device,options){const{source:source,mipLevel:mipLevel=0,aspect:aspect="all",width:width=options.source.width,height:height=options.source.height,depthOrArrayLayers:depthOrArrayLayers=0,origin:origin=[0,0],destination:destination,byteOffset:byteOffset=0,bytesPerRow:bytesPerRow,rowsPerImage:rowsPerImage}=options;if("all"!==aspect)throw new Error("not supported");if(0!==mipLevel||0!==depthOrArrayLayers||bytesPerRow||rowsPerImage)throw new Error("not implemented");const{framebuffer:framebuffer,destroyFramebuffer:destroyFramebuffer}=getFramebuffer(source);let prevHandle;try{const webglBuffer=destination,sourceWidth=width||framebuffer.width,sourceHeight=height||framebuffer.height,sourceParams=getWebGLTextureParameters(framebuffer.texture.props.format),sourceFormat=sourceParams.dataFormat,sourceType=sourceParams.type;device.gl.bindBuffer(35051,webglBuffer.handle),prevHandle=device.gl.bindFramebuffer(36160,framebuffer.handle),device.gl.readPixels(origin[0],origin[1],sourceWidth,sourceHeight,sourceFormat,sourceType,byteOffset)}finally{device.gl.bindBuffer(35051,null),void 0!==prevHandle&&device.gl.bindFramebuffer(36160,prevHandle),destroyFramebuffer&&framebuffer.destroy()}}function _copyTextureToTexture(device,options){const{source:source,destinationMipLevel:destinationMipLevel=0,origin:origin=[0,0],destinationOrigin:destinationOrigin=[0,0],destination:destination}=options;let{width:width=options.destination.width,height:height=options.destination.height}=options;const{framebuffer:framebuffer,destroyFramebuffer:destroyFramebuffer}=getFramebuffer(source),[sourceX,sourceY]=origin,[destinationX,destinationY,destinationZ]=destinationOrigin,prevHandle=device.gl.bindFramebuffer(36160,framebuffer.handle);let textureTarget,texture=null;if(!(destination instanceof WEBGLTexture))throw new Error("invalid destination");switch(texture=destination,width=Number.isFinite(width)?width:texture.width,height=Number.isFinite(height)?height:texture.height,texture.bind(0),textureTarget=texture.target,textureTarget){case 3553:case 34067:device.gl.copyTexSubImage2D(textureTarget,destinationMipLevel,destinationX,destinationY,sourceX,sourceY,width,height);break;case 35866:case 32879:device.gl.copyTexSubImage3D(textureTarget,destinationMipLevel,destinationX,destinationY,destinationZ,sourceX,sourceY,width,height)}texture&&texture.unbind(),device.gl.bindFramebuffer(36160,prevHandle),destroyFramebuffer&&framebuffer.destroy()}function getFramebuffer(source){if(source instanceof texture.g){const{width:width,height:height,id:id}=source;return{framebuffer:source.device.createFramebuffer({id:`framebuffer-for-${id}`,width:width,height:height,colorAttachments:[source]}),destroyFramebuffer:!0}}return{framebuffer:source,destroyFramebuffer:!1}}class WEBGLCommandEncoder extends CommandEncoder{device;commandBuffer;constructor(device,props){super(device,props),this.device=device,this.commandBuffer=new WEBGLCommandBuffer(device)}destroy(){}finish(){this.commandBuffer.submitCommands()}copyBufferToBuffer(options){this.commandBuffer.commands.push({name:"copy-buffer-to-buffer",options:options})}copyBufferToTexture(options){this.commandBuffer.commands.push({name:"copy-buffer-to-texture",options:options})}copyTextureToBuffer(options){this.commandBuffer.commands.push({name:"copy-texture-to-buffer",options:options})}copyTextureToTexture(options){this.commandBuffer.commands.push({name:"copy-texture-to-texture",options:options})}pushDebugGroup(groupLabel){}popDebugGroup(){}insertDebugMarker(markerLabel){}resolveQuerySet(querySet,destination,options){}}class VertexArray extends resource.F{static defaultProps={...resource.F.defaultProps,renderPipeline:null};get[Symbol.toStringTag](){return"VertexArray"}maxVertexAttributes;attributeInfos;indexBuffer=null;attributes;constructor(device,props){super(device,props,VertexArray.defaultProps),this.maxVertexAttributes=device.limits.maxVertexAttributes,this.attributes=new Array(this.maxVertexAttributes).fill(null),this.attributeInfos=(0,get_attribute_from_layouts.Mr)(props.renderPipeline.shaderLayout,props.renderPipeline.bufferLayout,this.maxVertexAttributes)}setConstantWebGL(location,value){throw new Error("constant attributes not supported")}}var array_utils_flat=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/array-utils-flat.js"),is_electron=__webpack_require__("./node_modules/@probe.gl/env/dist/lib/is-electron.js"),globals=__webpack_require__("./node_modules/@probe.gl/env/dist/lib/globals.js");class WEBGLVertexArray extends VertexArray{get[Symbol.toStringTag](){return"VertexArray"}device;handle;buffer=null;bufferValue=null;static isConstantAttributeZeroSupported(device){return"Chrome"===function getBrowser(mockUserAgent){return mockUserAgent||(0,is_browser.B)()?(0,is_electron.b)(mockUserAgent)?"Electron":(mockUserAgent||globals.gM.userAgent||"").indexOf("Edge")>-1?"Edge":globalThis.chrome?"Chrome":globalThis.safari?"Safari":globalThis.mozInnerScreenX?"Firefox":"Unknown":"Node"}()}constructor(device,props){super(device,props),this.device=device,this.handle=this.device.gl.createVertexArray()}destroy(){super.destroy(),this.buffer&&this.buffer?.destroy(),this.handle&&(this.device.gl.deleteVertexArray(this.handle),this.handle=void 0)}setIndexBuffer(indexBuffer){const buffer=indexBuffer;if(buffer&&34963!==buffer.glTarget)throw new Error("Use .setBuffer()");this.device.gl.bindVertexArray(this.handle),this.device.gl.bindBuffer(34963,buffer?buffer.handle:null),this.indexBuffer=buffer,this.device.gl.bindVertexArray(null)}setBuffer(location,attributeBuffer){const buffer=attributeBuffer;if(34963===buffer.glTarget)throw new Error("Use .setIndexBuffer()");const{size:size,type:type,stride:stride,offset:offset,normalized:normalized,integer:integer,divisor:divisor}=this._getAccessor(location);this.device.gl.bindVertexArray(this.handle),this.device.gl.bindBuffer(34962,buffer.handle),integer?this.device.gl.vertexAttribIPointer(location,size,type,stride,offset):this.device.gl.vertexAttribPointer(location,size,type,normalized,stride,offset),this.device.gl.bindBuffer(34962,null),this.device.gl.enableVertexAttribArray(location),this.device.gl.vertexAttribDivisor(location,divisor||0),this.attributes[location]=buffer,this.device.gl.bindVertexArray(null)}setConstantWebGL(location,value){this._enable(location,!1),this.attributes[location]=value}bindBeforeRender(){this.device.gl.bindVertexArray(this.handle),this._applyConstantAttributes()}unbindAfterRender(){this.device.gl.bindVertexArray(null)}_applyConstantAttributes(){for(let location=0;location<this.maxVertexAttributes;++location){const constant=this.attributes[location];ArrayBuffer.isView(constant)&&this.device.setConstantAttributeWebGL(location,constant)}}_getAccessor(location){const attributeInfo=this.attributeInfos[location];if(!attributeInfo)throw new Error(`Unknown attribute location ${location}`);const glType=getGLFromVertexType(attributeInfo.bufferDataType);return{size:attributeInfo.bufferComponents,type:glType,stride:attributeInfo.byteStride,offset:attributeInfo.byteOffset,normalized:attributeInfo.normalized,integer:attributeInfo.integer,divisor:"instance"===attributeInfo.stepMode?1:0}}_enable(location,enable=!0){const canDisableAttributeZero=WEBGLVertexArray.isConstantAttributeZeroSupported(this.device);(enable||(canDisableAttributeZero||0!==location))&&(location=Number(location),this.device.gl.bindVertexArray(this.handle),enable?this.device.gl.enableVertexAttribArray(location):this.device.gl.disableVertexAttribArray(location),this.device.gl.bindVertexArray(null))}getConstantBuffer(elementCount,value){const constantValue=function normalizeConstantArrayValue(arrayValue){if(Array.isArray(arrayValue))return new Float32Array(arrayValue);return arrayValue}(value),byteLength=constantValue.byteLength*elementCount,length=constantValue.length*elementCount;if(this.buffer&&byteLength!==this.buffer.byteLength)throw new Error(`Buffer size is immutable, byte length ${byteLength} !== ${this.buffer.byteLength}.`);let updateNeeded=!this.buffer;if(this.buffer=this.buffer||this.device.createBuffer({byteLength:byteLength}),updateNeeded=updateNeeded||!function compareConstantArrayValues(v1,v2){if(!v1||!v2||v1.length!==v2.length||v1.constructor!==v2.constructor)return!1;for(let i=0;i<v1.length;++i)if(v1[i]!==v2[i])return!1;return!0}(constantValue,this.bufferValue),updateNeeded){const typedArray=(0,array_utils_flat.oF)(value.constructor,length);(0,array_utils_flat.R2)({target:typedArray,source:constantValue,start:0,count:length}),this.buffer.write(typedArray),this.bufferValue=value}return this.buffer}}class TransformFeedback extends resource.F{static defaultProps={...resource.F.defaultProps,layout:void 0,buffers:{}};get[Symbol.toStringTag](){return"TransformFeedback"}constructor(device,props){super(device,props,TransformFeedback.defaultProps)}}class WEBGLTransformFeedback extends TransformFeedback{device;gl;handle;layout;buffers={};unusedBuffers={};bindOnUse=!0;_bound=!1;constructor(device,props){super(device,props),this.device=device,this.gl=device.gl,this.handle=this.props.handle||this.gl.createTransformFeedback(),this.layout=this.props.layout,props.buffers&&this.setBuffers(props.buffers),Object.seal(this)}destroy(){this.gl.deleteTransformFeedback(this.handle),super.destroy()}begin(topology="point-list"){this.gl.bindTransformFeedback(36386,this.handle),this.bindOnUse&&this._bindBuffers(),this.gl.beginTransformFeedback(function getGLPrimitive(topology){switch(topology){case"point-list":return 0;case"line-list":case"line-strip":case"line-loop-webgl":return 1;case"triangle-list":case"triangle-strip":case"triangle-fan-webgl":return 4;default:throw new Error(topology)}}(topology))}end(){this.gl.endTransformFeedback(),this.bindOnUse&&this._unbindBuffers(),this.gl.bindTransformFeedback(36386,null)}setBuffers(buffers){this.buffers={},this.unusedBuffers={},this.bind((()=>{for(const bufferName in buffers)this.setBuffer(bufferName,buffers[bufferName])}))}setBuffer(locationOrName,bufferOrRange){const location=this._getVaryingIndex(locationOrName),{buffer:buffer,byteLength:byteLength,byteOffset:byteOffset}=this._getBufferRange(bufferOrRange);if(location<0)return this.unusedBuffers[locationOrName]=buffer,void utils_log.R.warn(`${this.id} unusedBuffers varying buffer ${locationOrName}`)();this.buffers[location]={buffer:buffer,byteLength:byteLength,byteOffset:byteOffset},this.bindOnUse||this._bindBuffer(location,buffer,byteOffset,byteLength)}getBuffer(locationOrName){if(isIndex(locationOrName))return this.buffers[locationOrName]||null;const location=this._getVaryingIndex(locationOrName);return location>=0?this.buffers[location]:null}bind(funcOrHandle=this.handle){if("function"!=typeof funcOrHandle)return this.gl.bindTransformFeedback(36386,funcOrHandle),this;let value;return this._bound?value=funcOrHandle():(this.gl.bindTransformFeedback(36386,this.handle),this._bound=!0,value=funcOrHandle(),this._bound=!1,this.gl.bindTransformFeedback(36386,null)),value}unbind(){this.bind(null)}_getBufferRange(bufferOrRange){if(bufferOrRange instanceof WEBGLBuffer)return{buffer:bufferOrRange,byteOffset:0,byteLength:bufferOrRange.byteLength};const{buffer:buffer,byteOffset:byteOffset=0,byteLength:byteLength=bufferOrRange.buffer.byteLength}=bufferOrRange;return{buffer:buffer,byteOffset:byteOffset,byteLength:byteLength}}_getVaryingIndex(locationOrName){if(isIndex(locationOrName))return Number(locationOrName);for(const varying of this.layout.varyings)if(locationOrName===varying.name)return varying.location;return-1}_bindBuffers(){for(const bufferIndex in this.buffers){const{buffer:buffer,byteLength:byteLength,byteOffset:byteOffset}=this._getBufferRange(this.buffers[bufferIndex]);this._bindBuffer(Number(bufferIndex),buffer,byteOffset,byteLength)}}_unbindBuffers(){for(const bufferIndex in this.buffers)this.gl.bindBufferBase(35982,Number(bufferIndex),null)}_bindBuffer(index,buffer,byteOffset=0,byteLength){const handle=buffer&&buffer.handle;handle&&void 0!==byteLength?this.gl.bindBufferRange(35982,index,handle,byteOffset,byteLength):this.gl.bindBufferBase(35982,index,handle)}}function isIndex(value){return"number"==typeof value?Number.isInteger(value):/^\d+$/.test(value)}class QuerySet extends resource.F{static defaultProps={...resource.F.defaultProps,type:void 0,count:void 0};get[Symbol.toStringTag](){return"QuerySet"}constructor(device,props){super(device,props,QuerySet.defaultProps)}}class WEBGLQuerySet extends QuerySet{device;handle;target=null;_queryPending=!1;_pollingPromise=null;get[Symbol.toStringTag](){return"Query"}constructor(device,props){if(super(device,props),this.device=device,props.count>1)throw new Error("WebGL QuerySet can only have one value");this.handle=this.device.gl.createQuery(),Object.seal(this)}destroy(){this.device.gl.deleteQuery(this.handle)}beginTimestampQuery(){return this._begin(35007)}endTimestampQuery(){this._end()}beginOcclusionQuery(options){return this._begin(options?.conservative?36202:35887)}endOcclusionQuery(){this._end()}beginTransformFeedbackQuery(){return this._begin(35976)}endTransformFeedbackQuery(){this._end()}async resolveQuery(){return[await this.pollQuery()]}_begin(target){this._queryPending||(this.target=target,this.device.gl.beginQuery(this.target,this.handle))}_end(){this._queryPending||this.target&&(this.device.gl.endQuery(this.target),this.target=null,this._queryPending=!0)}isResultAvailable(){if(!this._queryPending)return!1;const resultAvailable=this.device.gl.getQueryParameter(this.handle,34919);return resultAvailable&&(this._queryPending=!1),resultAvailable}isTimerDisjoint(){return this.device.gl.getParameter(36795)}getResult(){return this.device.gl.getQueryParameter(this.handle,34918)}getTimerMilliseconds(){return this.getResult()/1e6}pollQuery(limit=Number.POSITIVE_INFINITY){if(this._pollingPromise)return this._pollingPromise;let counter=0;return this._pollingPromise=new Promise(((resolve,reject)=>{const poll=()=>{this.isResultAvailable()?(resolve(this.getResult()),this._pollingPromise=null):counter++>limit?(reject("Timed out"),this._pollingPromise=null):requestAnimationFrame(poll)};requestAnimationFrame(poll)})),this._pollingPromise}}function format_utils_glFormatToComponents(format){switch(format){case 6406:case 33326:case 6403:return 1;case 33328:case 33319:return 2;case 6407:case 34837:return 3;case 6408:case 34836:return 4;default:return(0,utils_assert.v)(!1),0}}function readPixelsToArray(source,options){const{sourceX:sourceX=0,sourceY:sourceY=0,sourceFormat:sourceFormat=6408,sourceAttachment:sourceAttachment=36064}=options||{};let{target:target=null,sourceWidth:sourceWidth,sourceHeight:sourceHeight,sourceType:sourceType}=options||{};const{framebuffer:framebuffer,deleteFramebuffer:deleteFramebuffer}=copy_and_blit_getFramebuffer(source);(0,utils_assert.v)(framebuffer);const{gl:gl,handle:handle}=framebuffer;sourceWidth=sourceWidth||framebuffer.width,sourceHeight=sourceHeight||framebuffer.height;const attachment=sourceAttachment-36064;sourceType=sourceType||framebuffer.colorAttachments[attachment]?.texture?.type||5121,target=function getPixelArray(pixelArray,type,format,width,height){if(pixelArray)return pixelArray;const ArrayType=getTypedArrayFromGLType(type=type||5121,{clamped:!1}),components=format_utils_glFormatToComponents(format);return new ArrayType(width*height*components)}(target,sourceType,sourceFormat,sourceWidth,sourceHeight),sourceType=sourceType||function getGLTypeFromTypedArray(arrayOrType){switch(ArrayBuffer.isView(arrayOrType)?arrayOrType.constructor:arrayOrType){case Float32Array:return 5126;case Uint16Array:return 5123;case Uint32Array:return 5125;case Uint8Array:case Uint8ClampedArray:return 5121;case Int8Array:return 5120;case Int16Array:return 5122;case Int32Array:return 5124;default:throw new Error("Failed to deduce GL constant from typed array")}}(target);const prevHandle=gl.bindFramebuffer(36160,handle);return gl.readPixels(sourceX,sourceY,sourceWidth,sourceHeight,sourceFormat,sourceType,target),gl.bindFramebuffer(36160,prevHandle||null),deleteFramebuffer&&framebuffer.destroy(),target}function readPixelsToBuffer(source,options){const{target:target,sourceX:sourceX=0,sourceY:sourceY=0,sourceFormat:sourceFormat=6408,targetByteOffset:targetByteOffset=0}=options||{};let{sourceWidth:sourceWidth,sourceHeight:sourceHeight,sourceType:sourceType}=options||{};const{framebuffer:framebuffer,deleteFramebuffer:deleteFramebuffer}=copy_and_blit_getFramebuffer(source);(0,utils_assert.v)(framebuffer),sourceWidth=sourceWidth||framebuffer.width,sourceHeight=sourceHeight||framebuffer.height;const webglFramebuffer=framebuffer;sourceType=sourceType||5121;let webglBufferTarget=target;if(!webglBufferTarget){const byteLength=targetByteOffset+sourceWidth*sourceHeight*format_utils_glFormatToComponents(sourceFormat)*function format_utils_glTypeToBytes(type){switch(type){case 5121:return 1;case 33635:case 32819:case 32820:return 2;case 5126:return 4;default:return(0,utils_assert.v)(!1),0}}(sourceType);webglBufferTarget=webglFramebuffer.device.createBuffer({byteLength:byteLength})}const commandEncoder=source.device.createCommandEncoder();return commandEncoder.copyTextureToBuffer({source:source,width:sourceWidth,height:sourceHeight,origin:[sourceX,sourceY],destination:webglBufferTarget,byteOffset:targetByteOffset}),commandEncoder.destroy(),deleteFramebuffer&&framebuffer.destroy(),webglBufferTarget}function copy_and_blit_getFramebuffer(source){return source instanceof Framebuffer?{framebuffer:source,deleteFramebuffer:!1}:{framebuffer:toFramebuffer(source),deleteFramebuffer:!0}}function toFramebuffer(texture,props){const{device:device,width:width,height:height,id:id}=texture;return device.createFramebuffer({...props,id:`framebuffer-for-${id}`,width:width,height:height,colorAttachments:[texture]})}class WebGLDevice extends Device{static type="webgl";type="webgl";handle;features;limits;info;canvasContext;lost;_resolveContextLost;static isSupported(){return"undefined"!=typeof WebGL2RenderingContext}static attach(gl){if(gl instanceof WebGLDevice)return gl;if(gl?.device instanceof Device)return gl.device;if(!function isWebGL(gl){if("undefined"!=typeof WebGL2RenderingContext&&gl instanceof WebGL2RenderingContext)return!0;return Boolean(gl&&Number.isFinite(gl._version))}(gl))throw new Error("Invalid WebGL2RenderingContext");return new WebGLDevice({gl:gl})}static async create(props={}){utils_log.R.groupCollapsed(1,"WebGLDevice created")();const promises=[];props.debug&&promises.push(async function loadWebGLDeveloperTools(){(0,is_browser.B)()&&!globalThis.WebGLDebugUtils&&(globalThis.global=globalThis.global||globalThis,globalThis.global.module={},await loadScript("https://unpkg.com/webgl-debug@2.0.1/index.js"))}()),props.spector&&promises.push(async function loadSpectorJS(props){if(!globalThis.SPECTOR)try{await loadScript("https://cdn.jsdelivr.net/npm/spectorjs@0.9.30/dist/spector.bundle.js")}catch(error){utils_log.R.warn(String(error))}}()),"string"==typeof props.canvas&&promises.push(CanvasContext.pageLoaded);const results=await Promise.allSettled(promises);for(const result of results)"rejected"===result.status&&utils_log.R.error(`Failed to initialize debug libraries ${result.reason}`)();if(utils_log.R.probe(2,"DOM is loaded")(),props.gl?.device)return utils_log.R.warn("reattaching existing device")(),WebGLDevice.attach(props.gl);const device=new WebGLDevice(props),message=`Created ${device.type}${device.debug?" debug":""} context: ${device.info.vendor}, ${device.info.renderer} for canvas: ${device.canvasContext.id}`;return utils_log.R.probe(1,message)(),utils_log.R.table(1,device.info)(),utils_log.R.groupEnd(1)(),device}constructor(props){super({...props,id:props.id||(0,utils.L)("webgl-device")});const device=props.gl?.device;if(device)throw new Error(`WebGL context already attached to device ${device.id}`);const canvas=props.gl?.canvas||props.canvas;this.canvasContext=new WebGLCanvasContext(this,{...props,canvas:canvas}),this.lost=new Promise((resolve=>{this._resolveContextLost=resolve}));let gl=props.gl||null;if(gl||=function createBrowserContext(canvas,props){props={...DEFAULT_CONTEXT_PROPS,...props};let errorMessage=null;const onCreateError=error=>errorMessage=error.statusMessage||errorMessage;canvas.addEventListener("webglcontextcreationerror",onCreateError,!1);let gl=null;if(gl||=canvas.getContext("webgl2",props),canvas.removeEventListener("webglcontextcreationerror",onCreateError,!1),!gl)throw new Error(`Failed to create WebGL context: ${errorMessage||"Unknown error"}`);if(props.onContextLost){const{onContextLost:onContextLost}=props;canvas.addEventListener("webglcontextlost",(event=>onContextLost(event)),!1)}if(props.onContextRestored){const{onContextRestored:onContextRestored}=props;canvas.addEventListener("webglcontextrestored",(event=>onContextRestored(event)),!1)}return gl}(this.canvasContext.canvas,{...props,onContextLost:event=>this._resolveContextLost?.({reason:"destroyed",message:"Entered sleep mode, or too many apps or browser tabs are using the GPU."})}),!gl)throw new Error("WebGL context creation failed");this.handle=gl,this.gl=gl,this.gl.device=this,this.gl._version=2,props.spector&&(this.spectorJS=function initializeSpectorJS(props){if(props={...DEFAULT_SPECTOR_PROPS,...props},!props?.spector)return null;if(!spector&&globalThis.SPECTOR&&(utils_log.R.probe(1,"SPECTOR found and initialized")(),spector=new globalThis.SPECTOR.Spector,globalThis.luma&&(globalThis.luma.spector=spector)),!spector)return null;if(initialized||(initialized=!0,spector.spyCanvases(),spector?.onCaptureStarted.add((capture=>utils_log.R.info("Spector capture started:",capture)())),spector?.onCapture.add((capture=>{utils_log.R.info("Spector capture complete:",capture)(),spector?.getResultUI(),spector?.resultView.display(),spector?.resultView.addCapture(capture)}))),props?.canvas){if("string"==typeof props.spector&&props.spector!==props.canvas.id)return spector;spector?.startCapture(props?.canvas,500),new Promise((resolve=>setTimeout(resolve,2e3))).then((_=>{utils_log.R.info("Spector capture stopped after 2 seconds")(),spector?.stopCapture()}))}return spector}({...this.props,canvas:this.handle.canvas})),this.info=getDeviceInfo(this.gl,this._extensions),this.limits=new WebGLDeviceLimits(this.gl),this.features=new WebGLDeviceFeatures(this.gl,this._extensions,this.props.disabledFeatures),this.props.initalizeFeatures&&this.features.initializeFeatures(),this.canvasContext.resize();const{enable:enable=!0,copyState:copyState=!1}=props;trackContextState(this.gl,{enable:enable,copyState:copyState,log:(...args)=>utils_log.R.log(1,...args)()}),props.debug&&(this.gl=makeDebugContext(this.gl,{...props,throwOnError:!0}),this.debug=!0,utils_log.R.level=Math.max(utils_log.R.level,1),utils_log.R.warn("WebGL debug mode activated. Performance reduced.")())}destroy(){}get isLost(){return this.gl.isContextLost()}getSize(){return[this.gl.drawingBufferWidth,this.gl.drawingBufferHeight]}isTextureFormatSupported(format){return isTextureFormatSupported(this.gl,format,this._extensions)}isTextureFormatFilterable(format){return function isTextureFormatFilterable(gl,format,extensions){if(!isTextureFormatSupported(gl,format,extensions))return!1;if(format.startsWith("depth")||format.startsWith("stencil"))return!1;try{if(decodeTextureFormat(format).signed)return!1}catch{return!1}return format.endsWith("32float")?Boolean(getWebGLExtension(gl,"OES_texture_float_linear, extensions",extensions)):!format.endsWith("16float")||Boolean(getWebGLExtension(gl,"OES_texture_half_float_linear, extensions",extensions))}(this.gl,format,this._extensions)}isTextureFormatRenderable(format){return function isTextureFormatRenderable(gl,format,extensions){return!!isTextureFormatSupported(gl,format,extensions)&&"number"!=typeof format}(this.gl,format,this._extensions)}createCanvasContext(props){throw new Error("WebGL only supports a single canvas")}createBuffer(props){const newProps=this._getBufferProps(props);return new WEBGLBuffer(this,newProps)}_createTexture(props){return new WEBGLTexture(this,props)}createExternalTexture(props){throw new Error("createExternalTexture() not implemented")}createSampler(props){return new WEBGLSampler(this,props)}createShader(props){return new WEBGLShader(this,props)}createFramebuffer(props){return new WEBGLFramebuffer(this,props)}createVertexArray(props){return new WEBGLVertexArray(this,props)}createTransformFeedback(props){return new WEBGLTransformFeedback(this,props)}createQuerySet(props){return new WEBGLQuerySet(this,props)}createRenderPipeline(props){return new WEBGLRenderPipeline(this,props)}beginRenderPass(props){return new WEBGLRenderPass(this,props)}createComputePipeline(props){throw new Error("ComputePipeline not supported in WebGL")}beginComputePass(props){throw new Error("ComputePass not supported in WebGL")}renderPass=null;createCommandEncoder(props){return new WEBGLCommandEncoder(this,props)}submit(){this.renderPass?.end(),this.renderPass=null}readPixelsToArrayWebGL(source,options){return readPixelsToArray(source,options)}readPixelsToBufferWebGL(source,options){return readPixelsToBuffer(source,options)}setParametersWebGL(parameters){unified_parameter_api_setGLParameters(this.gl,parameters)}getParametersWebGL(parameters){return getGLParameters(this.gl,parameters)}withParametersWebGL(parameters,func){return with_parameters_withGLParameters(this.gl,parameters,func)}clearWebGL(options){!function clear(device,options){const{framebuffer:framebuffer=null,color:color=null,depth:depth=null,stencil:stencil=null}=options||{},parameters={};framebuffer&&(parameters.framebuffer=framebuffer);let clearFlags=0;color&&(clearFlags|=16384,!0!==color&&(parameters.clearColor=color)),depth&&(clearFlags|=256,!0!==depth&&(parameters.clearDepth=depth)),stencil&&(clearFlags|=1024,!0!==depth&&(parameters.clearStencil=depth)),(0,utils_assert.v)(0!==clearFlags,"clear: bad arguments");const gl=device.gl;with_parameters_withGLParameters(gl,parameters,(()=>{gl.clear(clearFlags)}))}(this,options)}resetWebGL(){utils_log.R.warn("WebGLDevice.resetWebGL is deprecated, use only for debugging")(),function resetGLParameters(gl){unified_parameter_api_setGLParameters(gl,GL_PARAMETER_DEFAULTS)}(this.gl)}gl;debug=!1;_canvasSizeInfo={clientWidth:0,clientHeight:0,devicePixelRatio:1};_extensions={};_polyfilled=!1;spectorJS;loseDevice(){let deviceLossTriggered=!1;const ext=this.getExtension("WEBGL_lose_context").WEBGL_lose_context;return ext&&(deviceLossTriggered=!0,ext.loseContext()),this._resolveContextLost?.({reason:"destroyed",message:"Application triggered context loss"}),deviceLossTriggered}pushState(){track_context_state_pushContextState(this.gl)}popState(){track_context_state_popContextState(this.gl)}setSpectorMetadata(handle,props){handle.__SPECTOR_Metadata=props}getGLKey(value,gl){gl=gl||this.gl2||this.gl;const number=Number(value);for(const key in gl)if(gl[key]===number)return`GL.${key}`;return String(value)}_constants;setConstantAttributeWebGL(location,constant){const maxVertexAttributes=this.limits.maxVertexAttributes;this._constants=this._constants||new Array(maxVertexAttributes).fill(null);const currentConstant=this._constants[location];switch(currentConstant&&function webgl_device_compareConstantArrayValues(v1,v2){if(!v1||!v2||v1.length!==v2.length||v1.constructor!==v2.constructor)return!1;for(let i=0;i<v1.length;++i)if(v1[i]!==v2[i])return!1;return!0}(currentConstant,constant)&&utils_log.R.info(1,`setConstantAttributeWebGL(${location}) could have been skipped, value unchanged`)(),this._constants[location]=constant,constant.constructor){case Float32Array:!function setConstantFloatArray(device,location,array){switch(array.length){case 1:device.gl.vertexAttrib1fv(location,array);break;case 2:device.gl.vertexAttrib2fv(location,array);break;case 3:device.gl.vertexAttrib3fv(location,array);break;case 4:device.gl.vertexAttrib4fv(location,array);break;default:(0,utils_assert.v)(!1)}}(this,location,constant);break;case Int32Array:!function setConstantIntArray(device,location,array){device.gl.vertexAttribI4iv(location,array)}(this,location,constant);break;case Uint32Array:!function setConstantUintArray(device,location,array){device.gl.vertexAttribI4uiv(location,array)}(this,location,constant);break;default:(0,utils_assert.v)(!1)}}getExtension(name){return getWebGLExtension(this.gl,name,this._extensions),this._extensions}}let statIdCounter=0;const DEFAULT_ANIMATION_LOOP_PROPS={device:null,onAddHTML:()=>"",onInitialize:async()=>null,onRender:()=>{},onFinalize:()=>{},onError:error=>console.error(error),stats:luma.stats.get("animation-loop-"+statIdCounter++),useDevicePixels:!0,autoResizeViewport:!1,autoResizeDrawingBuffer:!1};class AnimationLoop{device=null;canvas=null;props;animationProps=null;timeline=null;stats;cpuTime;gpuTime;frameRate;display;needsRedraw="initialized";_initialized=!1;_running=!1;_animationFrameId=null;_nextFramePromise=null;_resolveNextFrame=null;_cpuStartTime=0;constructor(props){if(this.props={...DEFAULT_ANIMATION_LOOP_PROPS,...props},!(props=this.props).device)throw new Error("No device provided");const{useDevicePixels:useDevicePixels=!0}=this.props;this.stats=props.stats||new dist.Uz({id:"animation-loop-stats"}),this.cpuTime=this.stats.get("CPU Time"),this.gpuTime=this.stats.get("GPU Time"),this.frameRate=this.stats.get("Frame Rate"),this.setProps({autoResizeViewport:props.autoResizeViewport,autoResizeDrawingBuffer:props.autoResizeDrawingBuffer,useDevicePixels:useDevicePixels}),this.start=this.start.bind(this),this.stop=this.stop.bind(this),this._onMousemove=this._onMousemove.bind(this),this._onMouseleave=this._onMouseleave.bind(this)}destroy(){this.stop(),this._setDisplay(null)}delete(){this.destroy()}setNeedsRedraw(reason){return this.needsRedraw=this.needsRedraw||reason,this}setProps(props){return"autoResizeViewport"in props&&(this.props.autoResizeViewport=props.autoResizeViewport||!1),"autoResizeDrawingBuffer"in props&&(this.props.autoResizeDrawingBuffer=props.autoResizeDrawingBuffer||!1),"useDevicePixels"in props&&(this.props.useDevicePixels=props.useDevicePixels||!1),this}async start(){if(this._running)return this;this._running=!0;try{let appContext;return this._initialized||(this._initialized=!0,await this._initDevice(),this._initialize(),await this.props.onInitialize(this._getAnimationProps())),this._running?(!1!==appContext&&(this._cancelAnimationFrame(),this._requestAnimationFrame()),this):null}catch(err){const error=err instanceof Error?err:new Error("Unknown error");throw this.props.onError(error),error}}stop(){return this._running&&(this.animationProps&&this.props.onFinalize(this.animationProps),this._cancelAnimationFrame(),this._nextFramePromise=null,this._resolveNextFrame=null,this._running=!1),this}redraw(){return this.device?.isLost||(this._beginFrameTimers(),this._setupFrame(),this._updateAnimationProps(),this._renderFrame(this._getAnimationProps()),this._clearNeedsRedraw(),this._resolveNextFrame&&(this._resolveNextFrame(this),this._nextFramePromise=null,this._resolveNextFrame=null),this._endFrameTimers()),this}attachTimeline(timeline){return this.timeline=timeline,this.timeline}detachTimeline(){this.timeline=null}waitForRender(){return this.setNeedsRedraw("waitForRender"),this._nextFramePromise||(this._nextFramePromise=new Promise((resolve=>{this._resolveNextFrame=resolve}))),this._nextFramePromise}async toDataURL(){if(this.setNeedsRedraw("toDataURL"),await this.waitForRender(),this.canvas instanceof HTMLCanvasElement)return this.canvas.toDataURL();throw new Error("OffscreenCanvas")}_initialize(){this._startEventHandling(),this._initializeAnimationProps(),this._updateAnimationProps(),this._resizeCanvasDrawingBuffer(),this._resizeViewport()}_setDisplay(display){this.display&&(this.display.destroy(),this.display.animationLoop=null),display&&(display.animationLoop=this),this.display=display}_requestAnimationFrame(){this._running&&(this._animationFrameId=function request_animation_frame_requestAnimationFrame(callback){return"undefined"!=typeof window&&window.requestAnimationFrame?window.requestAnimationFrame(callback):setTimeout(callback,1e3/60)}(this._animationFrame.bind(this)))}_cancelAnimationFrame(){null!==this._animationFrameId&&(!function cancelAnimationFrame(timerId){return"undefined"!=typeof window&&window.cancelAnimationFrame?window.cancelAnimationFrame(timerId):clearTimeout(timerId)}(this._animationFrameId),this._animationFrameId=null)}_animationFrame(){this._running&&(this.redraw(),this._requestAnimationFrame())}_renderFrame(animationProps){this.display?this.display._renderFrame(animationProps):(this.props.onRender(this._getAnimationProps()),this.device.submit())}_clearNeedsRedraw(){this.needsRedraw=!1}_setupFrame(){this._resizeCanvasDrawingBuffer(),this._resizeViewport()}_initializeAnimationProps(){if(!this.device)throw new Error("loop");this.animationProps={animationLoop:this,device:this.device,canvas:this.device?.canvasContext?.canvas,timeline:this.timeline,useDevicePixels:this.props.useDevicePixels,needsRedraw:!1,width:1,height:1,aspect:1,time:0,startTime:Date.now(),engineTime:0,tick:0,tock:0,_mousePosition:null}}_getAnimationProps(){if(!this.animationProps)throw new Error("animationProps");return this.animationProps}_updateAnimationProps(){if(!this.animationProps)return;const{width:width,height:height,aspect:aspect}=this._getSizeAndAspect();width===this.animationProps.width&&height===this.animationProps.height||this.setNeedsRedraw("drawing buffer resized"),aspect!==this.animationProps.aspect&&this.setNeedsRedraw("drawing buffer aspect changed"),this.animationProps.width=width,this.animationProps.height=height,this.animationProps.aspect=aspect,this.animationProps.needsRedraw=this.needsRedraw,this.animationProps.engineTime=Date.now()-this.animationProps.startTime,this.timeline&&this.timeline.update(this.animationProps.engineTime),this.animationProps.tick=Math.floor(this.animationProps.time/1e3*60),this.animationProps.tock++,this.animationProps.time=this.timeline?this.timeline.getTime():this.animationProps.engineTime}async _initDevice(){if(this.device=await this.props.device,!this.device)throw new Error("No device provided");this.canvas=this.device.canvasContext?.canvas||null}_createInfoDiv(){if(this.canvas&&this.props.onAddHTML){const wrapperDiv=document.createElement("div");document.body.appendChild(wrapperDiv),wrapperDiv.style.position="relative";const div=document.createElement("div");div.style.position="absolute",div.style.left="10px",div.style.bottom="10px",div.style.width="300px",div.style.background="white",this.canvas instanceof HTMLCanvasElement&&wrapperDiv.appendChild(this.canvas),wrapperDiv.appendChild(div);const html=this.props.onAddHTML(div);html&&(div.innerHTML=html)}}_getSizeAndAspect(){if(!this.device)return{width:1,height:1,aspect:1};const[width,height]=this.device?.canvasContext?.getPixelSize()||[1,1];let aspect=1;const canvas=this.device?.canvasContext?.canvas;return canvas&&canvas.clientHeight?aspect=canvas.clientWidth/canvas.clientHeight:width>0&&height>0&&(aspect=width/height),{width:width,height:height,aspect:aspect}}_resizeViewport(){this.props.autoResizeViewport&&this.device.gl&&this.device.gl.viewport(0,0,this.device.gl.drawingBufferWidth,this.device.gl.drawingBufferHeight)}_resizeCanvasDrawingBuffer(){this.props.autoResizeDrawingBuffer&&this.device?.canvasContext?.resize({useDevicePixels:this.props.useDevicePixels})}_beginFrameTimers(){this.frameRate.timeEnd(),this.frameRate.timeStart(),this.cpuTime.timeStart()}_endFrameTimers(){this.cpuTime.timeEnd()}_startEventHandling(){this.canvas&&(this.canvas.addEventListener("mousemove",this._onMousemove.bind(this)),this.canvas.addEventListener("mouseleave",this._onMouseleave.bind(this)))}_onMousemove(event){event instanceof MouseEvent&&(this._getAnimationProps()._mousePosition=[event.offsetX,event.offsetY])}_onMouseleave(event){this._getAnimationProps()._mousePosition=null}}var hammer=__webpack_require__("./node_modules/hammerjs/hammer.js");const MOUSE_INPUT_MAP={mousedown:1,mousemove:2,mouseup:4};!function enhancePointerEventInput(PointerEventInput){const oldHandler=PointerEventInput.prototype.handler;PointerEventInput.prototype.handler=function handler(ev){const store=this.store;ev.button>0&&"pointerdown"===ev.type&&(function some(array,predict){for(let i=0;i<array.length;i++)if(predict(array[i]))return!0;return!1}(store,(e=>e.pointerId===ev.pointerId))||store.push(ev)),oldHandler.call(this,ev)}}(hammer.PointerEventInput),function enhanceMouseInput(MouseInput){MouseInput.prototype.handler=function handler(ev){let eventType=MOUSE_INPUT_MAP[ev.type];1&eventType&&ev.button>=0&&(this.pressed=!0),2&eventType&&0===ev.buttons&&(eventType=4),this.pressed&&(4&eventType&&(this.pressed=!1),this.callback(this.manager,eventType,{pointers:[ev],changedPointers:[ev],pointerType:"mouse",srcEvent:ev}))}}(hammer.MouseInput);const Manager=hammer.Manager;var hammer_browser=hammer;class Input{constructor(element,callback,options){this.element=element,this.callback=callback,this.options={enable:!0,...options}}}const RECOGNIZERS=hammer_browser?[[hammer_browser.Pan,{event:"tripan",pointers:3,threshold:0,enable:!1}],[hammer_browser.Rotate,{enable:!1}],[hammer_browser.Pinch,{enable:!1}],[hammer_browser.Swipe,{enable:!1}],[hammer_browser.Pan,{threshold:0,enable:!1}],[hammer_browser.Press,{enable:!1}],[hammer_browser.Tap,{event:"doubletap",taps:2,enable:!1}],[hammer_browser.Tap,{event:"anytap",enable:!1}],[hammer_browser.Tap,{enable:!1}]]:null,RECOGNIZER_COMPATIBLE_MAP={tripan:["rotate","pinch","pan"],rotate:["pinch"],pinch:["pan"],pan:["press","doubletap","anytap","tap"],doubletap:["anytap"],anytap:["tap"]},RECOGNIZER_FALLBACK_MAP={doubletap:["tap"]},BASIC_EVENT_ALIASES={pointerdown:"pointerdown",pointermove:"pointermove",pointerup:"pointerup",touchstart:"pointerdown",touchmove:"pointermove",touchend:"pointerup",mousedown:"pointerdown",mousemove:"pointermove",mouseup:"pointerup"},INPUT_EVENT_TYPES={KEY_EVENTS:["keydown","keyup"],MOUSE_EVENTS:["mousedown","mousemove","mouseup","mouseover","mouseout","mouseleave"],WHEEL_EVENTS:["wheel","mousewheel"]},EVENT_RECOGNIZER_MAP={tap:"tap",anytap:"anytap",doubletap:"doubletap",press:"press",pinch:"pinch",pinchin:"pinch",pinchout:"pinch",pinchstart:"pinch",pinchmove:"pinch",pinchend:"pinch",pinchcancel:"pinch",rotate:"rotate",rotatestart:"rotate",rotatemove:"rotate",rotateend:"rotate",rotatecancel:"rotate",tripan:"tripan",tripanstart:"tripan",tripanmove:"tripan",tripanup:"tripan",tripandown:"tripan",tripanleft:"tripan",tripanright:"tripan",tripanend:"tripan",tripancancel:"tripan",pan:"pan",panstart:"pan",panmove:"pan",panup:"pan",pandown:"pan",panleft:"pan",panright:"pan",panend:"pan",pancancel:"pan",swipe:"swipe",swipeleft:"swipe",swiperight:"swipe",swipeup:"swipe",swipedown:"swipe"},GESTURE_EVENT_ALIASES={click:"tap",anyclick:"anytap",dblclick:"doubletap",mousedown:"pointerdown",mousemove:"pointermove",mouseup:"pointerup",mouseover:"pointerover",mouseout:"pointerout",mouseleave:"pointerleave"},userAgent="undefined"!=typeof navigator&&navigator.userAgent?navigator.userAgent.toLowerCase():"",window_="undefined"!=typeof window?window:__webpack_require__.g;void 0!==__webpack_require__.g?__webpack_require__.g:window,"undefined"!=typeof document&&document;let passiveSupported=!1;try{const options={get passive(){return passiveSupported=!0,!0}};window_.addEventListener("test",null,options),window_.removeEventListener("test",null)}catch(err){passiveSupported=!1}const firefox=-1!==userAgent.indexOf("firefox"),{WHEEL_EVENTS:WHEEL_EVENTS}=INPUT_EVENT_TYPES;class WheelInput extends Input{constructor(element,callback,options){super(element,callback,options),this.handleEvent=event=>{if(!this.options.enable)return;let value=event.deltaY;window_.WheelEvent&&(firefox&&event.deltaMode===window_.WheelEvent.DOM_DELTA_PIXEL&&(value/=window_.devicePixelRatio),event.deltaMode===window_.WheelEvent.DOM_DELTA_LINE&&(value*=40)),0!==value&&value%4.000244140625==0&&(value=Math.floor(value/4.000244140625)),event.shiftKey&&value&&(value*=.25),this.callback({type:"wheel",center:{x:event.clientX,y:event.clientY},delta:-value,srcEvent:event,pointerType:"mouse",target:event.target})},this.events=(this.options.events||[]).concat(WHEEL_EVENTS),this.events.forEach((event=>element.addEventListener(event,this.handleEvent,!!passiveSupported&&{passive:!1})))}destroy(){this.events.forEach((event=>this.element.removeEventListener(event,this.handleEvent)))}enableEventType(eventType,enabled){"wheel"===eventType&&(this.options.enable=enabled)}}const{MOUSE_EVENTS:MOUSE_EVENTS}=INPUT_EVENT_TYPES;class MoveInput extends Input{constructor(element,callback,options){super(element,callback,options),this.handleEvent=event=>{this.handleOverEvent(event),this.handleOutEvent(event),this.handleEnterEvent(event),this.handleLeaveEvent(event),this.handleMoveEvent(event)},this.pressed=!1;const{enable:enable}=this.options;this.enableMoveEvent=enable,this.enableLeaveEvent=enable,this.enableEnterEvent=enable,this.enableOutEvent=enable,this.enableOverEvent=enable,this.events=(this.options.events||[]).concat(MOUSE_EVENTS),this.events.forEach((event=>element.addEventListener(event,this.handleEvent)))}destroy(){this.events.forEach((event=>this.element.removeEventListener(event,this.handleEvent)))}enableEventType(eventType,enabled){"pointermove"===eventType&&(this.enableMoveEvent=enabled),"pointerover"===eventType&&(this.enableOverEvent=enabled),"pointerout"===eventType&&(this.enableOutEvent=enabled),"pointerenter"===eventType&&(this.enableEnterEvent=enabled),"pointerleave"===eventType&&(this.enableLeaveEvent=enabled)}handleOverEvent(event){this.enableOverEvent&&"mouseover"===event.type&&this._emit("pointerover",event)}handleOutEvent(event){this.enableOutEvent&&"mouseout"===event.type&&this._emit("pointerout",event)}handleEnterEvent(event){this.enableEnterEvent&&"mouseenter"===event.type&&this._emit("pointerenter",event)}handleLeaveEvent(event){this.enableLeaveEvent&&"mouseleave"===event.type&&this._emit("pointerleave",event)}handleMoveEvent(event){if(this.enableMoveEvent)switch(event.type){case"mousedown":event.button>=0&&(this.pressed=!0);break;case"mousemove":0===event.buttons&&(this.pressed=!1),this.pressed||this._emit("pointermove",event);break;case"mouseup":this.pressed=!1}}_emit(type,event){this.callback({type:type,center:{x:event.clientX,y:event.clientY},srcEvent:event,pointerType:"mouse",target:event.target})}}const{KEY_EVENTS:KEY_EVENTS}=INPUT_EVENT_TYPES;class KeyInput extends Input{constructor(element,callback,options){super(element,callback,options),this.handleEvent=event=>{const targetElement=event.target||event.srcElement;"INPUT"===targetElement.tagName&&"text"===targetElement.type||"TEXTAREA"===targetElement.tagName||(this.enableDownEvent&&"keydown"===event.type&&this.callback({type:"keydown",srcEvent:event,key:event.key,target:event.target}),this.enableUpEvent&&"keyup"===event.type&&this.callback({type:"keyup",srcEvent:event,key:event.key,target:event.target}))},this.enableDownEvent=this.options.enable,this.enableUpEvent=this.options.enable,this.events=(this.options.events||[]).concat(KEY_EVENTS),element.tabIndex=this.options.tabIndex||0,element.style.outline="none",this.events.forEach((event=>element.addEventListener(event,this.handleEvent)))}destroy(){this.events.forEach((event=>this.element.removeEventListener(event,this.handleEvent)))}enableEventType(eventType,enabled){"keydown"===eventType&&(this.enableDownEvent=enabled),"keyup"===eventType&&(this.enableUpEvent=enabled)}}class ContextmenuInput extends Input{constructor(element,callback,options){super(element,callback,options),this.handleEvent=event=>{this.options.enable&&this.callback({type:"contextmenu",center:{x:event.clientX,y:event.clientY},srcEvent:event,pointerType:"mouse",target:event.target})},element.addEventListener("contextmenu",this.handleEvent)}destroy(){this.element.removeEventListener("contextmenu",this.handleEvent)}enableEventType(eventType,enabled){"contextmenu"===eventType&&(this.options.enable=enabled)}}const event_utils_MOUSE_EVENTS={pointerdown:1,pointermove:2,pointerup:4,mousedown:1,mousemove:2,mouseup:4};function whichButtons(event){const eventType=event_utils_MOUSE_EVENTS[event.srcEvent.type];if(!eventType)return null;const{buttons:buttons,button:button}=event.srcEvent;let leftButton=!1,middleButton=!1,rightButton=!1;return 2===eventType?(leftButton=Boolean(1&buttons),middleButton=Boolean(4&buttons),rightButton=Boolean(2&buttons)):(leftButton=0===button,middleButton=1===button,rightButton=2===button),{leftButton:leftButton,middleButton:middleButton,rightButton:rightButton}}function getOffsetPosition(event,rootElement){const center=event.center;if(!center)return null;const rect=rootElement.getBoundingClientRect(),scaleX=rect.width/rootElement.offsetWidth||1,scaleY=rect.height/rootElement.offsetHeight||1;return{center:center,offsetCenter:{x:(center.x-rect.left-rootElement.clientLeft)/scaleX,y:(center.y-rect.top-rootElement.clientTop)/scaleY}}}const DEFAULT_OPTIONS={srcElement:"root",priority:0};class EventRegistrar{constructor(eventManager){this.handleEvent=event=>{if(this.isEmpty())return;const mjolnirEvent=this._normalizeEvent(event);let target=event.srcEvent.target;for(;target&&target!==mjolnirEvent.rootElement;){if(this._emit(mjolnirEvent,target),mjolnirEvent.handled)return;target=target.parentNode}this._emit(mjolnirEvent,"root")},this.eventManager=eventManager,this.handlers=[],this.handlersByElement=new Map,this._active=!1}isEmpty(){return!this._active}add(type,handler,options,once=!1,passive=!1){const{handlers:handlers,handlersByElement:handlersByElement}=this;let opts=DEFAULT_OPTIONS;"string"==typeof options||options&&options.addEventListener?opts={...DEFAULT_OPTIONS,srcElement:options}:options&&(opts={...DEFAULT_OPTIONS,...options});let entries=handlersByElement.get(opts.srcElement);entries||(entries=[],handlersByElement.set(opts.srcElement,entries));const entry={type:type,handler:handler,srcElement:opts.srcElement,priority:opts.priority};once&&(entry.once=!0),passive&&(entry.passive=!0),handlers.push(entry),this._active=this._active||!entry.passive;let insertPosition=entries.length-1;for(;insertPosition>=0&&!(entries[insertPosition].priority>=entry.priority);)insertPosition--;entries.splice(insertPosition+1,0,entry)}remove(type,handler){const{handlers:handlers,handlersByElement:handlersByElement}=this;for(let i=handlers.length-1;i>=0;i--){const entry=handlers[i];if(entry.type===type&&entry.handler===handler){handlers.splice(i,1);const entries=handlersByElement.get(entry.srcElement);entries.splice(entries.indexOf(entry),1),0===entries.length&&handlersByElement.delete(entry.srcElement)}}this._active=handlers.some((entry=>!entry.passive))}_emit(event,srcElement){const entries=this.handlersByElement.get(srcElement);if(entries){let immediatePropagationStopped=!1;const stopPropagation=()=>{event.handled=!0},stopImmediatePropagation=()=>{event.handled=!0,immediatePropagationStopped=!0},entriesToRemove=[];for(let i=0;i<entries.length;i++){const{type:type,handler:handler,once:once}=entries[i];if(handler({...event,type:type,stopPropagation:stopPropagation,stopImmediatePropagation:stopImmediatePropagation}),once&&entriesToRemove.push(entries[i]),immediatePropagationStopped)break}for(let i=0;i<entriesToRemove.length;i++){const{type:type,handler:handler}=entriesToRemove[i];this.remove(type,handler)}}}_normalizeEvent(event){const rootElement=this.eventManager.getElement();return{...event,...whichButtons(event),...getOffsetPosition(event,rootElement),preventDefault:()=>{event.srcEvent.preventDefault()},stopImmediatePropagation:null,stopPropagation:null,handled:!1,rootElement:rootElement}}}const event_manager_DEFAULT_OPTIONS={events:null,recognizers:null,recognizerOptions:{},Manager:Manager,touchAction:"none",tabIndex:0};class EventManager{constructor(element=null,options){this._onBasicInput=event=>{const{srcEvent:srcEvent}=event,alias=BASIC_EVENT_ALIASES[srcEvent.type];alias&&this.manager.emit(alias,event)},this._onOtherEvent=event=>{this.manager.emit(event.type,event)},this.options={...event_manager_DEFAULT_OPTIONS,...options},this.events=new Map,this.setElement(element);const{events:events}=this.options;events&&this.on(events)}getElement(){return this.element}setElement(element){if(this.element&&this.destroy(),this.element=element,!element)return;const{options:options}=this,ManagerClass=options.Manager;this.manager=new ManagerClass(element,{touchAction:options.touchAction,recognizers:options.recognizers||RECOGNIZERS}).on("hammer.input",this._onBasicInput),options.recognizers||Object.keys(RECOGNIZER_COMPATIBLE_MAP).forEach((name=>{const recognizer=this.manager.get(name);recognizer&&RECOGNIZER_COMPATIBLE_MAP[name].forEach((otherName=>{recognizer.recognizeWith(otherName)}))}));for(const recognizerName in options.recognizerOptions){const recognizer=this.manager.get(recognizerName);if(recognizer){const recognizerOption=options.recognizerOptions[recognizerName];delete recognizerOption.enable,recognizer.set(recognizerOption)}}this.wheelInput=new WheelInput(element,this._onOtherEvent,{enable:!1}),this.moveInput=new MoveInput(element,this._onOtherEvent,{enable:!1}),this.keyInput=new KeyInput(element,this._onOtherEvent,{enable:!1,tabIndex:options.tabIndex}),this.contextmenuInput=new ContextmenuInput(element,this._onOtherEvent,{enable:!1});for(const[eventAlias,eventRegistrar]of this.events)eventRegistrar.isEmpty()||(this._toggleRecognizer(eventRegistrar.recognizerName,!0),this.manager.on(eventAlias,eventRegistrar.handleEvent))}destroy(){this.element&&(this.wheelInput.destroy(),this.moveInput.destroy(),this.keyInput.destroy(),this.contextmenuInput.destroy(),this.manager.destroy(),this.wheelInput=null,this.moveInput=null,this.keyInput=null,this.contextmenuInput=null,this.manager=null,this.element=null)}on(event,handler,opts){this._addEventHandler(event,handler,opts,!1)}once(event,handler,opts){this._addEventHandler(event,handler,opts,!0)}watch(event,handler,opts){this._addEventHandler(event,handler,opts,!1,!0)}off(event,handler){this._removeEventHandler(event,handler)}_toggleRecognizer(name,enabled){const{manager:manager}=this;if(!manager)return;const recognizer=manager.get(name);if(recognizer&&recognizer.options.enable!==enabled){recognizer.set({enable:enabled});const fallbackRecognizers=RECOGNIZER_FALLBACK_MAP[name];fallbackRecognizers&&!this.options.recognizers&&fallbackRecognizers.forEach((otherName=>{const otherRecognizer=manager.get(otherName);enabled?(otherRecognizer.requireFailure(name),recognizer.dropRequireFailure(otherName)):otherRecognizer.dropRequireFailure(name)}))}this.wheelInput.enableEventType(name,enabled),this.moveInput.enableEventType(name,enabled),this.keyInput.enableEventType(name,enabled),this.contextmenuInput.enableEventType(name,enabled)}_addEventHandler(event,handler,opts,once,passive){if("string"!=typeof event){opts=handler;for(const eventName in event)this._addEventHandler(eventName,event[eventName],opts,once,passive);return}const{manager:manager,events:events}=this,eventAlias=GESTURE_EVENT_ALIASES[event]||event;let eventRegistrar=events.get(eventAlias);eventRegistrar||(eventRegistrar=new EventRegistrar(this),events.set(eventAlias,eventRegistrar),eventRegistrar.recognizerName=EVENT_RECOGNIZER_MAP[eventAlias]||eventAlias,manager&&manager.on(eventAlias,eventRegistrar.handleEvent)),eventRegistrar.add(event,handler,opts,once,passive),eventRegistrar.isEmpty()||this._toggleRecognizer(eventRegistrar.recognizerName,!0)}_removeEventHandler(event,handler){if("string"!=typeof event){for(const eventName in event)this._removeEventHandler(eventName,event[eventName]);return}const{events:events}=this,eventAlias=GESTURE_EVENT_ALIASES[event]||event,eventRegistrar=events.get(eventAlias);if(eventRegistrar&&(eventRegistrar.remove(event,handler),eventRegistrar.isEmpty())){const{recognizerName:recognizerName}=eventRegistrar;let isRecognizerUsed=!1;for(const eh of events.values())if(eh.recognizerName===recognizerName&&!eh.isEmpty()){isRecognizerUsed=!0;break}isRecognizerUsed||this._toggleRecognizer(recognizerName,!1)}}}var dist_utils_assert=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/assert.js");function noop(){}const defaultProps={id:"",width:"100%",height:"100%",style:null,viewState:null,initialViewState:null,pickingRadius:0,layerFilter:null,parameters:{},parent:null,device:null,deviceProps:{type:"webgl"},gl:null,glOptions:{},canvas:null,layers:[],effects:[],views:null,controller:null,useDevicePixels:!0,touchAction:"none",eventRecognizerOptions:{},_framebuffer:null,_animate:!1,_pickable:!0,_typedArrayManagerProps:{},_customRender:null,widgets:[],onDeviceInitialized:noop,onWebGLInitialized:noop,onResize:noop,onViewStateChange:noop,onInteractionStateChange:noop,onBeforeRender:noop,onAfterRender:noop,onLoad:noop,onError:error=>log.A.error(error.message,error.cause)(),onHover:null,onClick:null,onDragStart:null,onDrag:null,onDragEnd:null,_onMetrics:null,getCursor:({isDragging:isDragging})=>isDragging?"grabbing":"grab",getTooltip:null,debug:!1,drawPickingColors:!1};class Deck{constructor(props){this.width=0,this.height=0,this.userData={},this.device=null,this.canvas=null,this.viewManager=null,this.layerManager=null,this.effectManager=null,this.deckRenderer=null,this.deckPicker=null,this.eventManager=null,this.widgetManager=null,this.tooltip=null,this.animationLoop=null,this.cursorState={isHovering:!1,isDragging:!1},this.stats=new dist.Uz({id:"deck.gl"}),this.metrics={fps:0,setPropsTime:0,updateAttributesTime:0,framesRedrawn:0,pickTime:0,pickCount:0,gpuTime:0,gpuTimePerFrame:0,cpuTime:0,cpuTimePerFrame:0,bufferMemory:0,textureMemory:0,renderbufferMemory:0,gpuMemory:0},this._metricsCounter=0,this._needsRedraw="Initial render",this._pickRequest={mode:"hover",x:-1,y:-1,radius:0,event:null},this._lastPointerDownInfo=null,this._onPointerMove=event=>{const{_pickRequest:_pickRequest}=this;if("pointerleave"===event.type)_pickRequest.x=-1,_pickRequest.y=-1,_pickRequest.radius=0;else{if(event.leftButton||event.rightButton)return;{const pos=event.offsetCenter;if(!pos)return;_pickRequest.x=pos.x,_pickRequest.y=pos.y,_pickRequest.radius=this.props.pickingRadius}}this.layerManager&&(this.layerManager.context.mousePosition={x:_pickRequest.x,y:_pickRequest.y}),_pickRequest.event=event},this._onEvent=event=>{const eventOptions=lib_constants.qY[event.type],pos=event.offsetCenter;if(!eventOptions||!pos||!this.layerManager)return;const layers=this.layerManager.getLayers(),info=this.deckPicker.getLastPickedObject({x:pos.x,y:pos.y,layers:layers,viewports:this.getViewports(pos)},this._lastPointerDownInfo),{layer:layer}=info,layerHandler=layer&&(layer[eventOptions.handler]||layer.props[eventOptions.handler]),rootHandler=this.props[eventOptions.handler];let handled=!1;layerHandler&&(handled=layerHandler.call(layer,info,event)),handled||(rootHandler?.(info,event),this.widgetManager.onEvent(info,event))},this._onPointerDown=event=>{const pos=event.offsetCenter,pickedInfo=this._pick("pickObject","pickObject Time",{x:pos.x,y:pos.y,radius:this.props.pickingRadius});this._lastPointerDownInfo=pickedInfo.result[0]||pickedInfo.emptyInfo},this.props={...defaultProps,...props},(props=this.props).viewState&&props.initialViewState&&log.A.warn("View state tracking is disabled. Use either `initialViewState` for auto update or `viewState` for manual update.")(),this.viewState=this.props.initialViewState,props.device?this.device=props.device:props.gl&&(props.gl instanceof WebGLRenderingContext&&log.A.error("WebGL1 context not supported.")(),this.device=WebGLDevice.attach(props.gl));let deviceOrPromise=this.device;deviceOrPromise||(luma.registerDevices([WebGLDevice]),deviceOrPromise=luma.createDevice({...props.deviceProps,canvas:this._createCanvas(props)})),this.animationLoop=this._createAnimationLoop(deviceOrPromise,props),this.setProps(props),props._typedArrayManagerProps&&typed_array_manager.A.setOptions(props._typedArrayManagerProps),this.animationLoop.start()}finalize(){this.animationLoop?.stop(),this.animationLoop?.destroy(),this.animationLoop=null,this._lastPointerDownInfo=null,this.layerManager?.finalize(),this.layerManager=null,this.viewManager?.finalize(),this.viewManager=null,this.effectManager?.finalize(),this.effectManager=null,this.deckRenderer?.finalize(),this.deckRenderer=null,this.deckPicker?.finalize(),this.deckPicker=null,this.eventManager?.destroy(),this.eventManager=null,this.widgetManager?.finalize(),this.widgetManager=null,this.props.canvas||this.props.device||this.props.gl||!this.canvas||(this.canvas.parentElement?.removeChild(this.canvas),this.canvas=null)}setProps(props){this.stats.get("setProps Time").timeStart(),"onLayerHover"in props&&log.A.removed("onLayerHover","onHover")(),"onLayerClick"in props&&log.A.removed("onLayerClick","onClick")(),props.initialViewState&&!(0,deep_equal.b)(this.props.initialViewState,props.initialViewState,3)&&(this.viewState=props.initialViewState),Object.assign(this.props,props),this._setCanvasSize(this.props);const resolvedProps=Object.create(this.props);Object.assign(resolvedProps,{views:this._getViews(),width:this.width,height:this.height,viewState:this._getViewState()}),this.animationLoop?.setProps(resolvedProps),this.layerManager&&(this.viewManager.setProps(resolvedProps),this.layerManager.activateViewport(this.getViewports()[0]),this.layerManager.setProps(resolvedProps),this.effectManager.setProps(resolvedProps),this.deckRenderer.setProps(resolvedProps),this.deckPicker.setProps(resolvedProps),this.widgetManager.setProps(resolvedProps)),this.stats.get("setProps Time").timeEnd()}needsRedraw(opts={clearRedrawFlags:!1}){if(!this.layerManager)return!1;if(this.props._animate)return"Deck._animate";let redraw=this._needsRedraw;opts.clearRedrawFlags&&(this._needsRedraw=!1);const viewManagerNeedsRedraw=this.viewManager.needsRedraw(opts),layerManagerNeedsRedraw=this.layerManager.needsRedraw(opts),effectManagerNeedsRedraw=this.effectManager.needsRedraw(opts),deckRendererNeedsRedraw=this.deckRenderer.needsRedraw(opts);return redraw=redraw||viewManagerNeedsRedraw||layerManagerNeedsRedraw||effectManagerNeedsRedraw||deckRendererNeedsRedraw,redraw}redraw(reason){if(!this.layerManager)return;let redrawReason=this.needsRedraw({clearRedrawFlags:!0});redrawReason=reason||redrawReason,redrawReason&&(this.stats.get("Redraw Count").incrementCount(),this.props._customRender?this.props._customRender(redrawReason):this._drawLayers(redrawReason))}get isInitialized(){return null!==this.viewManager}getViews(){return(0,dist_utils_assert.A)(this.viewManager),this.viewManager.views}getViewports(rect){return(0,dist_utils_assert.A)(this.viewManager),this.viewManager.getViewports(rect)}getCanvas(){return this.canvas}pickObject(opts){const infos=this._pick("pickObject","pickObject Time",opts).result;return infos.length?infos[0]:null}pickMultipleObjects(opts){return opts.depth=opts.depth||10,this._pick("pickObject","pickMultipleObjects Time",opts).result}pickObjects(opts){return this._pick("pickObjects","pickObjects Time",opts)}_addResources(resources,forceUpdate=!1){for(const id in resources)this.layerManager.resourceManager.add({resourceId:id,data:resources[id],forceUpdate:forceUpdate})}_removeResources(resourceIds){for(const id of resourceIds)this.layerManager.resourceManager.remove(id)}_addDefaultEffect(effect){this.effectManager.addDefaultEffect(effect)}_addDefaultShaderModule(module){this.layerManager.addDefaultShaderModule(module)}_removeDefaultShaderModule(module){this.layerManager?.removeDefaultShaderModule(module)}_pick(method,statKey,opts){(0,dist_utils_assert.A)(this.deckPicker);const{stats:stats}=this;stats.get("Pick Count").incrementCount(),stats.get(statKey).timeStart();const infos=this.deckPicker[method]({layers:this.layerManager.getLayers(opts),views:this.viewManager.getViews(),viewports:this.getViewports(opts),onViewportActive:this.layerManager.activateViewport,effects:this.effectManager.getEffects(),...opts});return stats.get(statKey).timeEnd(),infos}_createCanvas(props){let canvas=props.canvas;if("string"==typeof canvas&&(canvas=document.getElementById(canvas),(0,dist_utils_assert.A)(canvas)),!canvas){canvas=document.createElement("canvas"),canvas.id=props.id||"deckgl-overlay";(props.parent||document.body).appendChild(canvas)}return Object.assign(canvas.style,props.style),canvas}_setCanvasSize(props){if(!this.canvas)return;const{width:width,height:height}=props;if(width||0===width){const cssWidth=Number.isFinite(width)?`${width}px`:width;this.canvas.style.width=cssWidth}if(height||0===height){const cssHeight=Number.isFinite(height)?`${height}px`:height;this.canvas.style.position=props.style?.position||"absolute",this.canvas.style.height=cssHeight}}_updateCanvasSize(){const{canvas:canvas}=this;if(!canvas)return;const newWidth=canvas.clientWidth??canvas.width,newHeight=canvas.clientHeight??canvas.height;newWidth===this.width&&newHeight===this.height||(this.width=newWidth,this.height=newHeight,this.viewManager?.setProps({width:newWidth,height:newHeight}),this.layerManager?.activateViewport(this.getViewports()[0]),this.props.onResize({width:newWidth,height:newHeight}))}_createAnimationLoop(deviceOrPromise,props){const{gl:gl,onError:onError,useDevicePixels:useDevicePixels}=props;return new AnimationLoop({device:deviceOrPromise,useDevicePixels:useDevicePixels,autoResizeDrawingBuffer:!gl,autoResizeViewport:!1,onInitialize:context=>this._setDevice(context.device),onRender:this._onRenderFrame.bind(this),onError:onError})}_getViewState(){return this.props.viewState||this.viewState}_getViews(){const{views:views}=this.props,normalizedViews=Array.isArray(views)?views:views?[views]:[new map_view.A({id:"default-view"})];return normalizedViews.length&&this.props.controller&&(normalizedViews[0].props.controller=this.props.controller),normalizedViews}_onContextLost(){const{onError:onError}=this.props;this.animationLoop&&onError&&onError(new Error("WebGL context is lost"))}_pickAndCallback(){const{_pickRequest:_pickRequest}=this;if(_pickRequest.event){const{result:result,emptyInfo:emptyInfo}=this._pick("pickObject","pickObject Time",_pickRequest);this.cursorState.isHovering=result.length>0;let pickedInfo=emptyInfo,handled=!1;for(const info of result)pickedInfo=info,handled=info.layer?.onHover(info,_pickRequest.event)||handled;handled||(this.props.onHover?.(pickedInfo,_pickRequest.event),this.widgetManager.onHover(pickedInfo,_pickRequest.event)),_pickRequest.event=null}}_updateCursor(){const container=this.props.parent||this.canvas;container&&(container.style.cursor=this.props.getCursor(this.cursorState))}_setDevice(device){if(this.device=device,!this.animationLoop)return;this.canvas||(this.canvas=this.device.canvasContext?.canvas),this.device.setParametersWebGL({blend:!0,blendFunc:[770,771,1,771],polygonOffsetFill:!0,depthTest:!0,depthFunc:515}),this.props.onDeviceInitialized(this.device),this.device instanceof WebGLDevice&&this.props.onWebGLInitialized(this.device.gl);const timeline=new Timeline;timeline.play(),this.animationLoop.attachTimeline(timeline),this.eventManager=new EventManager(this.props.parent||this.canvas,{touchAction:this.props.touchAction,recognizerOptions:this.props.eventRecognizerOptions,events:{pointerdown:this._onPointerDown,pointermove:this._onPointerMove,pointerleave:this._onPointerMove}});for(const eventType in lib_constants.qY)this.eventManager.on(eventType,this._onEvent);this.viewManager=new ViewManager({timeline:timeline,eventManager:this.eventManager,onViewStateChange:this._onViewStateChange.bind(this),onInteractionStateChange:this._onInteractionStateChange.bind(this),views:this._getViews(),viewState:this._getViewState(),width:this.width,height:this.height});const viewport=this.viewManager.getViewports()[0];this.layerManager=new LayerManager(this.device,{deck:this,stats:this.stats,viewport:viewport,timeline:timeline}),this.effectManager=new EffectManager({deck:this,device:this.device}),this.deckRenderer=new DeckRenderer(this.device),this.deckPicker=new DeckPicker(this.device),this.widgetManager=new WidgetManager({deck:this,parentElement:this.canvas?.parentElement}),this.widgetManager.addDefault(new Tooltip),this.setProps(this.props),this._updateCanvasSize(),this.props.onLoad()}_drawLayers(redrawReason,renderOptions){const{device:device,gl:gl}=this.layerManager.context;this.props.onBeforeRender({device:device,gl:gl});const opts={target:this.props._framebuffer,layers:this.layerManager.getLayers(),viewports:this.viewManager.getViewports(),onViewportActive:this.layerManager.activateViewport,views:this.viewManager.getViews(),pass:"screen",effects:this.effectManager.getEffects(),...renderOptions};this.deckRenderer?.renderLayers(opts),"screen"===opts.pass&&this.widgetManager.onRedraw({viewports:opts.viewports,layers:opts.layers}),this.props.onAfterRender({device:device,gl:gl})}_onRenderFrame(){this._getFrameStats(),this._metricsCounter++%60==0&&(this._getMetrics(),this.stats.reset(),log.A.table(4,this.metrics)(),this.props._onMetrics&&this.props._onMetrics(this.metrics)),this._updateCanvasSize(),this._updateCursor(),this.layerManager.updateLayers(),this._pickAndCallback(),this.redraw(),this.viewManager&&this.viewManager.updateViewStates()}_onViewStateChange(params){const viewState=this.props.onViewStateChange(params)||params.viewState;this.viewState&&(this.viewState={...this.viewState,[params.viewId]:viewState},this.props.viewState||this.viewManager&&this.viewManager.setProps({viewState:this.viewState}))}_onInteractionStateChange(interactionState){this.cursorState.isDragging=interactionState.isDragging||!1,this.props.onInteractionStateChange(interactionState)}_getFrameStats(){const{stats:stats}=this;stats.get("frameRate").timeEnd(),stats.get("frameRate").timeStart();const animationLoopStats=this.animationLoop.stats;stats.get("GPU Time").addTime(animationLoopStats.get("GPU Time").lastTiming),stats.get("CPU Time").addTime(animationLoopStats.get("CPU Time").lastTiming)}_getMetrics(){const{metrics:metrics,stats:stats}=this;metrics.fps=stats.get("frameRate").getHz(),metrics.setPropsTime=stats.get("setProps Time").time,metrics.updateAttributesTime=stats.get("Update Attributes").time,metrics.framesRedrawn=stats.get("Redraw Count").count,metrics.pickTime=stats.get("pickObject Time").time+stats.get("pickMultipleObjects Time").time+stats.get("pickObjects Time").time,metrics.pickCount=stats.get("Pick Count").count,metrics.gpuTime=stats.get("GPU Time").time,metrics.cpuTime=stats.get("CPU Time").time,metrics.gpuTimePerFrame=stats.get("GPU Time").getAverageTime(),metrics.cpuTimePerFrame=stats.get("CPU Time").getAverageTime();const memoryStats=luma.stats.get("Memory Usage");metrics.bufferMemory=memoryStats.get("Buffer Memory").count,metrics.textureMemory=memoryStats.get("Texture Memory").count,metrics.renderbufferMemory=memoryStats.get("Renderbuffer Memory").count,metrics.gpuMemory=memoryStats.get("GPU Memory").count}}Deck.defaultProps=defaultProps,Deck.VERSION=VERSION;var deck=Deck;var use_isomorphic_layout_effect="undefined"!=typeof window?react.useLayoutEffect:react.useEffect;function inheritsFrom(Type,ParentType){for(;Type;){if(Type===ParentType)return!0;Type=Object.getPrototypeOf(Type)}return!1}var view=__webpack_require__("./node_modules/@deck.gl/core/dist/views/view.js"),lib_layer=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/layer.js");const MAP_STYLE={position:"absolute",zIndex:-1};function evaluateChildren(children,childProps){if("function"==typeof children)return children(childProps);if(Array.isArray(children))return children.map((child=>evaluateChildren(child,childProps)));if(isComponent(children)){if(function isReactMap(child){return child.props?.mapStyle}(children))return childProps.style=MAP_STYLE,(0,react.cloneElement)(children,childProps);if(function needsDeckGLViewProps(child){const componentClass=child.type;return componentClass&&componentClass.deckGLViewProps}(children))return(0,react.cloneElement)(children,childProps)}return children}function isComponent(child){return child&&"object"==typeof child&&"type"in child||!1}function wrapInView(node){if("function"==typeof node)return(0,react.createElement)(view.A,{},node);if(Array.isArray(node))return node.map(wrapInView);if(isComponent(node)){if(node.type===react.Fragment)return wrapInView(node.props.children);if(inheritsFrom(node.type,view.A))return node}return node}const CANVAS_ONLY_STYLES={mixBlendMode:null};function redrawDeck(thisRef){thisRef.redrawReason&&(thisRef.deck._drawLayers(thisRef.redrawReason),thisRef.redrawReason=null)}const DeckGL=react.forwardRef((function DeckGLWithRef(props,ref){const[version,setVersion]=(0,react.useState)(0),thisRef=(0,react.useRef)({control:null,version:version,forceUpdate:()=>setVersion((v=>v+1))}).current,containerRef=(0,react.useRef)(null),canvasRef=(0,react.useRef)(null),jsxProps=(0,react.useMemo)((()=>function extractJSXLayers({children:children,layers:layers=[],views:views=null}){const reactChildren=[],jsxLayers=[],jsxViews={};return react.Children.forEach(wrapInView(children),(reactElement=>{if(isComponent(reactElement)){const ElementType=reactElement.type;if(inheritsFrom(ElementType,lib_layer.A)){const layer=function createLayer(LayerType,reactProps){const props={},defaultProps=LayerType.defaultProps||{};for(const key in reactProps)defaultProps[key]!==reactProps[key]&&(props[key]=reactProps[key]);return new LayerType(props)}(ElementType,reactElement.props);jsxLayers.push(layer)}else reactChildren.push(reactElement);if(inheritsFrom(ElementType,view.A)&&ElementType!==view.A&&reactElement.props.id){const view=new ElementType(reactElement.props);jsxViews[view.id]=view}}else reactElement&&reactChildren.push(reactElement)})),Object.keys(jsxViews).length>0&&(Array.isArray(views)?views.forEach((view=>{jsxViews[view.id]=view})):views&&(jsxViews[views.id]=views),views=Object.values(jsxViews)),{layers:layers=jsxLayers.length>0?[...jsxLayers,...layers]:layers,children:reactChildren,views:views}}(props)),[props.layers,props.views,props.children]);let inRender=!0;const handleViewStateChange=params=>inRender&&props.viewState?(thisRef.viewStateUpdateRequested=params,null):(thisRef.viewStateUpdateRequested=null,props.onViewStateChange?.(params)),handleInteractionStateChange=params=>{inRender?thisRef.interactionStateUpdateRequested=params:(thisRef.interactionStateUpdateRequested=null,props.onInteractionStateChange?.(params))},deckProps=(0,react.useMemo)((()=>{const forwardProps={...props,style:null,width:"100%",height:"100%",parent:containerRef.current,canvas:canvasRef.current,layers:jsxProps.layers,views:jsxProps.views,onViewStateChange:handleViewStateChange,onInteractionStateChange:handleInteractionStateChange};return delete forwardProps._customRender,thisRef.deck&&thisRef.deck.setProps(forwardProps),forwardProps}),[props]);(0,react.useEffect)((()=>{const DeckClass=props.Deck||deck;return thisRef.deck=function createDeckInstance(thisRef,DeckClass,props){const deck=new DeckClass({...props,_customRender:redrawReason=>{thisRef.redrawReason=redrawReason;const viewports=deck.getViewports();thisRef.lastRenderedViewports!==viewports?thisRef.forceUpdate():redrawDeck(thisRef)}});return deck}(thisRef,DeckClass,{...deckProps,parent:containerRef.current,canvas:canvasRef.current}),()=>thisRef.deck?.finalize()}),[]),use_isomorphic_layout_effect((()=>{redrawDeck(thisRef);const{viewStateUpdateRequested:viewStateUpdateRequested,interactionStateUpdateRequested:interactionStateUpdateRequested}=thisRef;viewStateUpdateRequested&&handleViewStateChange(viewStateUpdateRequested),interactionStateUpdateRequested&&handleInteractionStateChange(interactionStateUpdateRequested)})),(0,react.useImperativeHandle)(ref,(()=>function getRefHandles(thisRef){return{get deck(){return thisRef.deck},pickObject:opts=>thisRef.deck.pickObject(opts),pickMultipleObjects:opts=>thisRef.deck.pickMultipleObjects(opts),pickObjects:opts=>thisRef.deck.pickObjects(opts)}}(thisRef)),[]);const currentViewports=thisRef.deck&&thisRef.deck.isInitialized?thisRef.deck.getViewports():void 0,{ContextProvider:ContextProvider,width:width="100%",height:height="100%",id:id,style:style}=props,{containerStyle:containerStyle,canvasStyle:canvasStyle}=(0,react.useMemo)((()=>function extractStyles({width:width,height:height,style:style}){const containerStyle={position:"absolute",zIndex:0,left:0,top:0,width:width,height:height},canvasStyle={left:0,top:0};if(style)for(const key in style)key in CANVAS_ONLY_STYLES?canvasStyle[key]=style[key]:containerStyle[key]=style[key];return{containerStyle:containerStyle,canvasStyle:canvasStyle}}({width:width,height:height,style:style})),[width,height,style]);if(!thisRef.viewStateUpdateRequested&&thisRef.lastRenderedViewports===currentViewports||thisRef.version!==version){thisRef.lastRenderedViewports=currentViewports,thisRef.version=version;const childrenUnderViews=function positionChildrenUnderViews({children:children,deck:deck,ContextProvider:ContextProvider}){const{viewManager:viewManager}=deck||{};if(!viewManager||!viewManager.views.length)return[];const views={},defaultViewId=viewManager.views[0].id;for(const child of children){let viewId=defaultViewId,viewChildren=child;isComponent(child)&&inheritsFrom(child.type,view.A)&&(viewId=child.props.id||defaultViewId,viewChildren=child.props.children);const viewport=viewManager.getViewport(viewId),viewState=viewManager.getViewState(viewId);if(viewport){viewState.padding=viewport.padding;const{x:x,y:y,width:width,height:height}=viewport;viewChildren=evaluateChildren(viewChildren,{x:x,y:y,width:width,height:height,viewport:viewport,viewState:viewState}),views[viewId]||(views[viewId]={viewport:viewport,children:[]}),views[viewId].children.push(viewChildren)}}return Object.keys(views).map((viewId=>{const{viewport:viewport,children:viewChildren}=views[viewId],{x:x,y:y,width:width,height:height}=viewport,style={position:"absolute",left:x,top:y,width:width,height:height},key=`view-${viewId}`,viewElement=(0,react.createElement)("div",{key:key,id:key,style:style},...viewChildren);if(ContextProvider){const contextValue={viewport:viewport,container:deck.canvas.offsetParent,eventManager:deck.eventManager,onViewStateChange:params=>{params.viewId=viewId,deck._onViewStateChange(params)}};return(0,react.createElement)(ContextProvider,{key:key,value:contextValue},viewElement)}return viewElement}))}({children:jsxProps.children,deck:thisRef.deck,ContextProvider:ContextProvider}),canvas=(0,react.createElement)("canvas",{key:"canvas",id:id||"deckgl-overlay",ref:canvasRef,style:canvasStyle});thisRef.control=(0,react.createElement)("div",{id:`${id||"deckgl"}-wrapper`,ref:containerRef,style:containerStyle},[canvas,childrenUnderViews])}return inRender=!1,thisRef.control}));var deckgl=DeckGL},"./node_modules/@loaders.gl/images/dist/image-loader.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{$:function(){return ImageLoader}});var assert=__webpack_require__("./node_modules/@loaders.gl/loader-utils/dist/lib/env-utils/assert.js"),globals=__webpack_require__("./node_modules/@loaders.gl/loader-utils/dist/lib/env-utils/globals.js");const parseImageNode=globalThis.loaders?.parseImageNode,IMAGE_SUPPORTED="undefined"!=typeof Image,IMAGE_BITMAP_SUPPORTED="undefined"!=typeof ImageBitmap,NODE_IMAGE_SUPPORTED=Boolean(parseImageNode),DATA_SUPPORTED=!!globals.Bd||NODE_IMAGE_SUPPORTED;var parsed_image_api=__webpack_require__("./node_modules/@loaders.gl/images/dist/lib/category-api/parsed-image-api.js");const SVG_DATA_URL_PATTERN=/^data:image\/svg\+xml/,SVG_URL_PATTERN=/\.svg((\?|#).*)?$/;function isSVG(url){return url&&(SVG_DATA_URL_PATTERN.test(url)||SVG_URL_PATTERN.test(url))}function getBlob(arrayBuffer,url){if(isSVG(url))throw new Error("SVG cannot be parsed directly to imagebitmap");return new Blob([new Uint8Array(arrayBuffer)])}async function parseToImage(arrayBuffer,options,url){const blobOrDataUrl=function getBlobOrSVGDataUrl(arrayBuffer,url){if(isSVG(url)){let xmlText=(new TextDecoder).decode(arrayBuffer);try{"function"==typeof unescape&&"function"==typeof encodeURIComponent&&(xmlText=unescape(encodeURIComponent(xmlText)))}catch(error){throw new Error(error.message)}return`data:image/svg+xml;base64,${btoa(xmlText)}`}return getBlob(arrayBuffer,url)}(arrayBuffer,url),URL=self.URL||self.webkitURL,objectUrl="string"!=typeof blobOrDataUrl&&URL.createObjectURL(blobOrDataUrl);try{return await async function loadToImage(url,options){const image=new Image;if(image.src=url,options.image&&options.image.decode&&image.decode)return await image.decode(),image;return await new Promise(((resolve,reject)=>{try{image.onload=()=>resolve(image),image.onerror=error=>{const message=error instanceof Error?error.message:"error";reject(new Error(message))}}catch(error){reject(error)}}))}(objectUrl||blobOrDataUrl,options)}finally{objectUrl&&URL.revokeObjectURL(objectUrl)}}const EMPTY_OBJECT={};let imagebitmapOptionsSupported=!0;async function parseToImageBitmap(arrayBuffer,options,url){let blob;if(isSVG(url)){blob=await parseToImage(arrayBuffer,options,url)}else blob=getBlob(arrayBuffer,url);const imagebitmapOptions=options&&options.imagebitmap;return await async function safeCreateImageBitmap(blob,imagebitmapOptions=null){!function isEmptyObject(object){for(const key in object||EMPTY_OBJECT)return!1;return!0}(imagebitmapOptions)&&imagebitmapOptionsSupported||(imagebitmapOptions=null);if(imagebitmapOptions)try{return await createImageBitmap(blob,imagebitmapOptions)}catch(error){console.warn(error),imagebitmapOptionsSupported=!1}return await createImageBitmap(blob)}(blob,imagebitmapOptions)}var binary_image_api=__webpack_require__("./node_modules/@loaders.gl/images/dist/lib/category-api/binary-image-api.js");const ImageLoader={dataType:null,batchType:null,id:"image",module:"images",name:"Images",version:"4.2.2",mimeTypes:["image/png","image/jpeg","image/gif","image/webp","image/avif","image/bmp","image/vnd.microsoft.icon","image/svg+xml"],extensions:["png","jpg","jpeg","gif","webp","bmp","ico","svg","avif"],parse:async function parseImage(arrayBuffer,options,context){const imageType=((options=options||{}).image||{}).type||"auto",{url:url}=context||{};let image;switch(function getLoadableImageType(type){switch(type){case"auto":case"data":return function getDefaultImageType(){if(IMAGE_BITMAP_SUPPORTED)return"imagebitmap";if(IMAGE_SUPPORTED)return"image";if(DATA_SUPPORTED)return"data";throw new Error("Install '@loaders.gl/polyfills' to parse images under Node.js")}();default:return function isImageTypeSupported(type){switch(type){case"auto":return IMAGE_BITMAP_SUPPORTED||IMAGE_SUPPORTED||DATA_SUPPORTED;case"imagebitmap":return IMAGE_BITMAP_SUPPORTED;case"image":return IMAGE_SUPPORTED;case"data":return DATA_SUPPORTED;default:throw new Error(`@loaders.gl/images: image ${type} not supported in this environment`)}}(type),type}}(imageType)){case"imagebitmap":image=await parseToImageBitmap(arrayBuffer,options,url);break;case"image":image=await parseToImage(arrayBuffer,options,url);break;case"data":image=await async function parseToNodeImage(arrayBuffer,options){const{mimeType:mimeType}=(0,binary_image_api.m)(arrayBuffer)||{},parseImageNode=globalThis.loaders?.parseImageNode;return(0,assert.v)(parseImageNode),await parseImageNode(arrayBuffer,mimeType)}(arrayBuffer);break;default:(0,assert.v)(!1)}return"data"===imageType&&(image=(0,parsed_image_api.M5)(image)),image},tests:[arrayBuffer=>Boolean((0,binary_image_api.m)(new DataView(arrayBuffer)))],options:{image:{type:"auto",decode:!0}}}},"./node_modules/@loaders.gl/images/dist/lib/category-api/binary-image-api.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function getISOBMFFMediaType(buffer){return function checkString(buffer,header,offset=0){const headerBytes=function stringToBytes(string){return[...string].map((character=>character.charCodeAt(0)))}(header);for(let i=0;i<headerBytes.length;++i)if(headerBytes[i]!==buffer[i+offset])return!1;return!0}(buffer,"ftyp",4)&&96&buffer[8]?function decodeMajorBrand(buffer){switch(function getUTF8String(array,start,end){return String.fromCharCode(...array.slice(start,end))}(buffer,8,12).replace("\0"," ").trim()){case"avif":case"avis":return{extension:"avif",mimeType:"image/avif"};default:return null}}(buffer):null}__webpack_require__.d(__webpack_exports__,{m:function(){return getBinaryImageMetadata}});const BIG_ENDIAN=!1,LITTLE_ENDIAN=!0;function getBinaryImageMetadata(binaryData){const dataView=toDataView(binaryData);return function getPngMetadata(binaryData){const dataView=toDataView(binaryData),isPng=dataView.byteLength>=24&&2303741511===dataView.getUint32(0,BIG_ENDIAN);if(!isPng)return null;return{mimeType:"image/png",width:dataView.getUint32(16,BIG_ENDIAN),height:dataView.getUint32(20,BIG_ENDIAN)}}(dataView)||function getJpegMetadata(binaryData){const dataView=toDataView(binaryData),isJpeg=dataView.byteLength>=3&&65496===dataView.getUint16(0,BIG_ENDIAN)&&255===dataView.getUint8(2);if(!isJpeg)return null;const{tableMarkers:tableMarkers,sofMarkers:sofMarkers}=function getJpegMarkers(){const tableMarkers=new Set([65499,65476,65484,65501,65534]);for(let i=65504;i<65520;++i)tableMarkers.add(i);const sofMarkers=new Set([65472,65473,65474,65475,65477,65478,65479,65481,65482,65483,65485,65486,65487,65502]);return{tableMarkers:tableMarkers,sofMarkers:sofMarkers}}();let i=2;for(;i+9<dataView.byteLength;){const marker=dataView.getUint16(i,BIG_ENDIAN);if(sofMarkers.has(marker))return{mimeType:"image/jpeg",height:dataView.getUint16(i+5,BIG_ENDIAN),width:dataView.getUint16(i+7,BIG_ENDIAN)};if(!tableMarkers.has(marker))return null;i+=2,i+=dataView.getUint16(i,BIG_ENDIAN)}return null}(dataView)||function getGifMetadata(binaryData){const dataView=toDataView(binaryData),isGif=dataView.byteLength>=10&&1195984440===dataView.getUint32(0,BIG_ENDIAN);if(!isGif)return null;return{mimeType:"image/gif",width:dataView.getUint16(6,LITTLE_ENDIAN),height:dataView.getUint16(8,LITTLE_ENDIAN)}}(dataView)||function getBmpMetadata(binaryData){const dataView=toDataView(binaryData),isBmp=dataView.byteLength>=14&&16973===dataView.getUint16(0,BIG_ENDIAN)&&dataView.getUint32(2,LITTLE_ENDIAN)===dataView.byteLength;if(!isBmp)return null;return{mimeType:"image/bmp",width:dataView.getUint32(18,LITTLE_ENDIAN),height:dataView.getUint32(22,LITTLE_ENDIAN)}}(dataView)||function getISOBMFFMetadata(binaryData){const buffer=new Uint8Array(binaryData instanceof DataView?binaryData.buffer:binaryData),mediaType=getISOBMFFMediaType(buffer);if(!mediaType)return null;return{mimeType:mediaType.mimeType,width:0,height:0}}(dataView)}function toDataView(data){if(data instanceof DataView)return data;if(ArrayBuffer.isView(data))return new DataView(data.buffer);if(data instanceof ArrayBuffer)return new DataView(data);throw new Error("toDataView")}},"./node_modules/@loaders.gl/images/dist/lib/category-api/parsed-image-api.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function getImageType(image){const format=getImageTypeOrNull(image);if(!format)throw new Error("Not an image");return format}function getImageData(image){switch(getImageType(image)){case"data":return image;case"image":case"imagebitmap":const canvas=document.createElement("canvas"),context=canvas.getContext("2d");if(!context)throw new Error("getImageData");return canvas.width=image.width,canvas.height=image.height,context.drawImage(image,0,0),context.getImageData(0,0,image.width,image.height);default:throw new Error("getImageData")}}function getImageTypeOrNull(image){return"undefined"!=typeof ImageBitmap&&image instanceof ImageBitmap?"imagebitmap":"undefined"!=typeof Image&&image instanceof Image?"image":image&&"object"==typeof image&&image.data&&image.width&&image.height?"data":null}__webpack_require__.d(__webpack_exports__,{M5:function(){return getImageData}})},"./node_modules/@luma.gl/constants/dist/webgl-constants.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var GLEnum;__webpack_require__.d(__webpack_exports__,{GL:function(){return GLEnum}}),function(GLEnum){GLEnum[GLEnum.DEPTH_BUFFER_BIT=256]="DEPTH_BUFFER_BIT",GLEnum[GLEnum.STENCIL_BUFFER_BIT=1024]="STENCIL_BUFFER_BIT",GLEnum[GLEnum.COLOR_BUFFER_BIT=16384]="COLOR_BUFFER_BIT",GLEnum[GLEnum.POINTS=0]="POINTS",GLEnum[GLEnum.LINES=1]="LINES",GLEnum[GLEnum.LINE_LOOP=2]="LINE_LOOP",GLEnum[GLEnum.LINE_STRIP=3]="LINE_STRIP",GLEnum[GLEnum.TRIANGLES=4]="TRIANGLES",GLEnum[GLEnum.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",GLEnum[GLEnum.TRIANGLE_FAN=6]="TRIANGLE_FAN",GLEnum[GLEnum.ZERO=0]="ZERO",GLEnum[GLEnum.ONE=1]="ONE",GLEnum[GLEnum.SRC_COLOR=768]="SRC_COLOR",GLEnum[GLEnum.ONE_MINUS_SRC_COLOR=769]="ONE_MINUS_SRC_COLOR",GLEnum[GLEnum.SRC_ALPHA=770]="SRC_ALPHA",GLEnum[GLEnum.ONE_MINUS_SRC_ALPHA=771]="ONE_MINUS_SRC_ALPHA",GLEnum[GLEnum.DST_ALPHA=772]="DST_ALPHA",GLEnum[GLEnum.ONE_MINUS_DST_ALPHA=773]="ONE_MINUS_DST_ALPHA",GLEnum[GLEnum.DST_COLOR=774]="DST_COLOR",GLEnum[GLEnum.ONE_MINUS_DST_COLOR=775]="ONE_MINUS_DST_COLOR",GLEnum[GLEnum.SRC_ALPHA_SATURATE=776]="SRC_ALPHA_SATURATE",GLEnum[GLEnum.CONSTANT_COLOR=32769]="CONSTANT_COLOR",GLEnum[GLEnum.ONE_MINUS_CONSTANT_COLOR=32770]="ONE_MINUS_CONSTANT_COLOR",GLEnum[GLEnum.CONSTANT_ALPHA=32771]="CONSTANT_ALPHA",GLEnum[GLEnum.ONE_MINUS_CONSTANT_ALPHA=32772]="ONE_MINUS_CONSTANT_ALPHA",GLEnum[GLEnum.FUNC_ADD=32774]="FUNC_ADD",GLEnum[GLEnum.FUNC_SUBTRACT=32778]="FUNC_SUBTRACT",GLEnum[GLEnum.FUNC_REVERSE_SUBTRACT=32779]="FUNC_REVERSE_SUBTRACT",GLEnum[GLEnum.BLEND_EQUATION=32777]="BLEND_EQUATION",GLEnum[GLEnum.BLEND_EQUATION_RGB=32777]="BLEND_EQUATION_RGB",GLEnum[GLEnum.BLEND_EQUATION_ALPHA=34877]="BLEND_EQUATION_ALPHA",GLEnum[GLEnum.BLEND_DST_RGB=32968]="BLEND_DST_RGB",GLEnum[GLEnum.BLEND_SRC_RGB=32969]="BLEND_SRC_RGB",GLEnum[GLEnum.BLEND_DST_ALPHA=32970]="BLEND_DST_ALPHA",GLEnum[GLEnum.BLEND_SRC_ALPHA=32971]="BLEND_SRC_ALPHA",GLEnum[GLEnum.BLEND_COLOR=32773]="BLEND_COLOR",GLEnum[GLEnum.ARRAY_BUFFER_BINDING=34964]="ARRAY_BUFFER_BINDING",GLEnum[GLEnum.ELEMENT_ARRAY_BUFFER_BINDING=34965]="ELEMENT_ARRAY_BUFFER_BINDING",GLEnum[GLEnum.LINE_WIDTH=2849]="LINE_WIDTH",GLEnum[GLEnum.ALIASED_POINT_SIZE_RANGE=33901]="ALIASED_POINT_SIZE_RANGE",GLEnum[GLEnum.ALIASED_LINE_WIDTH_RANGE=33902]="ALIASED_LINE_WIDTH_RANGE",GLEnum[GLEnum.CULL_FACE_MODE=2885]="CULL_FACE_MODE",GLEnum[GLEnum.FRONT_FACE=2886]="FRONT_FACE",GLEnum[GLEnum.DEPTH_RANGE=2928]="DEPTH_RANGE",GLEnum[GLEnum.DEPTH_WRITEMASK=2930]="DEPTH_WRITEMASK",GLEnum[GLEnum.DEPTH_CLEAR_VALUE=2931]="DEPTH_CLEAR_VALUE",GLEnum[GLEnum.DEPTH_FUNC=2932]="DEPTH_FUNC",GLEnum[GLEnum.STENCIL_CLEAR_VALUE=2961]="STENCIL_CLEAR_VALUE",GLEnum[GLEnum.STENCIL_FUNC=2962]="STENCIL_FUNC",GLEnum[GLEnum.STENCIL_FAIL=2964]="STENCIL_FAIL",GLEnum[GLEnum.STENCIL_PASS_DEPTH_FAIL=2965]="STENCIL_PASS_DEPTH_FAIL",GLEnum[GLEnum.STENCIL_PASS_DEPTH_PASS=2966]="STENCIL_PASS_DEPTH_PASS",GLEnum[GLEnum.STENCIL_REF=2967]="STENCIL_REF",GLEnum[GLEnum.STENCIL_VALUE_MASK=2963]="STENCIL_VALUE_MASK",GLEnum[GLEnum.STENCIL_WRITEMASK=2968]="STENCIL_WRITEMASK",GLEnum[GLEnum.STENCIL_BACK_FUNC=34816]="STENCIL_BACK_FUNC",GLEnum[GLEnum.STENCIL_BACK_FAIL=34817]="STENCIL_BACK_FAIL",GLEnum[GLEnum.STENCIL_BACK_PASS_DEPTH_FAIL=34818]="STENCIL_BACK_PASS_DEPTH_FAIL",GLEnum[GLEnum.STENCIL_BACK_PASS_DEPTH_PASS=34819]="STENCIL_BACK_PASS_DEPTH_PASS",GLEnum[GLEnum.STENCIL_BACK_REF=36003]="STENCIL_BACK_REF",GLEnum[GLEnum.STENCIL_BACK_VALUE_MASK=36004]="STENCIL_BACK_VALUE_MASK",GLEnum[GLEnum.STENCIL_BACK_WRITEMASK=36005]="STENCIL_BACK_WRITEMASK",GLEnum[GLEnum.VIEWPORT=2978]="VIEWPORT",GLEnum[GLEnum.SCISSOR_BOX=3088]="SCISSOR_BOX",GLEnum[GLEnum.COLOR_CLEAR_VALUE=3106]="COLOR_CLEAR_VALUE",GLEnum[GLEnum.COLOR_WRITEMASK=3107]="COLOR_WRITEMASK",GLEnum[GLEnum.UNPACK_ALIGNMENT=3317]="UNPACK_ALIGNMENT",GLEnum[GLEnum.PACK_ALIGNMENT=3333]="PACK_ALIGNMENT",GLEnum[GLEnum.MAX_TEXTURE_SIZE=3379]="MAX_TEXTURE_SIZE",GLEnum[GLEnum.MAX_VIEWPORT_DIMS=3386]="MAX_VIEWPORT_DIMS",GLEnum[GLEnum.SUBPIXEL_BITS=3408]="SUBPIXEL_BITS",GLEnum[GLEnum.RED_BITS=3410]="RED_BITS",GLEnum[GLEnum.GREEN_BITS=3411]="GREEN_BITS",GLEnum[GLEnum.BLUE_BITS=3412]="BLUE_BITS",GLEnum[GLEnum.ALPHA_BITS=3413]="ALPHA_BITS",GLEnum[GLEnum.DEPTH_BITS=3414]="DEPTH_BITS",GLEnum[GLEnum.STENCIL_BITS=3415]="STENCIL_BITS",GLEnum[GLEnum.POLYGON_OFFSET_UNITS=10752]="POLYGON_OFFSET_UNITS",GLEnum[GLEnum.POLYGON_OFFSET_FACTOR=32824]="POLYGON_OFFSET_FACTOR",GLEnum[GLEnum.TEXTURE_BINDING_2D=32873]="TEXTURE_BINDING_2D",GLEnum[GLEnum.SAMPLE_BUFFERS=32936]="SAMPLE_BUFFERS",GLEnum[GLEnum.SAMPLES=32937]="SAMPLES",GLEnum[GLEnum.SAMPLE_COVERAGE_VALUE=32938]="SAMPLE_COVERAGE_VALUE",GLEnum[GLEnum.SAMPLE_COVERAGE_INVERT=32939]="SAMPLE_COVERAGE_INVERT",GLEnum[GLEnum.COMPRESSED_TEXTURE_FORMATS=34467]="COMPRESSED_TEXTURE_FORMATS",GLEnum[GLEnum.VENDOR=7936]="VENDOR",GLEnum[GLEnum.RENDERER=7937]="RENDERER",GLEnum[GLEnum.VERSION=7938]="VERSION",GLEnum[GLEnum.IMPLEMENTATION_COLOR_READ_TYPE=35738]="IMPLEMENTATION_COLOR_READ_TYPE",GLEnum[GLEnum.IMPLEMENTATION_COLOR_READ_FORMAT=35739]="IMPLEMENTATION_COLOR_READ_FORMAT",GLEnum[GLEnum.BROWSER_DEFAULT_WEBGL=37444]="BROWSER_DEFAULT_WEBGL",GLEnum[GLEnum.STATIC_DRAW=35044]="STATIC_DRAW",GLEnum[GLEnum.STREAM_DRAW=35040]="STREAM_DRAW",GLEnum[GLEnum.DYNAMIC_DRAW=35048]="DYNAMIC_DRAW",GLEnum[GLEnum.ARRAY_BUFFER=34962]="ARRAY_BUFFER",GLEnum[GLEnum.ELEMENT_ARRAY_BUFFER=34963]="ELEMENT_ARRAY_BUFFER",GLEnum[GLEnum.BUFFER_SIZE=34660]="BUFFER_SIZE",GLEnum[GLEnum.BUFFER_USAGE=34661]="BUFFER_USAGE",GLEnum[GLEnum.CURRENT_VERTEX_ATTRIB=34342]="CURRENT_VERTEX_ATTRIB",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_ENABLED=34338]="VERTEX_ATTRIB_ARRAY_ENABLED",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_SIZE=34339]="VERTEX_ATTRIB_ARRAY_SIZE",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_STRIDE=34340]="VERTEX_ATTRIB_ARRAY_STRIDE",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_TYPE=34341]="VERTEX_ATTRIB_ARRAY_TYPE",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_NORMALIZED=34922]="VERTEX_ATTRIB_ARRAY_NORMALIZED",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_POINTER=34373]="VERTEX_ATTRIB_ARRAY_POINTER",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING=34975]="VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",GLEnum[GLEnum.CULL_FACE=2884]="CULL_FACE",GLEnum[GLEnum.FRONT=1028]="FRONT",GLEnum[GLEnum.BACK=1029]="BACK",GLEnum[GLEnum.FRONT_AND_BACK=1032]="FRONT_AND_BACK",GLEnum[GLEnum.BLEND=3042]="BLEND",GLEnum[GLEnum.DEPTH_TEST=2929]="DEPTH_TEST",GLEnum[GLEnum.DITHER=3024]="DITHER",GLEnum[GLEnum.POLYGON_OFFSET_FILL=32823]="POLYGON_OFFSET_FILL",GLEnum[GLEnum.SAMPLE_ALPHA_TO_COVERAGE=32926]="SAMPLE_ALPHA_TO_COVERAGE",GLEnum[GLEnum.SAMPLE_COVERAGE=32928]="SAMPLE_COVERAGE",GLEnum[GLEnum.SCISSOR_TEST=3089]="SCISSOR_TEST",GLEnum[GLEnum.STENCIL_TEST=2960]="STENCIL_TEST",GLEnum[GLEnum.NO_ERROR=0]="NO_ERROR",GLEnum[GLEnum.INVALID_ENUM=1280]="INVALID_ENUM",GLEnum[GLEnum.INVALID_VALUE=1281]="INVALID_VALUE",GLEnum[GLEnum.INVALID_OPERATION=1282]="INVALID_OPERATION",GLEnum[GLEnum.OUT_OF_MEMORY=1285]="OUT_OF_MEMORY",GLEnum[GLEnum.CONTEXT_LOST_WEBGL=37442]="CONTEXT_LOST_WEBGL",GLEnum[GLEnum.CW=2304]="CW",GLEnum[GLEnum.CCW=2305]="CCW",GLEnum[GLEnum.DONT_CARE=4352]="DONT_CARE",GLEnum[GLEnum.FASTEST=4353]="FASTEST",GLEnum[GLEnum.NICEST=4354]="NICEST",GLEnum[GLEnum.GENERATE_MIPMAP_HINT=33170]="GENERATE_MIPMAP_HINT",GLEnum[GLEnum.BYTE=5120]="BYTE",GLEnum[GLEnum.UNSIGNED_BYTE=5121]="UNSIGNED_BYTE",GLEnum[GLEnum.SHORT=5122]="SHORT",GLEnum[GLEnum.UNSIGNED_SHORT=5123]="UNSIGNED_SHORT",GLEnum[GLEnum.INT=5124]="INT",GLEnum[GLEnum.UNSIGNED_INT=5125]="UNSIGNED_INT",GLEnum[GLEnum.FLOAT=5126]="FLOAT",GLEnum[GLEnum.DOUBLE=5130]="DOUBLE",GLEnum[GLEnum.DEPTH_COMPONENT=6402]="DEPTH_COMPONENT",GLEnum[GLEnum.ALPHA=6406]="ALPHA",GLEnum[GLEnum.RGB=6407]="RGB",GLEnum[GLEnum.RGBA=6408]="RGBA",GLEnum[GLEnum.LUMINANCE=6409]="LUMINANCE",GLEnum[GLEnum.LUMINANCE_ALPHA=6410]="LUMINANCE_ALPHA",GLEnum[GLEnum.UNSIGNED_SHORT_4_4_4_4=32819]="UNSIGNED_SHORT_4_4_4_4",GLEnum[GLEnum.UNSIGNED_SHORT_5_5_5_1=32820]="UNSIGNED_SHORT_5_5_5_1",GLEnum[GLEnum.UNSIGNED_SHORT_5_6_5=33635]="UNSIGNED_SHORT_5_6_5",GLEnum[GLEnum.FRAGMENT_SHADER=35632]="FRAGMENT_SHADER",GLEnum[GLEnum.VERTEX_SHADER=35633]="VERTEX_SHADER",GLEnum[GLEnum.COMPILE_STATUS=35713]="COMPILE_STATUS",GLEnum[GLEnum.DELETE_STATUS=35712]="DELETE_STATUS",GLEnum[GLEnum.LINK_STATUS=35714]="LINK_STATUS",GLEnum[GLEnum.VALIDATE_STATUS=35715]="VALIDATE_STATUS",GLEnum[GLEnum.ATTACHED_SHADERS=35717]="ATTACHED_SHADERS",GLEnum[GLEnum.ACTIVE_ATTRIBUTES=35721]="ACTIVE_ATTRIBUTES",GLEnum[GLEnum.ACTIVE_UNIFORMS=35718]="ACTIVE_UNIFORMS",GLEnum[GLEnum.MAX_VERTEX_ATTRIBS=34921]="MAX_VERTEX_ATTRIBS",GLEnum[GLEnum.MAX_VERTEX_UNIFORM_VECTORS=36347]="MAX_VERTEX_UNIFORM_VECTORS",GLEnum[GLEnum.MAX_VARYING_VECTORS=36348]="MAX_VARYING_VECTORS",GLEnum[GLEnum.MAX_COMBINED_TEXTURE_IMAGE_UNITS=35661]="MAX_COMBINED_TEXTURE_IMAGE_UNITS",GLEnum[GLEnum.MAX_VERTEX_TEXTURE_IMAGE_UNITS=35660]="MAX_VERTEX_TEXTURE_IMAGE_UNITS",GLEnum[GLEnum.MAX_TEXTURE_IMAGE_UNITS=34930]="MAX_TEXTURE_IMAGE_UNITS",GLEnum[GLEnum.MAX_FRAGMENT_UNIFORM_VECTORS=36349]="MAX_FRAGMENT_UNIFORM_VECTORS",GLEnum[GLEnum.SHADER_TYPE=35663]="SHADER_TYPE",GLEnum[GLEnum.SHADING_LANGUAGE_VERSION=35724]="SHADING_LANGUAGE_VERSION",GLEnum[GLEnum.CURRENT_PROGRAM=35725]="CURRENT_PROGRAM",GLEnum[GLEnum.NEVER=512]="NEVER",GLEnum[GLEnum.LESS=513]="LESS",GLEnum[GLEnum.EQUAL=514]="EQUAL",GLEnum[GLEnum.LEQUAL=515]="LEQUAL",GLEnum[GLEnum.GREATER=516]="GREATER",GLEnum[GLEnum.NOTEQUAL=517]="NOTEQUAL",GLEnum[GLEnum.GEQUAL=518]="GEQUAL",GLEnum[GLEnum.ALWAYS=519]="ALWAYS",GLEnum[GLEnum.KEEP=7680]="KEEP",GLEnum[GLEnum.REPLACE=7681]="REPLACE",GLEnum[GLEnum.INCR=7682]="INCR",GLEnum[GLEnum.DECR=7683]="DECR",GLEnum[GLEnum.INVERT=5386]="INVERT",GLEnum[GLEnum.INCR_WRAP=34055]="INCR_WRAP",GLEnum[GLEnum.DECR_WRAP=34056]="DECR_WRAP",GLEnum[GLEnum.NEAREST=9728]="NEAREST",GLEnum[GLEnum.LINEAR=9729]="LINEAR",GLEnum[GLEnum.NEAREST_MIPMAP_NEAREST=9984]="NEAREST_MIPMAP_NEAREST",GLEnum[GLEnum.LINEAR_MIPMAP_NEAREST=9985]="LINEAR_MIPMAP_NEAREST",GLEnum[GLEnum.NEAREST_MIPMAP_LINEAR=9986]="NEAREST_MIPMAP_LINEAR",GLEnum[GLEnum.LINEAR_MIPMAP_LINEAR=9987]="LINEAR_MIPMAP_LINEAR",GLEnum[GLEnum.TEXTURE_MAG_FILTER=10240]="TEXTURE_MAG_FILTER",GLEnum[GLEnum.TEXTURE_MIN_FILTER=10241]="TEXTURE_MIN_FILTER",GLEnum[GLEnum.TEXTURE_WRAP_S=10242]="TEXTURE_WRAP_S",GLEnum[GLEnum.TEXTURE_WRAP_T=10243]="TEXTURE_WRAP_T",GLEnum[GLEnum.TEXTURE_2D=3553]="TEXTURE_2D",GLEnum[GLEnum.TEXTURE=5890]="TEXTURE",GLEnum[GLEnum.TEXTURE_CUBE_MAP=34067]="TEXTURE_CUBE_MAP",GLEnum[GLEnum.TEXTURE_BINDING_CUBE_MAP=34068]="TEXTURE_BINDING_CUBE_MAP",GLEnum[GLEnum.TEXTURE_CUBE_MAP_POSITIVE_X=34069]="TEXTURE_CUBE_MAP_POSITIVE_X",GLEnum[GLEnum.TEXTURE_CUBE_MAP_NEGATIVE_X=34070]="TEXTURE_CUBE_MAP_NEGATIVE_X",GLEnum[GLEnum.TEXTURE_CUBE_MAP_POSITIVE_Y=34071]="TEXTURE_CUBE_MAP_POSITIVE_Y",GLEnum[GLEnum.TEXTURE_CUBE_MAP_NEGATIVE_Y=34072]="TEXTURE_CUBE_MAP_NEGATIVE_Y",GLEnum[GLEnum.TEXTURE_CUBE_MAP_POSITIVE_Z=34073]="TEXTURE_CUBE_MAP_POSITIVE_Z",GLEnum[GLEnum.TEXTURE_CUBE_MAP_NEGATIVE_Z=34074]="TEXTURE_CUBE_MAP_NEGATIVE_Z",GLEnum[GLEnum.MAX_CUBE_MAP_TEXTURE_SIZE=34076]="MAX_CUBE_MAP_TEXTURE_SIZE",GLEnum[GLEnum.TEXTURE0=33984]="TEXTURE0",GLEnum[GLEnum.ACTIVE_TEXTURE=34016]="ACTIVE_TEXTURE",GLEnum[GLEnum.REPEAT=10497]="REPEAT",GLEnum[GLEnum.CLAMP_TO_EDGE=33071]="CLAMP_TO_EDGE",GLEnum[GLEnum.MIRRORED_REPEAT=33648]="MIRRORED_REPEAT",GLEnum[GLEnum.TEXTURE_WIDTH=4096]="TEXTURE_WIDTH",GLEnum[GLEnum.TEXTURE_HEIGHT=4097]="TEXTURE_HEIGHT",GLEnum[GLEnum.FLOAT_VEC2=35664]="FLOAT_VEC2",GLEnum[GLEnum.FLOAT_VEC3=35665]="FLOAT_VEC3",GLEnum[GLEnum.FLOAT_VEC4=35666]="FLOAT_VEC4",GLEnum[GLEnum.INT_VEC2=35667]="INT_VEC2",GLEnum[GLEnum.INT_VEC3=35668]="INT_VEC3",GLEnum[GLEnum.INT_VEC4=35669]="INT_VEC4",GLEnum[GLEnum.BOOL=35670]="BOOL",GLEnum[GLEnum.BOOL_VEC2=35671]="BOOL_VEC2",GLEnum[GLEnum.BOOL_VEC3=35672]="BOOL_VEC3",GLEnum[GLEnum.BOOL_VEC4=35673]="BOOL_VEC4",GLEnum[GLEnum.FLOAT_MAT2=35674]="FLOAT_MAT2",GLEnum[GLEnum.FLOAT_MAT3=35675]="FLOAT_MAT3",GLEnum[GLEnum.FLOAT_MAT4=35676]="FLOAT_MAT4",GLEnum[GLEnum.SAMPLER_2D=35678]="SAMPLER_2D",GLEnum[GLEnum.SAMPLER_CUBE=35680]="SAMPLER_CUBE",GLEnum[GLEnum.LOW_FLOAT=36336]="LOW_FLOAT",GLEnum[GLEnum.MEDIUM_FLOAT=36337]="MEDIUM_FLOAT",GLEnum[GLEnum.HIGH_FLOAT=36338]="HIGH_FLOAT",GLEnum[GLEnum.LOW_INT=36339]="LOW_INT",GLEnum[GLEnum.MEDIUM_INT=36340]="MEDIUM_INT",GLEnum[GLEnum.HIGH_INT=36341]="HIGH_INT",GLEnum[GLEnum.FRAMEBUFFER=36160]="FRAMEBUFFER",GLEnum[GLEnum.RENDERBUFFER=36161]="RENDERBUFFER",GLEnum[GLEnum.RGBA4=32854]="RGBA4",GLEnum[GLEnum.RGB5_A1=32855]="RGB5_A1",GLEnum[GLEnum.RGB565=36194]="RGB565",GLEnum[GLEnum.DEPTH_COMPONENT16=33189]="DEPTH_COMPONENT16",GLEnum[GLEnum.STENCIL_INDEX=6401]="STENCIL_INDEX",GLEnum[GLEnum.STENCIL_INDEX8=36168]="STENCIL_INDEX8",GLEnum[GLEnum.DEPTH_STENCIL=34041]="DEPTH_STENCIL",GLEnum[GLEnum.RENDERBUFFER_WIDTH=36162]="RENDERBUFFER_WIDTH",GLEnum[GLEnum.RENDERBUFFER_HEIGHT=36163]="RENDERBUFFER_HEIGHT",GLEnum[GLEnum.RENDERBUFFER_INTERNAL_FORMAT=36164]="RENDERBUFFER_INTERNAL_FORMAT",GLEnum[GLEnum.RENDERBUFFER_RED_SIZE=36176]="RENDERBUFFER_RED_SIZE",GLEnum[GLEnum.RENDERBUFFER_GREEN_SIZE=36177]="RENDERBUFFER_GREEN_SIZE",GLEnum[GLEnum.RENDERBUFFER_BLUE_SIZE=36178]="RENDERBUFFER_BLUE_SIZE",GLEnum[GLEnum.RENDERBUFFER_ALPHA_SIZE=36179]="RENDERBUFFER_ALPHA_SIZE",GLEnum[GLEnum.RENDERBUFFER_DEPTH_SIZE=36180]="RENDERBUFFER_DEPTH_SIZE",GLEnum[GLEnum.RENDERBUFFER_STENCIL_SIZE=36181]="RENDERBUFFER_STENCIL_SIZE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE=36048]="FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME=36049]="FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL=36050]="FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE=36051]="FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",GLEnum[GLEnum.COLOR_ATTACHMENT0=36064]="COLOR_ATTACHMENT0",GLEnum[GLEnum.DEPTH_ATTACHMENT=36096]="DEPTH_ATTACHMENT",GLEnum[GLEnum.STENCIL_ATTACHMENT=36128]="STENCIL_ATTACHMENT",GLEnum[GLEnum.DEPTH_STENCIL_ATTACHMENT=33306]="DEPTH_STENCIL_ATTACHMENT",GLEnum[GLEnum.NONE=0]="NONE",GLEnum[GLEnum.FRAMEBUFFER_COMPLETE=36053]="FRAMEBUFFER_COMPLETE",GLEnum[GLEnum.FRAMEBUFFER_INCOMPLETE_ATTACHMENT=36054]="FRAMEBUFFER_INCOMPLETE_ATTACHMENT",GLEnum[GLEnum.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT=36055]="FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",GLEnum[GLEnum.FRAMEBUFFER_INCOMPLETE_DIMENSIONS=36057]="FRAMEBUFFER_INCOMPLETE_DIMENSIONS",GLEnum[GLEnum.FRAMEBUFFER_UNSUPPORTED=36061]="FRAMEBUFFER_UNSUPPORTED",GLEnum[GLEnum.FRAMEBUFFER_BINDING=36006]="FRAMEBUFFER_BINDING",GLEnum[GLEnum.RENDERBUFFER_BINDING=36007]="RENDERBUFFER_BINDING",GLEnum[GLEnum.READ_FRAMEBUFFER=36008]="READ_FRAMEBUFFER",GLEnum[GLEnum.DRAW_FRAMEBUFFER=36009]="DRAW_FRAMEBUFFER",GLEnum[GLEnum.MAX_RENDERBUFFER_SIZE=34024]="MAX_RENDERBUFFER_SIZE",GLEnum[GLEnum.INVALID_FRAMEBUFFER_OPERATION=1286]="INVALID_FRAMEBUFFER_OPERATION",GLEnum[GLEnum.UNPACK_FLIP_Y_WEBGL=37440]="UNPACK_FLIP_Y_WEBGL",GLEnum[GLEnum.UNPACK_PREMULTIPLY_ALPHA_WEBGL=37441]="UNPACK_PREMULTIPLY_ALPHA_WEBGL",GLEnum[GLEnum.UNPACK_COLORSPACE_CONVERSION_WEBGL=37443]="UNPACK_COLORSPACE_CONVERSION_WEBGL",GLEnum[GLEnum.READ_BUFFER=3074]="READ_BUFFER",GLEnum[GLEnum.UNPACK_ROW_LENGTH=3314]="UNPACK_ROW_LENGTH",GLEnum[GLEnum.UNPACK_SKIP_ROWS=3315]="UNPACK_SKIP_ROWS",GLEnum[GLEnum.UNPACK_SKIP_PIXELS=3316]="UNPACK_SKIP_PIXELS",GLEnum[GLEnum.PACK_ROW_LENGTH=3330]="PACK_ROW_LENGTH",GLEnum[GLEnum.PACK_SKIP_ROWS=3331]="PACK_SKIP_ROWS",GLEnum[GLEnum.PACK_SKIP_PIXELS=3332]="PACK_SKIP_PIXELS",GLEnum[GLEnum.TEXTURE_BINDING_3D=32874]="TEXTURE_BINDING_3D",GLEnum[GLEnum.UNPACK_SKIP_IMAGES=32877]="UNPACK_SKIP_IMAGES",GLEnum[GLEnum.UNPACK_IMAGE_HEIGHT=32878]="UNPACK_IMAGE_HEIGHT",GLEnum[GLEnum.MAX_3D_TEXTURE_SIZE=32883]="MAX_3D_TEXTURE_SIZE",GLEnum[GLEnum.MAX_ELEMENTS_VERTICES=33e3]="MAX_ELEMENTS_VERTICES",GLEnum[GLEnum.MAX_ELEMENTS_INDICES=33001]="MAX_ELEMENTS_INDICES",GLEnum[GLEnum.MAX_TEXTURE_LOD_BIAS=34045]="MAX_TEXTURE_LOD_BIAS",GLEnum[GLEnum.MAX_FRAGMENT_UNIFORM_COMPONENTS=35657]="MAX_FRAGMENT_UNIFORM_COMPONENTS",GLEnum[GLEnum.MAX_VERTEX_UNIFORM_COMPONENTS=35658]="MAX_VERTEX_UNIFORM_COMPONENTS",GLEnum[GLEnum.MAX_ARRAY_TEXTURE_LAYERS=35071]="MAX_ARRAY_TEXTURE_LAYERS",GLEnum[GLEnum.MIN_PROGRAM_TEXEL_OFFSET=35076]="MIN_PROGRAM_TEXEL_OFFSET",GLEnum[GLEnum.MAX_PROGRAM_TEXEL_OFFSET=35077]="MAX_PROGRAM_TEXEL_OFFSET",GLEnum[GLEnum.MAX_VARYING_COMPONENTS=35659]="MAX_VARYING_COMPONENTS",GLEnum[GLEnum.FRAGMENT_SHADER_DERIVATIVE_HINT=35723]="FRAGMENT_SHADER_DERIVATIVE_HINT",GLEnum[GLEnum.RASTERIZER_DISCARD=35977]="RASTERIZER_DISCARD",GLEnum[GLEnum.VERTEX_ARRAY_BINDING=34229]="VERTEX_ARRAY_BINDING",GLEnum[GLEnum.MAX_VERTEX_OUTPUT_COMPONENTS=37154]="MAX_VERTEX_OUTPUT_COMPONENTS",GLEnum[GLEnum.MAX_FRAGMENT_INPUT_COMPONENTS=37157]="MAX_FRAGMENT_INPUT_COMPONENTS",GLEnum[GLEnum.MAX_SERVER_WAIT_TIMEOUT=37137]="MAX_SERVER_WAIT_TIMEOUT",GLEnum[GLEnum.MAX_ELEMENT_INDEX=36203]="MAX_ELEMENT_INDEX",GLEnum[GLEnum.RED=6403]="RED",GLEnum[GLEnum.RGB8=32849]="RGB8",GLEnum[GLEnum.RGBA8=32856]="RGBA8",GLEnum[GLEnum.RGB10_A2=32857]="RGB10_A2",GLEnum[GLEnum.TEXTURE_3D=32879]="TEXTURE_3D",GLEnum[GLEnum.TEXTURE_WRAP_R=32882]="TEXTURE_WRAP_R",GLEnum[GLEnum.TEXTURE_MIN_LOD=33082]="TEXTURE_MIN_LOD",GLEnum[GLEnum.TEXTURE_MAX_LOD=33083]="TEXTURE_MAX_LOD",GLEnum[GLEnum.TEXTURE_BASE_LEVEL=33084]="TEXTURE_BASE_LEVEL",GLEnum[GLEnum.TEXTURE_MAX_LEVEL=33085]="TEXTURE_MAX_LEVEL",GLEnum[GLEnum.TEXTURE_COMPARE_MODE=34892]="TEXTURE_COMPARE_MODE",GLEnum[GLEnum.TEXTURE_COMPARE_FUNC=34893]="TEXTURE_COMPARE_FUNC",GLEnum[GLEnum.SRGB=35904]="SRGB",GLEnum[GLEnum.SRGB8=35905]="SRGB8",GLEnum[GLEnum.SRGB8_ALPHA8=35907]="SRGB8_ALPHA8",GLEnum[GLEnum.COMPARE_REF_TO_TEXTURE=34894]="COMPARE_REF_TO_TEXTURE",GLEnum[GLEnum.RGBA32F=34836]="RGBA32F",GLEnum[GLEnum.RGB32F=34837]="RGB32F",GLEnum[GLEnum.RGBA16F=34842]="RGBA16F",GLEnum[GLEnum.RGB16F=34843]="RGB16F",GLEnum[GLEnum.TEXTURE_2D_ARRAY=35866]="TEXTURE_2D_ARRAY",GLEnum[GLEnum.TEXTURE_BINDING_2D_ARRAY=35869]="TEXTURE_BINDING_2D_ARRAY",GLEnum[GLEnum.R11F_G11F_B10F=35898]="R11F_G11F_B10F",GLEnum[GLEnum.RGB9_E5=35901]="RGB9_E5",GLEnum[GLEnum.RGBA32UI=36208]="RGBA32UI",GLEnum[GLEnum.RGB32UI=36209]="RGB32UI",GLEnum[GLEnum.RGBA16UI=36214]="RGBA16UI",GLEnum[GLEnum.RGB16UI=36215]="RGB16UI",GLEnum[GLEnum.RGBA8UI=36220]="RGBA8UI",GLEnum[GLEnum.RGB8UI=36221]="RGB8UI",GLEnum[GLEnum.RGBA32I=36226]="RGBA32I",GLEnum[GLEnum.RGB32I=36227]="RGB32I",GLEnum[GLEnum.RGBA16I=36232]="RGBA16I",GLEnum[GLEnum.RGB16I=36233]="RGB16I",GLEnum[GLEnum.RGBA8I=36238]="RGBA8I",GLEnum[GLEnum.RGB8I=36239]="RGB8I",GLEnum[GLEnum.RED_INTEGER=36244]="RED_INTEGER",GLEnum[GLEnum.RGB_INTEGER=36248]="RGB_INTEGER",GLEnum[GLEnum.RGBA_INTEGER=36249]="RGBA_INTEGER",GLEnum[GLEnum.R8=33321]="R8",GLEnum[GLEnum.RG8=33323]="RG8",GLEnum[GLEnum.R16F=33325]="R16F",GLEnum[GLEnum.R32F=33326]="R32F",GLEnum[GLEnum.RG16F=33327]="RG16F",GLEnum[GLEnum.RG32F=33328]="RG32F",GLEnum[GLEnum.R8I=33329]="R8I",GLEnum[GLEnum.R8UI=33330]="R8UI",GLEnum[GLEnum.R16I=33331]="R16I",GLEnum[GLEnum.R16UI=33332]="R16UI",GLEnum[GLEnum.R32I=33333]="R32I",GLEnum[GLEnum.R32UI=33334]="R32UI",GLEnum[GLEnum.RG8I=33335]="RG8I",GLEnum[GLEnum.RG8UI=33336]="RG8UI",GLEnum[GLEnum.RG16I=33337]="RG16I",GLEnum[GLEnum.RG16UI=33338]="RG16UI",GLEnum[GLEnum.RG32I=33339]="RG32I",GLEnum[GLEnum.RG32UI=33340]="RG32UI",GLEnum[GLEnum.R8_SNORM=36756]="R8_SNORM",GLEnum[GLEnum.RG8_SNORM=36757]="RG8_SNORM",GLEnum[GLEnum.RGB8_SNORM=36758]="RGB8_SNORM",GLEnum[GLEnum.RGBA8_SNORM=36759]="RGBA8_SNORM",GLEnum[GLEnum.RGB10_A2UI=36975]="RGB10_A2UI",GLEnum[GLEnum.TEXTURE_IMMUTABLE_FORMAT=37167]="TEXTURE_IMMUTABLE_FORMAT",GLEnum[GLEnum.TEXTURE_IMMUTABLE_LEVELS=33503]="TEXTURE_IMMUTABLE_LEVELS",GLEnum[GLEnum.UNSIGNED_INT_2_10_10_10_REV=33640]="UNSIGNED_INT_2_10_10_10_REV",GLEnum[GLEnum.UNSIGNED_INT_10F_11F_11F_REV=35899]="UNSIGNED_INT_10F_11F_11F_REV",GLEnum[GLEnum.UNSIGNED_INT_5_9_9_9_REV=35902]="UNSIGNED_INT_5_9_9_9_REV",GLEnum[GLEnum.FLOAT_32_UNSIGNED_INT_24_8_REV=36269]="FLOAT_32_UNSIGNED_INT_24_8_REV",GLEnum[GLEnum.UNSIGNED_INT_24_8=34042]="UNSIGNED_INT_24_8",GLEnum[GLEnum.HALF_FLOAT=5131]="HALF_FLOAT",GLEnum[GLEnum.RG=33319]="RG",GLEnum[GLEnum.RG_INTEGER=33320]="RG_INTEGER",GLEnum[GLEnum.INT_2_10_10_10_REV=36255]="INT_2_10_10_10_REV",GLEnum[GLEnum.CURRENT_QUERY=34917]="CURRENT_QUERY",GLEnum[GLEnum.QUERY_RESULT=34918]="QUERY_RESULT",GLEnum[GLEnum.QUERY_RESULT_AVAILABLE=34919]="QUERY_RESULT_AVAILABLE",GLEnum[GLEnum.ANY_SAMPLES_PASSED=35887]="ANY_SAMPLES_PASSED",GLEnum[GLEnum.ANY_SAMPLES_PASSED_CONSERVATIVE=36202]="ANY_SAMPLES_PASSED_CONSERVATIVE",GLEnum[GLEnum.MAX_DRAW_BUFFERS=34852]="MAX_DRAW_BUFFERS",GLEnum[GLEnum.DRAW_BUFFER0=34853]="DRAW_BUFFER0",GLEnum[GLEnum.DRAW_BUFFER1=34854]="DRAW_BUFFER1",GLEnum[GLEnum.DRAW_BUFFER2=34855]="DRAW_BUFFER2",GLEnum[GLEnum.DRAW_BUFFER3=34856]="DRAW_BUFFER3",GLEnum[GLEnum.DRAW_BUFFER4=34857]="DRAW_BUFFER4",GLEnum[GLEnum.DRAW_BUFFER5=34858]="DRAW_BUFFER5",GLEnum[GLEnum.DRAW_BUFFER6=34859]="DRAW_BUFFER6",GLEnum[GLEnum.DRAW_BUFFER7=34860]="DRAW_BUFFER7",GLEnum[GLEnum.DRAW_BUFFER8=34861]="DRAW_BUFFER8",GLEnum[GLEnum.DRAW_BUFFER9=34862]="DRAW_BUFFER9",GLEnum[GLEnum.DRAW_BUFFER10=34863]="DRAW_BUFFER10",GLEnum[GLEnum.DRAW_BUFFER11=34864]="DRAW_BUFFER11",GLEnum[GLEnum.DRAW_BUFFER12=34865]="DRAW_BUFFER12",GLEnum[GLEnum.DRAW_BUFFER13=34866]="DRAW_BUFFER13",GLEnum[GLEnum.DRAW_BUFFER14=34867]="DRAW_BUFFER14",GLEnum[GLEnum.DRAW_BUFFER15=34868]="DRAW_BUFFER15",GLEnum[GLEnum.MAX_COLOR_ATTACHMENTS=36063]="MAX_COLOR_ATTACHMENTS",GLEnum[GLEnum.COLOR_ATTACHMENT1=36065]="COLOR_ATTACHMENT1",GLEnum[GLEnum.COLOR_ATTACHMENT2=36066]="COLOR_ATTACHMENT2",GLEnum[GLEnum.COLOR_ATTACHMENT3=36067]="COLOR_ATTACHMENT3",GLEnum[GLEnum.COLOR_ATTACHMENT4=36068]="COLOR_ATTACHMENT4",GLEnum[GLEnum.COLOR_ATTACHMENT5=36069]="COLOR_ATTACHMENT5",GLEnum[GLEnum.COLOR_ATTACHMENT6=36070]="COLOR_ATTACHMENT6",GLEnum[GLEnum.COLOR_ATTACHMENT7=36071]="COLOR_ATTACHMENT7",GLEnum[GLEnum.COLOR_ATTACHMENT8=36072]="COLOR_ATTACHMENT8",GLEnum[GLEnum.COLOR_ATTACHMENT9=36073]="COLOR_ATTACHMENT9",GLEnum[GLEnum.COLOR_ATTACHMENT10=36074]="COLOR_ATTACHMENT10",GLEnum[GLEnum.COLOR_ATTACHMENT11=36075]="COLOR_ATTACHMENT11",GLEnum[GLEnum.COLOR_ATTACHMENT12=36076]="COLOR_ATTACHMENT12",GLEnum[GLEnum.COLOR_ATTACHMENT13=36077]="COLOR_ATTACHMENT13",GLEnum[GLEnum.COLOR_ATTACHMENT14=36078]="COLOR_ATTACHMENT14",GLEnum[GLEnum.COLOR_ATTACHMENT15=36079]="COLOR_ATTACHMENT15",GLEnum[GLEnum.SAMPLER_3D=35679]="SAMPLER_3D",GLEnum[GLEnum.SAMPLER_2D_SHADOW=35682]="SAMPLER_2D_SHADOW",GLEnum[GLEnum.SAMPLER_2D_ARRAY=36289]="SAMPLER_2D_ARRAY",GLEnum[GLEnum.SAMPLER_2D_ARRAY_SHADOW=36292]="SAMPLER_2D_ARRAY_SHADOW",GLEnum[GLEnum.SAMPLER_CUBE_SHADOW=36293]="SAMPLER_CUBE_SHADOW",GLEnum[GLEnum.INT_SAMPLER_2D=36298]="INT_SAMPLER_2D",GLEnum[GLEnum.INT_SAMPLER_3D=36299]="INT_SAMPLER_3D",GLEnum[GLEnum.INT_SAMPLER_CUBE=36300]="INT_SAMPLER_CUBE",GLEnum[GLEnum.INT_SAMPLER_2D_ARRAY=36303]="INT_SAMPLER_2D_ARRAY",GLEnum[GLEnum.UNSIGNED_INT_SAMPLER_2D=36306]="UNSIGNED_INT_SAMPLER_2D",GLEnum[GLEnum.UNSIGNED_INT_SAMPLER_3D=36307]="UNSIGNED_INT_SAMPLER_3D",GLEnum[GLEnum.UNSIGNED_INT_SAMPLER_CUBE=36308]="UNSIGNED_INT_SAMPLER_CUBE",GLEnum[GLEnum.UNSIGNED_INT_SAMPLER_2D_ARRAY=36311]="UNSIGNED_INT_SAMPLER_2D_ARRAY",GLEnum[GLEnum.MAX_SAMPLES=36183]="MAX_SAMPLES",GLEnum[GLEnum.SAMPLER_BINDING=35097]="SAMPLER_BINDING",GLEnum[GLEnum.PIXEL_PACK_BUFFER=35051]="PIXEL_PACK_BUFFER",GLEnum[GLEnum.PIXEL_UNPACK_BUFFER=35052]="PIXEL_UNPACK_BUFFER",GLEnum[GLEnum.PIXEL_PACK_BUFFER_BINDING=35053]="PIXEL_PACK_BUFFER_BINDING",GLEnum[GLEnum.PIXEL_UNPACK_BUFFER_BINDING=35055]="PIXEL_UNPACK_BUFFER_BINDING",GLEnum[GLEnum.COPY_READ_BUFFER=36662]="COPY_READ_BUFFER",GLEnum[GLEnum.COPY_WRITE_BUFFER=36663]="COPY_WRITE_BUFFER",GLEnum[GLEnum.COPY_READ_BUFFER_BINDING=36662]="COPY_READ_BUFFER_BINDING",GLEnum[GLEnum.COPY_WRITE_BUFFER_BINDING=36663]="COPY_WRITE_BUFFER_BINDING",GLEnum[GLEnum.FLOAT_MAT2x3=35685]="FLOAT_MAT2x3",GLEnum[GLEnum.FLOAT_MAT2x4=35686]="FLOAT_MAT2x4",GLEnum[GLEnum.FLOAT_MAT3x2=35687]="FLOAT_MAT3x2",GLEnum[GLEnum.FLOAT_MAT3x4=35688]="FLOAT_MAT3x4",GLEnum[GLEnum.FLOAT_MAT4x2=35689]="FLOAT_MAT4x2",GLEnum[GLEnum.FLOAT_MAT4x3=35690]="FLOAT_MAT4x3",GLEnum[GLEnum.UNSIGNED_INT_VEC2=36294]="UNSIGNED_INT_VEC2",GLEnum[GLEnum.UNSIGNED_INT_VEC3=36295]="UNSIGNED_INT_VEC3",GLEnum[GLEnum.UNSIGNED_INT_VEC4=36296]="UNSIGNED_INT_VEC4",GLEnum[GLEnum.UNSIGNED_NORMALIZED=35863]="UNSIGNED_NORMALIZED",GLEnum[GLEnum.SIGNED_NORMALIZED=36764]="SIGNED_NORMALIZED",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_INTEGER=35069]="VERTEX_ATTRIB_ARRAY_INTEGER",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_DIVISOR=35070]="VERTEX_ATTRIB_ARRAY_DIVISOR",GLEnum[GLEnum.TRANSFORM_FEEDBACK_BUFFER_MODE=35967]="TRANSFORM_FEEDBACK_BUFFER_MODE",GLEnum[GLEnum.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS=35968]="MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS",GLEnum[GLEnum.TRANSFORM_FEEDBACK_VARYINGS=35971]="TRANSFORM_FEEDBACK_VARYINGS",GLEnum[GLEnum.TRANSFORM_FEEDBACK_BUFFER_START=35972]="TRANSFORM_FEEDBACK_BUFFER_START",GLEnum[GLEnum.TRANSFORM_FEEDBACK_BUFFER_SIZE=35973]="TRANSFORM_FEEDBACK_BUFFER_SIZE",GLEnum[GLEnum.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN=35976]="TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN",GLEnum[GLEnum.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS=35978]="MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS",GLEnum[GLEnum.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS=35979]="MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS",GLEnum[GLEnum.INTERLEAVED_ATTRIBS=35980]="INTERLEAVED_ATTRIBS",GLEnum[GLEnum.SEPARATE_ATTRIBS=35981]="SEPARATE_ATTRIBS",GLEnum[GLEnum.TRANSFORM_FEEDBACK_BUFFER=35982]="TRANSFORM_FEEDBACK_BUFFER",GLEnum[GLEnum.TRANSFORM_FEEDBACK_BUFFER_BINDING=35983]="TRANSFORM_FEEDBACK_BUFFER_BINDING",GLEnum[GLEnum.TRANSFORM_FEEDBACK=36386]="TRANSFORM_FEEDBACK",GLEnum[GLEnum.TRANSFORM_FEEDBACK_PAUSED=36387]="TRANSFORM_FEEDBACK_PAUSED",GLEnum[GLEnum.TRANSFORM_FEEDBACK_ACTIVE=36388]="TRANSFORM_FEEDBACK_ACTIVE",GLEnum[GLEnum.TRANSFORM_FEEDBACK_BINDING=36389]="TRANSFORM_FEEDBACK_BINDING",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING=33296]="FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE=33297]="FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_RED_SIZE=33298]="FRAMEBUFFER_ATTACHMENT_RED_SIZE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE=33299]="FRAMEBUFFER_ATTACHMENT_GREEN_SIZE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE=33300]="FRAMEBUFFER_ATTACHMENT_BLUE_SIZE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE=33301]="FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE=33302]="FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE=33303]="FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE",GLEnum[GLEnum.FRAMEBUFFER_DEFAULT=33304]="FRAMEBUFFER_DEFAULT",GLEnum[GLEnum.DEPTH24_STENCIL8=35056]="DEPTH24_STENCIL8",GLEnum[GLEnum.DRAW_FRAMEBUFFER_BINDING=36006]="DRAW_FRAMEBUFFER_BINDING",GLEnum[GLEnum.READ_FRAMEBUFFER_BINDING=36010]="READ_FRAMEBUFFER_BINDING",GLEnum[GLEnum.RENDERBUFFER_SAMPLES=36011]="RENDERBUFFER_SAMPLES",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER=36052]="FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER",GLEnum[GLEnum.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE=36182]="FRAMEBUFFER_INCOMPLETE_MULTISAMPLE",GLEnum[GLEnum.UNIFORM_BUFFER=35345]="UNIFORM_BUFFER",GLEnum[GLEnum.UNIFORM_BUFFER_BINDING=35368]="UNIFORM_BUFFER_BINDING",GLEnum[GLEnum.UNIFORM_BUFFER_START=35369]="UNIFORM_BUFFER_START",GLEnum[GLEnum.UNIFORM_BUFFER_SIZE=35370]="UNIFORM_BUFFER_SIZE",GLEnum[GLEnum.MAX_VERTEX_UNIFORM_BLOCKS=35371]="MAX_VERTEX_UNIFORM_BLOCKS",GLEnum[GLEnum.MAX_FRAGMENT_UNIFORM_BLOCKS=35373]="MAX_FRAGMENT_UNIFORM_BLOCKS",GLEnum[GLEnum.MAX_COMBINED_UNIFORM_BLOCKS=35374]="MAX_COMBINED_UNIFORM_BLOCKS",GLEnum[GLEnum.MAX_UNIFORM_BUFFER_BINDINGS=35375]="MAX_UNIFORM_BUFFER_BINDINGS",GLEnum[GLEnum.MAX_UNIFORM_BLOCK_SIZE=35376]="MAX_UNIFORM_BLOCK_SIZE",GLEnum[GLEnum.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS=35377]="MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS",GLEnum[GLEnum.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS=35379]="MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS",GLEnum[GLEnum.UNIFORM_BUFFER_OFFSET_ALIGNMENT=35380]="UNIFORM_BUFFER_OFFSET_ALIGNMENT",GLEnum[GLEnum.ACTIVE_UNIFORM_BLOCKS=35382]="ACTIVE_UNIFORM_BLOCKS",GLEnum[GLEnum.UNIFORM_TYPE=35383]="UNIFORM_TYPE",GLEnum[GLEnum.UNIFORM_SIZE=35384]="UNIFORM_SIZE",GLEnum[GLEnum.UNIFORM_BLOCK_INDEX=35386]="UNIFORM_BLOCK_INDEX",GLEnum[GLEnum.UNIFORM_OFFSET=35387]="UNIFORM_OFFSET",GLEnum[GLEnum.UNIFORM_ARRAY_STRIDE=35388]="UNIFORM_ARRAY_STRIDE",GLEnum[GLEnum.UNIFORM_MATRIX_STRIDE=35389]="UNIFORM_MATRIX_STRIDE",GLEnum[GLEnum.UNIFORM_IS_ROW_MAJOR=35390]="UNIFORM_IS_ROW_MAJOR",GLEnum[GLEnum.UNIFORM_BLOCK_BINDING=35391]="UNIFORM_BLOCK_BINDING",GLEnum[GLEnum.UNIFORM_BLOCK_DATA_SIZE=35392]="UNIFORM_BLOCK_DATA_SIZE",GLEnum[GLEnum.UNIFORM_BLOCK_ACTIVE_UNIFORMS=35394]="UNIFORM_BLOCK_ACTIVE_UNIFORMS",GLEnum[GLEnum.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES=35395]="UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES",GLEnum[GLEnum.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER=35396]="UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER",GLEnum[GLEnum.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER=35398]="UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER",GLEnum[GLEnum.OBJECT_TYPE=37138]="OBJECT_TYPE",GLEnum[GLEnum.SYNC_CONDITION=37139]="SYNC_CONDITION",GLEnum[GLEnum.SYNC_STATUS=37140]="SYNC_STATUS",GLEnum[GLEnum.SYNC_FLAGS=37141]="SYNC_FLAGS",GLEnum[GLEnum.SYNC_FENCE=37142]="SYNC_FENCE",GLEnum[GLEnum.SYNC_GPU_COMMANDS_COMPLETE=37143]="SYNC_GPU_COMMANDS_COMPLETE",GLEnum[GLEnum.UNSIGNALED=37144]="UNSIGNALED",GLEnum[GLEnum.SIGNALED=37145]="SIGNALED",GLEnum[GLEnum.ALREADY_SIGNALED=37146]="ALREADY_SIGNALED",GLEnum[GLEnum.TIMEOUT_EXPIRED=37147]="TIMEOUT_EXPIRED",GLEnum[GLEnum.CONDITION_SATISFIED=37148]="CONDITION_SATISFIED",GLEnum[GLEnum.WAIT_FAILED=37149]="WAIT_FAILED",GLEnum[GLEnum.SYNC_FLUSH_COMMANDS_BIT=1]="SYNC_FLUSH_COMMANDS_BIT",GLEnum[GLEnum.COLOR=6144]="COLOR",GLEnum[GLEnum.DEPTH=6145]="DEPTH",GLEnum[GLEnum.STENCIL=6146]="STENCIL",GLEnum[GLEnum.MIN=32775]="MIN",GLEnum[GLEnum.MAX=32776]="MAX",GLEnum[GLEnum.DEPTH_COMPONENT24=33190]="DEPTH_COMPONENT24",GLEnum[GLEnum.STREAM_READ=35041]="STREAM_READ",GLEnum[GLEnum.STREAM_COPY=35042]="STREAM_COPY",GLEnum[GLEnum.STATIC_READ=35045]="STATIC_READ",GLEnum[GLEnum.STATIC_COPY=35046]="STATIC_COPY",GLEnum[GLEnum.DYNAMIC_READ=35049]="DYNAMIC_READ",GLEnum[GLEnum.DYNAMIC_COPY=35050]="DYNAMIC_COPY",GLEnum[GLEnum.DEPTH_COMPONENT32F=36012]="DEPTH_COMPONENT32F",GLEnum[GLEnum.DEPTH32F_STENCIL8=36013]="DEPTH32F_STENCIL8",GLEnum[GLEnum.INVALID_INDEX=4294967295]="INVALID_INDEX",GLEnum[GLEnum.TIMEOUT_IGNORED=-1]="TIMEOUT_IGNORED",GLEnum[GLEnum.MAX_CLIENT_WAIT_TIMEOUT_WEBGL=37447]="MAX_CLIENT_WAIT_TIMEOUT_WEBGL",GLEnum[GLEnum.UNMASKED_VENDOR_WEBGL=37445]="UNMASKED_VENDOR_WEBGL",GLEnum[GLEnum.UNMASKED_RENDERER_WEBGL=37446]="UNMASKED_RENDERER_WEBGL",GLEnum[GLEnum.MAX_TEXTURE_MAX_ANISOTROPY_EXT=34047]="MAX_TEXTURE_MAX_ANISOTROPY_EXT",GLEnum[GLEnum.TEXTURE_MAX_ANISOTROPY_EXT=34046]="TEXTURE_MAX_ANISOTROPY_EXT",GLEnum[GLEnum.R16_EXT=33322]="R16_EXT",GLEnum[GLEnum.RG16_EXT=33324]="RG16_EXT",GLEnum[GLEnum.RGB16_EXT=32852]="RGB16_EXT",GLEnum[GLEnum.RGBA16_EXT=32859]="RGBA16_EXT",GLEnum[GLEnum.R16_SNORM_EXT=36760]="R16_SNORM_EXT",GLEnum[GLEnum.RG16_SNORM_EXT=36761]="RG16_SNORM_EXT",GLEnum[GLEnum.RGB16_SNORM_EXT=36762]="RGB16_SNORM_EXT",GLEnum[GLEnum.RGBA16_SNORM_EXT=36763]="RGBA16_SNORM_EXT",GLEnum[GLEnum.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",GLEnum[GLEnum.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777]="COMPRESSED_RGBA_S3TC_DXT1_EXT",GLEnum[GLEnum.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778]="COMPRESSED_RGBA_S3TC_DXT3_EXT",GLEnum[GLEnum.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",GLEnum[GLEnum.COMPRESSED_SRGB_S3TC_DXT1_EXT=35916]="COMPRESSED_SRGB_S3TC_DXT1_EXT",GLEnum[GLEnum.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT=35917]="COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT",GLEnum[GLEnum.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT=35918]="COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT",GLEnum[GLEnum.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT=35919]="COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT",GLEnum[GLEnum.COMPRESSED_RED_RGTC1_EXT=36283]="COMPRESSED_RED_RGTC1_EXT",GLEnum[GLEnum.COMPRESSED_SIGNED_RED_RGTC1_EXT=36284]="COMPRESSED_SIGNED_RED_RGTC1_EXT",GLEnum[GLEnum.COMPRESSED_RED_GREEN_RGTC2_EXT=36285]="COMPRESSED_RED_GREEN_RGTC2_EXT",GLEnum[GLEnum.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT=36286]="COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT",GLEnum[GLEnum.COMPRESSED_RGBA_BPTC_UNORM_EXT=36492]="COMPRESSED_RGBA_BPTC_UNORM_EXT",GLEnum[GLEnum.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT=36493]="COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT",GLEnum[GLEnum.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT=36494]="COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT",GLEnum[GLEnum.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT=36495]="COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT",GLEnum[GLEnum.COMPRESSED_R11_EAC=37488]="COMPRESSED_R11_EAC",GLEnum[GLEnum.COMPRESSED_SIGNED_R11_EAC=37489]="COMPRESSED_SIGNED_R11_EAC",GLEnum[GLEnum.COMPRESSED_RG11_EAC=37490]="COMPRESSED_RG11_EAC",GLEnum[GLEnum.COMPRESSED_SIGNED_RG11_EAC=37491]="COMPRESSED_SIGNED_RG11_EAC",GLEnum[GLEnum.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",GLEnum[GLEnum.COMPRESSED_RGBA8_ETC2_EAC=37493]="COMPRESSED_RGBA8_ETC2_EAC",GLEnum[GLEnum.COMPRESSED_SRGB8_ETC2=37494]="COMPRESSED_SRGB8_ETC2",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC=37495]="COMPRESSED_SRGB8_ALPHA8_ETC2_EAC",GLEnum[GLEnum.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2=37496]="COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2",GLEnum[GLEnum.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2=37497]="COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2",GLEnum[GLEnum.COMPRESSED_RGB_PVRTC_4BPPV1_IMG=35840]="COMPRESSED_RGB_PVRTC_4BPPV1_IMG",GLEnum[GLEnum.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG=35842]="COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",GLEnum[GLEnum.COMPRESSED_RGB_PVRTC_2BPPV1_IMG=35841]="COMPRESSED_RGB_PVRTC_2BPPV1_IMG",GLEnum[GLEnum.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG=35843]="COMPRESSED_RGBA_PVRTC_2BPPV1_IMG",GLEnum[GLEnum.COMPRESSED_RGB_ETC1_WEBGL=36196]="COMPRESSED_RGB_ETC1_WEBGL",GLEnum[GLEnum.COMPRESSED_RGB_ATC_WEBGL=35986]="COMPRESSED_RGB_ATC_WEBGL",GLEnum[GLEnum.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL=35986]="COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL",GLEnum[GLEnum.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL=34798]="COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_4x4_KHR=37808]="COMPRESSED_RGBA_ASTC_4x4_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_5x4_KHR=37809]="COMPRESSED_RGBA_ASTC_5x4_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_5x5_KHR=37810]="COMPRESSED_RGBA_ASTC_5x5_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_6x5_KHR=37811]="COMPRESSED_RGBA_ASTC_6x5_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_6x6_KHR=37812]="COMPRESSED_RGBA_ASTC_6x6_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_8x5_KHR=37813]="COMPRESSED_RGBA_ASTC_8x5_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_8x6_KHR=37814]="COMPRESSED_RGBA_ASTC_8x6_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_8x8_KHR=37815]="COMPRESSED_RGBA_ASTC_8x8_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_10x5_KHR=37816]="COMPRESSED_RGBA_ASTC_10x5_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_10x6_KHR=37817]="COMPRESSED_RGBA_ASTC_10x6_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_10x8_KHR=37818]="COMPRESSED_RGBA_ASTC_10x8_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_10x10_KHR=37819]="COMPRESSED_RGBA_ASTC_10x10_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_12x10_KHR=37820]="COMPRESSED_RGBA_ASTC_12x10_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_12x12_KHR=37821]="COMPRESSED_RGBA_ASTC_12x12_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR=37840]="COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR=37841]="COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR=37842]="COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR=37843]="COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR=37844]="COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR=37845]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR=37846]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR=37847]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR=37848]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR=37849]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR=37850]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR=37851]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR=37852]="COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR=37853]="COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR",GLEnum[GLEnum.QUERY_COUNTER_BITS_EXT=34916]="QUERY_COUNTER_BITS_EXT",GLEnum[GLEnum.CURRENT_QUERY_EXT=34917]="CURRENT_QUERY_EXT",GLEnum[GLEnum.QUERY_RESULT_EXT=34918]="QUERY_RESULT_EXT",GLEnum[GLEnum.QUERY_RESULT_AVAILABLE_EXT=34919]="QUERY_RESULT_AVAILABLE_EXT",GLEnum[GLEnum.TIME_ELAPSED_EXT=35007]="TIME_ELAPSED_EXT",GLEnum[GLEnum.TIMESTAMP_EXT=36392]="TIMESTAMP_EXT",GLEnum[GLEnum.GPU_DISJOINT_EXT=36795]="GPU_DISJOINT_EXT",GLEnum[GLEnum.COMPLETION_STATUS_KHR=37297]="COMPLETION_STATUS_KHR",GLEnum[GLEnum.DEPTH_CLAMP_EXT=34383]="DEPTH_CLAMP_EXT",GLEnum[GLEnum.FIRST_VERTEX_CONVENTION_WEBGL=36429]="FIRST_VERTEX_CONVENTION_WEBGL",GLEnum[GLEnum.LAST_VERTEX_CONVENTION_WEBGL=36430]="LAST_VERTEX_CONVENTION_WEBGL",GLEnum[GLEnum.PROVOKING_VERTEX_WEBL=36431]="PROVOKING_VERTEX_WEBL",GLEnum[GLEnum.POLYGON_MODE_WEBGL=2880]="POLYGON_MODE_WEBGL",GLEnum[GLEnum.POLYGON_OFFSET_LINE_WEBGL=10754]="POLYGON_OFFSET_LINE_WEBGL",GLEnum[GLEnum.LINE_WEBGL=6913]="LINE_WEBGL",GLEnum[GLEnum.FILL_WEBGL=6914]="FILL_WEBGL",GLEnum[GLEnum.MAX_CLIP_DISTANCES_WEBGL=3378]="MAX_CLIP_DISTANCES_WEBGL",GLEnum[GLEnum.MAX_CULL_DISTANCES_WEBGL=33529]="MAX_CULL_DISTANCES_WEBGL",GLEnum[GLEnum.MAX_COMBINED_CLIP_AND_CULL_DISTANCES_WEBGL=33530]="MAX_COMBINED_CLIP_AND_CULL_DISTANCES_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE0_WEBGL=12288]="CLIP_DISTANCE0_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE1_WEBGL=12289]="CLIP_DISTANCE1_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE2_WEBGL=12290]="CLIP_DISTANCE2_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE3_WEBGL=12291]="CLIP_DISTANCE3_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE4_WEBGL=12292]="CLIP_DISTANCE4_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE5_WEBGL=12293]="CLIP_DISTANCE5_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE6_WEBGL=12294]="CLIP_DISTANCE6_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE7_WEBGL=12295]="CLIP_DISTANCE7_WEBGL",GLEnum[GLEnum.POLYGON_OFFSET_CLAMP_EXT=36379]="POLYGON_OFFSET_CLAMP_EXT",GLEnum[GLEnum.LOWER_LEFT_EXT=36001]="LOWER_LEFT_EXT",GLEnum[GLEnum.UPPER_LEFT_EXT=36002]="UPPER_LEFT_EXT",GLEnum[GLEnum.NEGATIVE_ONE_TO_ONE_EXT=37726]="NEGATIVE_ONE_TO_ONE_EXT",GLEnum[GLEnum.ZERO_TO_ONE_EXT=37727]="ZERO_TO_ONE_EXT",GLEnum[GLEnum.CLIP_ORIGIN_EXT=37724]="CLIP_ORIGIN_EXT",GLEnum[GLEnum.CLIP_DEPTH_MODE_EXT=37725]="CLIP_DEPTH_MODE_EXT",GLEnum[GLEnum.SRC1_COLOR_WEBGL=35065]="SRC1_COLOR_WEBGL",GLEnum[GLEnum.SRC1_ALPHA_WEBGL=34185]="SRC1_ALPHA_WEBGL",GLEnum[GLEnum.ONE_MINUS_SRC1_COLOR_WEBGL=35066]="ONE_MINUS_SRC1_COLOR_WEBGL",GLEnum[GLEnum.ONE_MINUS_SRC1_ALPHA_WEBGL=35067]="ONE_MINUS_SRC1_ALPHA_WEBGL",GLEnum[GLEnum.MAX_DUAL_SOURCE_DRAW_BUFFERS_WEBGL=35068]="MAX_DUAL_SOURCE_DRAW_BUFFERS_WEBGL",GLEnum[GLEnum.MIRROR_CLAMP_TO_EDGE_EXT=34627]="MIRROR_CLAMP_TO_EDGE_EXT"}(GLEnum||(GLEnum={}))},"./node_modules/@probe.gl/stats/dist/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{Uz:function(){return Stats}});var process=__webpack_require__("./node_modules/process/browser.js");function getHiResTimestamp(){let timestamp;if("undefined"!=typeof window&&window.performance)timestamp=window.performance.now();else if(void 0!==process&&process.hrtime){const timeParts=process.hrtime();timestamp=1e3*timeParts[0]+timeParts[1]/1e6}else timestamp=Date.now();return timestamp}class Stat{constructor(name,type){this.sampleSize=1,this.time=0,this.count=0,this.samples=0,this.lastTiming=0,this.lastSampleTime=0,this.lastSampleCount=0,this._count=0,this._time=0,this._samples=0,this._startTime=0,this._timerPending=!1,this.name=name,this.type=type,this.reset()}reset(){return this.time=0,this.count=0,this.samples=0,this.lastTiming=0,this.lastSampleTime=0,this.lastSampleCount=0,this._count=0,this._time=0,this._samples=0,this._startTime=0,this._timerPending=!1,this}setSampleSize(samples){return this.sampleSize=samples,this}incrementCount(){return this.addCount(1),this}decrementCount(){return this.subtractCount(1),this}addCount(value){return this._count+=value,this._samples++,this._checkSampling(),this}subtractCount(value){return this._count-=value,this._samples++,this._checkSampling(),this}addTime(time){return this._time+=time,this.lastTiming=time,this._samples++,this._checkSampling(),this}timeStart(){return this._startTime=getHiResTimestamp(),this._timerPending=!0,this}timeEnd(){return this._timerPending?(this.addTime(getHiResTimestamp()-this._startTime),this._timerPending=!1,this._checkSampling(),this):this}getSampleAverageCount(){return this.sampleSize>0?this.lastSampleCount/this.sampleSize:0}getSampleAverageTime(){return this.sampleSize>0?this.lastSampleTime/this.sampleSize:0}getSampleHz(){return this.lastSampleTime>0?this.sampleSize/(this.lastSampleTime/1e3):0}getAverageCount(){return this.samples>0?this.count/this.samples:0}getAverageTime(){return this.samples>0?this.time/this.samples:0}getHz(){return this.time>0?this.samples/(this.time/1e3):0}_checkSampling(){this._samples===this.sampleSize&&(this.lastSampleTime=this._time,this.lastSampleCount=this._count,this.count+=this._count,this.time+=this._time,this.samples+=this._samples,this._time=0,this._count=0,this._samples=0)}}class Stats{constructor(options){this.stats={},this.id=options.id,this.stats={},this._initializeStats(options.stats),Object.seal(this)}get(name,type="count"){return this._getOrCreate({name:name,type:type})}get size(){return Object.keys(this.stats).length}reset(){for(const stat of Object.values(this.stats))stat.reset();return this}forEach(fn){for(const stat of Object.values(this.stats))fn(stat)}getTable(){const table={};return this.forEach((stat=>{table[stat.name]={time:stat.time||0,count:stat.count||0,average:stat.getAverageTime()||0,hz:stat.getHz()||0}})),table}_initializeStats(stats=[]){stats.forEach((stat=>this._getOrCreate(stat)))}_getOrCreate(stat){const{name:name,type:type}=stat;let result=this.stats[name];return result||(result=stat instanceof Stat?stat:new Stat(name,type),this.stats[name]=result),result}}},"./node_modules/hammerjs/hammer.js":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_RESULT__;!function(window,document){"use strict";var assign,VENDOR_PREFIXES=["","webkit","Moz","MS","ms","o"],TEST_ELEMENT=document.createElement("div"),round=Math.round,abs=Math.abs,now=Date.now;function setTimeoutContext(fn,timeout,context){return setTimeout(bindFn(fn,context),timeout)}function invokeArrayArg(arg,fn,context){return!!Array.isArray(arg)&&(each(arg,context[fn],context),!0)}function each(obj,iterator,context){var i;if(obj)if(obj.forEach)obj.forEach(iterator,context);else if(undefined!==obj.length)for(i=0;i<obj.length;)iterator.call(context,obj[i],i,obj),i++;else for(i in obj)obj.hasOwnProperty(i)&&iterator.call(context,obj[i],i,obj)}function deprecate(method,name,message){var deprecationMessage="DEPRECATED METHOD: "+name+"\n"+message+" AT \n";return function(){var e=new Error("get-stack-trace"),stack=e&&e.stack?e.stack.replace(/^[^\(]+?[\n$]/gm,"").replace(/^\s+at\s+/gm,"").replace(/^Object.<anonymous>\s*\(/gm,"{anonymous}()@"):"Unknown Stack Trace",log=window.console&&(window.console.warn||window.console.log);return log&&log.call(window.console,deprecationMessage,stack),method.apply(this,arguments)}}assign="function"!=typeof Object.assign?function assign(target){if(null==target)throw new TypeError("Cannot convert undefined or null to object");for(var output=Object(target),index=1;index<arguments.length;index++){var source=arguments[index];if(null!=source)for(var nextKey in source)source.hasOwnProperty(nextKey)&&(output[nextKey]=source[nextKey])}return output}:Object.assign;var extend=deprecate((function extend(dest,src,merge){for(var keys=Object.keys(src),i=0;i<keys.length;)(!merge||merge&&undefined===dest[keys[i]])&&(dest[keys[i]]=src[keys[i]]),i++;return dest}),"extend","Use `assign`."),merge=deprecate((function merge(dest,src){return extend(dest,src,!0)}),"merge","Use `assign`.");function inherit(child,base,properties){var childP,baseP=base.prototype;(childP=child.prototype=Object.create(baseP)).constructor=child,childP._super=baseP,properties&&assign(childP,properties)}function bindFn(fn,context){return function boundFn(){return fn.apply(context,arguments)}}function boolOrFn(val,args){return"function"==typeof val?val.apply(args&&args[0]||undefined,args):val}function ifUndefined(val1,val2){return undefined===val1?val2:val1}function addEventListeners(target,types,handler){each(splitStr(types),(function(type){target.addEventListener(type,handler,!1)}))}function removeEventListeners(target,types,handler){each(splitStr(types),(function(type){target.removeEventListener(type,handler,!1)}))}function hasParent(node,parent){for(;node;){if(node==parent)return!0;node=node.parentNode}return!1}function inStr(str,find){return str.indexOf(find)>-1}function splitStr(str){return str.trim().split(/\s+/g)}function inArray(src,find,findByKey){if(src.indexOf&&!findByKey)return src.indexOf(find);for(var i=0;i<src.length;){if(findByKey&&src[i][findByKey]==find||!findByKey&&src[i]===find)return i;i++}return-1}function toArray(obj){return Array.prototype.slice.call(obj,0)}function uniqueArray(src,key,sort){for(var results=[],values=[],i=0;i<src.length;){var val=key?src[i][key]:src[i];inArray(values,val)<0&&results.push(src[i]),values[i]=val,i++}return sort&&(results=key?results.sort((function sortUniqueArray(a,b){return a[key]>b[key]})):results.sort()),results}function prefixed(obj,property){for(var prefix,prop,camelProp=property[0].toUpperCase()+property.slice(1),i=0;i<VENDOR_PREFIXES.length;){if((prop=(prefix=VENDOR_PREFIXES[i])?prefix+camelProp:property)in obj)return prop;i++}}var _uniqueId=1;function getWindowForElement(element){var doc=element.ownerDocument||element;return doc.defaultView||doc.parentWindow||window}var SUPPORT_TOUCH="ontouchstart"in window,SUPPORT_POINTER_EVENTS=undefined!==prefixed(window,"PointerEvent"),SUPPORT_ONLY_TOUCH=SUPPORT_TOUCH&&/mobile|tablet|ip(ad|hone|od)|android/i.test(navigator.userAgent),PROPS_XY=["x","y"],PROPS_CLIENT_XY=["clientX","clientY"];function Input(manager,callback){var self=this;this.manager=manager,this.callback=callback,this.element=manager.element,this.target=manager.options.inputTarget,this.domHandler=function(ev){boolOrFn(manager.options.enable,[manager])&&self.handler(ev)},this.init()}function inputHandler(manager,eventType,input){var pointersLen=input.pointers.length,changedPointersLen=input.changedPointers.length,isFirst=1&eventType&&pointersLen-changedPointersLen==0,isFinal=12&eventType&&pointersLen-changedPointersLen==0;input.isFirst=!!isFirst,input.isFinal=!!isFinal,isFirst&&(manager.session={}),input.eventType=eventType,function computeInputData(manager,input){var session=manager.session,pointers=input.pointers,pointersLength=pointers.length;session.firstInput||(session.firstInput=simpleCloneInputData(input));pointersLength>1&&!session.firstMultiple?session.firstMultiple=simpleCloneInputData(input):1===pointersLength&&(session.firstMultiple=!1);var firstInput=session.firstInput,firstMultiple=session.firstMultiple,offsetCenter=firstMultiple?firstMultiple.center:firstInput.center,center=input.center=getCenter(pointers);input.timeStamp=now(),input.deltaTime=input.timeStamp-firstInput.timeStamp,input.angle=getAngle(offsetCenter,center),input.distance=getDistance(offsetCenter,center),function computeDeltaXY(session,input){var center=input.center,offset=session.offsetDelta||{},prevDelta=session.prevDelta||{},prevInput=session.prevInput||{};1!==input.eventType&&4!==prevInput.eventType||(prevDelta=session.prevDelta={x:prevInput.deltaX||0,y:prevInput.deltaY||0},offset=session.offsetDelta={x:center.x,y:center.y});input.deltaX=prevDelta.x+(center.x-offset.x),input.deltaY=prevDelta.y+(center.y-offset.y)}(session,input),input.offsetDirection=getDirection(input.deltaX,input.deltaY);var overallVelocity=getVelocity(input.deltaTime,input.deltaX,input.deltaY);input.overallVelocityX=overallVelocity.x,input.overallVelocityY=overallVelocity.y,input.overallVelocity=abs(overallVelocity.x)>abs(overallVelocity.y)?overallVelocity.x:overallVelocity.y,input.scale=firstMultiple?function getScale(start,end){return getDistance(end[0],end[1],PROPS_CLIENT_XY)/getDistance(start[0],start[1],PROPS_CLIENT_XY)}(firstMultiple.pointers,pointers):1,input.rotation=firstMultiple?function getRotation(start,end){return getAngle(end[1],end[0],PROPS_CLIENT_XY)+getAngle(start[1],start[0],PROPS_CLIENT_XY)}(firstMultiple.pointers,pointers):0,input.maxPointers=session.prevInput?input.pointers.length>session.prevInput.maxPointers?input.pointers.length:session.prevInput.maxPointers:input.pointers.length,function computeIntervalInputData(session,input){var velocity,velocityX,velocityY,direction,last=session.lastInterval||input,deltaTime=input.timeStamp-last.timeStamp;if(8!=input.eventType&&(deltaTime>25||undefined===last.velocity)){var deltaX=input.deltaX-last.deltaX,deltaY=input.deltaY-last.deltaY,v=getVelocity(deltaTime,deltaX,deltaY);velocityX=v.x,velocityY=v.y,velocity=abs(v.x)>abs(v.y)?v.x:v.y,direction=getDirection(deltaX,deltaY),session.lastInterval=input}else velocity=last.velocity,velocityX=last.velocityX,velocityY=last.velocityY,direction=last.direction;input.velocity=velocity,input.velocityX=velocityX,input.velocityY=velocityY,input.direction=direction}(session,input);var target=manager.element;hasParent(input.srcEvent.target,target)&&(target=input.srcEvent.target);input.target=target}(manager,input),manager.emit("hammer.input",input),manager.recognize(input),manager.session.prevInput=input}function simpleCloneInputData(input){for(var pointers=[],i=0;i<input.pointers.length;)pointers[i]={clientX:round(input.pointers[i].clientX),clientY:round(input.pointers[i].clientY)},i++;return{timeStamp:now(),pointers:pointers,center:getCenter(pointers),deltaX:input.deltaX,deltaY:input.deltaY}}function getCenter(pointers){var pointersLength=pointers.length;if(1===pointersLength)return{x:round(pointers[0].clientX),y:round(pointers[0].clientY)};for(var x=0,y=0,i=0;i<pointersLength;)x+=pointers[i].clientX,y+=pointers[i].clientY,i++;return{x:round(x/pointersLength),y:round(y/pointersLength)}}function getVelocity(deltaTime,x,y){return{x:x/deltaTime||0,y:y/deltaTime||0}}function getDirection(x,y){return x===y?1:abs(x)>=abs(y)?x<0?2:4:y<0?8:16}function getDistance(p1,p2,props){props||(props=PROPS_XY);var x=p2[props[0]]-p1[props[0]],y=p2[props[1]]-p1[props[1]];return Math.sqrt(x*x+y*y)}function getAngle(p1,p2,props){props||(props=PROPS_XY);var x=p2[props[0]]-p1[props[0]],y=p2[props[1]]-p1[props[1]];return 180*Math.atan2(y,x)/Math.PI}Input.prototype={handler:function(){},init:function(){this.evEl&&addEventListeners(this.element,this.evEl,this.domHandler),this.evTarget&&addEventListeners(this.target,this.evTarget,this.domHandler),this.evWin&&addEventListeners(getWindowForElement(this.element),this.evWin,this.domHandler)},destroy:function(){this.evEl&&removeEventListeners(this.element,this.evEl,this.domHandler),this.evTarget&&removeEventListeners(this.target,this.evTarget,this.domHandler),this.evWin&&removeEventListeners(getWindowForElement(this.element),this.evWin,this.domHandler)}};var MOUSE_INPUT_MAP={mousedown:1,mousemove:2,mouseup:4},MOUSE_ELEMENT_EVENTS="mousedown",MOUSE_WINDOW_EVENTS="mousemove mouseup";function MouseInput(){this.evEl=MOUSE_ELEMENT_EVENTS,this.evWin=MOUSE_WINDOW_EVENTS,this.pressed=!1,Input.apply(this,arguments)}inherit(MouseInput,Input,{handler:function MEhandler(ev){var eventType=MOUSE_INPUT_MAP[ev.type];1&eventType&&0===ev.button&&(this.pressed=!0),2&eventType&&1!==ev.which&&(eventType=4),this.pressed&&(4&eventType&&(this.pressed=!1),this.callback(this.manager,eventType,{pointers:[ev],changedPointers:[ev],pointerType:"mouse",srcEvent:ev}))}});var POINTER_INPUT_MAP={pointerdown:1,pointermove:2,pointerup:4,pointercancel:8,pointerout:8},IE10_POINTER_TYPE_ENUM={2:"touch",3:"pen",4:"mouse",5:"kinect"},POINTER_ELEMENT_EVENTS="pointerdown",POINTER_WINDOW_EVENTS="pointermove pointerup pointercancel";function PointerEventInput(){this.evEl=POINTER_ELEMENT_EVENTS,this.evWin=POINTER_WINDOW_EVENTS,Input.apply(this,arguments),this.store=this.manager.session.pointerEvents=[]}window.MSPointerEvent&&!window.PointerEvent&&(POINTER_ELEMENT_EVENTS="MSPointerDown",POINTER_WINDOW_EVENTS="MSPointerMove MSPointerUp MSPointerCancel"),inherit(PointerEventInput,Input,{handler:function PEhandler(ev){var store=this.store,removePointer=!1,eventTypeNormalized=ev.type.toLowerCase().replace("ms",""),eventType=POINTER_INPUT_MAP[eventTypeNormalized],pointerType=IE10_POINTER_TYPE_ENUM[ev.pointerType]||ev.pointerType,isTouch="touch"==pointerType,storeIndex=inArray(store,ev.pointerId,"pointerId");1&eventType&&(0===ev.button||isTouch)?storeIndex<0&&(store.push(ev),storeIndex=store.length-1):12&eventType&&(removePointer=!0),storeIndex<0||(store[storeIndex]=ev,this.callback(this.manager,eventType,{pointers:store,changedPointers:[ev],pointerType:pointerType,srcEvent:ev}),removePointer&&store.splice(storeIndex,1))}});var SINGLE_TOUCH_INPUT_MAP={touchstart:1,touchmove:2,touchend:4,touchcancel:8};function SingleTouchInput(){this.evTarget="touchstart",this.evWin="touchstart touchmove touchend touchcancel",this.started=!1,Input.apply(this,arguments)}function normalizeSingleTouches(ev,type){var all=toArray(ev.touches),changed=toArray(ev.changedTouches);return 12&type&&(all=uniqueArray(all.concat(changed),"identifier",!0)),[all,changed]}inherit(SingleTouchInput,Input,{handler:function TEhandler(ev){var type=SINGLE_TOUCH_INPUT_MAP[ev.type];if(1===type&&(this.started=!0),this.started){var touches=normalizeSingleTouches.call(this,ev,type);12&type&&touches[0].length-touches[1].length==0&&(this.started=!1),this.callback(this.manager,type,{pointers:touches[0],changedPointers:touches[1],pointerType:"touch",srcEvent:ev})}}});var TOUCH_INPUT_MAP={touchstart:1,touchmove:2,touchend:4,touchcancel:8},TOUCH_TARGET_EVENTS="touchstart touchmove touchend touchcancel";function TouchInput(){this.evTarget=TOUCH_TARGET_EVENTS,this.targetIds={},Input.apply(this,arguments)}function getTouches(ev,type){var allTouches=toArray(ev.touches),targetIds=this.targetIds;if(3&type&&1===allTouches.length)return targetIds[allTouches[0].identifier]=!0,[allTouches,allTouches];var i,targetTouches,changedTouches=toArray(ev.changedTouches),changedTargetTouches=[],target=this.target;if(targetTouches=allTouches.filter((function(touch){return hasParent(touch.target,target)})),1===type)for(i=0;i<targetTouches.length;)targetIds[targetTouches[i].identifier]=!0,i++;for(i=0;i<changedTouches.length;)targetIds[changedTouches[i].identifier]&&changedTargetTouches.push(changedTouches[i]),12&type&&delete targetIds[changedTouches[i].identifier],i++;return changedTargetTouches.length?[uniqueArray(targetTouches.concat(changedTargetTouches),"identifier",!0),changedTargetTouches]:void 0}inherit(TouchInput,Input,{handler:function MTEhandler(ev){var type=TOUCH_INPUT_MAP[ev.type],touches=getTouches.call(this,ev,type);touches&&this.callback(this.manager,type,{pointers:touches[0],changedPointers:touches[1],pointerType:"touch",srcEvent:ev})}});function TouchMouseInput(){Input.apply(this,arguments);var handler=bindFn(this.handler,this);this.touch=new TouchInput(this.manager,handler),this.mouse=new MouseInput(this.manager,handler),this.primaryTouch=null,this.lastTouches=[]}function recordTouches(eventType,eventData){1&eventType?(this.primaryTouch=eventData.changedPointers[0].identifier,setLastTouch.call(this,eventData)):12&eventType&&setLastTouch.call(this,eventData)}function setLastTouch(eventData){var touch=eventData.changedPointers[0];if(touch.identifier===this.primaryTouch){var lastTouch={x:touch.clientX,y:touch.clientY};this.lastTouches.push(lastTouch);var lts=this.lastTouches;setTimeout((function(){var i=lts.indexOf(lastTouch);i>-1&&lts.splice(i,1)}),2500)}}function isSyntheticEvent(eventData){for(var x=eventData.srcEvent.clientX,y=eventData.srcEvent.clientY,i=0;i<this.lastTouches.length;i++){var t=this.lastTouches[i],dx=Math.abs(x-t.x),dy=Math.abs(y-t.y);if(dx<=25&&dy<=25)return!0}return!1}inherit(TouchMouseInput,Input,{handler:function TMEhandler(manager,inputEvent,inputData){var isTouch="touch"==inputData.pointerType,isMouse="mouse"==inputData.pointerType;if(!(isMouse&&inputData.sourceCapabilities&&inputData.sourceCapabilities.firesTouchEvents)){if(isTouch)recordTouches.call(this,inputEvent,inputData);else if(isMouse&&isSyntheticEvent.call(this,inputData))return;this.callback(manager,inputEvent,inputData)}},destroy:function destroy(){this.touch.destroy(),this.mouse.destroy()}});var PREFIXED_TOUCH_ACTION=prefixed(TEST_ELEMENT.style,"touchAction"),NATIVE_TOUCH_ACTION=undefined!==PREFIXED_TOUCH_ACTION,TOUCH_ACTION_MAP=function getTouchActionProps(){if(!NATIVE_TOUCH_ACTION)return!1;var touchMap={},cssSupports=window.CSS&&window.CSS.supports;return["auto","manipulation","pan-y","pan-x","pan-x pan-y","none"].forEach((function(val){touchMap[val]=!cssSupports||window.CSS.supports("touch-action",val)})),touchMap}();function TouchAction(manager,value){this.manager=manager,this.set(value)}TouchAction.prototype={set:function(value){"compute"==value&&(value=this.compute()),NATIVE_TOUCH_ACTION&&this.manager.element.style&&TOUCH_ACTION_MAP[value]&&(this.manager.element.style[PREFIXED_TOUCH_ACTION]=value),this.actions=value.toLowerCase().trim()},update:function(){this.set(this.manager.options.touchAction)},compute:function(){var actions=[];return each(this.manager.recognizers,(function(recognizer){boolOrFn(recognizer.options.enable,[recognizer])&&(actions=actions.concat(recognizer.getTouchAction()))})),function cleanTouchActions(actions){if(inStr(actions,"none"))return"none";var hasPanX=inStr(actions,"pan-x"),hasPanY=inStr(actions,"pan-y");if(hasPanX&&hasPanY)return"none";if(hasPanX||hasPanY)return hasPanX?"pan-x":"pan-y";if(inStr(actions,"manipulation"))return"manipulation";return"auto"}(actions.join(" "))},preventDefaults:function(input){var srcEvent=input.srcEvent,direction=input.offsetDirection;if(this.manager.session.prevented)srcEvent.preventDefault();else{var actions=this.actions,hasNone=inStr(actions,"none")&&!TOUCH_ACTION_MAP.none,hasPanY=inStr(actions,"pan-y")&&!TOUCH_ACTION_MAP["pan-y"],hasPanX=inStr(actions,"pan-x")&&!TOUCH_ACTION_MAP["pan-x"];if(hasNone){var isTapPointer=1===input.pointers.length,isTapMovement=input.distance<2,isTapTouchTime=input.deltaTime<250;if(isTapPointer&&isTapMovement&&isTapTouchTime)return}if(!hasPanX||!hasPanY)return hasNone||hasPanY&&6&direction||hasPanX&&24&direction?this.preventSrc(srcEvent):void 0}},preventSrc:function(srcEvent){this.manager.session.prevented=!0,srcEvent.preventDefault()}};function Recognizer(options){this.options=assign({},this.defaults,options||{}),this.id=function uniqueId(){return _uniqueId++}(),this.manager=null,this.options.enable=ifUndefined(this.options.enable,!0),this.state=1,this.simultaneous={},this.requireFail=[]}function stateStr(state){return 16&state?"cancel":8&state?"end":4&state?"move":2&state?"start":""}function directionStr(direction){return 16==direction?"down":8==direction?"up":2==direction?"left":4==direction?"right":""}function getRecognizerByNameIfManager(otherRecognizer,recognizer){var manager=recognizer.manager;return manager?manager.get(otherRecognizer):otherRecognizer}function AttrRecognizer(){Recognizer.apply(this,arguments)}function PanRecognizer(){AttrRecognizer.apply(this,arguments),this.pX=null,this.pY=null}function PinchRecognizer(){AttrRecognizer.apply(this,arguments)}function PressRecognizer(){Recognizer.apply(this,arguments),this._timer=null,this._input=null}function RotateRecognizer(){AttrRecognizer.apply(this,arguments)}function SwipeRecognizer(){AttrRecognizer.apply(this,arguments)}function TapRecognizer(){Recognizer.apply(this,arguments),this.pTime=!1,this.pCenter=!1,this._timer=null,this._input=null,this.count=0}function Hammer(element,options){return(options=options||{}).recognizers=ifUndefined(options.recognizers,Hammer.defaults.preset),new Manager(element,options)}Recognizer.prototype={defaults:{},set:function(options){return assign(this.options,options),this.manager&&this.manager.touchAction.update(),this},recognizeWith:function(otherRecognizer){if(invokeArrayArg(otherRecognizer,"recognizeWith",this))return this;var simultaneous=this.simultaneous;return simultaneous[(otherRecognizer=getRecognizerByNameIfManager(otherRecognizer,this)).id]||(simultaneous[otherRecognizer.id]=otherRecognizer,otherRecognizer.recognizeWith(this)),this},dropRecognizeWith:function(otherRecognizer){return invokeArrayArg(otherRecognizer,"dropRecognizeWith",this)||(otherRecognizer=getRecognizerByNameIfManager(otherRecognizer,this),delete this.simultaneous[otherRecognizer.id]),this},requireFailure:function(otherRecognizer){if(invokeArrayArg(otherRecognizer,"requireFailure",this))return this;var requireFail=this.requireFail;return-1===inArray(requireFail,otherRecognizer=getRecognizerByNameIfManager(otherRecognizer,this))&&(requireFail.push(otherRecognizer),otherRecognizer.requireFailure(this)),this},dropRequireFailure:function(otherRecognizer){if(invokeArrayArg(otherRecognizer,"dropRequireFailure",this))return this;otherRecognizer=getRecognizerByNameIfManager(otherRecognizer,this);var index=inArray(this.requireFail,otherRecognizer);return index>-1&&this.requireFail.splice(index,1),this},hasRequireFailures:function(){return this.requireFail.length>0},canRecognizeWith:function(otherRecognizer){return!!this.simultaneous[otherRecognizer.id]},emit:function(input){var self=this,state=this.state;function emit(event){self.manager.emit(event,input)}state<8&&emit(self.options.event+stateStr(state)),emit(self.options.event),input.additionalEvent&&emit(input.additionalEvent),state>=8&&emit(self.options.event+stateStr(state))},tryEmit:function(input){if(this.canEmit())return this.emit(input);this.state=32},canEmit:function(){for(var i=0;i<this.requireFail.length;){if(!(33&this.requireFail[i].state))return!1;i++}return!0},recognize:function(inputData){var inputDataClone=assign({},inputData);if(!boolOrFn(this.options.enable,[this,inputDataClone]))return this.reset(),void(this.state=32);56&this.state&&(this.state=1),this.state=this.process(inputDataClone),30&this.state&&this.tryEmit(inputDataClone)},process:function(inputData){},getTouchAction:function(){},reset:function(){}},inherit(AttrRecognizer,Recognizer,{defaults:{pointers:1},attrTest:function(input){var optionPointers=this.options.pointers;return 0===optionPointers||input.pointers.length===optionPointers},process:function(input){var state=this.state,eventType=input.eventType,isRecognized=6&state,isValid=this.attrTest(input);return isRecognized&&(8&eventType||!isValid)?16|state:isRecognized||isValid?4&eventType?8|state:2&state?4|state:2:32}}),inherit(PanRecognizer,AttrRecognizer,{defaults:{event:"pan",threshold:10,pointers:1,direction:30},getTouchAction:function(){var direction=this.options.direction,actions=[];return 6&direction&&actions.push("pan-y"),24&direction&&actions.push("pan-x"),actions},directionTest:function(input){var options=this.options,hasMoved=!0,distance=input.distance,direction=input.direction,x=input.deltaX,y=input.deltaY;return direction&options.direction||(6&options.direction?(direction=0===x?1:x<0?2:4,hasMoved=x!=this.pX,distance=Math.abs(input.deltaX)):(direction=0===y?1:y<0?8:16,hasMoved=y!=this.pY,distance=Math.abs(input.deltaY))),input.direction=direction,hasMoved&&distance>options.threshold&&direction&options.direction},attrTest:function(input){return AttrRecognizer.prototype.attrTest.call(this,input)&&(2&this.state||!(2&this.state)&&this.directionTest(input))},emit:function(input){this.pX=input.deltaX,this.pY=input.deltaY;var direction=directionStr(input.direction);direction&&(input.additionalEvent=this.options.event+direction),this._super.emit.call(this,input)}}),inherit(PinchRecognizer,AttrRecognizer,{defaults:{event:"pinch",threshold:0,pointers:2},getTouchAction:function(){return["none"]},attrTest:function(input){return this._super.attrTest.call(this,input)&&(Math.abs(input.scale-1)>this.options.threshold||2&this.state)},emit:function(input){if(1!==input.scale){var inOut=input.scale<1?"in":"out";input.additionalEvent=this.options.event+inOut}this._super.emit.call(this,input)}}),inherit(PressRecognizer,Recognizer,{defaults:{event:"press",pointers:1,time:251,threshold:9},getTouchAction:function(){return["auto"]},process:function(input){var options=this.options,validPointers=input.pointers.length===options.pointers,validMovement=input.distance<options.threshold,validTime=input.deltaTime>options.time;if(this._input=input,!validMovement||!validPointers||12&input.eventType&&!validTime)this.reset();else if(1&input.eventType)this.reset(),this._timer=setTimeoutContext((function(){this.state=8,this.tryEmit()}),options.time,this);else if(4&input.eventType)return 8;return 32},reset:function(){clearTimeout(this._timer)},emit:function(input){8===this.state&&(input&&4&input.eventType?this.manager.emit(this.options.event+"up",input):(this._input.timeStamp=now(),this.manager.emit(this.options.event,this._input)))}}),inherit(RotateRecognizer,AttrRecognizer,{defaults:{event:"rotate",threshold:0,pointers:2},getTouchAction:function(){return["none"]},attrTest:function(input){return this._super.attrTest.call(this,input)&&(Math.abs(input.rotation)>this.options.threshold||2&this.state)}}),inherit(SwipeRecognizer,AttrRecognizer,{defaults:{event:"swipe",threshold:10,velocity:.3,direction:30,pointers:1},getTouchAction:function(){return PanRecognizer.prototype.getTouchAction.call(this)},attrTest:function(input){var velocity,direction=this.options.direction;return 30&direction?velocity=input.overallVelocity:6&direction?velocity=input.overallVelocityX:24&direction&&(velocity=input.overallVelocityY),this._super.attrTest.call(this,input)&&direction&input.offsetDirection&&input.distance>this.options.threshold&&input.maxPointers==this.options.pointers&&abs(velocity)>this.options.velocity&&4&input.eventType},emit:function(input){var direction=directionStr(input.offsetDirection);direction&&this.manager.emit(this.options.event+direction,input),this.manager.emit(this.options.event,input)}}),inherit(TapRecognizer,Recognizer,{defaults:{event:"tap",pointers:1,taps:1,interval:300,time:250,threshold:9,posThreshold:10},getTouchAction:function(){return["manipulation"]},process:function(input){var options=this.options,validPointers=input.pointers.length===options.pointers,validMovement=input.distance<options.threshold,validTouchTime=input.deltaTime<options.time;if(this.reset(),1&input.eventType&&0===this.count)return this.failTimeout();if(validMovement&&validTouchTime&&validPointers){if(4!=input.eventType)return this.failTimeout();var validInterval=!this.pTime||input.timeStamp-this.pTime<options.interval,validMultiTap=!this.pCenter||getDistance(this.pCenter,input.center)<options.posThreshold;if(this.pTime=input.timeStamp,this.pCenter=input.center,validMultiTap&&validInterval?this.count+=1:this.count=1,this._input=input,0===this.count%options.taps)return this.hasRequireFailures()?(this._timer=setTimeoutContext((function(){this.state=8,this.tryEmit()}),options.interval,this),2):8}return 32},failTimeout:function(){return this._timer=setTimeoutContext((function(){this.state=32}),this.options.interval,this),32},reset:function(){clearTimeout(this._timer)},emit:function(){8==this.state&&(this._input.tapCount=this.count,this.manager.emit(this.options.event,this._input))}}),Hammer.VERSION="2.0.7",Hammer.defaults={domEvents:!1,touchAction:"compute",enable:!0,inputTarget:null,inputClass:null,preset:[[RotateRecognizer,{enable:!1}],[PinchRecognizer,{enable:!1},["rotate"]],[SwipeRecognizer,{direction:6}],[PanRecognizer,{direction:6},["swipe"]],[TapRecognizer],[TapRecognizer,{event:"doubletap",taps:2},["tap"]],[PressRecognizer]],cssProps:{userSelect:"none",touchSelect:"none",touchCallout:"none",contentZooming:"none",userDrag:"none",tapHighlightColor:"rgba(0,0,0,0)"}};function Manager(element,options){this.options=assign({},Hammer.defaults,options||{}),this.options.inputTarget=this.options.inputTarget||element,this.handlers={},this.session={},this.recognizers=[],this.oldCssProps={},this.element=element,this.input=function createInputInstance(manager){return new(manager.options.inputClass||(SUPPORT_POINTER_EVENTS?PointerEventInput:SUPPORT_ONLY_TOUCH?TouchInput:SUPPORT_TOUCH?TouchMouseInput:MouseInput))(manager,inputHandler)}(this),this.touchAction=new TouchAction(this,this.options.touchAction),toggleCssProps(this,!0),each(this.options.recognizers,(function(item){var recognizer=this.add(new item[0](item[1]));item[2]&&recognizer.recognizeWith(item[2]),item[3]&&recognizer.requireFailure(item[3])}),this)}function toggleCssProps(manager,add){var prop,element=manager.element;element.style&&(each(manager.options.cssProps,(function(value,name){prop=prefixed(element.style,name),add?(manager.oldCssProps[prop]=element.style[prop],element.style[prop]=value):element.style[prop]=manager.oldCssProps[prop]||""})),add||(manager.oldCssProps={}))}Manager.prototype={set:function(options){return assign(this.options,options),options.touchAction&&this.touchAction.update(),options.inputTarget&&(this.input.destroy(),this.input.target=options.inputTarget,this.input.init()),this},stop:function(force){this.session.stopped=force?2:1},recognize:function(inputData){var session=this.session;if(!session.stopped){var recognizer;this.touchAction.preventDefaults(inputData);var recognizers=this.recognizers,curRecognizer=session.curRecognizer;(!curRecognizer||curRecognizer&&8&curRecognizer.state)&&(curRecognizer=session.curRecognizer=null);for(var i=0;i<recognizers.length;)recognizer=recognizers[i],2===session.stopped||curRecognizer&&recognizer!=curRecognizer&&!recognizer.canRecognizeWith(curRecognizer)?recognizer.reset():recognizer.recognize(inputData),!curRecognizer&&14&recognizer.state&&(curRecognizer=session.curRecognizer=recognizer),i++}},get:function(recognizer){if(recognizer instanceof Recognizer)return recognizer;for(var recognizers=this.recognizers,i=0;i<recognizers.length;i++)if(recognizers[i].options.event==recognizer)return recognizers[i];return null},add:function(recognizer){if(invokeArrayArg(recognizer,"add",this))return this;var existing=this.get(recognizer.options.event);return existing&&this.remove(existing),this.recognizers.push(recognizer),recognizer.manager=this,this.touchAction.update(),recognizer},remove:function(recognizer){if(invokeArrayArg(recognizer,"remove",this))return this;if(recognizer=this.get(recognizer)){var recognizers=this.recognizers,index=inArray(recognizers,recognizer);-1!==index&&(recognizers.splice(index,1),this.touchAction.update())}return this},on:function(events,handler){if(undefined!==events&&undefined!==handler){var handlers=this.handlers;return each(splitStr(events),(function(event){handlers[event]=handlers[event]||[],handlers[event].push(handler)})),this}},off:function(events,handler){if(undefined!==events){var handlers=this.handlers;return each(splitStr(events),(function(event){handler?handlers[event]&&handlers[event].splice(inArray(handlers[event],handler),1):delete handlers[event]})),this}},emit:function(event,data){this.options.domEvents&&function triggerDomEvent(event,data){var gestureEvent=document.createEvent("Event");gestureEvent.initEvent(event,!0,!0),gestureEvent.gesture=data,data.target.dispatchEvent(gestureEvent)}(event,data);var handlers=this.handlers[event]&&this.handlers[event].slice();if(handlers&&handlers.length){data.type=event,data.preventDefault=function(){data.srcEvent.preventDefault()};for(var i=0;i<handlers.length;)handlers[i](data),i++}},destroy:function(){this.element&&toggleCssProps(this,!1),this.handlers={},this.session={},this.input.destroy(),this.element=null}},assign(Hammer,{INPUT_START:1,INPUT_MOVE:2,INPUT_END:4,INPUT_CANCEL:8,STATE_POSSIBLE:1,STATE_BEGAN:2,STATE_CHANGED:4,STATE_ENDED:8,STATE_RECOGNIZED:8,STATE_CANCELLED:16,STATE_FAILED:32,DIRECTION_NONE:1,DIRECTION_LEFT:2,DIRECTION_RIGHT:4,DIRECTION_UP:8,DIRECTION_DOWN:16,DIRECTION_HORIZONTAL:6,DIRECTION_VERTICAL:24,DIRECTION_ALL:30,Manager:Manager,Input:Input,TouchAction:TouchAction,TouchInput:TouchInput,MouseInput:MouseInput,PointerEventInput:PointerEventInput,TouchMouseInput:TouchMouseInput,SingleTouchInput:SingleTouchInput,Recognizer:Recognizer,AttrRecognizer:AttrRecognizer,Tap:TapRecognizer,Pan:PanRecognizer,Swipe:SwipeRecognizer,Pinch:PinchRecognizer,Rotate:RotateRecognizer,Press:PressRecognizer,on:addEventListeners,off:removeEventListeners,each:each,merge:merge,extend:extend,assign:assign,inherit:inherit,bindFn:bindFn,prefixed:prefixed}),(void 0!==window?window:"undefined"!=typeof self?self:{}).Hammer=Hammer,undefined===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return Hammer}.call(exports,__webpack_require__,exports,module))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}(window,document)}}]);