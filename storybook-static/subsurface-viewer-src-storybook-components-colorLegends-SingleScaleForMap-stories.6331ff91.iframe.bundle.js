"use strict";(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[4708],{"./packages/subsurface-viewer/src/storybook/components/colorLegends/SingleScaleForMap.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ContinuousLegendForSubsurfaceViewer:function(){return ContinuousLegendForSubsurfaceViewer},__namedExportsOrder:function(){return __namedExportsOrder}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),lodash__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/lodash/lodash.js"),_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@emerson-eps/color-tables/dist/index.js"),_emerson_eps_color_tables_dist_component_Legend_constants__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@emerson-eps/color-tables/dist/component/Legend/constants.js"),_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/subsurface-viewer/src/SubsurfaceViewer.tsx"),_sharedSettings__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/subsurface-viewer/src/storybook/sharedSettings.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const stories={component:_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_4__.Z,title:"SubsurfaceViewer/Components/ColorLegends"};__webpack_exports__.default=stories;const classes={main:"SingleScaleForMap-main",legend:"SingleScaleForMap-legend"},Root=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.ZP)("div")({[`& .${classes.main}`]:{height:500,width:"100%",border:"1px solid black",position:"absolute"},[`& .${classes.legend}`]:{zIndex:999,opacity:1}}),legendStyle=(0,lodash__WEBPACK_IMPORTED_MODULE_1__.omit)(_emerson_eps_color_tables_dist_component_Legend_constants__WEBPACK_IMPORTED_MODULE_3__.P,["left","top"]),defaultProps={id:"SubsurfaceViewer",resources:{propertyMap:"propertyMap.png"},bounds:_sharedSettings__WEBPACK_IMPORTED_MODULE_5__.Jl},layers=[_sharedSettings__WEBPACK_IMPORTED_MODULE_5__.Wj],colorTablesData=_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_2__.Su,SubsurfaceViewerWithLegend=args=>{const updatedLayerData=[{...args.layers?.[0],colorMapName:args.colorName}];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Root,{className:classes.main},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:classes.legend},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_2__.sG,_extends({cssLegendStyles:{...legendStyle,right:"0vw",top:"0vh"}},args))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_4__.Z,_extends({},args,{layers:updatedLayerData})))},ContinuousLegendForSubsurfaceViewer={name:"ContinuousLegend For SubsurfaceViewer",parameters:{docs:{..._sharedSettings__WEBPACK_IMPORTED_MODULE_5__.R4.docs,description:{story:"Four maps with same color scale for all maps"}}},args:{min:0,max:.35,dataObjectName:"Legend",horizontal:!0,colorTables:colorTablesData,colorName:"Rainbow",layers:layers,...defaultProps,reverseRange:!1,views:{layout:[2,2],showLabel:!0,viewports:[{id:"view_1",name:"Colormap layer 1",show3D:!1,layerIds:["colormap-layer"]},{id:"view_2",name:"Colormap layer 2",show3D:!1,layerIds:["colormap-layer"]},{id:"view_3",name:"Colormap layer 3",show3D:!1,layerIds:["colormap-layer"]},{id:"view_4",name:"Colormap layer 4",show3D:!1,layerIds:["colormap-layer"]}]}},render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(SubsurfaceViewerWithLegend,args)};ContinuousLegendForSubsurfaceViewer.parameters={...ContinuousLegendForSubsurfaceViewer.parameters,docs:{...ContinuousLegendForSubsurfaceViewer.parameters?.docs,source:{originalSource:'{\n  name: "ContinuousLegend For SubsurfaceViewer",\n  parameters: {\n    docs: {\n      ...defaultStoryParameters.docs,\n      description: {\n        story: "Four maps with same color scale for all maps"\n      }\n    }\n  },\n  args: {\n    min,\n    max,\n    dataObjectName,\n    horizontal,\n    colorTables: colorTablesData,\n    colorName: "Rainbow",\n    layers,\n    ...defaultProps,\n    reverseRange,\n    views: {\n      layout: [2, 2],\n      showLabel: true,\n      viewports: [{\n        id: "view_1",\n        name: "Colormap layer 1",\n        show3D: false,\n        layerIds: ["colormap-layer"]\n      }, {\n        id: "view_2",\n        name: "Colormap layer 2",\n        show3D: false,\n        layerIds: ["colormap-layer"]\n      }, {\n        id: "view_3",\n        name: "Colormap layer 3",\n        show3D: false,\n        layerIds: ["colormap-layer"]\n      }, {\n        id: "view_4",\n        name: "Colormap layer 4",\n        show3D: false,\n        layerIds: ["colormap-layer"]\n      }]\n    }\n  },\n  render: args => <SubsurfaceViewerWithLegend {...args} />\n}',...ContinuousLegendForSubsurfaceViewer.parameters?.docs?.source}}};const __namedExportsOrder=["ContinuousLegendForSubsurfaceViewer"]}}]);