"use strict";(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[1625],{"./node_modules/@deck.gl/core/dist/debug/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{A:function(){return debug},k:function(){return register}});var _utils_log_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/log.js");let loggers={};function register(handlers){loggers=handlers}function debug(eventType,arg1,arg2,arg3){_utils_log_js__WEBPACK_IMPORTED_MODULE_0__.A.level>0&&loggers[eventType]&&loggers[eventType].call(null,arg1,arg2,arg3)}},"./node_modules/@deck.gl/core/dist/lib/attribute/attribute-manager.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{A:function(){return AttributeManager}});var buffer=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/buffer.js"),vertex_format_from_attribute=__webpack_require__("./node_modules/@luma.gl/core/dist/gpu-type-utils/vertex-format-from-attribute.js");const dataTypeFromTypedArray=vertex_format_from_attribute.UE;function getBufferAttributeLayout(name,accessor,deviceType){const type="webgpu"===deviceType&&"uint8"===accessor.type?"unorm8":accessor.type;return{attribute:name,format:accessor.size>1?`${type}x${accessor.size}`:accessor.type,byteOffset:accessor.offset||0}}function getStride(accessor){return accessor.stride||accessor.size*accessor.bytesPerElement}var typed_array_manager=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/typed-array-manager.js"),math_utils=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/math-utils.js"),log=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/log.js");function resolveShaderAttribute(baseAccessor,shaderAttributeOptions){shaderAttributeOptions.offset&&log.A.removed("shaderAttribute.offset","vertexOffset, elementOffset")();const stride=getStride(baseAccessor),offset=(void 0!==shaderAttributeOptions.vertexOffset?shaderAttributeOptions.vertexOffset:baseAccessor.vertexOffset||0)*stride+(shaderAttributeOptions.elementOffset||0)*baseAccessor.bytesPerElement+(baseAccessor.offset||0);return{...shaderAttributeOptions,offset:offset,stride:stride}}class DataColumn{constructor(device,opts,state){this._buffer=null,this.device=device,this.id=opts.id||"",this.size=opts.size||1;const logicalType=opts.logicalType||opts.type,doublePrecision="float64"===logicalType;let bufferType,{defaultValue:defaultValue}=opts;defaultValue=Number.isFinite(defaultValue)?[defaultValue]:defaultValue||new Array(this.size).fill(0),bufferType=doublePrecision?"float32":!logicalType&&opts.isIndexed?"uint32":logicalType||"float32";let defaultType=function typedArrayFromDataType(type){switch(type){case"float64":return Float64Array;case"uint8":case"unorm8":return Uint8ClampedArray;default:return(0,vertex_format_from_attribute.Y0)(type)}}(logicalType||bufferType);this.doublePrecision=doublePrecision,doublePrecision&&!1===opts.fp64&&(defaultType=Float32Array),this.value=null,this.settings={...opts,defaultType:defaultType,defaultValue:defaultValue,logicalType:logicalType,type:bufferType,normalized:bufferType.includes("norm"),size:this.size,bytesPerElement:defaultType.BYTES_PER_ELEMENT},this.state={...state,externalBuffer:null,bufferAccessor:this.settings,allocatedValue:null,numInstances:0,bounds:null,constant:!1}}get isConstant(){return this.state.constant}get buffer(){return this._buffer}get byteOffset(){const accessor=this.getAccessor();return accessor.vertexOffset?accessor.vertexOffset*getStride(accessor):0}get numInstances(){return this.state.numInstances}set numInstances(n){this.state.numInstances=n}delete(){this._buffer&&(this._buffer.delete(),this._buffer=null),typed_array_manager.A.release(this.state.allocatedValue)}getBuffer(){return this.state.constant?null:this.state.externalBuffer||this._buffer}getValue(attributeName=this.id,options=null){const result={};if(this.state.constant){const value=this.value;if(options){const shaderAttributeDef=resolveShaderAttribute(this.getAccessor(),options),offset=shaderAttributeDef.offset/value.BYTES_PER_ELEMENT,size=shaderAttributeDef.size||this.size;result[attributeName]=value.subarray(offset,offset+size)}else result[attributeName]=value}else result[attributeName]=this.getBuffer();return this.doublePrecision&&(this.value instanceof Float64Array?result[`${attributeName}64Low`]=result[attributeName]:result[`${attributeName}64Low`]=new Float32Array(this.size)),result}_getBufferLayout(attributeName=this.id,options=null){const accessor=this.getAccessor(),attributes=[],result={name:this.id,byteStride:getStride(accessor),attributes:attributes};if(this.doublePrecision){const doubleShaderAttributeDefs=function resolveDoublePrecisionShaderAttributes(baseAccessor,shaderAttributeOptions){const resolvedOptions=resolveShaderAttribute(baseAccessor,shaderAttributeOptions);return{high:resolvedOptions,low:{...resolvedOptions,offset:resolvedOptions.offset+4*baseAccessor.size}}}(accessor,options||{});attributes.push(getBufferAttributeLayout(attributeName,{...accessor,...doubleShaderAttributeDefs.high},this.device.type),getBufferAttributeLayout(`${attributeName}64Low`,{...accessor,...doubleShaderAttributeDefs.low},this.device.type))}else if(options){const shaderAttributeDef=resolveShaderAttribute(accessor,options);attributes.push(getBufferAttributeLayout(attributeName,{...accessor,...shaderAttributeDef},this.device.type))}else attributes.push(getBufferAttributeLayout(attributeName,accessor,this.device.type));return result}setAccessor(accessor){this.state.bufferAccessor=accessor}getAccessor(){return this.state.bufferAccessor}getBounds(){if(this.state.bounds)return this.state.bounds;let result=null;if(this.state.constant&&this.value){const min=Array.from(this.value);result=[min,min]}else{const{value:value,numInstances:numInstances,size:size}=this,len=numInstances*size;if(value&&len&&value.length>=len){const min=new Array(size).fill(1/0),max=new Array(size).fill(-1/0);for(let i=0;i<len;)for(let j=0;j<size;j++){const v=value[i++];v<min[j]&&(min[j]=v),v>max[j]&&(max[j]=v)}result=[min,max]}}return this.state.bounds=result,result}setData(data){const{state:state}=this;let opts;opts=ArrayBuffer.isView(data)?{value:data}:data instanceof buffer.h?{buffer:data}:data;const accessor={...this.settings,...opts};if(ArrayBuffer.isView(opts.value)){if(!opts.type){if(this.doublePrecision&&opts.value instanceof Float64Array)accessor.type="float32";else{const type=dataTypeFromTypedArray(opts.value);accessor.type=accessor.normalized?type.replace("int","norm"):type}}accessor.bytesPerElement=opts.value.BYTES_PER_ELEMENT,accessor.stride=getStride(accessor)}if(state.bounds=null,opts.constant){let value=opts.value;value=this._normalizeValue(value,[],0),this.settings.normalized&&(value=this.normalizeConstant(value));if(!(!state.constant||!this._areValuesEqual(value,this.value)))return!1;state.externalBuffer=null,state.constant=!0,this.value=ArrayBuffer.isView(value)?value:new Float32Array(value)}else if(opts.buffer){const buffer=opts.buffer;state.externalBuffer=buffer,state.constant=!1,this.value=opts.value||null}else if(opts.value){this._checkExternalBuffer(opts);let value=opts.value;state.externalBuffer=null,state.constant=!1,this.value=value;let{buffer:buffer}=this;const stride=getStride(accessor),byteOffset=(accessor.vertexOffset||0)*stride;if(this.doublePrecision&&value instanceof Float64Array&&(value=(0,math_utils.cT)(value,accessor)),this.settings.isIndexed){const ArrayType=this.settings.defaultType;value.constructor!==ArrayType&&(value=new ArrayType(value))}const requiredBufferSize=value.byteLength+byteOffset+2*stride;(!buffer||buffer.byteLength<requiredBufferSize)&&(buffer=this._createBuffer(requiredBufferSize)),buffer.write(value,byteOffset)}return this.setAccessor(accessor),!0}updateSubBuffer(opts={}){this.state.bounds=null;const value=this.value,{startOffset:startOffset=0,endOffset:endOffset}=opts;this.buffer.write(this.doublePrecision&&value instanceof Float64Array?(0,math_utils.cT)(value,{size:this.size,startIndex:startOffset,endIndex:endOffset}):value.subarray(startOffset,endOffset),startOffset*value.BYTES_PER_ELEMENT+this.byteOffset)}allocate(numInstances,copy=!1){const{state:state}=this,oldValue=state.allocatedValue,value=typed_array_manager.A.allocate(oldValue,numInstances+1,{size:this.size,type:this.settings.defaultType,copy:copy});this.value=value;const{byteOffset:byteOffset}=this;let{buffer:buffer}=this;return(!buffer||buffer.byteLength<value.byteLength+byteOffset)&&(buffer=this._createBuffer(value.byteLength+byteOffset),copy&&oldValue&&buffer.write(oldValue instanceof Float64Array?(0,math_utils.cT)(oldValue,this):oldValue,byteOffset)),state.allocatedValue=value,state.constant=!1,state.externalBuffer=null,this.setAccessor(this.settings),!0}_checkExternalBuffer(opts){const{value:value}=opts;if(!ArrayBuffer.isView(value))throw new Error(`Attribute ${this.id} value is not TypedArray`);const ArrayType=this.settings.defaultType;let illegalArrayType=!1;if(this.doublePrecision&&(illegalArrayType=value.BYTES_PER_ELEMENT<4),illegalArrayType)throw new Error(`Attribute ${this.id} does not support ${value.constructor.name}`);value instanceof ArrayType||!this.settings.normalized||"normalized"in opts||log.A.warn(`Attribute ${this.id} is normalized`)()}normalizeConstant(value){switch(this.settings.type){case"snorm8":return new Float32Array(value).map((x=>(x+128)/255*2-1));case"snorm16":return new Float32Array(value).map((x=>(x+32768)/65535*2-1));case"unorm8":return new Float32Array(value).map((x=>x/255));case"unorm16":return new Float32Array(value).map((x=>x/65535));default:return value}}_normalizeValue(value,out,start){const{defaultValue:defaultValue,size:size}=this.settings;if(Number.isFinite(value))return out[start]=value,out;if(!value){let i=size;for(;--i>=0;)out[start+i]=defaultValue[i];return out}switch(size){case 4:out[start+3]=Number.isFinite(value[3])?value[3]:defaultValue[3];case 3:out[start+2]=Number.isFinite(value[2])?value[2]:defaultValue[2];case 2:out[start+1]=Number.isFinite(value[1])?value[1]:defaultValue[1];case 1:out[start+0]=Number.isFinite(value[0])?value[0]:defaultValue[0];break;default:let i=size;for(;--i>=0;)out[start+i]=Number.isFinite(value[i])?value[i]:defaultValue[i]}return out}_areValuesEqual(value1,value2){if(!value1||!value2)return!1;const{size:size}=this;for(let i=0;i<size;i++)if(value1[i]!==value2[i])return!1;return!0}_createBuffer(byteLength){this._buffer&&this._buffer.destroy();const{isIndexed:isIndexed,type:type}=this.settings;return this._buffer=this.device.createBuffer({...this._buffer?.props,id:this.id,usage:(isIndexed?buffer.h.INDEX:buffer.h.VERTEX)|buffer.h.COPY_DST,indexType:isIndexed?type:void 0,byteLength:byteLength}),this._buffer}}var assert=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/assert.js"),iterable_utils=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/iterable-utils.js"),flatten=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/flatten.js");const EMPTY=[],FULL=[[0,1/0]];var transition_settings=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/attribute/transition-settings.js");class Attribute extends DataColumn{constructor(device,opts){super(device,opts,{startIndices:null,lastExternalBuffer:null,binaryValue:null,binaryAccessor:null,needsUpdate:!0,needsRedraw:!1,layoutChanged:!1,updateRanges:FULL}),this.constant=!1,this.settings.update=opts.update||(opts.accessor?this._autoUpdater:void 0),Object.seal(this.settings),Object.seal(this.state),this._validateAttributeUpdaters()}get startIndices(){return this.state.startIndices}set startIndices(layout){this.state.startIndices=layout}needsUpdate(){return this.state.needsUpdate}needsRedraw({clearChangedFlags:clearChangedFlags=!1}={}){const needsRedraw=this.state.needsRedraw;return this.state.needsRedraw=needsRedraw&&!clearChangedFlags,needsRedraw}layoutChanged(){return this.state.layoutChanged}setAccessor(accessor){var _a;(_a=this.state).layoutChanged||(_a.layoutChanged=!function bufferLayoutEqual(accessor1,accessor2){return accessor1.type===accessor2.type&&accessor1.size===accessor2.size&&getStride(accessor1)===getStride(accessor2)&&(accessor1.offset||0)===(accessor2.offset||0)}(accessor,this.getAccessor())),super.setAccessor(accessor)}getUpdateTriggers(){const{accessor:accessor}=this.settings;return[this.id].concat("function"!=typeof accessor&&accessor||[])}supportsTransition(){return Boolean(this.settings.transition)}getTransitionSetting(opts){if(!opts||!this.supportsTransition())return null;const{accessor:accessor}=this.settings,layerSettings=this.settings.transition,userSettings=Array.isArray(accessor)?opts[accessor.find((a=>opts[a]))]:opts[accessor];return(0,transition_settings.K)(userSettings,layerSettings)}setNeedsUpdate(reason=this.id,dataRange){if(this.state.needsUpdate=this.state.needsUpdate||reason,this.setNeedsRedraw(reason),dataRange){const{startRow:startRow=0,endRow:endRow=1/0}=dataRange;this.state.updateRanges=function add(rangeList,range){if(rangeList===FULL)return rangeList;if(range[0]<0&&(range[0]=0),range[0]>=range[1])return rangeList;const newRangeList=[],len=rangeList.length;let insertPosition=0;for(let i=0;i<len;i++){const range0=rangeList[i];range0[1]<range[0]?(newRangeList.push(range0),insertPosition=i+1):range0[0]>range[1]?newRangeList.push(range0):range=[Math.min(range0[0],range[0]),Math.max(range0[1],range[1])]}return newRangeList.splice(insertPosition,0,range),newRangeList}(this.state.updateRanges,[startRow,endRow])}else this.state.updateRanges=FULL}clearNeedsUpdate(){this.state.needsUpdate=!1,this.state.updateRanges=EMPTY}setNeedsRedraw(reason=this.id){this.state.needsRedraw=this.state.needsRedraw||reason}allocate(numInstances){const{state:state,settings:settings}=this;return!settings.noAlloc&&(!!settings.update&&(super.allocate(numInstances,state.updateRanges!==FULL),!0))}updateBuffer({numInstances:numInstances,data:data,props:props,context:context}){if(!this.needsUpdate())return!1;const{state:{updateRanges:updateRanges},settings:{update:update,noAlloc:noAlloc}}=this;let updated=!0;if(update){for(const[startRow,endRow]of updateRanges)update.call(context,this,{data:data,startRow:startRow,endRow:endRow,props:props,numInstances:numInstances});if(this.value)if(this.constant||!this.buffer||this.buffer.byteLength<this.value.byteLength+this.byteOffset)this.setData({value:this.value,constant:this.constant}),this.constant=!1;else for(const[startRow,endRow]of updateRanges){const startOffset=Number.isFinite(startRow)?this.getVertexOffset(startRow):0,endOffset=Number.isFinite(endRow)?this.getVertexOffset(endRow):noAlloc||!Number.isFinite(numInstances)?this.value.length:numInstances*this.size;super.updateSubBuffer({startOffset:startOffset,endOffset:endOffset})}else;this._checkAttributeArray()}else updated=!1;return this.clearNeedsUpdate(),this.setNeedsRedraw(),updated}setConstantValue(value){if("webgpu"===this.device.type||void 0===value||"function"==typeof value)return!1;return this.setData({constant:!0,value:value})&&this.setNeedsRedraw(),this.clearNeedsUpdate(),!0}setExternalBuffer(buffer){const{state:state}=this;return buffer?(this.clearNeedsUpdate(),state.lastExternalBuffer===buffer||(state.lastExternalBuffer=buffer,this.setNeedsRedraw(),this.setData(buffer)),!0):(state.lastExternalBuffer=null,!1)}setBinaryValue(buffer,startIndices=null){const{state:state,settings:settings}=this;if(!buffer)return state.binaryValue=null,state.binaryAccessor=null,!1;if(settings.noAlloc)return!1;if(state.binaryValue===buffer)return this.clearNeedsUpdate(),!0;state.binaryValue=buffer,this.setNeedsRedraw();if(settings.transform||startIndices!==this.startIndices){ArrayBuffer.isView(buffer)&&(buffer={value:buffer});const binaryValue=buffer;(0,assert.A)(ArrayBuffer.isView(binaryValue.value),`invalid ${settings.accessor}`);const needsNormalize=Boolean(binaryValue.size)&&binaryValue.size!==this.size;return state.binaryAccessor=(0,iterable_utils.I)(binaryValue.value,{size:binaryValue.size||this.size,stride:binaryValue.stride,offset:binaryValue.offset,startIndices:startIndices,nested:needsNormalize}),!1}return this.clearNeedsUpdate(),this.setData(buffer),!0}getVertexOffset(row){const{startIndices:startIndices}=this;return(startIndices?row<startIndices.length?startIndices[row]:this.numInstances:row)*this.size}getValue(){const shaderAttributeDefs=this.settings.shaderAttributes,result=super.getValue();if(!shaderAttributeDefs)return result;for(const shaderAttributeName in shaderAttributeDefs)Object.assign(result,super.getValue(shaderAttributeName,shaderAttributeDefs[shaderAttributeName]));return result}getBufferLayout(modelInfo){this.state.layoutChanged=!1;const shaderAttributeDefs=this.settings.shaderAttributes,result=super._getBufferLayout(),{stepMode:stepMode}=this.settings;if(result.stepMode="dynamic"===stepMode?modelInfo?modelInfo.isInstanced?"instance":"vertex":"instance":stepMode??"vertex",!shaderAttributeDefs)return result;for(const shaderAttributeName in shaderAttributeDefs){const map=super._getBufferLayout(shaderAttributeName,shaderAttributeDefs[shaderAttributeName]);result.attributes.push(...map.attributes)}return result}_autoUpdater(attribute,{data:data,startRow:startRow,endRow:endRow,props:props,numInstances:numInstances}){if(attribute.constant&&"webgpu"!==this.context.device.type)return;const{settings:settings,state:state,value:value,size:size,startIndices:startIndices}=attribute,{accessor:accessor,transform:transform}=settings;let accessorFunc=state.binaryAccessor||("function"==typeof accessor?accessor:props[accessor]);"function"!=typeof accessorFunc&&(accessorFunc=()=>accessorFunc),(0,assert.A)("function"==typeof accessorFunc,`accessor "${accessor}" is not a function`);let i=attribute.getVertexOffset(startRow);const{iterable:iterable,objectInfo:objectInfo}=(0,iterable_utils.X)(data,startRow,endRow);for(const object of iterable){objectInfo.index++;let objectValue=accessorFunc(object,objectInfo);if(transform&&(objectValue=transform.call(this,objectValue)),startIndices){const numVertices=(objectInfo.index<startIndices.length-1?startIndices[objectInfo.index+1]:numInstances)-startIndices[objectInfo.index];if(objectValue&&Array.isArray(objectValue[0])){let startIndex=i;for(const item of objectValue)attribute._normalizeValue(item,value,startIndex),startIndex+=size}else objectValue&&objectValue.length>size?value.set(objectValue,i):(attribute._normalizeValue(objectValue,objectInfo.target,0),(0,flatten.R)({target:value,source:objectInfo.target,start:i,count:numVertices}));i+=numVertices*size}else attribute._normalizeValue(objectValue,value,i),i+=size}}_validateAttributeUpdaters(){const{settings:settings}=this;if(!(settings.noAlloc||"function"==typeof settings.update))throw new Error(`Attribute ${this.id} missing update or accessor`)}_checkAttributeArray(){const{value:value}=this,limit=Math.min(4,this.size);if(value&&value.length>=limit){let valid=!0;switch(limit){case 4:valid=valid&&Number.isFinite(value[3]);case 3:valid=valid&&Number.isFinite(value[2]);case 2:valid=valid&&Number.isFinite(value[1]);case 1:valid=valid&&Number.isFinite(value[0]);break;default:valid=!1}if(!valid)throw new Error(`Illegal attribute generated for ${this.id}`)}}}var memoize=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/memoize.js"),debug=__webpack_require__("./node_modules/@deck.gl/core/dist/debug/index.js"),buffer_transform=__webpack_require__("./node_modules/@luma.gl/engine/dist/compute/buffer-transform.js");function fp64ify(a,out=[],startIndex=0){const hiPart=Math.fround(a),loPart=a-hiPart;return out[startIndex]=hiPart,out[startIndex+1]=loPart,out}function fp64LowPart(a){return a-Math.fround(a)}function fp64ifyMatrix4(matrix){const matrixFP64=new Float32Array(32);for(let i=0;i<4;++i)for(let j=0;j<4;++j){const index=4*i+j;fp64ify(matrix[4*j+i],matrixFP64,2*index)}return matrixFP64}const fp64arithmetic={name:"fp64arithmetic",vs:"\nuniform fp64arithmeticUniforms {\n  uniform float ONE;\n} fp64;\n\n/*\nAbout LUMA_FP64_CODE_ELIMINATION_WORKAROUND\n\nThe purpose of this workaround is to prevent shader compilers from\noptimizing away necessary arithmetic operations by swapping their sequences\nor transform the equation to some 'equivalent' form.\n\nThe method is to multiply an artifical variable, ONE, which will be known to\nthe compiler to be 1 only at runtime. The whole expression is then represented\nas a polynomial with respective to ONE. In the coefficients of all terms, only one a\nand one b should appear\n\nerr = (a + b) * ONE^6 - a * ONE^5 - (a + b) * ONE^4 + a * ONE^3 - b - (a + b) * ONE^2 + a * ONE\n*/\n\n// Divide float number to high and low floats to extend fraction bits\nvec2 split(float a) {\n  const float SPLIT = 4097.0;\n  float t = a * SPLIT;\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\n  float a_hi = t * fp64.ONE - (t - a);\n  float a_lo = a * fp64.ONE - a_hi;\n#else\n  float a_hi = t - (t - a);\n  float a_lo = a - a_hi;\n#endif\n  return vec2(a_hi, a_lo);\n}\n\n// Divide float number again when high float uses too many fraction bits\nvec2 split2(vec2 a) {\n  vec2 b = split(a.x);\n  b.y += a.y;\n  return b;\n}\n\n// Special sum operation when a > b\nvec2 quickTwoSum(float a, float b) {\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\n  float sum = (a + b) * fp64.ONE;\n  float err = b - (sum - a) * fp64.ONE;\n#else\n  float sum = a + b;\n  float err = b - (sum - a);\n#endif\n  return vec2(sum, err);\n}\n\n// General sum operation\nvec2 twoSum(float a, float b) {\n  float s = (a + b);\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\n  float v = (s * fp64.ONE - a) * fp64.ONE;\n  float err = (a - (s - v) * fp64.ONE) * fp64.ONE * fp64.ONE * fp64.ONE + (b - v);\n#else\n  float v = s - a;\n  float err = (a - (s - v)) + (b - v);\n#endif\n  return vec2(s, err);\n}\n\nvec2 twoSub(float a, float b) {\n  float s = (a - b);\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\n  float v = (s * fp64.ONE - a) * fp64.ONE;\n  float err = (a - (s - v) * fp64.ONE) * fp64.ONE * fp64.ONE * fp64.ONE - (b + v);\n#else\n  float v = s - a;\n  float err = (a - (s - v)) - (b + v);\n#endif\n  return vec2(s, err);\n}\n\nvec2 twoSqr(float a) {\n  float prod = a * a;\n  vec2 a_fp64 = split(a);\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\n  float err = ((a_fp64.x * a_fp64.x - prod) * fp64.ONE + 2.0 * a_fp64.x *\n    a_fp64.y * fp64.ONE * fp64.ONE) + a_fp64.y * a_fp64.y * fp64.ONE * fp64.ONE * fp64.ONE;\n#else\n  float err = ((a_fp64.x * a_fp64.x - prod) + 2.0 * a_fp64.x * a_fp64.y) + a_fp64.y * a_fp64.y;\n#endif\n  return vec2(prod, err);\n}\n\nvec2 twoProd(float a, float b) {\n  float prod = a * b;\n  vec2 a_fp64 = split(a);\n  vec2 b_fp64 = split(b);\n  float err = ((a_fp64.x * b_fp64.x - prod) + a_fp64.x * b_fp64.y +\n    a_fp64.y * b_fp64.x) + a_fp64.y * b_fp64.y;\n  return vec2(prod, err);\n}\n\nvec2 sum_fp64(vec2 a, vec2 b) {\n  vec2 s, t;\n  s = twoSum(a.x, b.x);\n  t = twoSum(a.y, b.y);\n  s.y += t.x;\n  s = quickTwoSum(s.x, s.y);\n  s.y += t.y;\n  s = quickTwoSum(s.x, s.y);\n  return s;\n}\n\nvec2 sub_fp64(vec2 a, vec2 b) {\n  vec2 s, t;\n  s = twoSub(a.x, b.x);\n  t = twoSub(a.y, b.y);\n  s.y += t.x;\n  s = quickTwoSum(s.x, s.y);\n  s.y += t.y;\n  s = quickTwoSum(s.x, s.y);\n  return s;\n}\n\nvec2 mul_fp64(vec2 a, vec2 b) {\n  vec2 prod = twoProd(a.x, b.x);\n  // y component is for the error\n  prod.y += a.x * b.y;\n#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)\n  prod = split2(prod);\n#endif\n  prod = quickTwoSum(prod.x, prod.y);\n  prod.y += a.y * b.x;\n#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)\n  prod = split2(prod);\n#endif\n  prod = quickTwoSum(prod.x, prod.y);\n  return prod;\n}\n\nvec2 div_fp64(vec2 a, vec2 b) {\n  float xn = 1.0 / b.x;\n#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)\n  vec2 yn = mul_fp64(a, vec2(xn, 0));\n#else\n  vec2 yn = a * xn;\n#endif\n  float diff = (sub_fp64(a, mul_fp64(b, yn))).x;\n  vec2 prod = twoProd(xn, diff);\n  return sum_fp64(yn, prod);\n}\n\nvec2 sqrt_fp64(vec2 a) {\n  if (a.x == 0.0 && a.y == 0.0) return vec2(0.0, 0.0);\n  if (a.x < 0.0) return vec2(0.0 / 0.0, 0.0 / 0.0);\n\n  float x = 1.0 / sqrt(a.x);\n  float yn = a.x * x;\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\n  vec2 yn_sqr = twoSqr(yn) * fp64.ONE;\n#else\n  vec2 yn_sqr = twoSqr(yn);\n#endif\n  float diff = sub_fp64(a, yn_sqr).x;\n  vec2 prod = twoProd(x * 0.5, diff);\n#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)\n  return sum_fp64(split(yn), prod);\n#else\n  return sum_fp64(vec2(yn, 0.0), prod);\n#endif\n}\n",defaultUniforms:{ONE:1},uniformTypes:{ONE:"f32"},fp64ify:fp64ify,fp64LowPart:fp64LowPart,fp64ifyMatrix4:fp64ifyMatrix4};function padArrayChunk(options){const{source:source,target:target,start:start=0,size:size,getData:getData}=options,end=options.end||target.length,sourceLength=source.length,targetLength=end-start;if(sourceLength>targetLength)return void target.set(source.subarray(0,targetLength),start);if(target.set(source,start),!getData)return;let i=sourceLength;for(;i<targetLength;){const datum=getData(i,source);for(let j=0;j<size;j++)target[start+i]=datum[j]||0,i++}}function getAttributeTypeFromSize(size){switch(size){case 1:return"float";case 2:return"vec2";case 3:return"vec3";case 4:return"vec4";default:throw new Error(`No defined attribute type for size "${size}"`)}}function getFloat32VertexFormat(size){switch(size){case 1:return"float32";case 2:return"float32x2";case 3:return"float32x3";case 4:return"float32x4";default:throw new Error("invalid type size")}}function cycleBuffers(buffers){buffers.push(buffers.shift())}function matchBuffer({device:device,source:source,target:target}){return(!target||target.byteLength<source.byteLength)&&(target?.destroy(),target=device.createBuffer({byteLength:source.byteLength,usage:source.usage})),target}function padBuffer({device:device,buffer:buffer,attribute:attribute,fromLength:fromLength,toLength:toLength,fromStartIndices:fromStartIndices,getData:getData=x=>x}){const precisionMultiplier=attribute.doublePrecision&&attribute.value instanceof Float64Array?2:1,size=attribute.size*precisionMultiplier,byteOffset=attribute.byteOffset,targetByteOffset=attribute.settings.bytesPerElement<4?byteOffset/attribute.settings.bytesPerElement*4:byteOffset,toStartIndices=attribute.startIndices,hasStartIndices=fromStartIndices&&toStartIndices,isConstant=attribute.isConstant;if(!hasStartIndices&&buffer&&fromLength>=toLength)return buffer;const ArrayType=attribute.value instanceof Float64Array?Float32Array:attribute.value.constructor,toData=isConstant?attribute.value:new ArrayType(attribute.getBuffer().readSyncWebGL(byteOffset,toLength*ArrayType.BYTES_PER_ELEMENT).buffer);if(attribute.settings.normalized&&!isConstant){const getter=getData;getData=(value,chunk)=>attribute.normalizeConstant(getter(value,chunk))}const getMissingData=isConstant?(i,chunk)=>getData(toData,chunk):(i,chunk)=>getData(toData.subarray(i+byteOffset,i+byteOffset+size),chunk),source=buffer?new Float32Array(buffer.readSyncWebGL(targetByteOffset,4*fromLength).buffer):new Float32Array(0),target=new Float32Array(toLength);return function padArray({source:source,target:target,size:size,getData:getData,sourceStartIndices:sourceStartIndices,targetStartIndices:targetStartIndices}){if(!sourceStartIndices||!targetStartIndices)return padArrayChunk({source:source,target:target,size:size,getData:getData}),target;let sourceIndex=0,targetIndex=0;const getChunkData=getData&&((i,chunk)=>getData(i+targetIndex,chunk)),n=Math.min(sourceStartIndices.length,targetStartIndices.length);for(let i=1;i<n;i++){const nextSourceIndex=sourceStartIndices[i]*size,nextTargetIndex=targetStartIndices[i]*size;padArrayChunk({source:source.subarray(sourceIndex,nextSourceIndex),target:target,start:targetIndex,end:nextTargetIndex,size:size,getData:getChunkData}),sourceIndex=nextSourceIndex,targetIndex=nextTargetIndex}return targetIndex<target.length&&padArrayChunk({source:[],target:target,start:targetIndex,size:size,getData:getChunkData}),target}({source:source,target:target,sourceStartIndices:fromStartIndices,targetStartIndices:toStartIndices,size:size,getData:getMissingData}),(!buffer||buffer.byteLength<target.byteLength+targetByteOffset)&&(buffer?.destroy(),buffer=device.createBuffer({byteLength:target.byteLength+targetByteOffset,usage:35050})),buffer.write(target,targetByteOffset),buffer}var transition=__webpack_require__("./node_modules/@deck.gl/core/dist/transitions/transition.js");class GPUTransitionBase{constructor({device:device,attribute:attribute,timeline:timeline}){this.buffers=[],this.currentLength=0,this.device=device,this.transition=new transition.A(timeline),this.attribute=attribute,this.attributeInTransition=function cloneAttribute(attribute){const{device:device,settings:settings,value:value}=attribute,newAttribute=new Attribute(device,settings);return newAttribute.setData({value:value instanceof Float64Array?new Float64Array(0):new Float32Array(0),normalized:settings.normalized}),newAttribute}(attribute),this.currentStartIndices=attribute.startIndices}get inProgress(){return this.transition.inProgress}start(transitionSettings,numInstances,duration=1/0){this.settings=transitionSettings,this.currentStartIndices=this.attribute.startIndices,this.currentLength=function getAttributeBufferLength(attribute,numInstances){const{doublePrecision:doublePrecision,settings:settings,value:value,size:size}=attribute,multiplier=doublePrecision&&value instanceof Float64Array?2:1;let maxVertexOffset=0;const{shaderAttributes:shaderAttributes}=attribute.settings;if(shaderAttributes)for(const shaderAttribute of Object.values(shaderAttributes))maxVertexOffset=Math.max(maxVertexOffset,shaderAttribute.vertexOffset??0);return(settings.noAlloc?value.length:(numInstances+maxVertexOffset)*size)*multiplier}(this.attribute,numInstances),this.transition.start({...transitionSettings,duration:duration})}update(){const updated=this.transition.update();return updated&&this.onUpdate(),updated}setBuffer(buffer){this.attributeInTransition.setData({buffer:buffer,normalized:this.attribute.settings.normalized,value:this.attributeInTransition.value})}cancel(){this.transition.cancel()}delete(){this.cancel();for(const buffer of this.buffers)buffer.destroy();this.buffers.length=0}}const interpolationUniforms={name:"interpolation",vs:"uniform interpolationUniforms {\n  float time;\n} interpolation;\n",uniformTypes:{time:"f32"}},vs="#version 300 es\n#define SHADER_NAME interpolation-transition-vertex-shader\n\nin ATTRIBUTE_TYPE aFrom;\nin ATTRIBUTE_TYPE aTo;\nout ATTRIBUTE_TYPE vCurrent;\n\nvoid main(void) {\n  vCurrent = mix(aFrom, aTo, interpolation.time);\n  gl_Position = vec4(0.0);\n}\n",vs64="#version 300 es\n#define SHADER_NAME interpolation-transition-vertex-shader\n\nin ATTRIBUTE_TYPE aFrom;\nin ATTRIBUTE_TYPE aFrom64Low;\nin ATTRIBUTE_TYPE aTo;\nin ATTRIBUTE_TYPE aTo64Low;\nout ATTRIBUTE_TYPE vCurrent;\nout ATTRIBUTE_TYPE vCurrent64Low;\n\nvec2 mix_fp64(vec2 a, vec2 b, float x) {\n  vec2 range = sub_fp64(b, a);\n  return sum_fp64(a, mul_fp64(range, vec2(x, 0.0)));\n}\n\nvoid main(void) {\n  for (int i=0; i<ATTRIBUTE_SIZE; i++) {\n    vec2 value = mix_fp64(vec2(aFrom[i], aFrom64Low[i]), vec2(aTo[i], aTo64Low[i]), interpolation.time);\n    vCurrent[i] = value.x;\n    vCurrent64Low[i] = value.y;\n  }\n  gl_Position = vec4(0.0);\n}\n";function useFp64(attribute){return attribute.doublePrecision&&attribute.value instanceof Float64Array}const springUniforms={name:"spring",vs:"uniform springUniforms {\n  float damping;\n  float stiffness;\n} spring;\n",uniformTypes:{damping:"f32",stiffness:"f32"}},gpu_spring_transition_vs="#version 300 es\n#define SHADER_NAME spring-transition-vertex-shader\n\n#define EPSILON 0.00001\n\nin ATTRIBUTE_TYPE aPrev;\nin ATTRIBUTE_TYPE aCur;\nin ATTRIBUTE_TYPE aTo;\nout ATTRIBUTE_TYPE vNext;\nout float vIsTransitioningFlag;\n\nATTRIBUTE_TYPE getNextValue(ATTRIBUTE_TYPE cur, ATTRIBUTE_TYPE prev, ATTRIBUTE_TYPE dest) {\n  ATTRIBUTE_TYPE velocity = cur - prev;\n  ATTRIBUTE_TYPE delta = dest - cur;\n  ATTRIBUTE_TYPE force = delta * spring.stiffness;\n  ATTRIBUTE_TYPE resistance = velocity * spring.damping;\n  return force - resistance + velocity + cur;\n}\n\nvoid main(void) {\n  bool isTransitioning = length(aCur - aPrev) > EPSILON || length(aTo - aCur) > EPSILON;\n  vIsTransitioningFlag = isTransitioning ? 1.0 : 0.0;\n\n  vNext = getNextValue(aCur, aPrev, aTo);\n  gl_Position = vec4(0, 0, 0, 1);\n  gl_PointSize = 100.0;\n}\n",fs="#version 300 es\n#define SHADER_NAME spring-transition-is-transitioning-fragment-shader\n\nin float vIsTransitioningFlag;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  if (vIsTransitioningFlag == 0.0) {\n    discard;\n  }\n  fragColor = vec4(1.0);\n}";const TRANSITION_TYPES={interpolation:class GPUInterpolationTransition extends GPUTransitionBase{constructor({device:device,attribute:attribute,timeline:timeline}){super({device:device,attribute:attribute,timeline:timeline}),this.type="interpolation",this.transform=function getTransform(device,attribute){const attributeSize=attribute.size,attributeType=getAttributeTypeFromSize(attributeSize),inputFormat=getFloat32VertexFormat(attributeSize),bufferLayout=attribute.getBufferLayout();if(useFp64(attribute))return new buffer_transform.p(device,{vs:vs64,bufferLayout:[{name:"aFrom",byteStride:8*attributeSize,attributes:[{attribute:"aFrom",format:inputFormat,byteOffset:0},{attribute:"aFrom64Low",format:inputFormat,byteOffset:4*attributeSize}]},{name:"aTo",byteStride:8*attributeSize,attributes:[{attribute:"aTo",format:inputFormat,byteOffset:0},{attribute:"aTo64Low",format:inputFormat,byteOffset:4*attributeSize}]}],modules:[fp64arithmetic,interpolationUniforms],defines:{ATTRIBUTE_TYPE:attributeType,ATTRIBUTE_SIZE:attributeSize},moduleSettings:{},varyings:["vCurrent","vCurrent64Low"],bufferMode:35980,disableWarnings:!0});return new buffer_transform.p(device,{vs:vs,bufferLayout:[{name:"aFrom",format:inputFormat},{name:"aTo",format:bufferLayout.attributes[0].format}],modules:[interpolationUniforms],defines:{ATTRIBUTE_TYPE:attributeType},varyings:["vCurrent"],disableWarnings:!0})}(device,attribute)}start(transitionSettings,numInstances){const prevLength=this.currentLength,prevStartIndices=this.currentStartIndices;if(super.start(transitionSettings,numInstances,transitionSettings.duration),transitionSettings.duration<=0)return void this.transition.cancel();const{buffers:buffers,attribute:attribute}=this;cycleBuffers(buffers),buffers[0]=padBuffer({device:this.device,buffer:buffers[0],attribute:attribute,fromLength:prevLength,toLength:this.currentLength,fromStartIndices:prevStartIndices,getData:transitionSettings.enter}),buffers[1]=matchBuffer({device:this.device,source:buffers[0],target:buffers[1]}),this.setBuffer(buffers[1]);const{transform:transform}=this,model=transform.model;let vertexCount=Math.floor(this.currentLength/attribute.size);useFp64(attribute)&&(vertexCount/=2),model.setVertexCount(vertexCount),attribute.isConstant?(model.setAttributes({aFrom:buffers[0]}),model.setConstantAttributes({aTo:attribute.value})):model.setAttributes({aFrom:buffers[0],aTo:attribute.getBuffer()}),transform.transformFeedback.setBuffers({vCurrent:buffers[1]})}onUpdate(){const{duration:duration,easing:easing}=this.settings,{time:time}=this.transition;let t=time/duration;easing&&(t=easing(t));const{model:model}=this.transform,interpolationProps={time:t};model.shaderInputs.setProps({interpolation:interpolationProps}),this.transform.run({discard:!0})}delete(){super.delete(),this.transform.destroy()}},spring:class GPUSpringTransition extends GPUTransitionBase{constructor({device:device,attribute:attribute,timeline:timeline}){super({device:device,attribute:attribute,timeline:timeline}),this.type="spring",this.texture=function getTexture(device){return device.createTexture({data:new Uint8Array(4),format:"rgba8unorm",mipmaps:!1,width:1,height:1})}(device),this.framebuffer=function getFramebuffer(device,texture){return device.createFramebuffer({id:"spring-transition-is-transitioning-framebuffer",width:1,height:1,colorAttachments:[texture]})}(device,this.texture),this.transform=function gpu_spring_transition_getTransform(device,attribute){const attributeType=getAttributeTypeFromSize(attribute.size),format=getFloat32VertexFormat(attribute.size);return new buffer_transform.p(device,{vs:gpu_spring_transition_vs,fs:fs,bufferLayout:[{name:"aPrev",format:format},{name:"aCur",format:format},{name:"aTo",format:attribute.getBufferLayout().attributes[0].format}],varyings:["vNext"],modules:[springUniforms],defines:{ATTRIBUTE_TYPE:attributeType},parameters:{depthCompare:"always",blendColorOperation:"max",blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaOperation:"max",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one"}})}(device,attribute)}start(transitionSettings,numInstances){const prevLength=this.currentLength,prevStartIndices=this.currentStartIndices;super.start(transitionSettings,numInstances);const{buffers:buffers,attribute:attribute}=this;for(let i=0;i<2;i++)buffers[i]=padBuffer({device:this.device,buffer:buffers[i],attribute:attribute,fromLength:prevLength,toLength:this.currentLength,fromStartIndices:prevStartIndices,getData:transitionSettings.enter});buffers[2]=matchBuffer({device:this.device,source:buffers[0],target:buffers[2]}),this.setBuffer(buffers[1]);const{model:model}=this.transform;model.setVertexCount(Math.floor(this.currentLength/attribute.size)),attribute.isConstant?model.setConstantAttributes({aTo:attribute.value}):model.setAttributes({aTo:attribute.getBuffer()})}onUpdate(){const{buffers:buffers,transform:transform,framebuffer:framebuffer,transition:transition}=this,settings=this.settings;transform.model.setAttributes({aPrev:buffers[0],aCur:buffers[1]}),transform.transformFeedback.setBuffers({vNext:buffers[2]});const springProps={stiffness:settings.stiffness,damping:settings.damping};transform.model.shaderInputs.setProps({spring:springProps}),transform.run({framebuffer:framebuffer,discard:!1,parameters:{viewport:[0,0,1,1]},clearColor:[0,0,0,0]}),cycleBuffers(buffers),this.setBuffer(buffers[1]);this.device.readPixelsToArrayWebGL(framebuffer)[0]>0||transition.end()}delete(){super.delete(),this.transform.destroy(),this.texture.destroy(),this.framebuffer.destroy()}}};class AttributeTransitionManager{constructor(device,{id:id,timeline:timeline}){if(!device)throw new Error("AttributeTransitionManager is constructed without device");this.id=id,this.device=device,this.timeline=timeline,this.transitions={},this.needsRedraw=!1,this.numInstances=1}finalize(){for(const attributeName in this.transitions)this._removeTransition(attributeName)}update({attributes:attributes,transitions:transitions,numInstances:numInstances}){this.numInstances=numInstances||1;for(const attributeName in attributes){const attribute=attributes[attributeName],settings=attribute.getTransitionSetting(transitions);settings&&this._updateAttribute(attributeName,attribute,settings)}for(const attributeName in this.transitions){const attribute=attributes[attributeName];attribute&&attribute.getTransitionSetting(transitions)||this._removeTransition(attributeName)}}hasAttribute(attributeName){const transition=this.transitions[attributeName];return transition&&transition.inProgress}getAttributes(){const animatedAttributes={};for(const attributeName in this.transitions){const transition=this.transitions[attributeName];transition.inProgress&&(animatedAttributes[attributeName]=transition.attributeInTransition)}return animatedAttributes}run(){if(0===this.numInstances)return!1;for(const attributeName in this.transitions){this.transitions[attributeName].update()&&(this.needsRedraw=!0)}const needsRedraw=this.needsRedraw;return this.needsRedraw=!1,needsRedraw}_removeTransition(attributeName){this.transitions[attributeName].delete(),delete this.transitions[attributeName]}_updateAttribute(attributeName,attribute,settings){const transition=this.transitions[attributeName];let isNew=!transition||transition.type!==settings.type;if(isNew){transition&&this._removeTransition(attributeName);const TransitionType=TRANSITION_TYPES[settings.type];TransitionType?this.transitions[attributeName]=new TransitionType({attribute:attribute,timeline:this.timeline,device:this.device}):(log.A.error(`unsupported transition type '${settings.type}'`)(),isNew=!1)}(isNew||attribute.needsRedraw())&&(this.needsRedraw=!0,this.transitions[attributeName].start(settings,this.numInstances))}}class AttributeManager{constructor(device,{id:id="attribute-manager",stats:stats,timeline:timeline}={}){this.mergeBoundsMemoized=(0,memoize.A)(math_utils._Z),this.id=id,this.device=device,this.attributes={},this.updateTriggers={},this.needsRedraw=!0,this.userData={},this.stats=stats,this.attributeTransitionManager=new AttributeTransitionManager(device,{id:`${id}-transitions`,timeline:timeline}),Object.seal(this)}finalize(){for(const attributeName in this.attributes)this.attributes[attributeName].delete();this.attributeTransitionManager.finalize()}getNeedsRedraw(opts={clearRedrawFlags:!1}){const redraw=this.needsRedraw;return this.needsRedraw=this.needsRedraw&&!opts.clearRedrawFlags,redraw&&this.id}setNeedsRedraw(){this.needsRedraw=!0}add(attributes){this._add(attributes)}addInstanced(attributes){this._add(attributes,{stepMode:"instance"})}remove(attributeNameArray){for(const name of attributeNameArray)void 0!==this.attributes[name]&&(this.attributes[name].delete(),delete this.attributes[name])}invalidate(triggerName,dataRange){const invalidatedAttributes=this._invalidateTrigger(triggerName,dataRange);(0,debug.A)("attributeManager.invalidate",this,triggerName,invalidatedAttributes)}invalidateAll(dataRange){for(const attributeName in this.attributes)this.attributes[attributeName].setNeedsUpdate(attributeName,dataRange);(0,debug.A)("attributeManager.invalidate",this,"all")}update({data:data,numInstances:numInstances,startIndices:startIndices=null,transitions:transitions,props:props={},buffers:buffers={},context:context={}}){let updated=!1;(0,debug.A)("attributeManager.updateStart",this),this.stats&&this.stats.get("Update Attributes").timeStart();for(const attributeName in this.attributes){const attribute=this.attributes[attributeName],accessorName=attribute.settings.accessor;attribute.startIndices=startIndices,attribute.numInstances=numInstances,props[attributeName]&&log.A.removed(`props.${attributeName}`,`data.attributes.${attributeName}`)(),attribute.setExternalBuffer(buffers[attributeName])||attribute.setBinaryValue("string"==typeof accessorName?buffers[accessorName]:void 0,data.startIndices)||"string"==typeof accessorName&&!buffers[accessorName]&&attribute.setConstantValue(props[accessorName])||attribute.needsUpdate()&&(updated=!0,this._updateAttribute({attribute:attribute,numInstances:numInstances,data:data,props:props,context:context})),this.needsRedraw=this.needsRedraw||attribute.needsRedraw()}updated&&(0,debug.A)("attributeManager.updateEnd",this,numInstances),this.stats&&this.stats.get("Update Attributes").timeEnd(),this.attributeTransitionManager.update({attributes:this.attributes,numInstances:numInstances,transitions:transitions})}updateTransition(){const{attributeTransitionManager:attributeTransitionManager}=this,transitionUpdated=attributeTransitionManager.run();return this.needsRedraw=this.needsRedraw||transitionUpdated,transitionUpdated}getAttributes(){return{...this.attributes,...this.attributeTransitionManager.getAttributes()}}getBounds(attributeNames){const bounds=attributeNames.map((attributeName=>this.attributes[attributeName]?.getBounds()));return this.mergeBoundsMemoized(bounds)}getChangedAttributes(opts={clearChangedFlags:!1}){const{attributes:attributes,attributeTransitionManager:attributeTransitionManager}=this,changedAttributes={...attributeTransitionManager.getAttributes()};for(const attributeName in attributes){const attribute=attributes[attributeName];attribute.needsRedraw(opts)&&!attributeTransitionManager.hasAttribute(attributeName)&&(changedAttributes[attributeName]=attribute)}return changedAttributes}getBufferLayouts(modelInfo){return Object.values(this.getAttributes()).map((attribute=>attribute.getBufferLayout(modelInfo)))}_add(attributes,overrideOptions){for(const attributeName in attributes){const attribute=attributes[attributeName],props={...attribute,id:attributeName,size:(attribute.isIndexed?1:attribute.size)||1,...overrideOptions};this.attributes[attributeName]=new Attribute(this.device,props)}this._mapUpdateTriggersToAttributes()}_mapUpdateTriggersToAttributes(){const triggers={};for(const attributeName in this.attributes){this.attributes[attributeName].getUpdateTriggers().forEach((triggerName=>{triggers[triggerName]||(triggers[triggerName]=[]),triggers[triggerName].push(attributeName)}))}this.updateTriggers=triggers}_invalidateTrigger(triggerName,dataRange){const{attributes:attributes,updateTriggers:updateTriggers}=this,invalidatedAttributes=updateTriggers[triggerName];return invalidatedAttributes&&invalidatedAttributes.forEach((name=>{const attribute=attributes[name];attribute&&attribute.setNeedsUpdate(attribute.id,dataRange)})),invalidatedAttributes}_updateAttribute(opts){const{attribute:attribute,numInstances:numInstances}=opts;if((0,debug.A)("attribute.updateStart",attribute),attribute.constant)return void attribute.setConstantValue(attribute.value);attribute.allocate(numInstances)&&(0,debug.A)("attribute.allocate",attribute,numInstances);attribute.updateBuffer(opts)&&(this.needsRedraw=!0,(0,debug.A)("attribute.updateEnd",attribute,numInstances))}}},"./node_modules/@deck.gl/core/dist/lib/attribute/transition-settings.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{K:function(){return normalizeTransitionSettings}});const DEFAULT_TRANSITION_SETTINGS={interpolation:{duration:0,easing:t=>t},spring:{stiffness:.05,damping:.5}};function normalizeTransitionSettings(userSettings,layerSettings){if(!userSettings)return null;Number.isFinite(userSettings)&&(userSettings={type:"interpolation",duration:userSettings});const type=userSettings.type||"interpolation";return{...DEFAULT_TRANSITION_SETTINGS[type],...layerSettings,...userSettings,type:type}}},"./node_modules/@deck.gl/core/dist/lib/composite-layer.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var _layer_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/layer.js"),_debug_index_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@deck.gl/core/dist/debug/index.js"),_utils_flatten_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/flatten.js"),_lifecycle_constants_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@deck.gl/core/dist/lifecycle/constants.js");class CompositeLayer extends _layer_js__WEBPACK_IMPORTED_MODULE_0__.A{get isComposite(){return!0}get isDrawable(){return!1}get isLoaded(){return super.isLoaded&&this.getSubLayers().every((layer=>layer.isLoaded))}getSubLayers(){return this.internalState&&this.internalState.subLayers||[]}initializeState(context){}setState(updateObject){super.setState(updateObject),this.setNeedsUpdate()}getPickingInfo({info:info}){const{object:object}=info;return object&&object.__source&&object.__source.parent&&object.__source.parent.id===this.id?(info.object=object.__source.object,info.index=object.__source.index,info):info}filterSubLayer(context){return!0}shouldRenderSubLayer(subLayerId,data){return data&&data.length}getSubLayerClass(subLayerId,DefaultLayerClass){const{_subLayerProps:overridingProps}=this.props;return overridingProps&&overridingProps[subLayerId]&&overridingProps[subLayerId].type||DefaultLayerClass}getSubLayerRow(row,sourceObject,sourceObjectIndex){return row.__source={parent:this,object:sourceObject,index:sourceObjectIndex},row}getSubLayerAccessor(accessor){if("function"==typeof accessor){const objectInfo={index:-1,data:this.props.data,target:[]};return(x,i)=>x&&x.__source?(objectInfo.index=x.__source.index,accessor(x.__source.object,objectInfo)):accessor(x,i)}return accessor}getSubLayerProps(sublayerProps={}){const{opacity:opacity,pickable:pickable,visible:visible,parameters:parameters,getPolygonOffset:getPolygonOffset,highlightedObjectIndex:highlightedObjectIndex,autoHighlight:autoHighlight,highlightColor:highlightColor,coordinateSystem:coordinateSystem,coordinateOrigin:coordinateOrigin,wrapLongitude:wrapLongitude,positionFormat:positionFormat,modelMatrix:modelMatrix,extensions:extensions,fetch:fetch,operation:operation,_subLayerProps:overridingProps}=this.props,newProps={id:"",updateTriggers:{},opacity:opacity,pickable:pickable,visible:visible,parameters:parameters,getPolygonOffset:getPolygonOffset,highlightedObjectIndex:highlightedObjectIndex,autoHighlight:autoHighlight,highlightColor:highlightColor,coordinateSystem:coordinateSystem,coordinateOrigin:coordinateOrigin,wrapLongitude:wrapLongitude,positionFormat:positionFormat,modelMatrix:modelMatrix,extensions:extensions,fetch:fetch,operation:operation},overridingSublayerProps=overridingProps&&sublayerProps.id&&overridingProps[sublayerProps.id],overridingSublayerTriggers=overridingSublayerProps&&overridingSublayerProps.updateTriggers,sublayerId=sublayerProps.id||"sublayer";if(overridingSublayerProps){const propTypes=this.props[_lifecycle_constants_js__WEBPACK_IMPORTED_MODULE_1__.fW],subLayerPropTypes=sublayerProps.type?sublayerProps.type._propTypes:{};for(const key in overridingSublayerProps){const propType=subLayerPropTypes[key]||propTypes[key];propType&&"accessor"===propType.type&&(overridingSublayerProps[key]=this.getSubLayerAccessor(overridingSublayerProps[key]))}}Object.assign(newProps,sublayerProps,overridingSublayerProps),newProps.id=`${this.props.id}-${sublayerId}`,newProps.updateTriggers={all:this.props.updateTriggers?.all,...sublayerProps.updateTriggers,...overridingSublayerTriggers};for(const extension of extensions){const passThroughProps=extension.getSubLayerProps.call(this,extension);passThroughProps&&Object.assign(newProps,passThroughProps,{updateTriggers:Object.assign(newProps.updateTriggers,passThroughProps.updateTriggers)})}return newProps}_updateAutoHighlight(info){for(const layer of this.getSubLayers())layer.updateAutoHighlight(info)}_getAttributeManager(){return null}_postUpdate(updateParams,forceUpdate){let subLayers=this.internalState.subLayers;const shouldUpdate=!subLayers||this.needsUpdate();if(shouldUpdate){const subLayersList=this.renderLayers();subLayers=(0,_utils_flatten_js__WEBPACK_IMPORTED_MODULE_2__.B)(subLayersList,Boolean),this.internalState.subLayers=subLayers}(0,_debug_index_js__WEBPACK_IMPORTED_MODULE_3__.A)("compositeLayer.renderLayers",this,shouldUpdate,subLayers);for(const layer of subLayers)layer.parent=this}}CompositeLayer.layerName="CompositeLayer",__webpack_exports__.A=CompositeLayer},"./node_modules/@deck.gl/core/dist/lib/constants.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Kx:function(){return PROJECTION_MODE},We:function(){return RECOGNIZERS},p5:function(){return UNIT},rf:function(){return COORDINATE_SYSTEM},tg:function(){return EVENT_HANDLERS}});var _utils_log_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/log.js"),mjolnir_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/mjolnir.js/dist/index.js");const COORDINATE_SYSTEM={DEFAULT:-1,LNGLAT:1,METER_OFFSETS:2,LNGLAT_OFFSETS:3,CARTESIAN:0};Object.defineProperty(COORDINATE_SYSTEM,"IDENTITY",{get:()=>(_utils_log_js__WEBPACK_IMPORTED_MODULE_1__.A.deprecated("COORDINATE_SYSTEM.IDENTITY","COORDINATE_SYSTEM.CARTESIAN")(),0)});const PROJECTION_MODE={WEB_MERCATOR:1,GLOBE:2,WEB_MERCATOR_AUTO_OFFSET:4,IDENTITY:0},UNIT={common:0,meters:1,pixels:2},EVENT_HANDLERS={click:"onClick",panstart:"onDragStart",panmove:"onDrag",panend:"onDragEnd"},RECOGNIZERS={multipan:[mjolnir_js__WEBPACK_IMPORTED_MODULE_0__.uq,{threshold:10,direction:mjolnir_js__WEBPACK_IMPORTED_MODULE_0__.e8.Vertical,pointers:2}],pinch:[mjolnir_js__WEBPACK_IMPORTED_MODULE_0__.h1,{},null,["multipan"]],pan:[mjolnir_js__WEBPACK_IMPORTED_MODULE_0__.uq,{threshold:1},["pinch"],["multipan"]],dblclick:[mjolnir_js__WEBPACK_IMPORTED_MODULE_0__.Cx,{event:"dblclick",taps:2}],click:[mjolnir_js__WEBPACK_IMPORTED_MODULE_0__.Cx,{event:"click"},null,["dblclick"]]}},"./node_modules/@deck.gl/core/dist/lib/layer-extension.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var _utils_deep_equal_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/deep-equal.js");class LayerExtension{static get componentName(){return Object.prototype.hasOwnProperty.call(this,"extensionName")?this.extensionName:""}constructor(opts){opts&&(this.opts=opts)}equals(extension){return this===extension||this.constructor===extension.constructor&&(0,_utils_deep_equal_js__WEBPACK_IMPORTED_MODULE_0__.b)(this.opts,extension.opts,1)}getShaders(extension){return null}getSubLayerProps(extension){const{defaultProps:defaultProps}=extension.constructor,newProps={updateTriggers:{}};for(const key in defaultProps)if(key in this.props){const propDef=defaultProps[key],propValue=this.props[key];newProps[key]=propValue,propDef&&"accessor"===propDef.type&&(newProps.updateTriggers[key]=this.props.updateTriggers[key],"function"==typeof propValue&&(newProps[key]=this.getSubLayerAccessor(propValue)))}return newProps}initializeState(context,extension){}updateState(params,extension){}onNeedsRedraw(extension){}getNeedsPickingBuffer(extension){return!1}draw(params,extension){}finalizeState(context,extension){}}LayerExtension.defaultProps={},LayerExtension.extensionName="LayerExtension",__webpack_exports__.A=LayerExtension},"./node_modules/@deck.gl/core/dist/lib/layer.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{A:function(){return lib_layer}});var buffer=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/buffer.js"),webgl_device=__webpack_require__("./node_modules/@luma.gl/webgl/dist/adapter/webgl-device.js"),constants=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/constants.js"),attribute_manager=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/attribute/attribute-manager.js"),transition_settings=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/attribute/transition-settings.js"),common=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js"),transition=__webpack_require__("./node_modules/@deck.gl/core/dist/transitions/transition.js");class CPUInterpolationTransition extends transition.A{get value(){return this._value}_onUpdate(){const{time:time,settings:{fromValue:fromValue,toValue:toValue,duration:duration,easing:easing}}=this,t=easing(time/duration);this._value=(0,common.Cc)(fromValue,toValue,t)}}function updateSpringElement(prev,cur,dest,damping,stiffness){const velocity=cur-prev;return(dest-cur)*stiffness+-velocity*damping+velocity+cur}function distance(value1,value2){if(Array.isArray(value1)){let distanceSquare=0;for(let i=0;i<value1.length;i++){const d=value1[i]-value2[i];distanceSquare+=d*d}return Math.sqrt(distanceSquare)}return Math.abs(value1-value2)}class CPUSpringTransition extends transition.A{get value(){return this._currValue}_onUpdate(){const{fromValue:fromValue,toValue:toValue,damping:damping,stiffness:stiffness}=this.settings,{_prevValue:_prevValue=fromValue,_currValue:_currValue=fromValue}=this;let nextValue=function updateSpring(prev,cur,dest,damping,stiffness){if(Array.isArray(dest)){const next=[];for(let i=0;i<dest.length;i++)next[i]=updateSpringElement(prev[i],cur[i],dest[i],damping,stiffness);return next}return updateSpringElement(prev,cur,dest,damping,stiffness)}(_prevValue,_currValue,toValue,damping,stiffness);const delta=distance(nextValue,toValue),velocity=distance(nextValue,_currValue);delta<1e-5&&velocity<1e-5&&(nextValue=toValue,this.end()),this._prevValue=_currValue,this._currValue=nextValue}}var log=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/log.js");const TRANSITION_TYPES={interpolation:CPUInterpolationTransition,spring:CPUSpringTransition};class UniformTransitionManager{constructor(timeline){this.transitions=new Map,this.timeline=timeline}get active(){return this.transitions.size>0}add(key,fromValue,toValue,settings){const{transitions:transitions}=this;if(transitions.has(key)){const transition=transitions.get(key),{value:value=transition.settings.fromValue}=transition;fromValue=value,this.remove(key)}if(!(settings=(0,transition_settings.K)(settings)))return;const TransitionType=TRANSITION_TYPES[settings.type];if(!TransitionType)return void log.A.error(`unsupported transition type '${settings.type}'`)();const transition=new TransitionType(this.timeline);transition.start({...settings,fromValue:fromValue,toValue:toValue}),transitions.set(key,transition)}remove(key){const{transitions:transitions}=this;transitions.has(key)&&(transitions.get(key).cancel(),transitions.delete(key))}update(){const propsInTransition={};for(const[key,transition]of this.transitions)transition.update(),propsInTransition[key]=transition.value,transition.inProgress||this.remove(key);return propsInTransition}clear(){for(const key of this.transitions.keys())this.remove(key)}}var props=__webpack_require__("./node_modules/@deck.gl/core/dist/lifecycle/props.js"),lifecycle_constants=__webpack_require__("./node_modules/@deck.gl/core/dist/lifecycle/constants.js");function count(container){if(!function isObject(value){return null!==value&&"object"==typeof value}(container))throw new Error("count(): argument not an object");if("function"==typeof container.count)return container.count();if(Number.isFinite(container.size))return container.size;if(Number.isFinite(container.length))return container.length;if(function isPlainObject(value){return null!==value&&"object"==typeof value&&value.constructor===Object}(container))return Object.keys(container).length;throw new Error("count(): argument not a container")}var debug=__webpack_require__("./node_modules/@deck.gl/core/dist/debug/index.js"),assert=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/assert.js"),memoize=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/memoize.js"),shader=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/shader.js"),project_functions=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/project/project-functions.js"),typed_array_manager=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/typed-array-manager.js"),iterable_utils=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/iterable-utils.js"),resources_texture=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/texture.js");const DEFAULT_TEXTURE_PARAMETERS={minFilter:"linear",mipmapFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},internalTextures={};var deep_equal=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/deep-equal.js");const TYPE_DEFINITIONS={boolean:{validate(value,propType){return!0},equal(value1,value2,propType){return Boolean(value1)===Boolean(value2)}},number:{validate(value,propType){return Number.isFinite(value)&&(!("max"in propType)||value<=propType.max)&&(!("min"in propType)||value>=propType.min)}},color:{validate(value,propType){return propType.optional&&!value||isArray(value)&&(3===value.length||4===value.length)},equal(value1,value2,propType){return(0,deep_equal.b)(value1,value2,1)}},accessor:{validate(value,propType){const valueType=getTypeOf(value);return"function"===valueType||valueType===getTypeOf(propType.value)},equal(value1,value2,propType){return"function"==typeof value2||(0,deep_equal.b)(value1,value2,1)}},array:{validate(value,propType){return propType.optional&&!value||isArray(value)},equal(value1,value2,propType){const{compare:compare}=propType,depth=Number.isInteger(compare)?compare:compare?1:0;return compare?(0,deep_equal.b)(value1,value2,depth):value1===value2}},object:{equal(value1,value2,propType){if(propType.ignore)return!0;const{compare:compare}=propType,depth=Number.isInteger(compare)?compare:compare?1:0;return compare?(0,deep_equal.b)(value1,value2,depth):value1===value2}},function:{validate(value,propType){return propType.optional&&!value||"function"==typeof value},equal(value1,value2,propType){return!propType.compare&&!1!==propType.ignore||value1===value2}},data:{transform:(value,propType,component)=>{if(!value)return value;const{dataTransform:dataTransform}=component.props;return dataTransform?dataTransform(value):"string"==typeof value.shape&&value.shape.endsWith("-table")&&Array.isArray(value.data)?value.data:value}},image:{transform:(value,propType,component)=>{const context=component.context;return context&&context.device?function createTexture(owner,device,image,sampler){if(image instanceof resources_texture.g)return image;image.constructor&&"Object"!==image.constructor.name&&(image={data:image});let samplerParameters=null;image.compressed&&(samplerParameters={minFilter:"linear",mipmapFilter:image.data.length>1?"nearest":"linear"});const texture=device.createTexture({...image,sampler:{...DEFAULT_TEXTURE_PARAMETERS,...samplerParameters,...sampler},mipmaps:!0});return internalTextures[texture.id]=owner,texture}(component.id,context.device,value,{...propType.parameters,...component.props.textureParameters}):null},release:(value,propType,component)=>{!function destroyTexture(owner,texture){texture&&texture instanceof resources_texture.g&&internalTextures[texture.id]===owner&&(texture.delete(),delete internalTextures[texture.id])}(component.id,value)}}};function parsePropType(name,propDef){switch(getTypeOf(propDef)){case"object":return normalizePropDefinition(name,propDef);case"array":return normalizePropDefinition(name,{type:"array",value:propDef,compare:!1});case"boolean":return normalizePropDefinition(name,{type:"boolean",value:propDef});case"number":return normalizePropDefinition(name,{type:"number",value:propDef});case"function":return normalizePropDefinition(name,{type:"function",value:propDef,compare:!0});default:return{name:name,type:"unknown",value:propDef}}}function normalizePropDefinition(name,propDef){return"type"in propDef?{name:name,...TYPE_DEFINITIONS[propDef.type],...propDef}:"value"in propDef?{name:name,type:getTypeOf(propDef.value),...propDef}:{name:name,type:"object",value:propDef}}function isArray(value){return Array.isArray(value)||ArrayBuffer.isView(value)}function getTypeOf(value){return isArray(value)?"array":null===value?"null":typeof value}const MergedDefaultPropsCacheKey="_mergedDefaultProps";function getPropsPrototype(componentClass,extensions){if(!(componentClass instanceof component.constructor))return{};let cacheKey=MergedDefaultPropsCacheKey;if(extensions)for(const extension of extensions){const ExtensionClass=extension.constructor;ExtensionClass&&(cacheKey+=`:${ExtensionClass.extensionName||ExtensionClass.name}`)}const defaultProps=getOwnProperty(componentClass,cacheKey);return defaultProps||(componentClass[cacheKey]=function createPropsPrototypeAndTypes(componentClass,extensions){const parent=componentClass.prototype;if(!parent)return null;const parentClass=Object.getPrototypeOf(componentClass),parentDefaultProps=getPropsPrototype(parentClass),componentDefaultProps=getOwnProperty(componentClass,"defaultProps")||{},componentPropDefs=function parsePropTypes(propDefs){const propTypes={},defaultProps={},deprecatedProps={};for(const[propName,propDef]of Object.entries(propDefs)){const deprecated=propDef?.deprecatedFor;if(deprecated)deprecatedProps[propName]=Array.isArray(deprecated)?deprecated:[deprecated];else{const propType=parsePropType(propName,propDef);propTypes[propName]=propType,defaultProps[propName]=propType.value}}return{propTypes:propTypes,defaultProps:defaultProps,deprecatedProps:deprecatedProps}}(componentDefaultProps),defaultProps=Object.assign(Object.create(null),parentDefaultProps,componentPropDefs.defaultProps),propTypes=Object.assign(Object.create(null),parentDefaultProps?.[lifecycle_constants.fW],componentPropDefs.propTypes),deprecatedProps=Object.assign(Object.create(null),parentDefaultProps?.[lifecycle_constants.uH],componentPropDefs.deprecatedProps);for(const extension of extensions){const extensionDefaultProps=getPropsPrototype(extension.constructor);extensionDefaultProps&&(Object.assign(defaultProps,extensionDefaultProps),Object.assign(propTypes,extensionDefaultProps[lifecycle_constants.fW]),Object.assign(deprecatedProps,extensionDefaultProps[lifecycle_constants.uH]))}(function createPropsPrototype(defaultProps,componentClass){const id=function getComponentName(componentClass){const componentName=componentClass.componentName;componentName||log.A.warn(`${componentClass.name}.componentName not specified`)();return componentName||componentClass.name}(componentClass);Object.defineProperties(defaultProps,{id:{writable:!0,value:id}})})(defaultProps,componentClass),function addAsyncPropsToPropPrototype(defaultProps,propTypes){const defaultValues={},descriptors={};for(const propName in propTypes){const propType=propTypes[propName],{name:name,value:value}=propType;propType.async&&(defaultValues[name]=value,descriptors[name]=getDescriptorForAsyncProp(name))}defaultProps[lifecycle_constants.jA]=defaultValues,defaultProps[lifecycle_constants.YN]={},Object.defineProperties(defaultProps,descriptors)}(defaultProps,propTypes),function addDeprecatedPropsToPropPrototype(defaultProps,deprecatedProps){for(const propName in deprecatedProps)Object.defineProperty(defaultProps,propName,{enumerable:!1,set(newValue){const nameStr=`${this.id}: ${propName}`;for(const newPropName of deprecatedProps[propName])create_props_hasOwnProperty(this,newPropName)||(this[newPropName]=newValue);log.A.deprecated(nameStr,deprecatedProps[propName].join("/"))()}})}(defaultProps,deprecatedProps),defaultProps[lifecycle_constants.fW]=propTypes,defaultProps[lifecycle_constants.uH]=deprecatedProps,0!==extensions.length||create_props_hasOwnProperty(componentClass,"_propTypes")||(componentClass._propTypes=propTypes);return defaultProps}(componentClass,extensions||[]))}function getDescriptorForAsyncProp(name){return{enumerable:!0,set(newValue){"string"==typeof newValue||newValue instanceof Promise||(0,iterable_utils.Td)(newValue)?this[lifecycle_constants.YN][name]=newValue:this[lifecycle_constants.vf][name]=newValue},get(){if(this[lifecycle_constants.vf]){if(name in this[lifecycle_constants.vf]){return this[lifecycle_constants.vf][name]||this[lifecycle_constants.jA][name]}if(name in this[lifecycle_constants.YN]){const state=this[lifecycle_constants.r3]&&this[lifecycle_constants.r3].internalState;if(state&&state.hasAsyncProp(name))return state.getAsyncProp(name)||this[lifecycle_constants.jA][name]}}return this[lifecycle_constants.jA][name]}}}function create_props_hasOwnProperty(object,prop){return Object.prototype.hasOwnProperty.call(object,prop)}function getOwnProperty(object,prop){return create_props_hasOwnProperty(object,prop)&&object[prop]}let counter=0;class Component{constructor(...propObjects){this.props=function createProps(component,propObjects){let extensions;for(let i=propObjects.length-1;i>=0;i--){const props=propObjects[i];"extensions"in props&&(extensions=props.extensions)}const propsPrototype=getPropsPrototype(component.constructor,extensions),propsInstance=Object.create(propsPrototype);propsInstance[lifecycle_constants.r3]=component,propsInstance[lifecycle_constants.YN]={},propsInstance[lifecycle_constants.vf]={};for(let i=0;i<propObjects.length;++i){const props=propObjects[i];for(const key in props)propsInstance[key]=props[key]}return Object.freeze(propsInstance),propsInstance}(this,propObjects),this.id=this.props.id,this.count=counter++}clone(newProps){const{props:props}=this,asyncProps={};for(const key in props[lifecycle_constants.jA])key in props[lifecycle_constants.vf]?asyncProps[key]=props[lifecycle_constants.vf][key]:key in props[lifecycle_constants.YN]&&(asyncProps[key]=props[lifecycle_constants.YN][key]);return new this.constructor({...props,...asyncProps,...newProps})}}Component.componentName="Component",Component.defaultProps={};var component=Component;const EMPTY_PROPS=Object.freeze({});class ComponentState{constructor(component){this.component=component,this.asyncProps={},this.onAsyncPropUpdated=()=>{},this.oldProps=null,this.oldAsyncProps=null}finalize(){for(const propName in this.asyncProps){const asyncProp=this.asyncProps[propName];asyncProp&&asyncProp.type&&asyncProp.type.release&&asyncProp.type.release(asyncProp.resolvedValue,asyncProp.type,this.component)}this.asyncProps={},this.component=null,this.resetOldProps()}getOldProps(){return this.oldAsyncProps||this.oldProps||EMPTY_PROPS}resetOldProps(){this.oldAsyncProps=null,this.oldProps=this.component?this.component.props:null}hasAsyncProp(propName){return propName in this.asyncProps}getAsyncProp(propName){const asyncProp=this.asyncProps[propName];return asyncProp&&asyncProp.resolvedValue}isAsyncPropLoading(propName){if(propName){const asyncProp=this.asyncProps[propName];return Boolean(asyncProp&&asyncProp.pendingLoadCount>0&&asyncProp.pendingLoadCount!==asyncProp.resolvedLoadCount)}for(const key in this.asyncProps)if(this.isAsyncPropLoading(key))return!0;return!1}reloadAsyncProp(propName,value){this._watchPromise(propName,Promise.resolve(value))}setAsyncProps(props){this.component=props[lifecycle_constants.r3]||this.component;const resolvedValues=props[lifecycle_constants.vf]||{},originalValues=props[lifecycle_constants.YN]||props,defaultValues=props[lifecycle_constants.jA]||{};for(const propName in resolvedValues){const value=resolvedValues[propName];this._createAsyncPropData(propName,defaultValues[propName]),this._updateAsyncProp(propName,value),resolvedValues[propName]=this.getAsyncProp(propName)}for(const propName in originalValues){const value=originalValues[propName];this._createAsyncPropData(propName,defaultValues[propName]),this._updateAsyncProp(propName,value)}}_fetch(propName,url){return null}_onResolve(propName,value){}_onError(propName,error){}_updateAsyncProp(propName,value){this._didAsyncInputValueChange(propName,value)&&("string"==typeof value&&(value=this._fetch(propName,value)),value instanceof Promise?this._watchPromise(propName,value):(0,iterable_utils.Td)(value)?this._resolveAsyncIterable(propName,value):this._setPropValue(propName,value))}_freezeAsyncOldProps(){if(!this.oldAsyncProps&&this.oldProps){this.oldAsyncProps=Object.create(this.oldProps);for(const propName in this.asyncProps)Object.defineProperty(this.oldAsyncProps,propName,{enumerable:!0,value:this.oldProps[propName]})}}_didAsyncInputValueChange(propName,value){const asyncProp=this.asyncProps[propName];return value!==asyncProp.resolvedValue&&value!==asyncProp.lastValue&&(asyncProp.lastValue=value,!0)}_setPropValue(propName,value){this._freezeAsyncOldProps();const asyncProp=this.asyncProps[propName];asyncProp&&(value=this._postProcessValue(asyncProp,value),asyncProp.resolvedValue=value,asyncProp.pendingLoadCount++,asyncProp.resolvedLoadCount=asyncProp.pendingLoadCount)}_setAsyncPropValue(propName,value,loadCount){const asyncProp=this.asyncProps[propName];asyncProp&&loadCount>=asyncProp.resolvedLoadCount&&void 0!==value&&(this._freezeAsyncOldProps(),asyncProp.resolvedValue=value,asyncProp.resolvedLoadCount=loadCount,this.onAsyncPropUpdated(propName,value))}_watchPromise(propName,promise){const asyncProp=this.asyncProps[propName];if(asyncProp){asyncProp.pendingLoadCount++;const loadCount=asyncProp.pendingLoadCount;promise.then((data=>{this.component&&(data=this._postProcessValue(asyncProp,data),this._setAsyncPropValue(propName,data,loadCount),this._onResolve(propName,data))})).catch((error=>{this._onError(propName,error)}))}}async _resolveAsyncIterable(propName,iterable){if("data"!==propName)return void this._setPropValue(propName,iterable);const asyncProp=this.asyncProps[propName];if(!asyncProp)return;asyncProp.pendingLoadCount++;const loadCount=asyncProp.pendingLoadCount;let data=[],count=0;for await(const chunk of iterable){if(!this.component)return;const{dataTransform:dataTransform}=this.component.props;data=dataTransform?dataTransform(chunk,data):data.concat(chunk),Object.defineProperty(data,"__diff",{enumerable:!1,value:[{startRow:count,endRow:data.length}]}),count=data.length,this._setAsyncPropValue(propName,data,loadCount)}this._onResolve(propName,data)}_postProcessValue(asyncProp,value){const propType=asyncProp.type;return propType&&this.component&&(propType.release&&propType.release(asyncProp.resolvedValue,propType,this.component),propType.transform)?propType.transform(value,propType,this.component):value}_createAsyncPropData(propName,defaultValue){if(!this.asyncProps[propName]){const propTypes=this.component&&this.component.props[lifecycle_constants.fW];this.asyncProps[propName]={type:propTypes&&propTypes[propName],lastValue:null,resolvedValue:defaultValue,pendingLoadCount:0,resolvedLoadCount:0}}}}class LayerState extends ComponentState{constructor({attributeManager:attributeManager,layer:layer}){super(layer),this.attributeManager=attributeManager,this.needsRedraw=!0,this.needsUpdate=!0,this.subLayers=null,this.usesPickingColorCache=!1}get layer(){return this.component}_fetch(propName,url){const layer=this.layer,fetch=layer?.props.fetch;return fetch?fetch(url,{propName:propName,layer:layer}):super._fetch(propName,url)}_onResolve(propName,value){const layer=this.layer;if(layer){const onDataLoad=layer.props.onDataLoad;"data"===propName&&onDataLoad&&onDataLoad(value,{propName:propName,layer:layer})}}_onError(propName,error){const layer=this.layer;layer&&layer.raiseError(error,`loading ${propName} of ${this.layer}`)}}var dist=__webpack_require__("./node_modules/@math.gl/web-mercator/dist/index.js"),load=__webpack_require__("./node_modules/@loaders.gl/core/dist/lib/api/load.js");const EMPTY_ARRAY=Object.freeze([]),areViewportsEqual=(0,memoize.A)((({oldViewport:oldViewport,viewport:viewport})=>oldViewport.equals(viewport)));let pickingColorCache=new Uint8ClampedArray(0);const defaultProps={data:{type:"data",value:EMPTY_ARRAY,async:!0},dataComparator:{type:"function",value:null,optional:!0},_dataDiff:{type:"function",value:data=>data&&data.__diff,optional:!0},dataTransform:{type:"function",value:null,optional:!0},onDataLoad:{type:"function",value:null,optional:!0},onError:{type:"function",value:null,optional:!0},fetch:{type:"function",value:(url,{propName:propName,layer:layer,loaders:loaders,loadOptions:loadOptions,signal:signal})=>{const{resourceManager:resourceManager}=layer.context;loadOptions=loadOptions||layer.getLoadOptions(),loaders=loaders||layer.props.loaders,signal&&(loadOptions={...loadOptions,fetch:{...loadOptions?.fetch,signal:signal}});let inResourceManager=resourceManager.contains(url);return inResourceManager||loadOptions||(resourceManager.add({resourceId:url,data:(0,load.H)(url,loaders),persistent:!1}),inResourceManager=!0),inResourceManager?resourceManager.subscribe({resourceId:url,onChange:data=>layer.internalState?.reloadAsyncProp(propName,data),consumerId:layer.id,requestId:propName}):(0,load.H)(url,loaders,loadOptions)}},updateTriggers:{},visible:!0,pickable:!1,opacity:{type:"number",min:0,max:1,value:1},operation:"draw",onHover:{type:"function",value:null,optional:!0},onClick:{type:"function",value:null,optional:!0},onDragStart:{type:"function",value:null,optional:!0},onDrag:{type:"function",value:null,optional:!0},onDragEnd:{type:"function",value:null,optional:!0},coordinateSystem:constants.rf.DEFAULT,coordinateOrigin:{type:"array",value:[0,0,0],compare:!0},modelMatrix:{type:"array",value:null,compare:!0,optional:!0},wrapLongitude:!1,positionFormat:"XYZ",colorFormat:"RGBA",parameters:{type:"object",value:{},optional:!0,compare:2},loadOptions:{type:"object",value:null,optional:!0,ignore:!0},transitions:null,extensions:[],loaders:{type:"array",value:[],optional:!0,ignore:!0},getPolygonOffset:{type:"function",value:({layerIndex:layerIndex})=>[0,100*-layerIndex]},highlightedObjectIndex:null,autoHighlight:!1,highlightColor:{type:"accessor",value:[0,0,128,128]}};class Layer extends component{constructor(){super(...arguments),this.internalState=null,this.lifecycle=lifecycle_constants.VD.NO_STATE,this.parent=null}static get componentName(){return Object.prototype.hasOwnProperty.call(this,"layerName")?this.layerName:""}get root(){let layer=this;for(;layer.parent;)layer=layer.parent;return layer}toString(){return`${this.constructor.layerName||this.constructor.name}({id: '${this.props.id}'})`}project(xyz){(0,assert.A)(this.internalState);const viewport=this.internalState.viewport||this.context.viewport,worldPosition=(0,project_functions.w)(xyz,{viewport:viewport,modelMatrix:this.props.modelMatrix,coordinateOrigin:this.props.coordinateOrigin,coordinateSystem:this.props.coordinateSystem}),[x,y,z]=(0,dist.VJ)(worldPosition,viewport.pixelProjectionMatrix);return 2===xyz.length?[x,y]:[x,y,z]}unproject(xy){(0,assert.A)(this.internalState);return(this.internalState.viewport||this.context.viewport).unproject(xy)}projectPosition(xyz,params){(0,assert.A)(this.internalState);const viewport=this.internalState.viewport||this.context.viewport;return(0,project_functions.R)(xyz,{viewport:viewport,modelMatrix:this.props.modelMatrix,coordinateOrigin:this.props.coordinateOrigin,coordinateSystem:this.props.coordinateSystem,...params})}get isComposite(){return!1}get isDrawable(){return!0}setState(partialState){this.setChangeFlags({stateChanged:!0}),Object.assign(this.state,partialState),this.setNeedsRedraw()}setNeedsRedraw(){this.internalState&&(this.internalState.needsRedraw=!0)}setNeedsUpdate(){this.internalState&&(this.context.layerManager.setNeedsUpdate(String(this)),this.internalState.needsUpdate=!0)}get isLoaded(){return!!this.internalState&&!this.internalState.isAsyncPropLoading()}get wrapLongitude(){return this.props.wrapLongitude}isPickable(){return this.props.pickable&&this.props.visible}getModels(){const state=this.state;return state&&(state.models||state.model&&[state.model])||[]}setShaderModuleProps(...props){for(const model of this.getModels())model.shaderInputs.setProps(...props)}getAttributeManager(){return this.internalState&&this.internalState.attributeManager}getCurrentLayer(){return this.internalState&&this.internalState.layer}getLoadOptions(){return this.props.loadOptions}use64bitPositions(){const{coordinateSystem:coordinateSystem}=this.props;return coordinateSystem===constants.rf.DEFAULT||coordinateSystem===constants.rf.LNGLAT||coordinateSystem===constants.rf.CARTESIAN}onHover(info,pickingEvent){return this.props.onHover&&this.props.onHover(info,pickingEvent)||!1}onClick(info,pickingEvent){return this.props.onClick&&this.props.onClick(info,pickingEvent)||!1}nullPickingColor(){return[0,0,0]}encodePickingColor(i,target=[]){return target[0]=i+1&255,target[1]=i+1>>8&255,target[2]=i+1>>8>>8&255,target}decodePickingColor(color){(0,assert.A)(color instanceof Uint8Array);const[i1,i2,i3]=color;return i1+256*i2+65536*i3-1}getNumInstances(){return Number.isFinite(this.props.numInstances)?this.props.numInstances:this.state&&void 0!==this.state.numInstances?this.state.numInstances:count(this.props.data)}getStartIndices(){return this.props.startIndices?this.props.startIndices:this.state&&this.state.startIndices?this.state.startIndices:null}getBounds(){return this.getAttributeManager()?.getBounds(["positions","instancePositions"])}getShaders(shaders){shaders=(0,shader.n)(shaders,{disableWarnings:!0,modules:this.context.defaultShaderModules});for(const extension of this.props.extensions)shaders=(0,shader.n)(shaders,extension.getShaders.call(this,extension));return shaders}shouldUpdateState(params){return params.changeFlags.propsOrDataChanged}updateState(params){const attributeManager=this.getAttributeManager(),{dataChanged:dataChanged}=params.changeFlags;if(dataChanged&&attributeManager)if(Array.isArray(dataChanged))for(const dataRange of dataChanged)attributeManager.invalidateAll(dataRange);else attributeManager.invalidateAll();if(attributeManager){const{props:props}=params,hasPickingBuffer=this.internalState.hasPickingBuffer,needsPickingBuffer=Number.isInteger(props.highlightedObjectIndex)||props.pickable||props.extensions.some((extension=>extension.getNeedsPickingBuffer.call(this,extension)));if(hasPickingBuffer!==needsPickingBuffer){this.internalState.hasPickingBuffer=needsPickingBuffer;const{pickingColors:pickingColors,instancePickingColors:instancePickingColors}=attributeManager.attributes,pickingColorsAttribute=pickingColors||instancePickingColors;pickingColorsAttribute&&(needsPickingBuffer&&pickingColorsAttribute.constant&&(pickingColorsAttribute.constant=!1,attributeManager.invalidate(pickingColorsAttribute.id)),pickingColorsAttribute.value||needsPickingBuffer||(pickingColorsAttribute.constant=!0,pickingColorsAttribute.value=[0,0,0]))}}}finalizeState(context){for(const model of this.getModels())model.destroy();const attributeManager=this.getAttributeManager();attributeManager&&attributeManager.finalize(),this.context&&this.context.resourceManager.unsubscribe({consumerId:this.id}),this.internalState&&(this.internalState.uniformTransitions.clear(),this.internalState.finalize())}draw(opts){for(const model of this.getModels())model.draw(opts.renderPass)}getPickingInfo({info:info,mode:mode,sourceLayer:sourceLayer}){const{index:index}=info;return index>=0&&Array.isArray(this.props.data)&&(info.object=this.props.data[index]),info}raiseError(error,message){message&&(error=new Error(`${message}: ${error.message}`,{cause:error})),this.props.onError?.(error)||this.context?.onError?.(error,this)}getNeedsRedraw(opts={clearRedrawFlags:!1}){return this._getNeedsRedraw(opts)}needsUpdate(){return!!this.internalState&&(this.internalState.needsUpdate||this.hasUniformTransition()||this.shouldUpdateState(this._getUpdateParams()))}hasUniformTransition(){return this.internalState?.uniformTransitions.active||!1}activateViewport(viewport){if(!this.internalState)return;const oldViewport=this.internalState.viewport;this.internalState.viewport=viewport,oldViewport&&areViewportsEqual({oldViewport:oldViewport,viewport:viewport})||(this.setChangeFlags({viewportChanged:!0}),this.isComposite?this.needsUpdate()&&this.setNeedsUpdate():this._update())}invalidateAttribute(name="all"){const attributeManager=this.getAttributeManager();attributeManager&&("all"===name?attributeManager.invalidateAll():attributeManager.invalidate(name))}updateAttributes(changedAttributes){let bufferLayoutChanged=!1;for(const id in changedAttributes)changedAttributes[id].layoutChanged()&&(bufferLayoutChanged=!0);for(const model of this.getModels())this._setModelAttributes(model,changedAttributes,bufferLayoutChanged)}_updateAttributes(){const attributeManager=this.getAttributeManager();if(!attributeManager)return;const props=this.props,numInstances=this.getNumInstances(),startIndices=this.getStartIndices();attributeManager.update({data:props.data,numInstances:numInstances,startIndices:startIndices,props:props,transitions:props.transitions,buffers:props.data.attributes,context:this});const changedAttributes=attributeManager.getChangedAttributes({clearChangedFlags:!0});this.updateAttributes(changedAttributes)}_updateAttributeTransition(){const attributeManager=this.getAttributeManager();attributeManager&&attributeManager.updateTransition()}_updateUniformTransition(){const{uniformTransitions:uniformTransitions}=this.internalState;if(uniformTransitions.active){const propsInTransition=uniformTransitions.update(),props=Object.create(this.props);for(const key in propsInTransition)Object.defineProperty(props,key,{value:propsInTransition[key]});return props}return this.props}calculateInstancePickingColors(attribute,{numInstances:numInstances}){if(attribute.constant)return;const cacheSize=Math.floor(pickingColorCache.length/4);if(this.internalState.usesPickingColorCache=!0,cacheSize<numInstances){numInstances>16777215&&log.A.warn("Layer has too many data objects. Picking might not be able to distinguish all objects.")(),pickingColorCache=typed_array_manager.A.allocate(pickingColorCache,numInstances,{size:4,copy:!0,maxCount:Math.max(numInstances,16777215)});const newCacheSize=Math.floor(pickingColorCache.length/4),pickingColor=[0,0,0];for(let i=cacheSize;i<newCacheSize;i++)this.encodePickingColor(i,pickingColor),pickingColorCache[4*i+0]=pickingColor[0],pickingColorCache[4*i+1]=pickingColor[1],pickingColorCache[4*i+2]=pickingColor[2],pickingColorCache[4*i+3]=0}attribute.value=pickingColorCache.subarray(0,4*numInstances)}_setModelAttributes(model,changedAttributes,bufferLayoutChanged=!1){if(!Object.keys(changedAttributes).length)return;if(bufferLayoutChanged){const attributeManager=this.getAttributeManager();model.setBufferLayout(attributeManager.getBufferLayouts(model)),changedAttributes=attributeManager.getAttributes()}const excludeAttributes=model.userData?.excludeAttributes||{},attributeBuffers={},constantAttributes={};for(const name in changedAttributes){if(excludeAttributes[name])continue;const values=changedAttributes[name].getValue();for(const attributeName in values){const value=values[attributeName];value instanceof buffer.h?changedAttributes[name].settings.isIndexed?model.setIndexBuffer(value):attributeBuffers[attributeName]=value:value&&(constantAttributes[attributeName]=value)}}model.setAttributes(attributeBuffers),model.setConstantAttributes(constantAttributes)}disablePickingIndex(objectIndex){const data=this.props.data;if(!("attributes"in data))return void this._disablePickingIndex(objectIndex);const{pickingColors:pickingColors,instancePickingColors:instancePickingColors}=this.getAttributeManager().attributes,colors=pickingColors||instancePickingColors,externalColorAttribute=colors&&data.attributes&&data.attributes[colors.id];if(externalColorAttribute&&externalColorAttribute.value){const values=externalColorAttribute.value,objectColor=this.encodePickingColor(objectIndex);for(let index=0;index<data.length;index++){const i=colors.getVertexOffset(index);values[i]===objectColor[0]&&values[i+1]===objectColor[1]&&values[i+2]===objectColor[2]&&this._disablePickingIndex(index)}}else this._disablePickingIndex(objectIndex)}_disablePickingIndex(objectIndex){const{pickingColors:pickingColors,instancePickingColors:instancePickingColors}=this.getAttributeManager().attributes,colors=pickingColors||instancePickingColors;if(!colors)return;const start=colors.getVertexOffset(objectIndex),end=colors.getVertexOffset(objectIndex+1);colors.buffer.write(new Uint8Array(end-start),start)}restorePickingColors(){const{pickingColors:pickingColors,instancePickingColors:instancePickingColors}=this.getAttributeManager().attributes,colors=pickingColors||instancePickingColors;colors&&(this.internalState.usesPickingColorCache&&colors.value.buffer!==pickingColorCache.buffer&&(colors.value=pickingColorCache.subarray(0,colors.value.length)),colors.updateSubBuffer({startOffset:0}))}_initialize(){(0,assert.A)(!this.internalState),(0,assert.A)(Number.isFinite(this.props.coordinateSystem)),(0,debug.A)("layer.initialize",this);const attributeManager=this._getAttributeManager();attributeManager&&attributeManager.addInstanced({instancePickingColors:{type:"uint8",size:4,noAlloc:!0,update:this.calculateInstancePickingColors}}),this.internalState=new LayerState({attributeManager:attributeManager,layer:this}),this._clearChangeFlags(),this.state={},Object.defineProperty(this.state,"attributeManager",{get:()=>(log.A.deprecated("layer.state.attributeManager","layer.getAttributeManager()")(),attributeManager)}),this.internalState.uniformTransitions=new UniformTransitionManager(this.context.timeline),this.internalState.onAsyncPropUpdated=this._onAsyncPropUpdated.bind(this),this.internalState.setAsyncProps(this.props),this.initializeState(this.context);for(const extension of this.props.extensions)extension.initializeState.call(this,this.context,extension);this.setChangeFlags({dataChanged:"init",propsChanged:"init",viewportChanged:!0,extensionsChanged:!0}),this._update()}_transferState(oldLayer){(0,debug.A)("layer.matched",this,this===oldLayer);const{state:state,internalState:internalState}=oldLayer;this!==oldLayer&&(this.internalState=internalState,this.state=state,this.internalState.setAsyncProps(this.props),this._diffProps(this.props,this.internalState.getOldProps()))}_update(){const stateNeedsUpdate=this.needsUpdate();if((0,debug.A)("layer.update",this,stateNeedsUpdate),!stateNeedsUpdate)return;const currentProps=this.props,context=this.context,internalState=this.internalState,currentViewport=context.viewport,propsInTransition=this._updateUniformTransition();internalState.propsInTransition=propsInTransition,context.viewport=internalState.viewport||currentViewport,this.props=propsInTransition;try{const updateParams=this._getUpdateParams(),oldModels=this.getModels();if(context.device)this.updateState(updateParams);else try{this.updateState(updateParams)}catch(error){}for(const extension of this.props.extensions)extension.updateState.call(this,updateParams,extension);this.setNeedsRedraw(),this._updateAttributes();const modelChanged=this.getModels()[0]!==oldModels[0];this._postUpdate(updateParams,modelChanged)}finally{context.viewport=currentViewport,this.props=currentProps,this._clearChangeFlags(),internalState.needsUpdate=!1,internalState.resetOldProps()}}_finalize(){(0,debug.A)("layer.finalize",this),this.finalizeState(this.context);for(const extension of this.props.extensions)extension.finalizeState.call(this,this.context,extension)}_drawLayer({renderPass:renderPass,shaderModuleProps:shaderModuleProps=null,uniforms:uniforms={},parameters:parameters={}}){this._updateAttributeTransition();const currentProps=this.props,context=this.context;this.props=this.internalState.propsInTransition||currentProps;try{shaderModuleProps&&this.setShaderModuleProps(shaderModuleProps);const{getPolygonOffset:getPolygonOffset}=this.props,offsets=getPolygonOffset&&getPolygonOffset(uniforms)||[0,0];context.device instanceof webgl_device.e&&context.device.setParametersWebGL({polygonOffset:offsets});for(const model of this.getModels())"webgpu"===model.device.type?model.setParameters({...model.parameters,...parameters}):model.setParameters(parameters);if(context.device instanceof webgl_device.e)context.device.withParametersWebGL(parameters,(()=>{const opts={renderPass:renderPass,shaderModuleProps:shaderModuleProps,uniforms:uniforms,parameters:parameters,context:context};for(const extension of this.props.extensions)extension.draw.call(this,opts,extension);this.draw(opts)}));else{const opts={renderPass:renderPass,shaderModuleProps:shaderModuleProps,uniforms:uniforms,parameters:parameters,context:context};for(const extension of this.props.extensions)extension.draw.call(this,opts,extension);this.draw(opts)}}finally{this.props=currentProps}}getChangeFlags(){return this.internalState?.changeFlags}setChangeFlags(flags){if(!this.internalState)return;const{changeFlags:changeFlags}=this.internalState;for(const key in flags)if(flags[key]){let flagChanged=!1;if("dataChanged"===key){const dataChangedReason=flags[key],prevDataChangedReason=changeFlags[key];dataChangedReason&&Array.isArray(prevDataChangedReason)&&(changeFlags.dataChanged=Array.isArray(dataChangedReason)?prevDataChangedReason.concat(dataChangedReason):dataChangedReason,flagChanged=!0)}changeFlags[key]||(changeFlags[key]=flags[key],flagChanged=!0),flagChanged&&(0,debug.A)("layer.changeFlag",this,key,flags)}const propsOrDataChanged=Boolean(changeFlags.dataChanged||changeFlags.updateTriggersChanged||changeFlags.propsChanged||changeFlags.extensionsChanged);changeFlags.propsOrDataChanged=propsOrDataChanged,changeFlags.somethingChanged=propsOrDataChanged||changeFlags.viewportChanged||changeFlags.stateChanged}_clearChangeFlags(){this.internalState.changeFlags={dataChanged:!1,propsChanged:!1,updateTriggersChanged:!1,viewportChanged:!1,stateChanged:!1,extensionsChanged:!1,propsOrDataChanged:!1,somethingChanged:!1}}_diffProps(newProps,oldProps){const changeFlags=(0,props.mg)(newProps,oldProps);if(changeFlags.updateTriggersChanged)for(const key in changeFlags.updateTriggersChanged)changeFlags.updateTriggersChanged[key]&&this.invalidateAttribute(key);if(changeFlags.transitionsChanged)for(const key in changeFlags.transitionsChanged)this.internalState.uniformTransitions.add(key,oldProps[key],newProps[key],newProps.transitions?.[key]);return this.setChangeFlags(changeFlags)}validateProps(){(0,props.zo)(this.props)}updateAutoHighlight(info){this.props.autoHighlight&&!Number.isInteger(this.props.highlightedObjectIndex)&&this._updateAutoHighlight(info)}_updateAutoHighlight(info){const picking={highlightedObjectColor:info.picked?info.color:null},{highlightColor:highlightColor}=this.props;info.picked&&"function"==typeof highlightColor&&(picking.highlightColor=highlightColor(info)),this.setShaderModuleProps({picking:picking}),this.setNeedsRedraw()}_getAttributeManager(){const context=this.context;return new attribute_manager.A(context.device,{id:this.props.id,stats:context.stats,timeline:context.timeline})}_postUpdate(updateParams,forceUpdate){const{props:props,oldProps:oldProps}=updateParams,model=this.state.model;model?.isInstanced&&model.setInstanceCount(this.getNumInstances());const{autoHighlight:autoHighlight,highlightedObjectIndex:highlightedObjectIndex,highlightColor:highlightColor}=props;if(forceUpdate||oldProps.autoHighlight!==autoHighlight||oldProps.highlightedObjectIndex!==highlightedObjectIndex||oldProps.highlightColor!==highlightColor){const picking={};Array.isArray(highlightColor)&&(picking.highlightColor=highlightColor),(forceUpdate||oldProps.autoHighlight!==autoHighlight||highlightedObjectIndex!==oldProps.highlightedObjectIndex)&&(picking.highlightedObjectColor=Number.isFinite(highlightedObjectIndex)&&highlightedObjectIndex>=0?this.encodePickingColor(highlightedObjectIndex):null),this.setShaderModuleProps({picking:picking})}}_getUpdateParams(){return{props:this.props,oldProps:this.internalState.getOldProps(),context:this.context,changeFlags:this.internalState.changeFlags}}_getNeedsRedraw(opts){if(!this.internalState)return!1;let redraw=!1;redraw=redraw||this.internalState.needsRedraw&&this.id;const attributeManager=this.getAttributeManager(),attributeManagerNeedsRedraw=!!attributeManager&&attributeManager.getNeedsRedraw(opts);if(redraw=redraw||attributeManagerNeedsRedraw,redraw)for(const extension of this.props.extensions)extension.onNeedsRedraw.call(this,extension);return this.internalState.needsRedraw=this.internalState.needsRedraw&&!opts.clearRedrawFlags,redraw}_onAsyncPropUpdated(){this._diffProps(this.props,this.internalState.getOldProps()),this.setNeedsUpdate()}}Layer.defaultProps=defaultProps,Layer.layerName="Layer";var lib_layer=Layer},"./node_modules/@deck.gl/core/dist/lifecycle/constants.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{VD:function(){return LIFECYCLE},YN:function(){return ASYNC_ORIGINAL_SYMBOL},fW:function(){return PROP_TYPES_SYMBOL},jA:function(){return ASYNC_DEFAULTS_SYMBOL},r3:function(){return COMPONENT_SYMBOL},uH:function(){return DEPRECATED_PROPS_SYMBOL},vf:function(){return ASYNC_RESOLVED_SYMBOL}});const LIFECYCLE={NO_STATE:"Awaiting state",MATCHED:"Matched. State transferred from previous layer",INITIALIZED:"Initialized",AWAITING_GC:"Discarded. Awaiting garbage collection",AWAITING_FINALIZATION:"No longer matched. Awaiting garbage collection",FINALIZED:"Finalized! Awaiting garbage collection"},COMPONENT_SYMBOL=Symbol.for("component"),PROP_TYPES_SYMBOL=Symbol.for("propTypes"),DEPRECATED_PROPS_SYMBOL=Symbol.for("deprecatedProps"),ASYNC_DEFAULTS_SYMBOL=Symbol.for("asyncPropDefaults"),ASYNC_ORIGINAL_SYMBOL=Symbol.for("asyncPropOriginal"),ASYNC_RESOLVED_SYMBOL=Symbol.for("asyncPropResolved")},"./node_modules/@deck.gl/core/dist/lifecycle/props.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Me:function(){return compareProps},mg:function(){return diffProps},zo:function(){return validateProps}});var _constants_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@deck.gl/core/dist/lifecycle/constants.js");function validateProps(props){const propTypes=props[_constants_js__WEBPACK_IMPORTED_MODULE_0__.fW];for(const propName in propTypes){const propType=propTypes[propName],{validate:validate}=propType;if(validate&&!validate(props[propName],propType))throw new Error(`Invalid prop ${propName}: ${props[propName]}`)}}function diffProps(props,oldProps){const propsChangedReason=compareProps({newProps:props,oldProps:oldProps,propTypes:props[_constants_js__WEBPACK_IMPORTED_MODULE_0__.fW],ignoreProps:{data:null,updateTriggers:null,extensions:null,transitions:null}}),dataChangedReason=function diffDataProps(props,oldProps){if(null===oldProps)return"oldProps is null, initial diff";let dataChanged=!1;const{dataComparator:dataComparator,_dataDiff:_dataDiff}=props;dataComparator?dataComparator(props.data,oldProps.data)||(dataChanged="Data comparator detected a change"):props.data!==oldProps.data&&(dataChanged="A new data container was supplied");dataChanged&&_dataDiff&&(dataChanged=_dataDiff(props.data,oldProps.data)||dataChanged);return dataChanged}(props,oldProps);let updateTriggersChangedReason=!1;return dataChangedReason||(updateTriggersChangedReason=function diffUpdateTriggers(props,oldProps){if(null===oldProps)return{all:!0};if("all"in props.updateTriggers){if(diffUpdateTrigger(props,oldProps,"all"))return{all:!0}}const reason={};let changed=!1;for(const triggerName in props.updateTriggers)if("all"!==triggerName){diffUpdateTrigger(props,oldProps,triggerName)&&(reason[triggerName]=!0,changed=!0)}return!!changed&&reason}(props,oldProps)),{dataChanged:dataChangedReason,propsChanged:propsChangedReason,updateTriggersChanged:updateTriggersChangedReason,extensionsChanged:diffExtensions(props,oldProps),transitionsChanged:diffTransitions(props,oldProps)}}function diffTransitions(props,oldProps){if(!props.transitions)return!1;const result={},propTypes=props[_constants_js__WEBPACK_IMPORTED_MODULE_0__.fW];let changed=!1;for(const key in props.transitions){const propType=propTypes[key],type=propType&&propType.type;("number"===type||"color"===type||"array"===type)&&comparePropValues(props[key],oldProps[key],propType)&&(result[key]=!0,changed=!0)}return!!changed&&result}function compareProps({newProps:newProps,oldProps:oldProps,ignoreProps:ignoreProps={},propTypes:propTypes={},triggerName:triggerName="props"}){if(oldProps===newProps)return!1;if("object"!=typeof newProps||null===newProps)return`${triggerName} changed shallowly`;if("object"!=typeof oldProps||null===oldProps)return`${triggerName} changed shallowly`;for(const key of Object.keys(newProps))if(!(key in ignoreProps)){if(!(key in oldProps))return`${triggerName}.${key} added`;const changed=comparePropValues(newProps[key],oldProps[key],propTypes[key]);if(changed)return`${triggerName}.${key} ${changed}`}for(const key of Object.keys(oldProps))if(!(key in ignoreProps)){if(!(key in newProps))return`${triggerName}.${key} dropped`;if(!Object.hasOwnProperty.call(newProps,key)){const changed=comparePropValues(newProps[key],oldProps[key],propTypes[key]);if(changed)return`${triggerName}.${key} ${changed}`}}return!1}function comparePropValues(newProp,oldProp,propType){let equal=propType&&propType.equal;return equal&&!equal(newProp,oldProp,propType)?"changed deeply":equal||(equal=newProp&&oldProp&&newProp.equals,!equal||equal.call(newProp,oldProp))?equal||oldProp===newProp?null:"changed shallowly":"changed deeply"}function diffExtensions(props,oldProps){if(null===oldProps)return!0;const oldExtensions=oldProps.extensions,{extensions:extensions}=props;if(extensions===oldExtensions)return!1;if(!oldExtensions||!extensions)return!0;if(extensions.length!==oldExtensions.length)return!0;for(let i=0;i<extensions.length;i++)if(!extensions[i].equals(oldExtensions[i]))return!0;return!1}function diffUpdateTrigger(props,oldProps,triggerName){let newTriggers=props.updateTriggers[triggerName];newTriggers=null==newTriggers?{}:newTriggers;let oldTriggers=oldProps.updateTriggers[triggerName];oldTriggers=null==oldTriggers?{}:oldTriggers;return compareProps({oldProps:oldTriggers,newProps:newTriggers,triggerName:triggerName})}},"./node_modules/@deck.gl/core/dist/shaderlib/misc/geometry.js":function(__unused_webpack_module,__webpack_exports__){const defines="#define SMOOTH_EDGE_RADIUS 0.5",vs=`${defines}\n\nstruct VertexGeometry {\n  vec4 position;\n  vec3 worldPosition;\n  vec3 worldPositionAlt;\n  vec3 normal;\n  vec2 uv;\n  vec3 pickingColor;\n} geometry = VertexGeometry(\n  vec4(0.0, 0.0, 1.0, 0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec2(0.0),\n  vec3(0.0)\n);\n`,fs=`${defines}\n\nstruct FragmentGeometry {\n  vec2 uv;\n} geometry;\n\nfloat smoothedge(float edge, float x) {\n  return smoothstep(edge - SMOOTH_EDGE_RADIUS, edge + SMOOTH_EDGE_RADIUS, x);\n}\n`;__webpack_exports__.A={name:"geometry",source:"const SMOOTH_EDGE_RADIUS: f32 = 0.5;\n\nstruct VertexGeometry {\n  position: vec4<f32>,\n  worldPosition: vec3<f32>,\n  worldPositionAlt: vec3<f32>,\n  normal: vec3<f32>,\n  uv: vec2<f32>,\n  pickingColor: vec3<f32>,\n};\n\nvar<private> geometry_: VertexGeometry = VertexGeometry(\n  vec4<f32>(0.0, 0.0, 1.0, 0.0),\n  vec3<f32>(0.0, 0.0, 0.0),\n  vec3<f32>(0.0, 0.0, 0.0),\n  vec3<f32>(0.0, 0.0, 0.0),\n  vec2<f32>(0.0, 0.0),\n  vec3<f32>(0.0, 0.0, 0.0)\n);\n\nstruct FragmentGeometry {\n  uv: vec2<f32>,\n};\n\nvar<private> fragmentGeometry: FragmentGeometry;\n\nfn smoothedge(edge: f32, x: f32) -> f32 {\n  return smoothstep(edge - SMOOTH_EDGE_RADIUS, edge + SMOOTH_EDGE_RADIUS, x);\n}\n",vs:vs,fs:fs}},"./node_modules/@deck.gl/core/dist/shaderlib/picking/picking.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{A:function(){return picking_picking}});const picking={props:{},uniforms:{},name:"picking",uniformTypes:{isActive:"f32",isAttribute:"f32",isHighlightActive:"f32",useFloatColors:"f32",highlightedObjectColor:"vec3<f32>",highlightColor:"vec4<f32>"},defaultUniforms:{isActive:!1,isAttribute:!1,isHighlightActive:!1,useFloatColors:!0,highlightedObjectColor:[0,0,0],highlightColor:[0,1,1,1]},vs:"uniform pickingUniforms {\n  float isActive;\n  float isAttribute;\n  float isHighlightActive;\n  float useFloatColors;\n  vec3 highlightedObjectColor;\n  vec4 highlightColor;\n} picking;\n\nout vec4 picking_vRGBcolor_Avalid;\n\n// Normalize unsigned byte color to 0-1 range\nvec3 picking_normalizeColor(vec3 color) {\n  return picking.useFloatColors > 0.5 ? color : color / 255.0;\n}\n\n// Normalize unsigned byte color to 0-1 range\nvec4 picking_normalizeColor(vec4 color) {\n  return picking.useFloatColors > 0.5 ? color : color / 255.0;\n}\n\nbool picking_isColorZero(vec3 color) {\n  return dot(color, vec3(1.0)) < 0.00001;\n}\n\nbool picking_isColorValid(vec3 color) {\n  return dot(color, vec3(1.0)) > 0.00001;\n}\n\n// Check if this vertex is highlighted \nbool isVertexHighlighted(vec3 vertexColor) {\n  vec3 highlightedObjectColor = picking_normalizeColor(picking.highlightedObjectColor);\n  return\n    bool(picking.isHighlightActive) && picking_isColorZero(abs(vertexColor - highlightedObjectColor));\n}\n\n// Set the current picking color\nvoid picking_setPickingColor(vec3 pickingColor) {\n  pickingColor = picking_normalizeColor(pickingColor);\n\n  if (bool(picking.isActive)) {\n    // Use alpha as the validity flag. If pickingColor is [0, 0, 0] fragment is non-pickable\n    picking_vRGBcolor_Avalid.a = float(picking_isColorValid(pickingColor));\n\n    if (!bool(picking.isAttribute)) {\n      // Stores the picking color so that the fragment shader can render it during picking\n      picking_vRGBcolor_Avalid.rgb = pickingColor;\n    }\n  } else {\n    // Do the comparison with selected item color in vertex shader as it should mean fewer compares\n    picking_vRGBcolor_Avalid.a = float(isVertexHighlighted(pickingColor));\n  }\n}\n\nvoid picking_setPickingAttribute(float value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.r = value;\n  }\n}\n\nvoid picking_setPickingAttribute(vec2 value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.rg = value;\n  }\n}\n\nvoid picking_setPickingAttribute(vec3 value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.rgb = value;\n  }\n}\n",fs:"uniform pickingUniforms {\n  float isActive;\n  float isAttribute;\n  float isHighlightActive;\n  float useFloatColors;\n  vec3 highlightedObjectColor;\n  vec4 highlightColor;\n} picking;\n\nin vec4 picking_vRGBcolor_Avalid;\n\n/*\n * Returns highlight color if this item is selected.\n */\nvec4 picking_filterHighlightColor(vec4 color) {\n  // If we are still picking, we don't highlight\n  if (picking.isActive > 0.5) {\n    return color;\n  }\n\n  bool selected = bool(picking_vRGBcolor_Avalid.a);\n\n  if (selected) {\n    // Blend in highlight color based on its alpha value\n    float highLightAlpha = picking.highlightColor.a;\n    float blendedAlpha = highLightAlpha + color.a * (1.0 - highLightAlpha);\n    float highLightRatio = highLightAlpha / blendedAlpha;\n\n    vec3 blendedRGB = mix(color.rgb, picking.highlightColor.rgb, highLightRatio);\n    return vec4(blendedRGB, blendedAlpha);\n  } else {\n    return color;\n  }\n}\n\n/*\n * Returns picking color if picking enabled else unmodified argument.\n */\nvec4 picking_filterPickingColor(vec4 color) {\n  if (bool(picking.isActive)) {\n    if (picking_vRGBcolor_Avalid.a == 0.0) {\n      discard;\n    }\n    return picking_vRGBcolor_Avalid;\n  }\n  return color;\n}\n\n/*\n * Returns picking color if picking is enabled if not\n * highlight color if this item is selected, otherwise unmodified argument.\n */\nvec4 picking_filterColor(vec4 color) {\n  vec4 highlightColor = picking_filterHighlightColor(color);\n  return picking_filterPickingColor(highlightColor);\n}\n",getUniforms:function getUniforms(opts={},prevUniforms){const uniforms={};if(void 0===opts.highlightedObjectColor);else if(null===opts.highlightedObjectColor)uniforms.isHighlightActive=!1;else{uniforms.isHighlightActive=!0;const highlightedObjectColor=opts.highlightedObjectColor.slice(0,3);uniforms.highlightedObjectColor=highlightedObjectColor}if(opts.highlightColor){const color=Array.from(opts.highlightColor,(x=>x/255));Number.isFinite(color[3])||(color[3]=1),uniforms.highlightColor=color}void 0!==opts.isActive&&(uniforms.isActive=Boolean(opts.isActive),uniforms.isAttribute=Boolean(opts.isAttribute));void 0!==opts.useFloatColors&&(uniforms.useFloatColors=Boolean(opts.useFloatColors));return uniforms}};var picking_picking={...picking,defaultUniforms:{...picking.defaultUniforms,useFloatColors:!1},inject:{"vs:DECKGL_FILTER_GL_POSITION":"\n    // for picking depth values\n    picking_setPickingAttribute(position.z / position.w);\n  ","vs:DECKGL_FILTER_COLOR":"\n  picking_setPickingColor(geometry.pickingColor);\n  ","fs:DECKGL_FILTER_COLOR":{order:99,injection:"\n  // use highlight color if this fragment belongs to the selected object.\n  color = picking_filterHighlightColor(color);\n\n  // use picking color if rendering to picking FBO.\n  color = picking_filterPickingColor(color);\n    "}}}},"./node_modules/@deck.gl/core/dist/shaderlib/project/project-functions.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{R:function(){return projectPosition},w:function(){return getWorldPosition}});var _lib_constants_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/constants.js"),_viewport_uniforms_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/project/viewport-uniforms.js"),_viewports_web_mercator_viewport_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@deck.gl/core/dist/viewports/web-mercator-viewport.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec4.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec3.js"),_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/web-mercator/dist/index.js");const DEFAULT_COORDINATE_ORIGIN=[0,0,0];function lngLatZToWorldPosition(lngLatZ,viewport,offsetMode=!1){const p=viewport.projectPosition(lngLatZ);if(offsetMode&&viewport instanceof _viewports_web_mercator_viewport_js__WEBPACK_IMPORTED_MODULE_1__.A){const[longitude,latitude,z=0]=lngLatZ,distanceScales=viewport.getDistanceScales([longitude,latitude]);p[2]=z*distanceScales.unitsPerMeter[2]}return p}function getWorldPosition(position,{viewport:viewport,modelMatrix:modelMatrix,coordinateSystem:coordinateSystem,coordinateOrigin:coordinateOrigin,offsetMode:offsetMode}){let[x,y,z=0]=position;switch(modelMatrix&&([x,y,z]=_math_gl_core__WEBPACK_IMPORTED_MODULE_3__.Z0([],[x,y,z,1],modelMatrix)),coordinateSystem){case _lib_constants_js__WEBPACK_IMPORTED_MODULE_2__.rf.LNGLAT:return lngLatZToWorldPosition([x,y,z],viewport,offsetMode);case _lib_constants_js__WEBPACK_IMPORTED_MODULE_2__.rf.LNGLAT_OFFSETS:return lngLatZToWorldPosition([x+coordinateOrigin[0],y+coordinateOrigin[1],z+(coordinateOrigin[2]||0)],viewport,offsetMode);case _lib_constants_js__WEBPACK_IMPORTED_MODULE_2__.rf.METER_OFFSETS:return lngLatZToWorldPosition((0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.dT)(coordinateOrigin,[x,y,z]),viewport,offsetMode);case _lib_constants_js__WEBPACK_IMPORTED_MODULE_2__.rf.CARTESIAN:default:return viewport.isGeospatial?[x+coordinateOrigin[0],y+coordinateOrigin[1],z+coordinateOrigin[2]]:viewport.projectPosition([x,y,z])}}function projectPosition(position,params){const{viewport:viewport,coordinateSystem:coordinateSystem,coordinateOrigin:coordinateOrigin,modelMatrix:modelMatrix,fromCoordinateSystem:fromCoordinateSystem,fromCoordinateOrigin:fromCoordinateOrigin}=function normalizeParameters(opts){const{viewport:viewport,modelMatrix:modelMatrix,coordinateOrigin:coordinateOrigin}=opts;let{coordinateSystem:coordinateSystem,fromCoordinateSystem:fromCoordinateSystem,fromCoordinateOrigin:fromCoordinateOrigin}=opts;return coordinateSystem===_lib_constants_js__WEBPACK_IMPORTED_MODULE_2__.rf.DEFAULT&&(coordinateSystem=viewport.isGeospatial?_lib_constants_js__WEBPACK_IMPORTED_MODULE_2__.rf.LNGLAT:_lib_constants_js__WEBPACK_IMPORTED_MODULE_2__.rf.CARTESIAN),void 0===fromCoordinateSystem&&(fromCoordinateSystem=coordinateSystem),void 0===fromCoordinateOrigin&&(fromCoordinateOrigin=coordinateOrigin),{viewport:viewport,coordinateSystem:coordinateSystem,coordinateOrigin:coordinateOrigin,modelMatrix:modelMatrix,fromCoordinateSystem:fromCoordinateSystem,fromCoordinateOrigin:fromCoordinateOrigin}}(params),{autoOffset:autoOffset=!0}=params,{geospatialOrigin:geospatialOrigin=DEFAULT_COORDINATE_ORIGIN,shaderCoordinateOrigin:shaderCoordinateOrigin=DEFAULT_COORDINATE_ORIGIN,offsetMode:offsetMode=!1}=autoOffset?(0,_viewport_uniforms_js__WEBPACK_IMPORTED_MODULE_4__.o)(viewport,coordinateSystem,coordinateOrigin):{},worldPosition=getWorldPosition(position,{viewport:viewport,modelMatrix:modelMatrix,coordinateSystem:fromCoordinateSystem,coordinateOrigin:fromCoordinateOrigin,offsetMode:offsetMode});if(offsetMode){const positionCommonSpace=viewport.projectPosition(geospatialOrigin||shaderCoordinateOrigin);_math_gl_core__WEBPACK_IMPORTED_MODULE_5__.jb(worldPosition,worldPosition,positionCommonSpace)}return worldPosition}},"./node_modules/@deck.gl/core/dist/shaderlib/project/project.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{A:function(){return project}});const fp32={name:"fp32",vs:"#ifdef LUMA_FP32_TAN_PRECISION_WORKAROUND\n\n// All these functions are for substituting tan() function from Intel GPU only\nconst float TWO_PI = 6.2831854820251465;\nconst float PI_2 = 1.5707963705062866;\nconst float PI_16 = 0.1963495463132858;\n\nconst float SIN_TABLE_0 = 0.19509032368659973;\nconst float SIN_TABLE_1 = 0.3826834261417389;\nconst float SIN_TABLE_2 = 0.5555702447891235;\nconst float SIN_TABLE_3 = 0.7071067690849304;\n\nconst float COS_TABLE_0 = 0.9807852506637573;\nconst float COS_TABLE_1 = 0.9238795042037964;\nconst float COS_TABLE_2 = 0.8314695954322815;\nconst float COS_TABLE_3 = 0.7071067690849304;\n\nconst float INVERSE_FACTORIAL_3 = 1.666666716337204e-01; // 1/3!\nconst float INVERSE_FACTORIAL_5 = 8.333333767950535e-03; // 1/5!\nconst float INVERSE_FACTORIAL_7 = 1.9841270113829523e-04; // 1/7!\nconst float INVERSE_FACTORIAL_9 = 2.75573188446287533e-06; // 1/9!\n\nfloat sin_taylor_fp32(float a) {\n  float r, s, t, x;\n\n  if (a == 0.0) {\n    return 0.0;\n  }\n\n  x = -a * a;\n  s = a;\n  r = a;\n\n  r = r * x;\n  t = r * INVERSE_FACTORIAL_3;\n  s = s + t;\n\n  r = r * x;\n  t = r * INVERSE_FACTORIAL_5;\n  s = s + t;\n\n  r = r * x;\n  t = r * INVERSE_FACTORIAL_7;\n  s = s + t;\n\n  r = r * x;\n  t = r * INVERSE_FACTORIAL_9;\n  s = s + t;\n\n  return s;\n}\n\nvoid sincos_taylor_fp32(float a, out float sin_t, out float cos_t) {\n  if (a == 0.0) {\n    sin_t = 0.0;\n    cos_t = 1.0;\n  }\n  sin_t = sin_taylor_fp32(a);\n  cos_t = sqrt(1.0 - sin_t * sin_t);\n}\n\nfloat tan_taylor_fp32(float a) {\n    float sin_a;\n    float cos_a;\n\n    if (a == 0.0) {\n        return 0.0;\n    }\n\n    // 2pi range reduction\n    float z = floor(a / TWO_PI);\n    float r = a - TWO_PI * z;\n\n    float t;\n    float q = floor(r / PI_2 + 0.5);\n    int j = int(q);\n\n    if (j < -2 || j > 2) {\n        return 1.0 / 0.0;\n    }\n\n    t = r - PI_2 * q;\n\n    q = floor(t / PI_16 + 0.5);\n    int k = int(q);\n    int abs_k = int(abs(float(k)));\n\n    if (abs_k > 4) {\n        return 1.0 / 0.0;\n    } else {\n        t = t - PI_16 * q;\n    }\n\n    float u = 0.0;\n    float v = 0.0;\n\n    float sin_t, cos_t;\n    float s, c;\n    sincos_taylor_fp32(t, sin_t, cos_t);\n\n    if (k == 0) {\n        s = sin_t;\n        c = cos_t;\n    } else {\n        if (abs(float(abs_k) - 1.0) < 0.5) {\n            u = COS_TABLE_0;\n            v = SIN_TABLE_0;\n        } else if (abs(float(abs_k) - 2.0) < 0.5) {\n            u = COS_TABLE_1;\n            v = SIN_TABLE_1;\n        } else if (abs(float(abs_k) - 3.0) < 0.5) {\n            u = COS_TABLE_2;\n            v = SIN_TABLE_2;\n        } else if (abs(float(abs_k) - 4.0) < 0.5) {\n            u = COS_TABLE_3;\n            v = SIN_TABLE_3;\n        }\n        if (k > 0) {\n            s = u * sin_t + v * cos_t;\n            c = u * cos_t - v * sin_t;\n        } else {\n            s = u * sin_t - v * cos_t;\n            c = u * cos_t + v * sin_t;\n        }\n    }\n\n    if (j == 0) {\n        sin_a = s;\n        cos_a = c;\n    } else if (j == 1) {\n        sin_a = c;\n        cos_a = -s;\n    } else if (j == -1) {\n        sin_a = -c;\n        cos_a = s;\n    } else {\n        sin_a = -s;\n        cos_a = -c;\n    }\n    return sin_a / cos_a;\n}\n#endif\n\nfloat tan_fp32(float a) {\n#ifdef LUMA_FP32_TAN_PRECISION_WORKAROUND\n  return tan_taylor_fp32(a);\n#else\n  return tan(a);\n#endif\n}\n"};var geometry=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/misc/geometry.js"),viewport_uniforms=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/project/viewport-uniforms.js"),constants=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/constants.js");const projectWGSL=`${`${Object.keys(constants.rf).map((key=>`const COORDINATE_SYSTEM_${key}: i32 = ${constants.rf[key]};`)).join("")}\n${Object.keys(constants.Kx).map((key=>`const PROJECTION_MODE_${key}: i32 = ${constants.Kx[key]};`)).join("")}\n${Object.keys(constants.p5).map((key=>`const UNIT_${key.toUpperCase()}: i32 = ${constants.p5[key]};`)).join("")}\n\nconst TILE_SIZE: f32 = 512.0;\nconst PI: f32 = 3.1415926536;\nconst WORLD_SCALE: f32 = TILE_SIZE / (PI * 2.0);\nconst ZERO_64_LOW: vec3<f32> = vec3<f32>(0.0, 0.0, 0.0);\nconst EARTH_RADIUS: f32 = 6370972.0; // meters\nconst GLOBE_RADIUS: f32 = 256.0;\n\n// -----------------------------------------------------------------------------\n// Uniform block (converted from GLSL uniform block)\n// -----------------------------------------------------------------------------\nstruct ProjectUniforms {\n  wrapLongitude: i32,\n  coordinateSystem: i32,\n  commonUnitsPerMeter: vec3<f32>,\n  projectionMode: i32,\n  scale: f32,\n  commonUnitsPerWorldUnit: vec3<f32>,\n  commonUnitsPerWorldUnit2: vec3<f32>,\n  center: vec4<f32>,\n  modelMatrix: mat4x4<f32>,\n  viewProjectionMatrix: mat4x4<f32>,\n  viewportSize: vec2<f32>,\n  devicePixelRatio: f32,\n  focalDistance: f32,\n  cameraPosition: vec3<f32>,\n  coordinateOrigin: vec3<f32>,\n  commonOrigin: vec3<f32>,\n  pseudoMeters: i32,\n};\n\n@group(0) @binding(0)\nvar<uniform> project: ProjectUniforms;\n\n// -----------------------------------------------------------------------------\n// Geometry data\n// (In your GLSL code, "geometry" was assumed to be available globally. In WGSL,\n// you might supply this via vertex attributes or a uniform. Here we define a\n// uniform struct for demonstration.)\n// -----------------------------------------------------------------------------\n\n// Structure to carry additional geometry data used by deck.gl filters.\nstruct Geometry {\n  worldPosition: vec3<f32>,\n  worldPositionAlt: vec3<f32>,\n  position: vec4<f32>,\n  uv: vec2<f32>,\n  pickingColor: vec3<f32>,\n};\n\n// @group(0) @binding(1)\nvar<private> geometry: Geometry;\n`}\n\n// -----------------------------------------------------------------------------\n// Functions\n// -----------------------------------------------------------------------------\n\n// Returns an adjustment factor for commonUnitsPerMeter\nfn _project_size_at_latitude(lat: f32) -> f32 {\n  let y = clamp(lat, -89.9, 89.9);\n  return 1.0 / cos(radians(y));\n}\n\n// Overloaded version: scales a value in meters at a given latitude.\nfn _project_size_at_latitude_m(meters: f32, lat: f32) -> f32 {\n  return meters * project.commonUnitsPerMeter.z * _project_size_at_latitude(lat);\n}\n\n// Computes a non-linear scale factor based on geometry.\n// (Note: This function relies on "geometry" being provided.)\nfn project_size() -> f32 {\n  if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR &&\n      project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT &&\n      project.pseudoMeters == 0) {\n    if (geometry.position.w == 0.0) {\n      return _project_size_at_latitude(geometry.worldPosition.y);\n    }\n    let y: f32 = geometry.position.y / TILE_SIZE * 2.0 - 1.0;\n    let y2 = y * y;\n    let y4 = y2 * y2;\n    let y6 = y4 * y2;\n    return 1.0 + 4.9348 * y2 + 4.0587 * y4 + 1.5642 * y6;\n  }\n  return 1.0;\n}\n\n// Overloads to scale offsets (meters to world units)\nfn project_size_float(meters: f32) -> f32 {\n  return meters * project.commonUnitsPerMeter.z * project_size();\n}\n\nfn project_size_vec2(meters: vec2<f32>) -> vec2<f32> {\n  return meters * project.commonUnitsPerMeter.xy * project_size();\n}\n\nfn project_size_vec3(meters: vec3<f32>) -> vec3<f32> {\n  return meters * project.commonUnitsPerMeter * project_size();\n}\n\nfn project_size_vec4(meters: vec4<f32>) -> vec4<f32> {\n  return vec4<f32>(meters.xyz * project.commonUnitsPerMeter, meters.w);\n}\n\n// Returns a rotation matrix aligning the z‑axis with the given up vector.\nfn project_get_orientation_matrix(up: vec3<f32>) -> mat3x3<f32> {\n  let uz = normalize(up);\n  let ux = select(\n    vec3<f32>(1.0, 0.0, 0.0),\n    normalize(vec3<f32>(uz.y, -uz.x, 0.0)),\n    abs(uz.z) == 1.0\n  );\n  let uy = cross(uz, ux);\n  return mat3x3<f32>(ux, uy, uz);\n}\n\n// Since WGSL does not support "out" parameters, we return a struct.\nstruct RotationResult {\n  needsRotation: bool,\n  transform: mat3x3<f32>,\n};\n\nfn project_needs_rotation(commonPosition: vec3<f32>) -> RotationResult {\n  if (project.projectionMode == PROJECTION_MODE_GLOBE) {\n    return RotationResult(true, project_get_orientation_matrix(commonPosition));\n  } else {\n    return RotationResult(false, mat3x3<f32>());  // identity alternative if needed\n  };\n}\n\n// Projects a normal vector from the current coordinate system to world space.\nfn project_normal(vector: vec3<f32>) -> vec3<f32> {\n  let normal_modelspace = project.modelMatrix * vec4<f32>(vector, 0.0);\n  var n = normalize(normal_modelspace.xyz * project.commonUnitsPerMeter);\n  let rotResult = project_needs_rotation(geometry.position.xyz);\n  if (rotResult.needsRotation) {\n    n = rotResult.transform * n;\n  }\n  return n;\n}\n\n// Applies a scale offset based on y-offset (dy)\nfn project_offset_(offset: vec4<f32>) -> vec4<f32> {\n  let dy: f32 = offset.y;\n  let commonUnitsPerWorldUnit = project.commonUnitsPerWorldUnit + project.commonUnitsPerWorldUnit2 * dy;\n  return vec4<f32>(offset.xyz * commonUnitsPerWorldUnit, offset.w);\n}\n\n// Projects lng/lat coordinates to a unit tile [0,1]\nfn project_mercator_(lnglat: vec2<f32>) -> vec2<f32> {\n  var x = lnglat.x;\n  if (project.wrapLongitude != 0) {\n    x = ((x + 180.0) % 360.0) - 180.0;\n  }\n  let y = clamp(lnglat.y, -89.9, 89.9);\n  return vec2<f32>(\n    radians(x) + PI,\n    PI + log(tan(PI * 0.25 + radians(y) * 0.5))\n  ) * WORLD_SCALE;\n}\n\n// Projects lng/lat/z coordinates for a globe projection.\nfn project_globe_(lnglatz: vec3<f32>) -> vec3<f32> {\n  let lambda = radians(lnglatz.x);\n  let phi = radians(lnglatz.y);\n  let cosPhi = cos(phi);\n  let D = (lnglatz.z / EARTH_RADIUS + 1.0) * GLOBE_RADIUS;\n  return vec3<f32>(\n    sin(lambda) * cosPhi,\n    -cos(lambda) * cosPhi,\n    sin(phi)\n  ) * D;\n}\n\n// Projects positions (with an optional 64-bit low part) from the input\n// coordinate system to the common space.\nfn project_position_vec4_f64(position: vec4<f32>, position64Low: vec3<f32>) -> vec4<f32> {\n  var position_world = project.modelMatrix * position;\n\n  // Work around for a Mac+NVIDIA bug:\n  if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR) {\n    if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4<f32>(\n        project_mercator_(position_world.xy),\n        _project_size_at_latitude_m(position_world.z, position_world.y),\n        position_world.w\n      );\n    }\n    if (project.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN) {\n      position_world = vec4f(position_world.xyz + project.coordinateOrigin, position_world.w);\n    }\n  }\n  if (project.projectionMode == PROJECTION_MODE_GLOBE) {\n    if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4<f32>(\n        project_globe_(position_world.xyz),\n        position_world.w\n      );\n    }\n  }\n  if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\n    if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      if (abs(position_world.y - project.coordinateOrigin.y) > 0.25) {\n        return vec4<f32>(\n          project_mercator_(position_world.xy) - project.commonOrigin.xy,\n          project_size_float(position_world.z),\n          position_world.w\n        );\n      }\n    }\n  }\n  if (project.projectionMode == PROJECTION_MODE_IDENTITY ||\n      (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET &&\n       (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\n        project.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN))) {\n    position_world = vec4f(position_world.xyz - project.coordinateOrigin, position_world.w);\n  }\n\n  return project_offset_(position_world) +\n         project_offset_(project.modelMatrix * vec4<f32>(position64Low, 0.0));\n}\n\n// Overloaded versions for different input types.\nfn project_position_vec4_f32(position: vec4<f32>) -> vec4<f32> {\n  return project_position_vec4_f64(position, ZERO_64_LOW);\n}\n\nfn project_position_vec3_f64(position: vec3<f32>, position64Low: vec3<f32>) -> vec3<f32> {\n  let projected_position = project_position_vec4_f64(vec4<f32>(position, 1.0), position64Low);\n  return projected_position.xyz;\n}\n\nfn project_position_vec3_f32(position: vec3<f32>) -> vec3<f32> {\n  let projected_position = project_position_vec4_f64(vec4<f32>(position, 1.0), ZERO_64_LOW);\n  return projected_position.xyz;\n}\n\nfn project_position_vec2_f32(position: vec2<f32>) -> vec2<f32> {\n  let projected_position = project_position_vec4_f64(vec4<f32>(position, 0.0, 1.0), ZERO_64_LOW);\n  return projected_position.xy;\n}\n\n// Transforms a common space position to clip space.\nfn project_common_position_to_clipspace_with_projection(position: vec4<f32>, viewProjectionMatrix: mat4x4<f32>, center: vec4<f32>) -> vec4<f32> {\n  return viewProjectionMatrix * position + center;\n}\n\n// Uses the project viewProjectionMatrix and center.\nfn project_common_position_to_clipspace(position: vec4<f32>) -> vec4<f32> {\n  return project_common_position_to_clipspace_with_projection(position, project.viewProjectionMatrix, project.center);\n}\n\n// Returns a clip space offset corresponding to a given number of screen pixels.\nfn project_pixel_size_to_clipspace(pixels: vec2<f32>) -> vec2<f32> {\n  let offset = pixels / project.viewportSize * project.devicePixelRatio * 2.0;\n  return offset * project.focalDistance;\n}\n\nfn project_meter_size_to_pixel(meters: f32) -> f32 {\n  return project_size_float(meters) * project.scale;\n}\n\nfn project_unit_size_to_pixel(size: f32, unit: i32) -> f32 {\n  if (unit == UNIT_METERS) {\n    return project_meter_size_to_pixel(size);\n  } else if (unit == UNIT_COMMON) {\n    return size * project.scale;\n  }\n  // UNIT_PIXELS: no scaling applied.\n  return size;\n}\n\nfn project_pixel_size_float(pixels: f32) -> f32 {\n  return pixels / project.scale;\n}\n\nfn project_pixel_size_vec2(pixels: vec2<f32>) -> vec2<f32> {\n  return pixels / project.scale;\n}\n`,projectGLSL=`${Object.keys(constants.rf).map((key=>`const int COORDINATE_SYSTEM_${key} = ${constants.rf[key]};`)).join("")}\n${Object.keys(constants.Kx).map((key=>`const int PROJECTION_MODE_${key} = ${constants.Kx[key]};`)).join("")}\n${Object.keys(constants.p5).map((key=>`const int UNIT_${key.toUpperCase()} = ${constants.p5[key]};`)).join("")}\nuniform projectUniforms {\nbool wrapLongitude;\nint coordinateSystem;\nvec3 commonUnitsPerMeter;\nint projectionMode;\nfloat scale;\nvec3 commonUnitsPerWorldUnit;\nvec3 commonUnitsPerWorldUnit2;\nvec4 center;\nmat4 modelMatrix;\nmat4 viewProjectionMatrix;\nvec2 viewportSize;\nfloat devicePixelRatio;\nfloat focalDistance;\nvec3 cameraPosition;\nvec3 coordinateOrigin;\nvec3 commonOrigin;\nbool pseudoMeters;\n} project;\nconst float TILE_SIZE = 512.0;\nconst float PI = 3.1415926536;\nconst float WORLD_SCALE = TILE_SIZE / (PI * 2.0);\nconst vec3 ZERO_64_LOW = vec3(0.0);\nconst float EARTH_RADIUS = 6370972.0;\nconst float GLOBE_RADIUS = 256.0;\nfloat project_size_at_latitude(float lat) {\nfloat y = clamp(lat, -89.9, 89.9);\nreturn 1.0 / cos(radians(y));\n}\nfloat project_size() {\nif (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR &&\nproject.coordinateSystem == COORDINATE_SYSTEM_LNGLAT &&\nproject.pseudoMeters == false) {\nif (geometry.position.w == 0.0) {\nreturn project_size_at_latitude(geometry.worldPosition.y);\n}\nfloat y = geometry.position.y / TILE_SIZE * 2.0 - 1.0;\nfloat y2 = y * y;\nfloat y4 = y2 * y2;\nfloat y6 = y4 * y2;\nreturn 1.0 + 4.9348 * y2 + 4.0587 * y4 + 1.5642 * y6;\n}\nreturn 1.0;\n}\nfloat project_size_at_latitude(float meters, float lat) {\nreturn meters * project.commonUnitsPerMeter.z * project_size_at_latitude(lat);\n}\nfloat project_size(float meters) {\nreturn meters * project.commonUnitsPerMeter.z * project_size();\n}\nvec2 project_size(vec2 meters) {\nreturn meters * project.commonUnitsPerMeter.xy * project_size();\n}\nvec3 project_size(vec3 meters) {\nreturn meters * project.commonUnitsPerMeter * project_size();\n}\nvec4 project_size(vec4 meters) {\nreturn vec4(meters.xyz * project.commonUnitsPerMeter, meters.w);\n}\nmat3 project_get_orientation_matrix(vec3 up) {\nvec3 uz = normalize(up);\nvec3 ux = abs(uz.z) == 1.0 ? vec3(1.0, 0.0, 0.0) : normalize(vec3(uz.y, -uz.x, 0));\nvec3 uy = cross(uz, ux);\nreturn mat3(ux, uy, uz);\n}\nbool project_needs_rotation(vec3 commonPosition, out mat3 transform) {\nif (project.projectionMode == PROJECTION_MODE_GLOBE) {\ntransform = project_get_orientation_matrix(commonPosition);\nreturn true;\n}\nreturn false;\n}\nvec3 project_normal(vec3 vector) {\nvec4 normal_modelspace = project.modelMatrix * vec4(vector, 0.0);\nvec3 n = normalize(normal_modelspace.xyz * project.commonUnitsPerMeter);\nmat3 rotation;\nif (project_needs_rotation(geometry.position.xyz, rotation)) {\nn = rotation * n;\n}\nreturn n;\n}\nvec4 project_offset_(vec4 offset) {\nfloat dy = offset.y;\nvec3 commonUnitsPerWorldUnit = project.commonUnitsPerWorldUnit + project.commonUnitsPerWorldUnit2 * dy;\nreturn vec4(offset.xyz * commonUnitsPerWorldUnit, offset.w);\n}\nvec2 project_mercator_(vec2 lnglat) {\nfloat x = lnglat.x;\nif (project.wrapLongitude) {\nx = mod(x + 180., 360.0) - 180.;\n}\nfloat y = clamp(lnglat.y, -89.9, 89.9);\nreturn vec2(\nradians(x) + PI,\nPI + log(tan_fp32(PI * 0.25 + radians(y) * 0.5))\n) * WORLD_SCALE;\n}\nvec3 project_globe_(vec3 lnglatz) {\nfloat lambda = radians(lnglatz.x);\nfloat phi = radians(lnglatz.y);\nfloat cosPhi = cos(phi);\nfloat D = (lnglatz.z / EARTH_RADIUS + 1.0) * GLOBE_RADIUS;\nreturn vec3(\nsin(lambda) * cosPhi,\n-cos(lambda) * cosPhi,\nsin(phi)\n) * D;\n}\nvec4 project_position(vec4 position, vec3 position64Low) {\nvec4 position_world = project.modelMatrix * position;\nif (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR) {\nif (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\nreturn vec4(\nproject_mercator_(position_world.xy),\nproject_size_at_latitude(position_world.z, position_world.y),\nposition_world.w\n);\n}\nif (project.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN) {\nposition_world.xyz += project.coordinateOrigin;\n}\n}\nif (project.projectionMode == PROJECTION_MODE_GLOBE) {\nif (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\nreturn vec4(\nproject_globe_(position_world.xyz),\nposition_world.w\n);\n}\n}\nif (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\nif (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\nif (abs(position_world.y - project.coordinateOrigin.y) > 0.25) {\nreturn vec4(\nproject_mercator_(position_world.xy) - project.commonOrigin.xy,\nproject_size(position_world.z),\nposition_world.w\n);\n}\n}\n}\nif (project.projectionMode == PROJECTION_MODE_IDENTITY ||\n(project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET &&\n(project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\nproject.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN))) {\nposition_world.xyz -= project.coordinateOrigin;\n}\nreturn project_offset_(position_world) + project_offset_(project.modelMatrix * vec4(position64Low, 0.0));\n}\nvec4 project_position(vec4 position) {\nreturn project_position(position, ZERO_64_LOW);\n}\nvec3 project_position(vec3 position, vec3 position64Low) {\nvec4 projected_position = project_position(vec4(position, 1.0), position64Low);\nreturn projected_position.xyz;\n}\nvec3 project_position(vec3 position) {\nvec4 projected_position = project_position(vec4(position, 1.0), ZERO_64_LOW);\nreturn projected_position.xyz;\n}\nvec2 project_position(vec2 position) {\nvec4 projected_position = project_position(vec4(position, 0.0, 1.0), ZERO_64_LOW);\nreturn projected_position.xy;\n}\nvec4 project_common_position_to_clipspace(vec4 position, mat4 viewProjectionMatrix, vec4 center) {\nreturn viewProjectionMatrix * position + center;\n}\nvec4 project_common_position_to_clipspace(vec4 position) {\nreturn project_common_position_to_clipspace(position, project.viewProjectionMatrix, project.center);\n}\nvec2 project_pixel_size_to_clipspace(vec2 pixels) {\nvec2 offset = pixels / project.viewportSize * project.devicePixelRatio * 2.0;\nreturn offset * project.focalDistance;\n}\nfloat project_size_to_pixel(float meters) {\nreturn project_size(meters) * project.scale;\n}\nfloat project_size_to_pixel(float size, int unit) {\nif (unit == UNIT_METERS) return project_size_to_pixel(size);\nif (unit == UNIT_COMMON) return size * project.scale;\nreturn size;\n}\nfloat project_pixel_size(float pixels) {\nreturn pixels / project.scale;\n}\nvec2 project_pixel_size(vec2 pixels) {\nreturn pixels / project.scale;\n}\n`,INITIAL_MODULE_OPTIONS={};var project={name:"project",dependencies:[fp32,geometry.A],source:projectWGSL,vs:projectGLSL,getUniforms:function getUniforms(opts=INITIAL_MODULE_OPTIONS){return"viewport"in opts?(0,viewport_uniforms.a)(opts):{}},uniformTypes:{wrapLongitude:"f32",coordinateSystem:"i32",commonUnitsPerMeter:"vec3<f32>",projectionMode:"i32",scale:"f32",commonUnitsPerWorldUnit:"vec3<f32>",commonUnitsPerWorldUnit2:"vec3<f32>",center:"vec4<f32>",modelMatrix:"mat4x4<f32>",viewProjectionMatrix:"mat4x4<f32>",viewportSize:"vec2<f32>",devicePixelRatio:"f32",focalDistance:"f32",cameraPosition:"vec3<f32>",coordinateOrigin:"vec3<f32>",commonOrigin:"vec3<f32>",pseudoMeters:"f32"}}},"./node_modules/@deck.gl/core/dist/shaderlib/project/viewport-uniforms.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{a:function(){return getUniformsFromViewport},o:function(){return getOffsetOrigin}});var _math_gl_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec4.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/mat4.js"),_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/constants.js"),_utils_memoize_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/memoize.js");const ZERO_VECTOR=[0,0,0,0],VECTOR_TO_POINT_MATRIX=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0],IDENTITY_MATRIX=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],DEFAULT_PIXELS_PER_UNIT2=[0,0,0],DEFAULT_COORDINATE_ORIGIN=[0,0,0],getMemoizedViewportUniforms=(0,_utils_memoize_js__WEBPACK_IMPORTED_MODULE_0__.A)((function calculateViewportUniforms({viewport:viewport,devicePixelRatio:devicePixelRatio,coordinateSystem:coordinateSystem,coordinateOrigin:coordinateOrigin}){const{projectionCenter:projectionCenter,viewProjectionMatrix:viewProjectionMatrix,originCommon:originCommon,cameraPosCommon:cameraPosCommon,shaderCoordinateOrigin:shaderCoordinateOrigin,geospatialOrigin:geospatialOrigin}=function calculateMatrixAndOffset(viewport,coordinateSystem,coordinateOrigin){const{viewMatrixUncentered:viewMatrixUncentered,projectionMatrix:projectionMatrix}=viewport;let{viewMatrix:viewMatrix,viewProjectionMatrix:viewProjectionMatrix}=viewport,projectionCenter=ZERO_VECTOR,originCommon=ZERO_VECTOR,cameraPosCommon=viewport.cameraPosition;const{geospatialOrigin:geospatialOrigin,shaderCoordinateOrigin:shaderCoordinateOrigin,offsetMode:offsetMode}=getOffsetOrigin(viewport,coordinateSystem,coordinateOrigin);offsetMode&&(originCommon=viewport.projectPosition(geospatialOrigin||shaderCoordinateOrigin),cameraPosCommon=[cameraPosCommon[0]-originCommon[0],cameraPosCommon[1]-originCommon[1],cameraPosCommon[2]-originCommon[2]],originCommon[3]=1,projectionCenter=_math_gl_core__WEBPACK_IMPORTED_MODULE_2__.Z0([],originCommon,viewProjectionMatrix),viewMatrix=viewMatrixUncentered||viewMatrix,viewProjectionMatrix=_math_gl_core__WEBPACK_IMPORTED_MODULE_3__.lw([],projectionMatrix,viewMatrix),viewProjectionMatrix=_math_gl_core__WEBPACK_IMPORTED_MODULE_3__.lw([],viewProjectionMatrix,VECTOR_TO_POINT_MATRIX));return{viewMatrix:viewMatrix,viewProjectionMatrix:viewProjectionMatrix,projectionCenter:projectionCenter,originCommon:originCommon,cameraPosCommon:cameraPosCommon,shaderCoordinateOrigin:shaderCoordinateOrigin,geospatialOrigin:geospatialOrigin}}(viewport,coordinateSystem,coordinateOrigin),distanceScales=viewport.getDistanceScales(),viewportSize=[viewport.width*devicePixelRatio,viewport.height*devicePixelRatio],focalDistance=_math_gl_core__WEBPACK_IMPORTED_MODULE_2__.Z0([],[0,0,-viewport.focalDistance,1],viewport.projectionMatrix)[3]||1,uniforms={coordinateSystem:coordinateSystem,projectionMode:viewport.projectionMode,coordinateOrigin:shaderCoordinateOrigin,commonOrigin:originCommon.slice(0,3),center:projectionCenter,pseudoMeters:Boolean(viewport._pseudoMeters),viewportSize:viewportSize,devicePixelRatio:devicePixelRatio,focalDistance:focalDistance,commonUnitsPerMeter:distanceScales.unitsPerMeter,commonUnitsPerWorldUnit:distanceScales.unitsPerMeter,commonUnitsPerWorldUnit2:DEFAULT_PIXELS_PER_UNIT2,scale:viewport.scale,wrapLongitude:!1,viewProjectionMatrix:viewProjectionMatrix,modelMatrix:IDENTITY_MATRIX,cameraPosition:cameraPosCommon};if(geospatialOrigin){const distanceScalesAtOrigin=viewport.getDistanceScales(geospatialOrigin);switch(coordinateSystem){case _lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.METER_OFFSETS:uniforms.commonUnitsPerWorldUnit=distanceScalesAtOrigin.unitsPerMeter,uniforms.commonUnitsPerWorldUnit2=distanceScalesAtOrigin.unitsPerMeter2;break;case _lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.LNGLAT:case _lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.LNGLAT_OFFSETS:viewport._pseudoMeters||(uniforms.commonUnitsPerMeter=distanceScalesAtOrigin.unitsPerMeter),uniforms.commonUnitsPerWorldUnit=distanceScalesAtOrigin.unitsPerDegree,uniforms.commonUnitsPerWorldUnit2=distanceScalesAtOrigin.unitsPerDegree2;break;case _lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.CARTESIAN:uniforms.commonUnitsPerWorldUnit=[1,1,distanceScalesAtOrigin.unitsPerMeter[2]],uniforms.commonUnitsPerWorldUnit2=[0,0,distanceScalesAtOrigin.unitsPerMeter2[2]]}}return uniforms}));function getOffsetOrigin(viewport,coordinateSystem,coordinateOrigin=DEFAULT_COORDINATE_ORIGIN){coordinateOrigin.length<3&&(coordinateOrigin=[coordinateOrigin[0],coordinateOrigin[1],0]);let geospatialOrigin,shaderCoordinateOrigin=coordinateOrigin,offsetMode=!0;switch(geospatialOrigin=coordinateSystem===_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.LNGLAT_OFFSETS||coordinateSystem===_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.METER_OFFSETS?coordinateOrigin:viewport.isGeospatial?[Math.fround(viewport.longitude),Math.fround(viewport.latitude),0]:null,viewport.projectionMode){case _lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.Kx.WEB_MERCATOR:coordinateSystem!==_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.LNGLAT&&coordinateSystem!==_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.CARTESIAN||(geospatialOrigin=[0,0,0],offsetMode=!1);break;case _lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.Kx.WEB_MERCATOR_AUTO_OFFSET:coordinateSystem===_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.LNGLAT?shaderCoordinateOrigin=geospatialOrigin:coordinateSystem===_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.CARTESIAN&&(shaderCoordinateOrigin=[Math.fround(viewport.center[0]),Math.fround(viewport.center[1]),0],geospatialOrigin=viewport.unprojectPosition(shaderCoordinateOrigin),shaderCoordinateOrigin[0]-=coordinateOrigin[0],shaderCoordinateOrigin[1]-=coordinateOrigin[1],shaderCoordinateOrigin[2]-=coordinateOrigin[2]);break;case _lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.Kx.IDENTITY:shaderCoordinateOrigin=viewport.position.map(Math.fround),shaderCoordinateOrigin[2]=shaderCoordinateOrigin[2]||0;break;case _lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.Kx.GLOBE:offsetMode=!1,geospatialOrigin=null;break;default:offsetMode=!1}return{geospatialOrigin:geospatialOrigin,shaderCoordinateOrigin:shaderCoordinateOrigin,offsetMode:offsetMode}}function getUniformsFromViewport({viewport:viewport,devicePixelRatio:devicePixelRatio=1,modelMatrix:modelMatrix=null,coordinateSystem:coordinateSystem=_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.DEFAULT,coordinateOrigin:coordinateOrigin=DEFAULT_COORDINATE_ORIGIN,autoWrapLongitude:autoWrapLongitude=!1}){coordinateSystem===_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.DEFAULT&&(coordinateSystem=viewport.isGeospatial?_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.LNGLAT:_lib_constants_js__WEBPACK_IMPORTED_MODULE_1__.rf.CARTESIAN);const uniforms=getMemoizedViewportUniforms({viewport:viewport,devicePixelRatio:devicePixelRatio,coordinateSystem:coordinateSystem,coordinateOrigin:coordinateOrigin});return uniforms.wrapLongitude=autoWrapLongitude,uniforms.modelMatrix=modelMatrix||IDENTITY_MATRIX,uniforms}},"./node_modules/@deck.gl/core/dist/shaderlib/project32/project32.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var _project_project_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/project/project.js");__webpack_exports__.A={name:"project32",dependencies:[_project_project_js__WEBPACK_IMPORTED_MODULE_0__.A],source:"// Define a structure to hold both the clip-space position and the common position.\nstruct ProjectResult {\n  clipPosition: vec4<f32>,\n  commonPosition: vec4<f32>,\n};\n\n// This function mimics the GLSL version with the 'out' parameter by returning both values.\nfn project_position_to_clipspace_and_commonspace(\n    position: vec3<f32>,\n    position64Low: vec3<f32>,\n    offset: vec3<f32>\n) -> ProjectResult {\n  // Compute the projected position.\n  let projectedPosition: vec3<f32> = project_position_vec3_f64(position, position64Low);\n\n  // Start with the provided offset.\n  var finalOffset: vec3<f32> = offset;\n\n  // Get whether a rotation is needed and the rotation matrix.\n  let rotationResult = project_needs_rotation(projectedPosition);\n\n  // If rotation is needed, update the offset.\n  if (rotationResult.needsRotation) {\n    finalOffset = rotationResult.transform * offset;\n  }\n\n  // Compute the common position.\n  let commonPosition: vec4<f32> = vec4<f32>(projectedPosition + finalOffset, 1.0);\n\n  // Convert to clip-space.\n  let clipPosition: vec4<f32> = project_common_position_to_clipspace(commonPosition);\n\n  return ProjectResult(clipPosition, commonPosition);\n}\n\n// A convenience overload that returns only the clip-space position.\nfn project_position_to_clipspace(\n    position: vec3<f32>,\n    position64Low: vec3<f32>,\n    offset: vec3<f32>\n) -> vec4<f32> {\n  return project_position_to_clipspace_and_commonspace(position, position64Low, offset).clipPosition;\n}\n",vs:"vec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset, out vec4 commonPosition\n) {\n  vec3 projectedPosition = project_position(position, position64Low);\n  mat3 rotation;\n  if (project_needs_rotation(projectedPosition, rotation)) {\n    // offset is specified as ENU\n    // when in globe projection, rotate offset so that the ground alighs with the surface of the globe\n    offset = rotation * offset;\n  }\n  commonPosition = vec4(projectedPosition + offset, 1.0);\n  return project_common_position_to_clipspace(commonPosition);\n}\n\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset\n) {\n  vec4 commonPosition;\n  return project_position_to_clipspace(position, position64Low, offset, commonPosition);\n}\n"}},"./node_modules/@deck.gl/core/dist/transitions/transition.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{A:function(){return Transition}});class Transition{constructor(timeline){this._inProgress=!1,this._handle=null,this.time=0,this.settings={duration:0},this._timeline=timeline}get inProgress(){return this._inProgress}start(settings){this.cancel(),this.settings=settings,this._inProgress=!0,this.settings.onStart?.(this)}end(){this._inProgress&&(this._timeline.removeChannel(this._handle),this._handle=null,this._inProgress=!1,this.settings.onEnd?.(this))}cancel(){this._inProgress&&(this.settings.onInterrupt?.(this),this._timeline.removeChannel(this._handle),this._handle=null,this._inProgress=!1)}update(){if(!this._inProgress)return!1;if(null===this._handle){const{_timeline:timeline,settings:settings}=this;this._handle=timeline.addChannel({delay:timeline.getTime(),duration:settings.duration})}return this.time=this._timeline.getTime(this._handle),this._onUpdate(),this.settings.onUpdate?.(this),this._timeline.isFinished(this._handle)&&this.end(),!0}_onUpdate(){}}},"./node_modules/@deck.gl/core/dist/utils/assert.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function assert(condition,message){if(!condition)throw new Error(message||"deck.gl: assertion failed.")}__webpack_require__.d(__webpack_exports__,{A:function(){return assert}})},"./node_modules/@deck.gl/core/dist/utils/deep-equal.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function deepEqual(a,b,depth){if(a===b)return!0;if(!depth||!a||!b)return!1;if(Array.isArray(a)){if(!Array.isArray(b)||a.length!==b.length)return!1;for(let i=0;i<a.length;i++)if(!deepEqual(a[i],b[i],depth-1))return!1;return!0}if(Array.isArray(b))return!1;if("object"==typeof a&&"object"==typeof b){const aKeys=Object.keys(a),bKeys=Object.keys(b);if(aKeys.length!==bKeys.length)return!1;for(const key of aKeys){if(!b.hasOwnProperty(key))return!1;if(!deepEqual(a[key],b[key],depth-1))return!1}return!0}return!1}__webpack_require__.d(__webpack_exports__,{b:function(){return deepEqual}})},"./node_modules/@deck.gl/core/dist/utils/flatten.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function flatten(array,filter=()=>!0){return Array.isArray(array)?flattenArray(array,filter,[]):filter(array)?[array]:[]}function flattenArray(array,filter,result){let index=-1;for(;++index<array.length;){const value=array[index];Array.isArray(value)?flattenArray(value,filter,result):filter(value)&&result.push(value)}return result}function fillArray({target:target,source:source,start:start=0,count:count=1}){const length=source.length,total=count*length;let copied=0;for(let i=start;copied<length;copied++)target[i++]=source[copied];for(;copied<total;)copied<total-copied?(target.copyWithin(start+copied,start,start+copied),copied*=2):(target.copyWithin(start+copied,start,start+total-copied),copied=total);return target}__webpack_require__.d(__webpack_exports__,{B:function(){return flatten},R:function(){return fillArray}})},"./node_modules/@deck.gl/core/dist/utils/iterable-utils.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{I:function(){return getAccessorFromBuffer},Td:function(){return isAsyncIterable},X:function(){return createIterable}});const EMPTY_ARRAY=[],placeholderArray=[];function createIterable(data,startRow=0,endRow=1/0){let iterable=EMPTY_ARRAY;const objectInfo={index:-1,data:data,target:[]};return data?"function"==typeof data[Symbol.iterator]?iterable=data:data.length>0&&(placeholderArray.length=data.length,iterable=placeholderArray):iterable=EMPTY_ARRAY,(startRow>0||Number.isFinite(endRow))&&(iterable=(Array.isArray(iterable)?iterable:Array.from(iterable)).slice(startRow,endRow),objectInfo.index=startRow-1),{iterable:iterable,objectInfo:objectInfo}}function isAsyncIterable(data){return data&&data[Symbol.asyncIterator]}function getAccessorFromBuffer(typedArray,options){const{size:size,stride:stride,offset:offset,startIndices:startIndices,nested:nested}=options,bytesPerElement=typedArray.BYTES_PER_ELEMENT,elementStride=stride?stride/bytesPerElement:size,elementOffset=offset?offset/bytesPerElement:0,vertexCount=Math.floor((typedArray.length-elementOffset)/elementStride);return(_,{index:index,target:target})=>{if(!startIndices){const sourceIndex=index*elementStride+elementOffset;for(let j=0;j<size;j++)target[j]=typedArray[sourceIndex+j];return target}const startIndex=startIndices[index],endIndex=startIndices[index+1]||vertexCount;let result;if(nested){result=new Array(endIndex-startIndex);for(let i=startIndex;i<endIndex;i++){const sourceIndex=i*elementStride+elementOffset;target=new Array(size);for(let j=0;j<size;j++)target[j]=typedArray[sourceIndex+j];result[i-startIndex]=target}}else if(elementStride===size)result=typedArray.subarray(startIndex*size+elementOffset,endIndex*size+elementOffset);else{result=new typedArray.constructor((endIndex-startIndex)*size);let targetIndex=0;for(let i=startIndex;i<endIndex;i++){const sourceIndex=i*elementStride+elementOffset;for(let j=0;j<size;j++)result[targetIndex++]=typedArray[sourceIndex+j]}}return result}}},"./node_modules/@deck.gl/core/dist/utils/log.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){const defaultLogger=new(__webpack_require__("./node_modules/@probe.gl/log/dist/log.js").t)({id:"deck"});__webpack_exports__.A=defaultLogger},"./node_modules/@deck.gl/core/dist/utils/math-utils.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{$M:function(){return createMat4},Vl:function(){return getCameraPosition},_Z:function(){return mergeBounds},cT:function(){return toDoublePrecisionArray},on:function(){return getFrustumPlanes},zi:function(){return mod}});var _typed_array_manager_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/typed-array-manager.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/classes/vector3.js");function createMat4(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}function mod(value,divisor){const modulus=value%divisor;return modulus<0?divisor+modulus:modulus}function getCameraPosition(viewMatrixInverse){return[viewMatrixInverse[12],viewMatrixInverse[13],viewMatrixInverse[14]]}function getFrustumPlanes(viewProjectionMatrix){return{left:getFrustumPlane(viewProjectionMatrix[3]+viewProjectionMatrix[0],viewProjectionMatrix[7]+viewProjectionMatrix[4],viewProjectionMatrix[11]+viewProjectionMatrix[8],viewProjectionMatrix[15]+viewProjectionMatrix[12]),right:getFrustumPlane(viewProjectionMatrix[3]-viewProjectionMatrix[0],viewProjectionMatrix[7]-viewProjectionMatrix[4],viewProjectionMatrix[11]-viewProjectionMatrix[8],viewProjectionMatrix[15]-viewProjectionMatrix[12]),bottom:getFrustumPlane(viewProjectionMatrix[3]+viewProjectionMatrix[1],viewProjectionMatrix[7]+viewProjectionMatrix[5],viewProjectionMatrix[11]+viewProjectionMatrix[9],viewProjectionMatrix[15]+viewProjectionMatrix[13]),top:getFrustumPlane(viewProjectionMatrix[3]-viewProjectionMatrix[1],viewProjectionMatrix[7]-viewProjectionMatrix[5],viewProjectionMatrix[11]-viewProjectionMatrix[9],viewProjectionMatrix[15]-viewProjectionMatrix[13]),near:getFrustumPlane(viewProjectionMatrix[3]+viewProjectionMatrix[2],viewProjectionMatrix[7]+viewProjectionMatrix[6],viewProjectionMatrix[11]+viewProjectionMatrix[10],viewProjectionMatrix[15]+viewProjectionMatrix[14]),far:getFrustumPlane(viewProjectionMatrix[3]-viewProjectionMatrix[2],viewProjectionMatrix[7]-viewProjectionMatrix[6],viewProjectionMatrix[11]-viewProjectionMatrix[10],viewProjectionMatrix[15]-viewProjectionMatrix[14])}}const scratchVector=new _math_gl_core__WEBPACK_IMPORTED_MODULE_0__.P;function getFrustumPlane(a,b,c,d){scratchVector.set(a,b,c);const L=scratchVector.len();return{distance:d/L,normal:new _math_gl_core__WEBPACK_IMPORTED_MODULE_0__.P(-a/L,-b/L,-c/L)}}let scratchArray;function toDoublePrecisionArray(typedArray,options){const{size:size=1,startIndex:startIndex=0}=options,endIndex=void 0!==options.endIndex?options.endIndex:typedArray.length,count=(endIndex-startIndex)/size;scratchArray=_typed_array_manager_js__WEBPACK_IMPORTED_MODULE_1__.A.allocate(scratchArray,count,{type:Float32Array,size:2*size});let sourceIndex=startIndex,targetIndex=0;for(;sourceIndex<endIndex;){for(let j=0;j<size;j++){const value=typedArray[sourceIndex++];scratchArray[targetIndex+j]=value,scratchArray[targetIndex+j+size]=(x=value)-Math.fround(x)}targetIndex+=2*size}var x;return scratchArray.subarray(0,count*size*2)}function mergeBounds(boundsList){let mergedBounds=null,isMerged=!1;for(const bounds of boundsList)bounds&&(mergedBounds?(isMerged||(mergedBounds=[[mergedBounds[0][0],mergedBounds[0][1]],[mergedBounds[1][0],mergedBounds[1][1]]],isMerged=!0),mergedBounds[0][0]=Math.min(mergedBounds[0][0],bounds[0][0]),mergedBounds[0][1]=Math.min(mergedBounds[0][1],bounds[0][1]),mergedBounds[1][0]=Math.max(mergedBounds[1][0],bounds[1][0]),mergedBounds[1][1]=Math.max(mergedBounds[1][1],bounds[1][1])):mergedBounds=bounds);return mergedBounds}},"./node_modules/@deck.gl/core/dist/utils/memoize.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function isEqual(a,b){if(a===b)return!0;if(Array.isArray(a)){const len=a.length;if(!b||b.length!==len)return!1;for(let i=0;i<len;i++)if(a[i]!==b[i])return!1;return!0}return!1}function memoize(compute){let cachedResult,cachedArgs={};return args=>{for(const key in args)if(!isEqual(args[key],cachedArgs[key])){cachedResult=compute(args),cachedArgs=args;break}return cachedResult}}__webpack_require__.d(__webpack_exports__,{A:function(){return memoize}})},"./node_modules/@deck.gl/core/dist/utils/shader.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function mergeShaders(target,source){if(!source)return target;const result={...target,...source};if("defines"in source&&(result.defines={...target.defines,...source.defines}),"modules"in source&&(result.modules=(target.modules||[]).concat(source.modules),source.modules.some((module=>"project64"===module.name)))){const index=result.modules.findIndex((module=>"project32"===module.name));index>=0&&result.modules.splice(index,1)}if("inject"in source)if(target.inject){const mergedInjection={...target.inject};for(const key in source.inject)mergedInjection[key]=(mergedInjection[key]||"")+source.inject[key];result.inject=mergedInjection}else result.inject=source.inject;return result}__webpack_require__.d(__webpack_exports__,{n:function(){return mergeShaders}})},"./node_modules/@deck.gl/core/dist/utils/typed-array-manager.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_exports__.A=new class TypedArrayManager{constructor(options={}){this._pool=[],this.opts={overAlloc:2,poolSize:100},this.setOptions(options)}setOptions(options){Object.assign(this.opts,options)}allocate(typedArray,count,{size:size=1,type:type,padding:padding=0,copy:copy=!1,initialize:initialize=!1,maxCount:maxCount}){const Type=type||typedArray&&typedArray.constructor||Float32Array,newSize=count*size+padding;if(ArrayBuffer.isView(typedArray)){if(newSize<=typedArray.length)return typedArray;if(newSize*typedArray.BYTES_PER_ELEMENT<=typedArray.buffer.byteLength)return new Type(typedArray.buffer,0,newSize)}let maxSize=1/0;maxCount&&(maxSize=maxCount*size+padding);const newArray=this._allocate(Type,newSize,initialize,maxSize);return typedArray&&copy?newArray.set(typedArray):initialize||newArray.fill(0,0,4),this._release(typedArray),newArray}release(typedArray){this._release(typedArray)}_allocate(Type,size,initialize,maxSize){let sizeToAllocate=Math.max(Math.ceil(size*this.opts.overAlloc),1);sizeToAllocate>maxSize&&(sizeToAllocate=maxSize);const pool=this._pool,byteLength=Type.BYTES_PER_ELEMENT*sizeToAllocate,i=pool.findIndex((b=>b.byteLength>=byteLength));if(i>=0){const array=new Type(pool.splice(i,1)[0],0,sizeToAllocate);return initialize&&array.fill(0),array}return new Type(sizeToAllocate)}_release(typedArray){if(!ArrayBuffer.isView(typedArray))return;const pool=this._pool,{buffer:buffer}=typedArray,{byteLength:byteLength}=buffer,i=pool.findIndex((b=>b.byteLength>=byteLength));i<0?pool.push(buffer):(i>0||pool.length<this.opts.poolSize)&&pool.splice(i,0,buffer),pool.length>this.opts.poolSize&&pool.shift()}}},"./node_modules/@deck.gl/core/dist/viewports/viewport.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var _utils_log_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/log.js"),_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/math-utils.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@math.gl/core/dist/classes/matrix4.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@math.gl/core/dist/classes/vector3.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/mat4.js"),_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/web-mercator/dist/index.js"),_lib_constants_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/constants.js");const DEGREES_TO_RADIANS=Math.PI/180,IDENTITY=(0,_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.$M)(),ZERO_VECTOR=[0,0,0],DEFAULT_DISTANCE_SCALES={unitsPerMeter:[1,1,1],metersPerUnit:[1,1,1]};class Viewport{constructor(opts={}){this._frustumPlanes={},this.id=opts.id||this.constructor.displayName||"viewport",this.x=opts.x||0,this.y=opts.y||0,this.width=opts.width||1,this.height=opts.height||1,this.zoom=opts.zoom||0,this.padding=opts.padding,this.distanceScales=opts.distanceScales||DEFAULT_DISTANCE_SCALES,this.focalDistance=opts.focalDistance||1,this.position=opts.position||ZERO_VECTOR,this.modelMatrix=opts.modelMatrix||null;const{longitude:longitude,latitude:latitude}=opts;this.isGeospatial=Number.isFinite(latitude)&&Number.isFinite(longitude),this._initProps(opts),this._initMatrices(opts),this.equals=this.equals.bind(this),this.project=this.project.bind(this),this.unproject=this.unproject.bind(this),this.projectPosition=this.projectPosition.bind(this),this.unprojectPosition=this.unprojectPosition.bind(this),this.projectFlat=this.projectFlat.bind(this),this.unprojectFlat=this.unprojectFlat.bind(this)}get subViewports(){return null}get metersPerPixel(){return this.distanceScales.metersPerUnit[2]/this.scale}get projectionMode(){return this.isGeospatial?this.zoom<12?_lib_constants_js__WEBPACK_IMPORTED_MODULE_4__.Kx.WEB_MERCATOR:_lib_constants_js__WEBPACK_IMPORTED_MODULE_4__.Kx.WEB_MERCATOR_AUTO_OFFSET:_lib_constants_js__WEBPACK_IMPORTED_MODULE_4__.Kx.IDENTITY}equals(viewport){return viewport instanceof Viewport&&(this===viewport||viewport.width===this.width&&viewport.height===this.height&&viewport.scale===this.scale&&(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_3__.aI)(viewport.projectionMatrix,this.projectionMatrix)&&(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_3__.aI)(viewport.viewMatrix,this.viewMatrix))}project(xyz,{topLeft:topLeft=!0}={}){const worldPosition=this.projectPosition(xyz),coord=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.VJ)(worldPosition,this.pixelProjectionMatrix),[x,y]=coord,y2=topLeft?y:this.height-y;return 2===xyz.length?[x,y2]:[x,y2,coord[2]]}unproject(xyz,{topLeft:topLeft=!0,targetZ:targetZ}={}){const[x,y,z]=xyz,y2=topLeft?y:this.height-y,targetZWorld=targetZ&&targetZ*this.distanceScales.unitsPerMeter[2],coord=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.xJ)([x,y2,z],this.pixelUnprojectionMatrix,targetZWorld),[X,Y,Z]=this.unprojectPosition(coord);return Number.isFinite(z)?[X,Y,Z]:Number.isFinite(targetZ)?[X,Y,targetZ]:[X,Y]}projectPosition(xyz){const[X,Y]=this.projectFlat(xyz);return[X,Y,(xyz[2]||0)*this.distanceScales.unitsPerMeter[2]]}unprojectPosition(xyz){const[X,Y]=this.unprojectFlat(xyz);return[X,Y,(xyz[2]||0)*this.distanceScales.metersPerUnit[2]]}projectFlat(xyz){if(this.isGeospatial){const result=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.Gw)(xyz);return result[1]=(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_3__.qE)(result[1],-318,830),result}return xyz}unprojectFlat(xyz){return this.isGeospatial?(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.iV)(xyz):xyz}getBounds(options={}){const unprojectOption={targetZ:options.z||0},topLeft=this.unproject([0,0],unprojectOption),topRight=this.unproject([this.width,0],unprojectOption),bottomLeft=this.unproject([0,this.height],unprojectOption),bottomRight=this.unproject([this.width,this.height],unprojectOption);return[Math.min(topLeft[0],topRight[0],bottomLeft[0],bottomRight[0]),Math.min(topLeft[1],topRight[1],bottomLeft[1],bottomRight[1]),Math.max(topLeft[0],topRight[0],bottomLeft[0],bottomRight[0]),Math.max(topLeft[1],topRight[1],bottomLeft[1],bottomRight[1])]}getDistanceScales(coordinateOrigin){return coordinateOrigin&&this.isGeospatial?(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.nI)({longitude:coordinateOrigin[0],latitude:coordinateOrigin[1],highPrecision:!0}):this.distanceScales}containsPixel({x:x,y:y,width:width=1,height:height=1}){return x<this.x+this.width&&this.x<x+width&&y<this.y+this.height&&this.y<y+height}getFrustumPlanes(){return this._frustumPlanes.near||Object.assign(this._frustumPlanes,(0,_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.on)(this.viewProjectionMatrix)),this._frustumPlanes}panByPosition(coords,pixel){return null}_initProps(opts){const longitude=opts.longitude,latitude=opts.latitude;this.isGeospatial&&(Number.isFinite(opts.zoom)||(this.zoom=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.fO)({latitude:latitude})+Math.log2(this.focalDistance)),this.distanceScales=opts.distanceScales||(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.nI)({latitude:latitude,longitude:longitude}));const scale=Math.pow(2,this.zoom);this.scale=scale;const{position:position,modelMatrix:modelMatrix}=opts;let meterOffset=ZERO_VECTOR;if(position&&(meterOffset=modelMatrix?new _math_gl_core__WEBPACK_IMPORTED_MODULE_2__.k(modelMatrix).transformAsVector(position,[]):position),this.isGeospatial){const center=this.projectPosition([longitude,latitude,0]);this.center=new _math_gl_core__WEBPACK_IMPORTED_MODULE_5__.P(meterOffset).scale(this.distanceScales.unitsPerMeter).add(center)}else this.center=this.projectPosition(meterOffset)}_initMatrices(opts){const{viewMatrix:viewMatrix=IDENTITY,projectionMatrix:projectionMatrix=null,orthographic:orthographic=!1,fovyRadians:fovyRadians,fovy:fovy=75,near:near=.1,far:far=1e3,padding:padding=null,focalDistance:focalDistance=1}=opts;this.viewMatrixUncentered=viewMatrix,this.viewMatrix=(new _math_gl_core__WEBPACK_IMPORTED_MODULE_2__.k).multiplyRight(viewMatrix).translate(new _math_gl_core__WEBPACK_IMPORTED_MODULE_5__.P(this.center).negate()),this.projectionMatrix=projectionMatrix||function createProjectionMatrix({width:width,height:height,orthographic:orthographic,fovyRadians:fovyRadians,focalDistance:focalDistance,padding:padding,near:near,far:far}){const aspect=width/height,matrix=orthographic?(new _math_gl_core__WEBPACK_IMPORTED_MODULE_2__.k).orthographic({fovy:fovyRadians,aspect:aspect,focalDistance:focalDistance,near:near,far:far}):(new _math_gl_core__WEBPACK_IMPORTED_MODULE_2__.k).perspective({fovy:fovyRadians,aspect:aspect,near:near,far:far});if(padding){const{left:left=0,right:right=0,top:top=0,bottom:bottom=0}=padding,offsetX=(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_3__.qE)((left+width-right)/2,0,width)-width/2,offsetY=(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_3__.qE)((top+height-bottom)/2,0,height)-height/2;matrix[8]-=2*offsetX/width,matrix[9]+=2*offsetY/height}return matrix}({width:this.width,height:this.height,orthographic:orthographic,fovyRadians:fovyRadians||fovy*DEGREES_TO_RADIANS,focalDistance:focalDistance,padding:padding,near:near,far:far});const vpm=(0,_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.$M)();_math_gl_core__WEBPACK_IMPORTED_MODULE_6__.lw(vpm,vpm,this.projectionMatrix),_math_gl_core__WEBPACK_IMPORTED_MODULE_6__.lw(vpm,vpm,this.viewMatrix),this.viewProjectionMatrix=vpm,this.viewMatrixInverse=_math_gl_core__WEBPACK_IMPORTED_MODULE_6__.B8([],this.viewMatrix)||this.viewMatrix,this.cameraPosition=(0,_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.Vl)(this.viewMatrixInverse);const viewportMatrix=(0,_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.$M)(),pixelProjectionMatrix=(0,_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.$M)();_math_gl_core__WEBPACK_IMPORTED_MODULE_6__.hs(viewportMatrix,viewportMatrix,[this.width/2,-this.height/2,1]),_math_gl_core__WEBPACK_IMPORTED_MODULE_6__.Tl(viewportMatrix,viewportMatrix,[1,-1,0]),_math_gl_core__WEBPACK_IMPORTED_MODULE_6__.lw(pixelProjectionMatrix,viewportMatrix,this.viewProjectionMatrix),this.pixelProjectionMatrix=pixelProjectionMatrix,this.pixelUnprojectionMatrix=_math_gl_core__WEBPACK_IMPORTED_MODULE_6__.B8((0,_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.$M)(),this.pixelProjectionMatrix),this.pixelUnprojectionMatrix||_utils_log_js__WEBPACK_IMPORTED_MODULE_7__.A.warn("Pixel project matrix not invertible")()}}Viewport.displayName="Viewport",__webpack_exports__.A=Viewport},"./node_modules/@deck.gl/core/dist/viewports/web-mercator-viewport.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var _viewport_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@deck.gl/core/dist/viewports/viewport.js"),_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/web-mercator/dist/index.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@math.gl/core/dist/classes/matrix4.js"),_math_gl_core__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec2.js");class WebMercatorViewport extends _viewport_js__WEBPACK_IMPORTED_MODULE_1__.A{constructor(opts={}){const{latitude:latitude=0,longitude:longitude=0,zoom:zoom=0,pitch:pitch=0,bearing:bearing=0,nearZMultiplier:nearZMultiplier=.1,farZMultiplier:farZMultiplier=1.01,nearZ:nearZ,farZ:farZ,orthographic:orthographic=!1,projectionMatrix:projectionMatrix,repeat:repeat=!1,worldOffset:worldOffset=0,position:position,padding:padding,legacyMeterSizes:legacyMeterSizes=!1}=opts;let{width:width,height:height,altitude:altitude=1.5}=opts;const scale=Math.pow(2,zoom);let fovy;width=width||1,height=height||1;let projectionParameters=null;if(projectionMatrix)altitude=projectionMatrix[5]/2,fovy=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.Os)(altitude);else{let offset;if(opts.fovy?(fovy=opts.fovy,altitude=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.wZ)(fovy)):fovy=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.Os)(altitude),padding){const{top:top=0,bottom:bottom=0}=padding;offset=[0,(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_2__.qE)((top+height-bottom)/2,0,height)-height/2]}projectionParameters=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.om)({width:width,height:height,scale:scale,center:position&&[0,0,position[2]*(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.mY)(latitude)],offset:offset,pitch:pitch,fovy:fovy,nearZMultiplier:nearZMultiplier,farZMultiplier:farZMultiplier}),Number.isFinite(nearZ)&&(projectionParameters.near=nearZ),Number.isFinite(farZ)&&(projectionParameters.far=farZ)}let viewMatrixUncentered=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.rY)({height:height,pitch:pitch,bearing:bearing,scale:scale,altitude:altitude});if(worldOffset){viewMatrixUncentered=(new _math_gl_core__WEBPACK_IMPORTED_MODULE_3__.k).translate([512*worldOffset,0,0]).multiplyLeft(viewMatrixUncentered)}super({...opts,width:width,height:height,viewMatrix:viewMatrixUncentered,longitude:longitude,latitude:latitude,zoom:zoom,...projectionParameters,fovy:fovy,focalDistance:altitude}),this.latitude=latitude,this.longitude=longitude,this.zoom=zoom,this.pitch=pitch,this.bearing=bearing,this.altitude=altitude,this.fovy=fovy,this.orthographic=orthographic,this._subViewports=repeat?[]:null,this._pseudoMeters=legacyMeterSizes,Object.freeze(this)}get subViewports(){if(this._subViewports&&!this._subViewports.length){const bounds=this.getBounds(),minOffset=Math.floor((bounds[0]+180)/360),maxOffset=Math.ceil((bounds[2]-180)/360);for(let x=minOffset;x<=maxOffset;x++){const offsetViewport=x?new WebMercatorViewport({...this,worldOffset:x}):this;this._subViewports.push(offsetViewport)}}return this._subViewports}projectPosition(xyz){if(this._pseudoMeters)return super.projectPosition(xyz);const[X,Y]=this.projectFlat(xyz);return[X,Y,(xyz[2]||0)*(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.mY)(xyz[1])]}unprojectPosition(xyz){if(this._pseudoMeters)return super.unprojectPosition(xyz);const[X,Y]=this.unprojectFlat(xyz);return[X,Y,(xyz[2]||0)/(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.mY)(Y)]}addMetersToLngLat(lngLatZ,xyz){return(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.dT)(lngLatZ,xyz)}panByPosition(coords,pixel){const fromLocation=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.xJ)(pixel,this.pixelUnprojectionMatrix),toLocation=this.projectFlat(coords),translate=_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.WQ([],toLocation,_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.ze([],fromLocation)),newCenter=_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.WQ([],this.center,translate),[longitude,latitude]=this.unprojectFlat(newCenter);return{longitude:longitude,latitude:latitude}}getBounds(options={}){const corners=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.gW)(this,options.z||0);return[Math.min(corners[0][0],corners[1][0],corners[2][0],corners[3][0]),Math.min(corners[0][1],corners[1][1],corners[2][1],corners[3][1]),Math.max(corners[0][0],corners[1][0],corners[2][0],corners[3][0]),Math.max(corners[0][1],corners[1][1],corners[2][1],corners[3][1])]}fitBounds(bounds,options={}){const{width:width,height:height}=this,{longitude:longitude,latitude:latitude,zoom:zoom}=(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.Fe)({width:width,height:height,bounds:bounds,...options});return new WebMercatorViewport({width:width,height:height,longitude:longitude,latitude:latitude,zoom:zoom})}}WebMercatorViewport.displayName="WebMercatorViewport",__webpack_exports__.A=WebMercatorViewport},"./node_modules/@deck.gl/layers/dist/icon-layer/icon-layer.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{A:function(){return icon_layer}});var lib_layer=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/layer.js"),project32=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/project32/project32.js"),picking=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/picking/picking.js"),constants=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/constants.js"),log=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/log.js"),model=__webpack_require__("./node_modules/@luma.gl/engine/dist/model/model.js"),geometry=__webpack_require__("./node_modules/@luma.gl/engine/dist/geometry/geometry.js");const uniformBlock="uniform iconUniforms {\n  float sizeScale;\n  vec2 iconsTextureDim;\n  float sizeMinPixels;\n  float sizeMaxPixels;\n  bool billboard;\n  highp int sizeUnits;\n  float alphaCutoff;\n} icon;\n",iconUniforms={name:"icon",vs:uniformBlock,fs:uniformBlock,uniformTypes:{sizeScale:"f32",iconsTextureDim:"vec2<f32>",sizeMinPixels:"f32",sizeMaxPixels:"f32",billboard:"f32",sizeUnits:"i32",alphaCutoff:"f32"}};var load=__webpack_require__("./node_modules/@loaders.gl/core/dist/lib/api/load.js"),iterable_utils=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/iterable-utils.js");const noop=()=>{},DEFAULT_SAMPLER_PARAMETERS={minFilter:"linear",mipmapFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},MISSING_ICON={x:0,y:0,width:0,height:0};function resizeImage(ctx,imageData,maxWidth,maxHeight){const resizeRatio=Math.min(maxWidth/imageData.width,maxHeight/imageData.height),width=Math.floor(imageData.width*resizeRatio),height=Math.floor(imageData.height*resizeRatio);return 1===resizeRatio?{image:imageData,width:width,height:height}:(ctx.canvas.height=height,ctx.canvas.width=width,ctx.clearRect(0,0,width,height),ctx.drawImage(imageData,0,0,imageData.width,imageData.height,0,0,width,height),{image:ctx.canvas,width:width,height:height})}function getIconId(icon){return icon&&(icon.id||icon.url)}function buildRowMapping(mapping,columns,yOffset){for(let i=0;i<columns.length;i++){const{icon:icon,xOffset:xOffset}=columns[i];mapping[getIconId(icon)]={...icon,x:xOffset,y:yOffset}}}class IconManager{constructor(device,{onUpdate:onUpdate=noop,onError:onError=noop}){this._loadOptions=null,this._texture=null,this._externalTexture=null,this._mapping={},this._samplerParameters=null,this._pendingCount=0,this._autoPacking=!1,this._xOffset=0,this._yOffset=0,this._rowHeight=0,this._buffer=4,this._canvasWidth=1024,this._canvasHeight=0,this._canvas=null,this.device=device,this.onUpdate=onUpdate,this.onError=onError}finalize(){this._texture?.delete()}getTexture(){return this._texture||this._externalTexture}getIconMapping(icon){const id=this._autoPacking?getIconId(icon):icon;return this._mapping[id]||MISSING_ICON}setProps({loadOptions:loadOptions,autoPacking:autoPacking,iconAtlas:iconAtlas,iconMapping:iconMapping,textureParameters:textureParameters}){loadOptions&&(this._loadOptions=loadOptions),void 0!==autoPacking&&(this._autoPacking=autoPacking),iconMapping&&(this._mapping=iconMapping),iconAtlas&&(this._texture?.delete(),this._texture=null,this._externalTexture=iconAtlas),textureParameters&&(this._samplerParameters=textureParameters)}get isLoaded(){return 0===this._pendingCount}packIcons(data,getIcon){if(!this._autoPacking||"undefined"==typeof document)return;const icons=Object.values(function getDiffIcons(data,getIcon,cachedIcons){if(!data||!getIcon)return null;cachedIcons=cachedIcons||{};const icons={},{iterable:iterable,objectInfo:objectInfo}=(0,iterable_utils.X)(data);for(const object of iterable){objectInfo.index++;const icon=getIcon(object,objectInfo),id=getIconId(icon);if(!icon)throw new Error("Icon is missing.");if(!icon.url)throw new Error("Icon url is missing.");icons[id]||cachedIcons[id]&&icon.url===cachedIcons[id].url||(icons[id]={...icon,source:object,sourceIndex:objectInfo.index})}return icons}(data,getIcon,this._mapping)||{});if(icons.length>0){const{mapping:mapping,xOffset:xOffset,yOffset:yOffset,rowHeight:rowHeight,canvasHeight:canvasHeight}=function buildMapping({icons:icons,buffer:buffer,mapping:mapping={},xOffset:xOffset=0,yOffset:yOffset=0,rowHeight:rowHeight=0,canvasWidth:canvasWidth}){let columns=[];for(let i=0;i<icons.length;i++){const icon=icons[i];if(!mapping[getIconId(icon)]){const{height:height,width:width}=icon;xOffset+width+buffer>canvasWidth&&(buildRowMapping(mapping,columns,yOffset),xOffset=0,yOffset=rowHeight+yOffset+buffer,rowHeight=0,columns=[]),columns.push({icon:icon,xOffset:xOffset}),xOffset=xOffset+width+buffer,rowHeight=Math.max(rowHeight,height)}}return columns.length>0&&buildRowMapping(mapping,columns,yOffset),{mapping:mapping,rowHeight:rowHeight,xOffset:xOffset,yOffset:yOffset,canvasWidth:canvasWidth,canvasHeight:(number=rowHeight+yOffset+buffer,Math.pow(2,Math.ceil(Math.log2(number))))};var number}({icons:icons,buffer:this._buffer,canvasWidth:this._canvasWidth,mapping:this._mapping,rowHeight:this._rowHeight,xOffset:this._xOffset,yOffset:this._yOffset});this._rowHeight=rowHeight,this._mapping=mapping,this._xOffset=xOffset,this._yOffset=yOffset,this._canvasHeight=canvasHeight,this._texture||(this._texture=this.device.createTexture({format:"rgba8unorm",width:this._canvasWidth,height:this._canvasHeight,sampler:this._samplerParameters||DEFAULT_SAMPLER_PARAMETERS,mipmaps:!0})),this._texture.height!==this._canvasHeight&&(this._texture=function resizeTexture(texture,width,height,sampler){const{width:oldWidth,height:oldHeight,device:device}=texture,newTexture=device.createTexture({format:"rgba8unorm",width:width,height:height,sampler:sampler,mipmaps:!0}),commandEncoder=device.createCommandEncoder();return commandEncoder.copyTextureToTexture({sourceTexture:texture,destinationTexture:newTexture,width:oldWidth,height:oldHeight}),commandEncoder.finish(),texture.destroy(),newTexture}(this._texture,this._canvasWidth,this._canvasHeight,this._samplerParameters||DEFAULT_SAMPLER_PARAMETERS)),this.onUpdate(),this._canvas=this._canvas||document.createElement("canvas"),this._loadIcons(icons)}}_loadIcons(icons){const ctx=this._canvas.getContext("2d",{willReadFrequently:!0});for(const icon of icons)this._pendingCount++,(0,load.H)(icon.url,this._loadOptions).then((imageData=>{const id=getIconId(icon),iconDef=this._mapping[id],{x:x,y:y,width:maxWidth,height:maxHeight}=iconDef,{image:image,width:width,height:height}=resizeImage(ctx,imageData,maxWidth,maxHeight);this._texture?.copyExternalImage({image:image,x:x+(maxWidth-width)/2,y:y+(maxHeight-height)/2,width:width,height:height}),iconDef.width=width,iconDef.height=height,this._texture.generateMipmap(),this.onUpdate()})).catch((error=>{this.onError({url:icon.url,source:icon.source,sourceIndex:icon.sourceIndex,loadOptions:this._loadOptions,error:error})})).finally((()=>{this._pendingCount--}))}}const DEFAULT_COLOR=[0,0,0,255],defaultProps={iconAtlas:{type:"image",value:null,async:!0},iconMapping:{type:"object",value:{},async:!0},sizeScale:{type:"number",value:1,min:0},billboard:!0,sizeUnits:"pixels",sizeMinPixels:{type:"number",min:0,value:0},sizeMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},alphaCutoff:{type:"number",value:.05,min:0,max:1},getPosition:{type:"accessor",value:x=>x.position},getIcon:{type:"accessor",value:x=>x.icon},getColor:{type:"accessor",value:DEFAULT_COLOR},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},onIconError:{type:"function",value:null,optional:!0},textureParameters:{type:"object",ignore:!0,value:null}};class IconLayer extends lib_layer.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME icon-layer-vertex-shader\nin vec2 positions;\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin float instanceSizes;\nin float instanceAngles;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin vec4 instanceIconFrames;\nin float instanceColorModes;\nin vec2 instanceOffsets;\nin vec2 instancePixelOffset;\nout float vColorMode;\nout vec4 vColor;\nout vec2 vTextureCoords;\nout vec2 uv;\nvec2 rotate_by_angle(vec2 vertex, float angle) {\nfloat angle_radian = angle * PI / 180.0;\nfloat cos_angle = cos(angle_radian);\nfloat sin_angle = sin(angle_radian);\nmat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\nreturn rotationMatrix * vertex;\n}\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\ngeometry.uv = positions;\ngeometry.pickingColor = instancePickingColors;\nuv = positions;\nvec2 iconSize = instanceIconFrames.zw;\nfloat sizePixels = clamp(\nproject_size_to_pixel(instanceSizes * icon.sizeScale, icon.sizeUnits),\nicon.sizeMinPixels, icon.sizeMaxPixels\n);\nfloat instanceScale = iconSize.y == 0.0 ? 0.0 : sizePixels / iconSize.y;\nvec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;\npixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * instanceScale;\npixelOffset += instancePixelOffset;\npixelOffset.y *= -1.0;\nif (icon.billboard)  {\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nvec3 offset = vec3(pixelOffset, 0.0);\nDECKGL_FILTER_SIZE(offset, geometry);\ngl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n} else {\nvec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\nDECKGL_FILTER_SIZE(offset_common, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n}\nvTextureCoords = mix(\ninstanceIconFrames.xy,\ninstanceIconFrames.xy + iconSize,\n(positions.xy + 1.0) / 2.0\n) / icon.iconsTextureDim;\nvColor = instanceColors;\nDECKGL_FILTER_COLOR(vColor, geometry);\nvColorMode = instanceColorModes;\n}\n",fs:"#version 300 es\n#define SHADER_NAME icon-layer-fragment-shader\nprecision highp float;\nuniform sampler2D iconsTexture;\nin float vColorMode;\nin vec4 vColor;\nin vec2 vTextureCoords;\nin vec2 uv;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = uv;\nvec4 texColor = texture(iconsTexture, vTextureCoords);\nvec3 color = mix(texColor.rgb, vColor.rgb, vColorMode);\nfloat a = texColor.a * layer.opacity * vColor.a;\nif (a < icon.alphaCutoff) {\ndiscard;\n}\nfragColor = vec4(color, a);\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:[project32.A,picking.A,iconUniforms]})}initializeState(){this.state={iconManager:new IconManager(this.context.device,{onUpdate:this._onUpdate.bind(this),onError:this._onError.bind(this)})};this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceOffsets:{size:2,accessor:"getIcon",transform:this.getInstanceOffset},instanceIconFrames:{size:4,accessor:"getIcon",transform:this.getInstanceIconFrame},instanceColorModes:{size:1,type:"uint8",accessor:"getIcon",transform:this.getInstanceColorMode},instanceColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getColor",defaultValue:DEFAULT_COLOR},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instancePixelOffset:{size:2,transition:!0,accessor:"getPixelOffset"}})}updateState(params){super.updateState(params);const{props:props,oldProps:oldProps,changeFlags:changeFlags}=params,attributeManager=this.getAttributeManager(),{iconAtlas:iconAtlas,iconMapping:iconMapping,data:data,getIcon:getIcon,textureParameters:textureParameters}=props,{iconManager:iconManager}=this.state;if("string"==typeof iconAtlas)return;const prePacked=iconAtlas||this.internalState.isAsyncPropLoading("iconAtlas");iconManager.setProps({loadOptions:props.loadOptions,autoPacking:!prePacked,iconAtlas:iconAtlas,iconMapping:prePacked?iconMapping:null,textureParameters:textureParameters}),prePacked?oldProps.iconMapping!==props.iconMapping&&attributeManager.invalidate("getIcon"):(changeFlags.dataChanged||changeFlags.updateTriggersChanged&&(changeFlags.updateTriggersChanged.all||changeFlags.updateTriggersChanged.getIcon))&&iconManager.packIcons(data,getIcon),changeFlags.extensionsChanged&&(this.state.model?.destroy(),this.state.model=this._getModel(),attributeManager.invalidateAll())}get isLoaded(){return super.isLoaded&&this.state.iconManager.isLoaded}finalizeState(context){super.finalizeState(context),this.state.iconManager.finalize()}draw({uniforms:uniforms}){const{sizeScale:sizeScale,sizeMinPixels:sizeMinPixels,sizeMaxPixels:sizeMaxPixels,sizeUnits:sizeUnits,billboard:billboard,alphaCutoff:alphaCutoff}=this.props,{iconManager:iconManager}=this.state,iconsTexture=iconManager.getTexture();if(iconsTexture){const model=this.state.model,iconProps={iconsTexture:iconsTexture,iconsTextureDim:[iconsTexture.width,iconsTexture.height],sizeUnits:constants.p5[sizeUnits],sizeScale:sizeScale,sizeMinPixels:sizeMinPixels,sizeMaxPixels:sizeMaxPixels,billboard:billboard,alphaCutoff:alphaCutoff};model.shaderInputs.setProps({icon:iconProps}),model.draw(this.context.renderPass)}}_getModel(){return new model.K(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new geometry.V({topology:"triangle-strip",attributes:{positions:{size:2,value:new Float32Array([-1,-1,1,-1,-1,1,1,1])}}}),isInstanced:!0})}_onUpdate(){this.setNeedsRedraw()}_onError(evt){const onIconError=this.getCurrentLayer()?.props.onIconError;onIconError?onIconError(evt):log.A.error(evt.error.message)()}getInstanceOffset(icon){const{width:width,height:height,anchorX:anchorX=width/2,anchorY:anchorY=height/2}=this.state.iconManager.getIconMapping(icon);return[width/2-anchorX,height/2-anchorY]}getInstanceColorMode(icon){return this.state.iconManager.getIconMapping(icon).mask?1:0}getInstanceIconFrame(icon){const{x:x,y:y,width:width,height:height}=this.state.iconManager.getIconMapping(icon);return[x,y,width,height]}}IconLayer.defaultProps=defaultProps,IconLayer.layerName="IconLayer";var icon_layer=IconLayer},"./node_modules/@deck.gl/layers/dist/text-layer/multi-icon-layer/multi-icon-layer.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{A:function(){return multi_icon_layer}});var log=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/log.js"),icon_layer=__webpack_require__("./node_modules/@deck.gl/layers/dist/icon-layer/icon-layer.js");const uniformBlock="uniform sdfUniforms {\n  float gamma;\n  bool enabled;\n  float buffer;\n  float outlineBuffer;\n  vec4 outlineColor;\n} sdf;\n",sdfUniforms={name:"sdf",vs:uniformBlock,fs:uniformBlock,uniformTypes:{gamma:"f32",enabled:"f32",buffer:"f32",outlineBuffer:"f32",outlineColor:"vec4<f32>"}};const EMPTY_ARRAY=[];class MultiIconLayer extends icon_layer.A{getShaders(){const shaders=super.getShaders();return{...shaders,modules:[...shaders.modules,sdfUniforms],fs:"#version 300 es\n#define SHADER_NAME multi-icon-layer-fragment-shader\nprecision highp float;\nuniform sampler2D iconsTexture;\nin vec4 vColor;\nin vec2 vTextureCoords;\nin vec2 uv;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = uv;\nif (!bool(picking.isActive)) {\nfloat alpha = texture(iconsTexture, vTextureCoords).a;\nvec4 color = vColor;\nif (sdf.enabled) {\nfloat distance = alpha;\nalpha = smoothstep(sdf.buffer - sdf.gamma, sdf.buffer + sdf.gamma, distance);\nif (sdf.outlineBuffer > 0.0) {\nfloat inFill = alpha;\nfloat inBorder = smoothstep(sdf.outlineBuffer - sdf.gamma, sdf.outlineBuffer + sdf.gamma, distance);\ncolor = mix(sdf.outlineColor, vColor, inFill);\nalpha = inBorder;\n}\n}\nfloat a = alpha * color.a;\nif (a < icon.alphaCutoff) {\ndiscard;\n}\nfragColor = vec4(color.rgb, a * layer.opacity);\n}\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n"}}initializeState(){super.initializeState();this.getAttributeManager().addInstanced({instanceOffsets:{size:2,accessor:"getIconOffsets"},instancePickingColors:{type:"uint8",size:3,accessor:(object,{index:index,target:value})=>this.encodePickingColor(index,value)}})}updateState(params){super.updateState(params);const{props:props,oldProps:oldProps}=params;let{outlineColor:outlineColor}=props;outlineColor!==oldProps.outlineColor&&(outlineColor=outlineColor.map((x=>x/255)),outlineColor[3]=Number.isFinite(outlineColor[3])?outlineColor[3]:1,this.setState({outlineColor:outlineColor})),!props.sdf&&props.outlineWidth&&log.A.warn(`${this.id}: fontSettings.sdf is required to render outline`)()}draw(params){const{sdf:sdf,smoothing:smoothing,outlineWidth:outlineWidth}=this.props,{outlineColor:outlineColor}=this.state,outlineBuffer=outlineWidth?Math.max(smoothing,.75*(1-outlineWidth)):-1,model=this.state.model,sdfProps={buffer:.75,outlineBuffer:outlineBuffer,gamma:smoothing,enabled:Boolean(sdf),outlineColor:outlineColor};if(model.shaderInputs.setProps({sdf:sdfProps}),super.draw(params),sdf&&outlineWidth){const{iconManager:iconManager}=this.state;iconManager.getTexture()&&(model.shaderInputs.setProps({sdf:{...sdfProps,outlineBuffer:.75}}),model.draw(this.context.renderPass))}}getInstanceOffset(icons){return icons?Array.from(icons).flatMap((icon=>super.getInstanceOffset(icon))):EMPTY_ARRAY}getInstanceColorMode(icons){return 1}getInstanceIconFrame(icons){return icons?Array.from(icons).flatMap((icon=>super.getInstanceIconFrame(icon))):EMPTY_ARRAY}}MultiIconLayer.defaultProps={getIconOffsets:{type:"accessor",value:x=>x.offsets},alphaCutoff:.001,smoothing:.1,outlineWidth:0,outlineColor:{type:"color",value:[0,0,0,255]}},MultiIconLayer.layerName="MultiIconLayer";var multi_icon_layer=MultiIconLayer},"./node_modules/@deck.gl/layers/dist/text-layer/text-background-layer/text-background-layer.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{A:function(){return text_background_layer}});var lib_layer=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/layer.js"),project32=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/project32/project32.js"),picking=__webpack_require__("./node_modules/@deck.gl/core/dist/shaderlib/picking/picking.js"),constants=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/constants.js"),geometry=__webpack_require__("./node_modules/@luma.gl/engine/dist/geometry/geometry.js"),model=__webpack_require__("./node_modules/@luma.gl/engine/dist/model/model.js");const uniformBlock="uniform textBackgroundUniforms {\n  bool billboard;\n  float sizeScale;\n  float sizeMinPixels;\n  float sizeMaxPixels;\n  vec4 borderRadius;\n  vec4 padding;\n  highp int sizeUnits;\n  bool stroked;\n} textBackground;\n",textBackgroundUniforms={name:"textBackground",vs:uniformBlock,fs:uniformBlock,uniformTypes:{billboard:"f32",sizeScale:"f32",sizeMinPixels:"f32",sizeMaxPixels:"f32",borderRadius:"vec4<f32>",padding:"vec4<f32>",sizeUnits:"i32",stroked:"f32"}};const defaultProps={billboard:!0,sizeScale:1,sizeUnits:"pixels",sizeMinPixels:0,sizeMaxPixels:Number.MAX_SAFE_INTEGER,borderRadius:{type:"object",value:0},padding:{type:"array",value:[0,0,0,0]},getPosition:{type:"accessor",value:x=>x.position},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},getBoundingRect:{type:"accessor",value:[0,0,0,0]},getFillColor:{type:"accessor",value:[0,0,0,255]},getLineColor:{type:"accessor",value:[0,0,0,255]},getLineWidth:{type:"accessor",value:1}};class TextBackgroundLayer extends lib_layer.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME text-background-layer-vertex-shader\nin vec2 positions;\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec4 instanceRects;\nin float instanceSizes;\nin float instanceAngles;\nin vec2 instancePixelOffsets;\nin float instanceLineWidths;\nin vec4 instanceFillColors;\nin vec4 instanceLineColors;\nin vec3 instancePickingColors;\nout vec4 vFillColor;\nout vec4 vLineColor;\nout float vLineWidth;\nout vec2 uv;\nout vec2 dimensions;\nvec2 rotate_by_angle(vec2 vertex, float angle) {\nfloat angle_radian = radians(angle);\nfloat cos_angle = cos(angle_radian);\nfloat sin_angle = sin(angle_radian);\nmat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\nreturn rotationMatrix * vertex;\n}\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\ngeometry.uv = positions;\ngeometry.pickingColor = instancePickingColors;\nuv = positions;\nvLineWidth = instanceLineWidths;\nfloat sizePixels = clamp(\nproject_size_to_pixel(instanceSizes * textBackground.sizeScale, textBackground.sizeUnits),\ntextBackground.sizeMinPixels, textBackground.sizeMaxPixels\n);\ndimensions = instanceRects.zw * sizePixels + textBackground.padding.xy + textBackground.padding.zw;\nvec2 pixelOffset = (positions * instanceRects.zw + instanceRects.xy) * sizePixels + mix(-textBackground.padding.xy, textBackground.padding.zw, positions);\npixelOffset = rotate_by_angle(pixelOffset, instanceAngles);\npixelOffset += instancePixelOffsets;\npixelOffset.y *= -1.0;\nif (textBackground.billboard)  {\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nvec3 offset = vec3(pixelOffset, 0.0);\nDECKGL_FILTER_SIZE(offset, geometry);\ngl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n} else {\nvec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\nDECKGL_FILTER_SIZE(offset_common, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n}\nvFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * layer.opacity);\nDECKGL_FILTER_COLOR(vFillColor, geometry);\nvLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * layer.opacity);\nDECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME text-background-layer-fragment-shader\nprecision highp float;\nin vec4 vFillColor;\nin vec4 vLineColor;\nin float vLineWidth;\nin vec2 uv;\nin vec2 dimensions;\nout vec4 fragColor;\nfloat round_rect(vec2 p, vec2 size, vec4 radii) {\nvec2 pixelPositionCB = (p - 0.5) * size;\nvec2 sizeCB = size * 0.5;\nfloat maxBorderRadius = min(size.x, size.y) * 0.5;\nvec4 borderRadius = vec4(min(radii, maxBorderRadius));\nborderRadius.xy =\n(pixelPositionCB.x > 0.0) ? borderRadius.xy : borderRadius.zw;\nborderRadius.x = (pixelPositionCB.y > 0.0) ? borderRadius.x : borderRadius.y;\nvec2 q = abs(pixelPositionCB) - sizeCB + borderRadius.x;\nreturn -(min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - borderRadius.x);\n}\nfloat rect(vec2 p, vec2 size) {\nvec2 pixelPosition = p * size;\nreturn min(min(pixelPosition.x, size.x - pixelPosition.x),\nmin(pixelPosition.y, size.y - pixelPosition.y));\n}\nvec4 get_stroked_fragColor(float dist) {\nfloat isBorder = smoothedge(dist, vLineWidth);\nreturn mix(vFillColor, vLineColor, isBorder);\n}\nvoid main(void) {\ngeometry.uv = uv;\nif (textBackground.borderRadius != vec4(0.0)) {\nfloat distToEdge = round_rect(uv, dimensions, textBackground.borderRadius);\nif (textBackground.stroked) {\nfragColor = get_stroked_fragColor(distToEdge);\n} else {\nfragColor = vFillColor;\n}\nfloat shapeAlpha = smoothedge(-distToEdge, 0.0);\nfragColor.a *= shapeAlpha;\n} else {\nif (textBackground.stroked) {\nfloat distToEdge = rect(uv, dimensions);\nfragColor = get_stroked_fragColor(distToEdge);\n} else {\nfragColor = vFillColor;\n}\n}\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:[project32.A,picking.A,textBackgroundUniforms]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instanceRects:{size:4,accessor:"getBoundingRect"},instancePixelOffsets:{size:2,transition:!0,accessor:"getPixelOffset"},instanceFillColors:{size:4,transition:!0,type:"unorm8",accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:4,transition:!0,type:"unorm8",accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}updateState(params){super.updateState(params);const{changeFlags:changeFlags}=params;changeFlags.extensionsChanged&&(this.state.model?.destroy(),this.state.model=this._getModel(),this.getAttributeManager().invalidateAll())}draw({uniforms:uniforms}){const{billboard:billboard,sizeScale:sizeScale,sizeUnits:sizeUnits,sizeMinPixels:sizeMinPixels,sizeMaxPixels:sizeMaxPixels,getLineWidth:getLineWidth}=this.props;let{padding:padding,borderRadius:borderRadius}=this.props;padding.length<4&&(padding=[padding[0],padding[1],padding[0],padding[1]]),Array.isArray(borderRadius)||(borderRadius=[borderRadius,borderRadius,borderRadius,borderRadius]);const model=this.state.model,textBackgroundProps={billboard:billboard,stroked:Boolean(getLineWidth),borderRadius:borderRadius,padding:padding,sizeUnits:constants.p5[sizeUnits],sizeScale:sizeScale,sizeMinPixels:sizeMinPixels,sizeMaxPixels:sizeMaxPixels};model.shaderInputs.setProps({textBackground:textBackgroundProps}),model.draw(this.context.renderPass)}_getModel(){return new model.K(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new geometry.V({topology:"triangle-strip",vertexCount:4,attributes:{positions:{size:2,value:new Float32Array([0,0,1,0,0,1,1,1])}}}),isInstanced:!0})}}TextBackgroundLayer.defaultProps=defaultProps,TextBackgroundLayer.layerName="TextBackgroundLayer";var text_background_layer=TextBackgroundLayer},"./node_modules/@deck.gl/layers/dist/text-layer/text-layer.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{A:function(){return text_layer}});var composite_layer=__webpack_require__("./node_modules/@deck.gl/core/dist/lib/composite-layer.js"),log=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/log.js"),iterable_utils=__webpack_require__("./node_modules/@deck.gl/core/dist/utils/iterable-utils.js"),multi_icon_layer=__webpack_require__("./node_modules/@deck.gl/layers/dist/text-layer/multi-icon-layer/multi-icon-layer.js");const INF=1e20;class TinySDF{constructor({fontSize:fontSize=24,buffer:buffer=3,radius:radius=8,cutoff:cutoff=.25,fontFamily:fontFamily="sans-serif",fontWeight:fontWeight="normal",fontStyle:fontStyle="normal"}={}){this.buffer=buffer,this.cutoff=cutoff,this.radius=radius;const size=this.size=fontSize+4*buffer,canvas=this._createCanvas(size),ctx=this.ctx=canvas.getContext("2d",{willReadFrequently:!0});ctx.font=`${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`,ctx.textBaseline="alphabetic",ctx.textAlign="left",ctx.fillStyle="black",this.gridOuter=new Float64Array(size*size),this.gridInner=new Float64Array(size*size),this.f=new Float64Array(size),this.z=new Float64Array(size+1),this.v=new Uint16Array(size)}_createCanvas(size){const canvas=document.createElement("canvas");return canvas.width=canvas.height=size,canvas}draw(char){const{width:glyphAdvance,actualBoundingBoxAscent:actualBoundingBoxAscent,actualBoundingBoxDescent:actualBoundingBoxDescent,actualBoundingBoxLeft:actualBoundingBoxLeft,actualBoundingBoxRight:actualBoundingBoxRight}=this.ctx.measureText(char),glyphTop=Math.ceil(actualBoundingBoxAscent),glyphWidth=Math.max(0,Math.min(this.size-this.buffer,Math.ceil(actualBoundingBoxRight-actualBoundingBoxLeft))),glyphHeight=Math.min(this.size-this.buffer,glyphTop+Math.ceil(actualBoundingBoxDescent)),width=glyphWidth+2*this.buffer,height=glyphHeight+2*this.buffer,len=Math.max(width*height,0),data=new Uint8ClampedArray(len),glyph={data:data,width:width,height:height,glyphWidth:glyphWidth,glyphHeight:glyphHeight,glyphTop:glyphTop,glyphLeft:0,glyphAdvance:glyphAdvance};if(0===glyphWidth||0===glyphHeight)return glyph;const{ctx:ctx,buffer:buffer,gridInner:gridInner,gridOuter:gridOuter}=this;ctx.clearRect(buffer,buffer,glyphWidth,glyphHeight),ctx.fillText(char,buffer,buffer+glyphTop);const imgData=ctx.getImageData(buffer,buffer,glyphWidth,glyphHeight);gridOuter.fill(INF,0,len),gridInner.fill(0,0,len);for(let y=0;y<glyphHeight;y++)for(let x=0;x<glyphWidth;x++){const a=imgData.data[4*(y*glyphWidth+x)+3]/255;if(0===a)continue;const j=(y+buffer)*width+x+buffer;if(1===a)gridOuter[j]=0,gridInner[j]=INF;else{const d=.5-a;gridOuter[j]=d>0?d*d:0,gridInner[j]=d<0?d*d:0}}edt(gridOuter,0,0,width,height,width,this.f,this.v,this.z),edt(gridInner,buffer,buffer,glyphWidth,glyphHeight,width,this.f,this.v,this.z);for(let i=0;i<len;i++){const d=Math.sqrt(gridOuter[i])-Math.sqrt(gridInner[i]);data[i]=Math.round(255-255*(d/this.radius+this.cutoff))}return glyph}}function edt(data,x0,y0,width,height,gridSize,f,v,z){for(let x=x0;x<x0+width;x++)edt1d(data,y0*gridSize+x,gridSize,height,f,v,z);for(let y=y0;y<y0+height;y++)edt1d(data,y*gridSize+x0,1,width,f,v,z)}function edt1d(grid,offset,stride,length,f,v,z){v[0]=0,z[0]=-INF,z[1]=INF,f[0]=grid[offset];for(let q=1,k=0,s=0;q<length;q++){f[q]=grid[offset+q*stride];const q2=q*q;do{const r=v[k];s=(f[q]-f[r]+q2-r*r)/(q-r)/2}while(s<=z[k]&&--k>-1);k++,v[k]=q,z[k]=s,z[k+1]=INF}for(let q=0,k=0;q<length;q++){for(;z[k+1]<q;)k++;const r=v[k],qr=q-r;grid[offset+q*stride]=f[r]+qr*qr}}const SINGLE_LINE=[];function getTextWidth(text,startIndex,endIndex,mapping){let width=0;for(let i=startIndex;i<endIndex;i++){const character=text[i];width+=mapping[character]?.layoutWidth||0}return width}function breakAll(text,startIndex,endIndex,maxWidth,iconMapping,target){let rowStartCharIndex=startIndex,rowOffsetLeft=0;for(let i=startIndex;i<endIndex;i++){const textWidth=getTextWidth(text,i,i+1,iconMapping);rowOffsetLeft+textWidth>maxWidth&&(rowStartCharIndex<i&&target.push(i),rowStartCharIndex=i,rowOffsetLeft=0),rowOffsetLeft+=textWidth}return rowOffsetLeft}function autoWrapping(text,wordBreak,maxWidth,iconMapping,startIndex=0,endIndex){void 0===endIndex&&(endIndex=text.length);const result=[];return"break-all"===wordBreak?breakAll(text,startIndex,endIndex,maxWidth,iconMapping,result):function breakWord(text,startIndex,endIndex,maxWidth,iconMapping,target){let rowStartCharIndex=startIndex,groupStartCharIndex=startIndex,groupEndCharIndex=startIndex,rowOffsetLeft=0;for(let i=startIndex;i<endIndex;i++)if(" "===text[i]?groupEndCharIndex=i+1:" "!==text[i+1]&&i+1!==endIndex||(groupEndCharIndex=i+1),groupEndCharIndex>groupStartCharIndex){let groupWidth=getTextWidth(text,groupStartCharIndex,groupEndCharIndex,iconMapping);rowOffsetLeft+groupWidth>maxWidth&&(rowStartCharIndex<groupStartCharIndex&&(target.push(groupStartCharIndex),rowStartCharIndex=groupStartCharIndex,rowOffsetLeft=0),groupWidth>maxWidth&&(groupWidth=breakAll(text,groupStartCharIndex,groupEndCharIndex,maxWidth,iconMapping,target),rowStartCharIndex=target[target.length-1])),groupStartCharIndex=groupEndCharIndex,rowOffsetLeft+=groupWidth}return rowOffsetLeft}(text,startIndex,endIndex,maxWidth,iconMapping,result),result}function transformRow(line,startIndex,endIndex,iconMapping,leftOffsets,rowSize){let x=0,rowHeight=0;for(let i=startIndex;i<endIndex;i++){const character=line[i],frame=iconMapping[character];frame?(rowHeight||(rowHeight=frame.layoutHeight),leftOffsets[i]=x+frame.layoutWidth/2,x+=frame.layoutWidth):(log.A.warn(`Missing character: ${character} (${character.codePointAt(0)})`)(),leftOffsets[i]=x,x+=32)}rowSize[0]=x,rowSize[1]=rowHeight}class LRUCache{constructor(limit=5){this._cache={},this._order=[],this.limit=limit}get(key){const value=this._cache[key];return value&&(this._deleteOrder(key),this._appendOrder(key)),value}set(key,value){this._cache[key]?(this.delete(key),this._cache[key]=value,this._appendOrder(key)):(Object.keys(this._cache).length===this.limit&&this.delete(this._order[0]),this._cache[key]=value,this._appendOrder(key))}delete(key){this._cache[key]&&(delete this._cache[key],this._deleteOrder(key))}_deleteOrder(key){const index=this._order.indexOf(key);index>=0&&this._order.splice(index,1)}_appendOrder(key){this._order.push(key)}}const DEFAULT_FONT_SETTINGS={fontFamily:"Monaco, monospace",fontWeight:"normal",characterSet:function getDefaultCharacterSet(){const charSet=[];for(let i=32;i<128;i++)charSet.push(String.fromCharCode(i));return charSet}(),fontSize:64,buffer:4,sdf:!1,cutoff:.25,radius:12,smoothing:.1};let cache=new LRUCache(3);function populateAlphaChannel(alphaChannel,imageData){for(let i=0;i<alphaChannel.length;i++)imageData.data[4*i+3]=alphaChannel[i]}function setTextStyle(ctx,fontFamily,fontSize,fontWeight){ctx.font=`${fontWeight} ${fontSize}px ${fontFamily}`,ctx.fillStyle="#000",ctx.textBaseline="alphabetic",ctx.textAlign="left"}class FontAtlasManager{constructor(){this.props={...DEFAULT_FONT_SETTINGS}}get atlas(){return this._atlas}get mapping(){return this._atlas&&this._atlas.mapping}get scale(){const{fontSize:fontSize,buffer:buffer}=this.props;return(1.2*fontSize+2*buffer)/fontSize}setProps(props={}){Object.assign(this.props,props),this._key=this._getKey();const charSet=function getNewChars(cacheKey,characterSet){let newCharSet;newCharSet="string"==typeof characterSet?new Set(Array.from(characterSet)):new Set(characterSet);const cachedFontAtlas=cache.get(cacheKey);if(!cachedFontAtlas)return newCharSet;for(const char in cachedFontAtlas.mapping)newCharSet.has(char)&&newCharSet.delete(char);return newCharSet}(this._key,this.props.characterSet),cachedFontAtlas=cache.get(this._key);if(cachedFontAtlas&&0===charSet.size)return void(this._atlas!==cachedFontAtlas&&(this._atlas=cachedFontAtlas));const fontAtlas=this._generateFontAtlas(charSet,cachedFontAtlas);this._atlas=fontAtlas,cache.set(this._key,fontAtlas)}_generateFontAtlas(characterSet,cachedFontAtlas){const{fontFamily:fontFamily,fontWeight:fontWeight,fontSize:fontSize,buffer:buffer,sdf:sdf,radius:radius,cutoff:cutoff}=this.props;let canvas=cachedFontAtlas&&cachedFontAtlas.data;canvas||(canvas=document.createElement("canvas"),canvas.width=1024);const ctx=canvas.getContext("2d",{willReadFrequently:!0});setTextStyle(ctx,fontFamily,fontSize,fontWeight);const{mapping:mapping,canvasHeight:canvasHeight,xOffset:xOffset,yOffset:yOffset}=function buildMapping({characterSet:characterSet,getFontWidth:getFontWidth,fontHeight:fontHeight,buffer:buffer,maxCanvasWidth:maxCanvasWidth,mapping:mapping={},xOffset:xOffset=0,yOffset:yOffset=0}){let row=0,x=xOffset;const rowHeight=fontHeight+2*buffer;for(const char of characterSet)if(!mapping[char]){const width=getFontWidth(char);x+width+2*buffer>maxCanvasWidth&&(x=0,row++),mapping[char]={x:x+buffer,y:yOffset+row*rowHeight+buffer,width:width,height:rowHeight,layoutWidth:width,layoutHeight:fontHeight},x+=width+2*buffer}return{mapping:mapping,xOffset:x,yOffset:yOffset+row*rowHeight,canvasHeight:(number=yOffset+(row+1)*rowHeight,Math.pow(2,Math.ceil(Math.log2(number))))};var number}({getFontWidth:char=>ctx.measureText(char).width,fontHeight:1.2*fontSize,buffer:buffer,characterSet:characterSet,maxCanvasWidth:1024,...cachedFontAtlas&&{mapping:cachedFontAtlas.mapping,xOffset:cachedFontAtlas.xOffset,yOffset:cachedFontAtlas.yOffset}});if(canvas.height!==canvasHeight){const imageData=ctx.getImageData(0,0,canvas.width,canvas.height);canvas.height=canvasHeight,ctx.putImageData(imageData,0,0)}if(setTextStyle(ctx,fontFamily,fontSize,fontWeight),sdf){const tinySDF=new TinySDF({fontSize:fontSize,buffer:buffer,radius:radius,cutoff:cutoff,fontFamily:fontFamily,fontWeight:`${fontWeight}`});for(const char of characterSet){const{data:data,width:width,height:height,glyphTop:glyphTop}=tinySDF.draw(char);mapping[char].width=width,mapping[char].layoutOffsetY=.9*fontSize-glyphTop;const imageData=ctx.createImageData(width,height);populateAlphaChannel(data,imageData),ctx.putImageData(imageData,mapping[char].x,mapping[char].y)}}else for(const char of characterSet)ctx.fillText(char,mapping[char].x,mapping[char].y+buffer+.9*fontSize);return{xOffset:xOffset,yOffset:yOffset,mapping:mapping,data:canvas,width:canvas.width,height:canvas.height}}_getKey(){const{fontFamily:fontFamily,fontWeight:fontWeight,fontSize:fontSize,buffer:buffer,sdf:sdf,radius:radius,cutoff:cutoff}=this.props;return sdf?`${fontFamily} ${fontWeight} ${fontSize} ${buffer} ${radius} ${cutoff}`:`${fontFamily} ${fontWeight} ${fontSize} ${buffer}`}}var text_background_layer=__webpack_require__("./node_modules/@deck.gl/layers/dist/text-layer/text-background-layer/text-background-layer.js");const TEXT_ANCHOR={start:1,middle:0,end:-1},ALIGNMENT_BASELINE={top:1,center:0,bottom:-1},DEFAULT_COLOR=[0,0,0,255],defaultProps={billboard:!0,sizeScale:1,sizeUnits:"pixels",sizeMinPixels:0,sizeMaxPixels:Number.MAX_SAFE_INTEGER,background:!1,getBackgroundColor:{type:"accessor",value:[255,255,255,255]},getBorderColor:{type:"accessor",value:DEFAULT_COLOR},getBorderWidth:{type:"accessor",value:0},backgroundBorderRadius:{type:"object",value:0},backgroundPadding:{type:"array",value:[0,0,0,0]},characterSet:{type:"object",value:DEFAULT_FONT_SETTINGS.characterSet},fontFamily:DEFAULT_FONT_SETTINGS.fontFamily,fontWeight:DEFAULT_FONT_SETTINGS.fontWeight,lineHeight:1,outlineWidth:{type:"number",value:0,min:0},outlineColor:{type:"color",value:DEFAULT_COLOR},fontSettings:{type:"object",value:{},compare:1},wordBreak:"break-word",maxWidth:{type:"number",value:-1},getText:{type:"accessor",value:x=>x.text},getPosition:{type:"accessor",value:x=>x.position},getColor:{type:"accessor",value:DEFAULT_COLOR},getSize:{type:"accessor",value:32},getAngle:{type:"accessor",value:0},getTextAnchor:{type:"accessor",value:"middle"},getAlignmentBaseline:{type:"accessor",value:"center"},getPixelOffset:{type:"accessor",value:[0,0]},backgroundColor:{deprecatedFor:["background","getBackgroundColor"]}};class TextLayer extends composite_layer.A{constructor(){super(...arguments),this.getBoundingRect=(object,objectInfo)=>{let{size:[width,height]}=this.transformParagraph(object,objectInfo);const{fontSize:fontSize}=this.state.fontAtlasManager.props;width/=fontSize,height/=fontSize;const{getTextAnchor:getTextAnchor,getAlignmentBaseline:getAlignmentBaseline}=this.props;return[(TEXT_ANCHOR["function"==typeof getTextAnchor?getTextAnchor(object,objectInfo):getTextAnchor]-1)*width/2,(ALIGNMENT_BASELINE["function"==typeof getAlignmentBaseline?getAlignmentBaseline(object,objectInfo):getAlignmentBaseline]-1)*height/2,width,height]},this.getIconOffsets=(object,objectInfo)=>{const{getTextAnchor:getTextAnchor,getAlignmentBaseline:getAlignmentBaseline}=this.props,{x:x,y:y,rowWidth:rowWidth,size:[width,height]}=this.transformParagraph(object,objectInfo),anchorX=TEXT_ANCHOR["function"==typeof getTextAnchor?getTextAnchor(object,objectInfo):getTextAnchor],anchorY=ALIGNMENT_BASELINE["function"==typeof getAlignmentBaseline?getAlignmentBaseline(object,objectInfo):getAlignmentBaseline],numCharacters=x.length,offsets=new Array(2*numCharacters);let index=0;for(let i=0;i<numCharacters;i++){const rowOffset=(1-anchorX)*(width-rowWidth[i])/2;offsets[index++]=(anchorX-1)*width/2+rowOffset+x[i],offsets[index++]=(anchorY-1)*height/2+y[i]}return offsets}}initializeState(){this.state={styleVersion:0,fontAtlasManager:new FontAtlasManager},this.props.maxWidth>0&&log.A.warn("v8.9 breaking change: TextLayer maxWidth is now relative to text size")()}updateState(params){const{props:props,oldProps:oldProps,changeFlags:changeFlags}=params;(changeFlags.dataChanged||changeFlags.updateTriggersChanged&&(changeFlags.updateTriggersChanged.all||changeFlags.updateTriggersChanged.getText))&&this._updateText();(this._updateFontAtlas()||props.lineHeight!==oldProps.lineHeight||props.wordBreak!==oldProps.wordBreak||props.maxWidth!==oldProps.maxWidth)&&this.setState({styleVersion:this.state.styleVersion+1})}getPickingInfo({info:info}){return info.object=info.index>=0?this.props.data[info.index]:null,info}_updateFontAtlas(){const{fontSettings:fontSettings,fontFamily:fontFamily,fontWeight:fontWeight}=this.props,{fontAtlasManager:fontAtlasManager,characterSet:characterSet}=this.state,fontProps={...fontSettings,characterSet:characterSet,fontFamily:fontFamily,fontWeight:fontWeight};if(!fontAtlasManager.mapping)return fontAtlasManager.setProps(fontProps),!0;for(const key in fontProps)if(fontProps[key]!==fontAtlasManager.props[key])return fontAtlasManager.setProps(fontProps),!0;return!1}_updateText(){const{data:data,characterSet:characterSet}=this.props,textBuffer=data.attributes?.getText;let numInstances,{getText:getText}=this.props,startIndices=data.startIndices;const autoCharacterSet="auto"===characterSet&&new Set;if(textBuffer&&startIndices){const{texts:texts,characterCount:characterCount}=function getTextFromBuffer({value:value,length:length,stride:stride,offset:offset,startIndices:startIndices,characterSet:characterSet}){const bytesPerElement=value.BYTES_PER_ELEMENT,elementStride=stride?stride/bytesPerElement:1,elementOffset=offset?offset/bytesPerElement:0,characterCount=startIndices[length]||Math.ceil((value.length-elementOffset)/elementStride),autoCharacterSet=characterSet&&new Set,texts=new Array(length);let codes=value;if(elementStride>1||elementOffset>0){codes=new(0,value.constructor)(characterCount);for(let i=0;i<characterCount;i++)codes[i]=value[i*elementStride+elementOffset]}for(let index=0;index<length;index++){const startIndex=startIndices[index],endIndex=startIndices[index+1]||characterCount,codesAtIndex=codes.subarray(startIndex,endIndex);texts[index]=String.fromCodePoint.apply(null,codesAtIndex),autoCharacterSet&&codesAtIndex.forEach(autoCharacterSet.add,autoCharacterSet)}if(autoCharacterSet)for(const charCode of autoCharacterSet)characterSet.add(String.fromCodePoint(charCode));return{texts:texts,characterCount:characterCount}}({...ArrayBuffer.isView(textBuffer)?{value:textBuffer}:textBuffer,length:data.length,startIndices:startIndices,characterSet:autoCharacterSet});numInstances=characterCount,getText=(_,{index:index})=>texts[index]}else{const{iterable:iterable,objectInfo:objectInfo}=(0,iterable_utils.X)(data);startIndices=[0],numInstances=0;for(const object of iterable){objectInfo.index++;const text=Array.from(getText(object,objectInfo)||"");autoCharacterSet&&text.forEach(autoCharacterSet.add,autoCharacterSet),numInstances+=text.length,startIndices.push(numInstances)}}this.setState({getText:getText,startIndices:startIndices,numInstances:numInstances,characterSet:autoCharacterSet||characterSet})}transformParagraph(object,objectInfo){const{fontAtlasManager:fontAtlasManager}=this.state,iconMapping=fontAtlasManager.mapping,getText=this.state.getText,{wordBreak:wordBreak,lineHeight:lineHeight,maxWidth:maxWidth}=this.props;return function transformParagraph(paragraph,lineHeight,wordBreak,maxWidth,iconMapping){const characters=Array.from(paragraph),numCharacters=characters.length,x=new Array(numCharacters),y=new Array(numCharacters),rowWidth=new Array(numCharacters),autoWrappingEnabled=("break-word"===wordBreak||"break-all"===wordBreak)&&isFinite(maxWidth)&&maxWidth>0,size=[0,0],rowSize=[0,0];let rowOffsetTop=0,lineStartIndex=0,lineEndIndex=0;for(let i=0;i<=numCharacters;i++){const char=characters[i];if("\n"!==char&&i!==numCharacters||(lineEndIndex=i),lineEndIndex>lineStartIndex){const rows=autoWrappingEnabled?autoWrapping(characters,wordBreak,maxWidth,iconMapping,lineStartIndex,lineEndIndex):SINGLE_LINE;for(let rowIndex=0;rowIndex<=rows.length;rowIndex++){const rowStart=0===rowIndex?lineStartIndex:rows[rowIndex-1],rowEnd=rowIndex<rows.length?rows[rowIndex]:lineEndIndex;transformRow(characters,rowStart,rowEnd,iconMapping,x,rowSize);for(let j=rowStart;j<rowEnd;j++){x[j];const char=characters[j],layoutOffsetY=iconMapping[char]?.layoutOffsetY||0;y[j]=rowOffsetTop+rowSize[1]/2+layoutOffsetY,rowWidth[j]=rowSize[0]}rowOffsetTop+=rowSize[1]*lineHeight,size[0]=Math.max(size[0],rowSize[0])}lineStartIndex=lineEndIndex}"\n"===char&&(x[lineStartIndex]=0,y[lineStartIndex]=0,rowWidth[lineStartIndex]=0,lineStartIndex++)}return size[1]=rowOffsetTop,{x:x,y:y,rowWidth:rowWidth,size:size}}(getText(object,objectInfo)||"",lineHeight,wordBreak,maxWidth*fontAtlasManager.props.fontSize,iconMapping)}renderLayers(){const{startIndices:startIndices,numInstances:numInstances,getText:getText,fontAtlasManager:{scale:scale,atlas:atlas,mapping:mapping},styleVersion:styleVersion}=this.state,{data:data,_dataDiff:_dataDiff,getPosition:getPosition,getColor:getColor,getSize:getSize,getAngle:getAngle,getPixelOffset:getPixelOffset,getBackgroundColor:getBackgroundColor,getBorderColor:getBorderColor,getBorderWidth:getBorderWidth,backgroundBorderRadius:backgroundBorderRadius,backgroundPadding:backgroundPadding,background:background,billboard:billboard,fontSettings:fontSettings,outlineWidth:outlineWidth,outlineColor:outlineColor,sizeScale:sizeScale,sizeUnits:sizeUnits,sizeMinPixels:sizeMinPixels,sizeMaxPixels:sizeMaxPixels,transitions:transitions,updateTriggers:updateTriggers}=this.props,CharactersLayerClass=this.getSubLayerClass("characters",multi_icon_layer.A),BackgroundLayerClass=this.getSubLayerClass("background",text_background_layer.A);return[background&&new BackgroundLayerClass({getFillColor:getBackgroundColor,getLineColor:getBorderColor,getLineWidth:getBorderWidth,borderRadius:backgroundBorderRadius,padding:backgroundPadding,getPosition:getPosition,getSize:getSize,getAngle:getAngle,getPixelOffset:getPixelOffset,billboard:billboard,sizeScale:sizeScale,sizeUnits:sizeUnits,sizeMinPixels:sizeMinPixels,sizeMaxPixels:sizeMaxPixels,transitions:transitions&&{getPosition:transitions.getPosition,getAngle:transitions.getAngle,getSize:transitions.getSize,getFillColor:transitions.getBackgroundColor,getLineColor:transitions.getBorderColor,getLineWidth:transitions.getBorderWidth,getPixelOffset:transitions.getPixelOffset}},this.getSubLayerProps({id:"background",updateTriggers:{getPosition:updateTriggers.getPosition,getAngle:updateTriggers.getAngle,getSize:updateTriggers.getSize,getFillColor:updateTriggers.getBackgroundColor,getLineColor:updateTriggers.getBorderColor,getLineWidth:updateTriggers.getBorderWidth,getPixelOffset:updateTriggers.getPixelOffset,getBoundingRect:{getText:updateTriggers.getText,getTextAnchor:updateTriggers.getTextAnchor,getAlignmentBaseline:updateTriggers.getAlignmentBaseline,styleVersion:styleVersion}}}),{data:data.attributes&&data.attributes.background?{length:data.length,attributes:data.attributes.background}:data,_dataDiff:_dataDiff,autoHighlight:!1,getBoundingRect:this.getBoundingRect}),new CharactersLayerClass({sdf:fontSettings.sdf,smoothing:Number.isFinite(fontSettings.smoothing)?fontSettings.smoothing:DEFAULT_FONT_SETTINGS.smoothing,outlineWidth:outlineWidth/(fontSettings.radius||DEFAULT_FONT_SETTINGS.radius),outlineColor:outlineColor,iconAtlas:atlas,iconMapping:mapping,getPosition:getPosition,getColor:getColor,getSize:getSize,getAngle:getAngle,getPixelOffset:getPixelOffset,billboard:billboard,sizeScale:sizeScale*scale,sizeUnits:sizeUnits,sizeMinPixels:sizeMinPixels*scale,sizeMaxPixels:sizeMaxPixels*scale,transitions:transitions&&{getPosition:transitions.getPosition,getAngle:transitions.getAngle,getColor:transitions.getColor,getSize:transitions.getSize,getPixelOffset:transitions.getPixelOffset}},this.getSubLayerProps({id:"characters",updateTriggers:{all:updateTriggers.getText,getPosition:updateTriggers.getPosition,getAngle:updateTriggers.getAngle,getColor:updateTriggers.getColor,getSize:updateTriggers.getSize,getPixelOffset:updateTriggers.getPixelOffset,getIconOffsets:{getTextAnchor:updateTriggers.getTextAnchor,getAlignmentBaseline:updateTriggers.getAlignmentBaseline,styleVersion:styleVersion}}}),{data:data,_dataDiff:_dataDiff,startIndices:startIndices,numInstances:numInstances,getIconOffsets:this.getIconOffsets,getIcon:getText})]}static set fontAtlasCacheLimit(limit){!function setFontAtlasCacheLimit(limit){log.A.assert(Number.isFinite(limit)&&limit>=3,"Invalid cache limit"),cache=new LRUCache(limit)}(limit)}}TextLayer.defaultProps=defaultProps,TextLayer.layerName="TextLayer";var text_layer=TextLayer},"./node_modules/@loaders.gl/core/dist/javascript-utils/is-type.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Gv:function(){return isObject},H1:function(){return isReadableStream},Pe:function(){return isBuffer},Sv:function(){return isResponse},Td:function(){return isAsyncIterable},aC:function(){return isPureObject},qf:function(){return isBlob},xZ:function(){return isIterable}});const isBoolean=x=>"boolean"==typeof x,isFunction=x=>"function"==typeof x,isObject=x=>null!==x&&"object"==typeof x,isPureObject=x=>isObject(x)&&x.constructor==={}.constructor,isIterable=x=>Boolean(x)&&"function"==typeof x[Symbol.iterator],isAsyncIterable=x=>x&&"function"==typeof x[Symbol.asyncIterator],isResponse=x=>"undefined"!=typeof Response&&x instanceof Response||x&&x.arrayBuffer&&x.text&&x.json,isBlob=x=>"undefined"!=typeof Blob&&x instanceof Blob,isBuffer=x=>x&&"object"==typeof x&&x.isBuffer,isReadableStream=x=>(x=>"undefined"!=typeof ReadableStream&&x instanceof ReadableStream||isObject(x)&&isFunction(x.tee)&&isFunction(x.cancel)&&isFunction(x.getReader))(x)||(x=>isObject(x)&&isFunction(x.read)&&isFunction(x.pipe)&&isBoolean(x.readable))(x)},"./node_modules/@loaders.gl/core/dist/lib/api/load.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{H:function(){return load}});var is_type=__webpack_require__("./node_modules/@loaders.gl/core/dist/javascript-utils/is-type.js"),normalize_loader=__webpack_require__("./node_modules/@loaders.gl/core/dist/lib/loader-utils/normalize-loader.js");let pathPrefix="";const fileAliases={};class FetchError extends Error{constructor(message,info){super(message),this.reason=info.reason,this.url=info.url,this.response=info.response}reason;url;response}const DATA_URL_PATTERN=/^data:([-\w.]+\/[-\w.+]+)(;|,)/,MIME_TYPE_PATTERN=/^([-\w.]+\/[-\w.+]+)/;function compareMIMETypes(mimeType1,mimeType2){return mimeType1.toLowerCase()===mimeType2.toLowerCase()}function parseMIMETypeFromURL(url){const matches=DATA_URL_PATTERN.exec(url);return matches?matches[1]:""}const QUERY_STRING_PATTERN=/\?.*/;function stripQueryString(url){return url.replace(QUERY_STRING_PATTERN,"")}function getResourceUrl(resource){if((0,is_type.Sv)(resource)){return resource.url}if((0,is_type.qf)(resource)){return resource.name||""}return"string"==typeof resource?resource:""}function getResourceMIMEType(resource){if((0,is_type.Sv)(resource)){const response=resource,contentTypeHeader=response.headers.get("content-type")||"",noQueryUrl=stripQueryString(response.url);return function parseMIMEType(mimeString){const matches=MIME_TYPE_PATTERN.exec(mimeString);return matches?matches[1]:mimeString}(contentTypeHeader)||parseMIMETypeFromURL(noQueryUrl)}if((0,is_type.qf)(resource)){return resource.type||""}return"string"==typeof resource?parseMIMETypeFromURL(resource):""}async function response_utils_makeResponse(resource){if((0,is_type.Sv)(resource))return resource;const headers={},contentLength=function getResourceContentLength(resource){if((0,is_type.Sv)(resource))return resource.headers["content-length"]||-1;if((0,is_type.qf)(resource))return resource.size;return"string"==typeof resource?resource.length:resource instanceof ArrayBuffer||ArrayBuffer.isView(resource)?resource.byteLength:-1}(resource);contentLength>=0&&(headers["content-length"]=String(contentLength));const url=getResourceUrl(resource),type=getResourceMIMEType(resource);type&&(headers["content-type"]=type);const initialDataUrl=await async function getInitialDataUrl(resource){const INITIAL_DATA_LENGTH=5;if("string"==typeof resource)return`data:,${resource.slice(0,INITIAL_DATA_LENGTH)}`;if(resource instanceof Blob){const blobSlice=resource.slice(0,5);return await new Promise((resolve=>{const reader=new FileReader;reader.onload=event=>resolve(event?.target?.result),reader.readAsDataURL(blobSlice)}))}if(resource instanceof ArrayBuffer){return`data:base64,${function arrayBufferToBase64(buffer){let binary="";const bytes=new Uint8Array(buffer);for(let i=0;i<bytes.byteLength;i++)binary+=String.fromCharCode(bytes[i]);return btoa(binary)}(resource.slice(0,INITIAL_DATA_LENGTH))}`}return null}(resource);initialDataUrl&&(headers["x-first-bytes"]=initialDataUrl),"string"==typeof resource&&(resource=(new TextEncoder).encode(resource));const response=new Response(resource,{headers:headers});return Object.defineProperty(response,"url",{value:url}),response}async function response_utils_checkResponse(response){if(!response.ok){const error=await async function getResponseError(response){const shortUrl=function shortenUrlForDisplay(url){if(url.length<50)return url;const urlEnd=url.slice(url.length-15);return`${url.substr(0,32)}...${urlEnd}`}(response.url);let message=`Failed to fetch resource (${response.status}) ${response.statusText}: ${shortUrl}`;message=message.length>100?`${message.slice(0,100)}...`:message;const info={reason:response.statusText,url:response.url,response:response};try{const contentType=response.headers.get("Content-Type");info.reason=!response.bodyUsed&&contentType?.includes("application/json")?await response.json():await response.text()}catch(error){}return new FetchError(message,info)}(response);throw error}}async function fetchFile(urlOrData,fetchOptions){if("string"==typeof urlOrData){const url=function resolvePath(filename){for(const alias in fileAliases)if(filename.startsWith(alias)){const replacement=fileAliases[alias];filename=filename.replace(alias,replacement)}return filename.startsWith("http://")||filename.startsWith("https://")||(filename=`${pathPrefix}${filename}`),filename}(urlOrData);return function isNodePath(url){return!function isRequestURL(url){return url.startsWith("http:")||url.startsWith("https:")}(url)&&!function isDataURL(url){return url.startsWith("data:")}(url)}(url)&&globalThis.loaders?.fetchNode?globalThis.loaders?.fetchNode(url,fetchOptions):await fetch(url,fetchOptions)}return await response_utils_makeResponse(urlOrData)}var option_utils=__webpack_require__("./node_modules/@loaders.gl/core/dist/lib/loader-utils/option-utils.js");function getFetchFunction(options,context){const globalOptions=(0,option_utils.pp)(),loaderOptions=options||globalOptions;return"function"==typeof loaderOptions.fetch?loaderOptions.fetch:(0,is_type.Gv)(loaderOptions.fetch)?url=>fetchFile(url,loaderOptions.fetch):context?.fetch?context?.fetch:fetchFile}function mergeLoaderOptions(baseOptions,newOptions){return mergeOptionsRecursively(baseOptions||{},newOptions)}function mergeOptionsRecursively(baseOptions,newOptions,level=0){if(level>3)return newOptions;const options={...baseOptions};for(const[key,newValue]of Object.entries(newOptions))newValue&&"object"==typeof newValue&&!Array.isArray(newValue)?options[key]=mergeOptionsRecursively(options[key]||{},newOptions[key],level+1):options[key]=newOptions[key];return options}var process=__webpack_require__("./node_modules/process/browser.js");"undefined"!=typeof self&&self,"undefined"!=typeof window&&window,void 0!==__webpack_require__.g&&__webpack_require__.g,"undefined"!=typeof document&&document;const isBrowser="object"!=typeof process||"[object process]"!==String(process)||process.browser,isMobile="undefined"!=typeof window&&void 0!==window.orientation,matches=void 0!==process&&process.version&&/v([0-9]*)/.exec(process.version);matches&&parseFloat(matches[1]);class NodeWorker{terminate(){}}function assert(condition,message){if(!condition)throw new Error(message||"loaders.gl assertion failed.")}const workerURLCache=new Map;function getLoadableWorkerURL(props){assert(props.source&&!props.url||!props.source&&props.url);let workerURL=workerURLCache.get(props.source||props.url);return workerURL||(props.url&&(workerURL=function getLoadableWorkerURLFromURL(url){if(!url.startsWith("http"))return url;return getLoadableWorkerURLFromSource(function buildScriptSource(workerUrl){return`try {\n  importScripts('${workerUrl}');\n} catch (error) {\n  console.error(error);\n  throw error;\n}`}(url))}(props.url),workerURLCache.set(props.url,workerURL)),props.source&&(workerURL=getLoadableWorkerURLFromSource(props.source),workerURLCache.set(props.source,workerURL))),assert(workerURL),workerURL}function getLoadableWorkerURLFromSource(workerSource){const blob=new Blob([workerSource],{type:"application/javascript"});return URL.createObjectURL(blob)}function getTransferList(object,recursive=!0,transfers){const transfersSet=transfers||new Set;if(object){if(isTransferable(object))transfersSet.add(object);else if(isTransferable(object.buffer))transfersSet.add(object.buffer);else if(ArrayBuffer.isView(object));else if(recursive&&"object"==typeof object)for(const key in object)getTransferList(object[key],recursive,transfersSet)}else;return void 0===transfers?Array.from(transfersSet):[]}function isTransferable(object){return!!object&&(object instanceof ArrayBuffer||("undefined"!=typeof MessagePort&&object instanceof MessagePort||("undefined"!=typeof ImageBitmap&&object instanceof ImageBitmap||"undefined"!=typeof OffscreenCanvas&&object instanceof OffscreenCanvas)))}const NOOP=()=>{};class WorkerThread{name;source;url;terminated=!1;worker;onMessage;onError;_loadableURL="";static isSupported(){return"undefined"!=typeof Worker&&isBrowser||void 0!==NodeWorker&&!isBrowser}constructor(props){const{name:name,source:source,url:url}=props;assert(source||url),this.name=name,this.source=source,this.url=url,this.onMessage=NOOP,this.onError=error=>console.log(error),this.worker=isBrowser?this._createBrowserWorker():this._createNodeWorker()}destroy(){this.onMessage=NOOP,this.onError=NOOP,this.worker.terminate(),this.terminated=!0}get isRunning(){return Boolean(this.onMessage)}postMessage(data,transferList){transferList=transferList||getTransferList(data),this.worker.postMessage(data,transferList)}_getErrorFromErrorEvent(event){let message="Failed to load ";return message+=`worker ${this.name} from ${this.url}. `,event.message&&(message+=`${event.message} in `),event.lineno&&(message+=`:${event.lineno}:${event.colno}`),new Error(message)}_createBrowserWorker(){this._loadableURL=getLoadableWorkerURL({source:this.source,url:this.url});const worker=new Worker(this._loadableURL,{name:this.name});return worker.onmessage=event=>{event.data?this.onMessage(event.data):this.onError(new Error("No data received"))},worker.onerror=error=>{this.onError(this._getErrorFromErrorEvent(error)),this.terminated=!0},worker.onmessageerror=event=>console.error(event),worker}_createNodeWorker(){let worker;if(this.url){const url=this.url.includes(":/")||this.url.startsWith("/")?this.url:`./${this.url}`;worker=new NodeWorker(url,{eval:!1})}else{if(!this.source)throw new Error("no worker");worker=new NodeWorker(this.source,{eval:!0})}return worker.on("message",(data=>{this.onMessage(data)})),worker.on("error",(error=>{this.onError(error)})),worker.on("exit",(code=>{})),worker}}class WorkerJob{name;workerThread;isRunning=!0;result;_resolve=()=>{};_reject=()=>{};constructor(jobName,workerThread){this.name=jobName,this.workerThread=workerThread,this.result=new Promise(((resolve,reject)=>{this._resolve=resolve,this._reject=reject}))}postMessage(type,payload){this.workerThread.postMessage({source:"loaders.gl",type:type,payload:payload})}done(value){assert(this.isRunning),this.isRunning=!1,this._resolve(value)}error(error){assert(this.isRunning),this.isRunning=!1,this._reject(error)}}class WorkerPool{name="unnamed";source;url;maxConcurrency=1;maxMobileConcurrency=1;onDebug=()=>{};reuseWorkers=!0;props={};jobQueue=[];idleQueue=[];count=0;isDestroyed=!1;static isSupported(){return WorkerThread.isSupported()}constructor(props){this.source=props.source,this.url=props.url,this.setProps(props)}destroy(){this.idleQueue.forEach((worker=>worker.destroy())),this.isDestroyed=!0}setProps(props){this.props={...this.props,...props},void 0!==props.name&&(this.name=props.name),void 0!==props.maxConcurrency&&(this.maxConcurrency=props.maxConcurrency),void 0!==props.maxMobileConcurrency&&(this.maxMobileConcurrency=props.maxMobileConcurrency),void 0!==props.reuseWorkers&&(this.reuseWorkers=props.reuseWorkers),void 0!==props.onDebug&&(this.onDebug=props.onDebug)}async startJob(name,onMessage=(job,type,data)=>job.done(data),onError=(job,error)=>job.error(error)){const startPromise=new Promise((onStart=>(this.jobQueue.push({name:name,onMessage:onMessage,onError:onError,onStart:onStart}),this)));return this._startQueuedJob(),await startPromise}async _startQueuedJob(){if(!this.jobQueue.length)return;const workerThread=this._getAvailableWorker();if(!workerThread)return;const queuedJob=this.jobQueue.shift();if(queuedJob){this.onDebug({message:"Starting job",name:queuedJob.name,workerThread:workerThread,backlog:this.jobQueue.length});const job=new WorkerJob(queuedJob.name,workerThread);workerThread.onMessage=data=>queuedJob.onMessage(job,data.type,data.payload),workerThread.onError=error=>queuedJob.onError(job,error),queuedJob.onStart(job);try{await job.result}catch(error){console.error(`Worker exception: ${error}`)}finally{this.returnWorkerToQueue(workerThread)}}}returnWorkerToQueue(worker){!isBrowser||this.isDestroyed||!this.reuseWorkers||this.count>this._getMaxConcurrency()?(worker.destroy(),this.count--):this.idleQueue.push(worker),this.isDestroyed||this._startQueuedJob()}_getAvailableWorker(){if(this.idleQueue.length>0)return this.idleQueue.shift()||null;if(this.count<this._getMaxConcurrency()){this.count++;const name=`${this.name.toLowerCase()} (#${this.count} of ${this.maxConcurrency})`;return new WorkerThread({name:name,source:this.source,url:this.url})}return null}_getMaxConcurrency(){return isMobile?this.maxMobileConcurrency:this.maxConcurrency}}const DEFAULT_PROPS={maxConcurrency:3,maxMobileConcurrency:1,reuseWorkers:!0,onDebug:()=>{}};class WorkerFarm{props;workerPools=new Map;static _workerFarm;static isSupported(){return WorkerThread.isSupported()}static getWorkerFarm(props={}){return WorkerFarm._workerFarm=WorkerFarm._workerFarm||new WorkerFarm({}),WorkerFarm._workerFarm.setProps(props),WorkerFarm._workerFarm}constructor(props){this.props={...DEFAULT_PROPS},this.setProps(props),this.workerPools=new Map}destroy(){for(const workerPool of this.workerPools.values())workerPool.destroy();this.workerPools=new Map}setProps(props){this.props={...this.props,...props};for(const workerPool of this.workerPools.values())workerPool.setProps(this._getWorkerPoolProps())}getWorkerPool(options){const{name:name,source:source,url:url}=options;let workerPool=this.workerPools.get(name);return workerPool||(workerPool=new WorkerPool({name:name,source:source,url:url}),workerPool.setProps(this._getWorkerPoolProps()),this.workerPools.set(name,workerPool)),workerPool}_getWorkerPoolProps(){return{maxConcurrency:this.props.maxConcurrency,maxMobileConcurrency:this.props.maxMobileConcurrency,reuseWorkers:this.props.reuseWorkers,onDebug:this.props.onDebug}}}const NPM_TAG="latest";const version_VERSION=function getVersion(){return globalThis._loadersgl_?.version||(globalThis._loadersgl_=globalThis._loadersgl_||{},globalThis._loadersgl_.version="4.3.2"),globalThis._loadersgl_.version}();async function parseWithWorker(loader,data,options,context,parseOnMainThread){const name=loader.id,url=function getWorkerURL(worker,options={}){const workerOptions=options[worker.id]||{},workerFile=isBrowser?`${worker.id}-worker.js`:`${worker.id}-worker-node.js`;let url=workerOptions.workerUrl;if(url||"compression"!==worker.id||(url=options.workerUrl),"test"===options._workerType&&(url=isBrowser?`modules/${worker.module}/dist/${workerFile}`:`modules/${worker.module}/src/workers/${worker.id}-worker-node.ts`),!url){let version=worker.version;"latest"===version&&(version=NPM_TAG);const versionTag=version?`@${version}`:"";url=`https://unpkg.com/@loaders.gl/${worker.module}${versionTag}/dist/${workerFile}`}return assert(url),url}(loader,options),workerPool=WorkerFarm.getWorkerFarm(options).getWorkerPool({name:name,url:url});options=JSON.parse(JSON.stringify(options)),context=JSON.parse(JSON.stringify(context||{}));const job=await workerPool.startJob("process-on-worker",onMessage.bind(null,parseOnMainThread));job.postMessage("process",{input:data,options:options,context:context});const result=await job.result;return await result.result}async function onMessage(parseOnMainThread,job,type,payload){switch(type){case"done":job.done(payload);break;case"error":job.error(new Error(payload.error));break;case"process":const{id:id,input:input,options:options}=payload;try{const result=await parseOnMainThread(input,options);job.postMessage("done",{id:id,result:result})}catch(error){const message=error instanceof Error?error.message:"unknown error";job.postMessage("error",{id:id,error:message})}break;default:console.warn(`parse-with-worker unknown message ${type}`)}}function concatenateArrayBuffers(...sources){return function concatenateArrayBuffersFromArray(sources){const sourceArrays=sources.map((source2=>source2 instanceof ArrayBuffer?new Uint8Array(source2):source2)),byteLength=sourceArrays.reduce(((length,typedArray)=>length+typedArray.byteLength),0),result=new Uint8Array(byteLength);let offset=0;for(const sourceArray of sourceArrays)result.set(sourceArray,offset),offset+=sourceArray.byteLength;return result.buffer}(sources)}const DEFAULT_CHUNK_SIZE=262144;const make_array_buffer_iterator_DEFAULT_CHUNK_SIZE=262144;const make_blob_iterator_DEFAULT_CHUNK_SIZE=1048576;var env_utils_globals=__webpack_require__("./node_modules/@loaders.gl/core/node_modules/@loaders.gl/loader-utils/dist/lib/env-utils/globals.js");function memory_conversion_utils_toArrayBuffer(data){if(function isBuffer(value){return value&&"object"==typeof value&&value.isBuffer}(data))return data;if(data instanceof ArrayBuffer)return data;if(ArrayBuffer.isView(data))return 0===data.byteOffset&&data.byteLength===data.buffer.byteLength?data.buffer:data.buffer.slice(data.byteOffset,data.byteOffset+data.byteLength);if("string"==typeof data){const text=data;return(new TextEncoder).encode(text).buffer}if(data&&"object"==typeof data&&data._toArrayBuffer)return data._toArrayBuffer();throw new Error("toArrayBuffer")}function makeStreamIterator(stream,options){return env_utils_globals.Bd?async function*makeBrowserStreamIterator(stream,options){const reader=stream.getReader();let nextBatchPromise;try{for(;;){const currentBatchPromise=nextBatchPromise||reader.read();options?._streamReadAhead&&(nextBatchPromise=reader.read());const{done:done,value:value}=await currentBatchPromise;if(done)return;yield memory_conversion_utils_toArrayBuffer(value)}}catch(error){reader.releaseLock()}}(stream,options):async function*makeNodeStreamIterator(stream,options){for await(const chunk of stream)yield memory_conversion_utils_toArrayBuffer(chunk)}(stream)}function make_iterator_makeIterator(data,options){if("string"==typeof data)return function*makeStringIterator(string,options){const chunkSize=options?.chunkSize||DEFAULT_CHUNK_SIZE;let offset=0;const textEncoder=new TextEncoder;for(;offset<string.length;){const chunkLength=Math.min(string.length-offset,chunkSize),chunk=string.slice(offset,offset+chunkLength);offset+=chunkLength,yield textEncoder.encode(chunk)}}(data,options);if(data instanceof ArrayBuffer)return function*makeArrayBufferIterator(arrayBuffer,options={}){const{chunkSize:chunkSize=make_array_buffer_iterator_DEFAULT_CHUNK_SIZE}=options;let byteOffset=0;for(;byteOffset<arrayBuffer.byteLength;){const chunkByteLength=Math.min(arrayBuffer.byteLength-byteOffset,chunkSize),chunk=new ArrayBuffer(chunkByteLength),sourceArray=new Uint8Array(arrayBuffer,byteOffset,chunkByteLength);new Uint8Array(chunk).set(sourceArray),byteOffset+=chunkByteLength,yield chunk}}(data,options);if((0,is_type.qf)(data))return async function*makeBlobIterator(blob,options){const chunkSize=options?.chunkSize||make_blob_iterator_DEFAULT_CHUNK_SIZE;let offset=0;for(;offset<blob.size;){const end=offset+chunkSize,chunk=await blob.slice(offset,end).arrayBuffer();offset=end,yield chunk}}(data,options);if((0,is_type.H1)(data))return makeStreamIterator(data,options);if((0,is_type.Sv)(data)){return makeStreamIterator(data.body,options)}throw new Error("makeIterator")}const ERR_DATA="Cannot convert supplied data type";async function getArrayBufferOrStringFromData(data,loader,options){const isArrayBuffer=data instanceof ArrayBuffer||ArrayBuffer.isView(data);if("string"==typeof data||isArrayBuffer)return function getArrayBufferOrStringFromDataSync(data,loader,options){if(loader.text&&"string"==typeof data)return data;if((0,is_type.Pe)(data)&&(data=data.buffer),data instanceof ArrayBuffer){const arrayBuffer=data;return loader.text&&!loader.binary?new TextDecoder("utf8").decode(arrayBuffer):arrayBuffer}if(ArrayBuffer.isView(data)){if(loader.text&&!loader.binary)return new TextDecoder("utf8").decode(data);let arrayBuffer=data.buffer;const byteLength=data.byteLength||data.length;return 0===data.byteOffset&&byteLength===arrayBuffer.byteLength||(arrayBuffer=arrayBuffer.slice(data.byteOffset,data.byteOffset+byteLength)),arrayBuffer}throw new Error(ERR_DATA)}(data,loader);if((0,is_type.qf)(data)&&(data=await response_utils_makeResponse(data)),(0,is_type.Sv)(data)){const response=data;return await response_utils_checkResponse(response),loader.binary?await response.arrayBuffer():await response.text()}if((0,is_type.H1)(data)&&(data=make_iterator_makeIterator(data,options)),(0,is_type.xZ)(data)||(0,is_type.Td)(data))return async function concatenateArrayBuffersAsync(asyncIterator){const arrayBuffers=[];for await(const chunk of asyncIterator)arrayBuffers.push(chunk);return concatenateArrayBuffers(...arrayBuffers)}(data);throw new Error(ERR_DATA)}function filename(url){const slashIndex=url?url.lastIndexOf("/"):-1;return slashIndex>=0?url.substr(slashIndex+1):""}function getLoaderContext(context,options,parentContext){if(parentContext)return parentContext;const newContext={fetch:getFetchFunction(options,context),...context};if(newContext.url){const baseUrl=stripQueryString(newContext.url);newContext.baseUrl=baseUrl,newContext.queryString=function extractQueryString(url){const matches=url.match(QUERY_STRING_PATTERN);return matches&&matches[0]}(newContext.url),newContext.filename=filename(baseUrl),newContext.baseUrl=function dirname(url){const slashIndex=url?url.lastIndexOf("/"):-1;return slashIndex>=0?url.substr(0,slashIndex):""}(baseUrl)}return Array.isArray(newContext.loaders)||(newContext.loaders=null),newContext}var dist_log=__webpack_require__("./node_modules/@probe.gl/log/dist/log.js");const version="4.3.2"[0]>="0"&&"4.3.2"[0]<="9"?"v4.3.2":"";const log=function createLog(){const log=new dist_log.t({id:"loaders.gl"});return globalThis.loaders=globalThis.loaders||{},globalThis.loaders.log=log,globalThis.loaders.version=version,globalThis.probe=globalThis.probe||{},globalThis.probe.loaders=log,log}();var register_loaders=__webpack_require__("./node_modules/@loaders.gl/core/dist/lib/api/register-loaders.js");const EXT_PATTERN=/\.([^.]+)$/;function selectLoaderSync(data,loaders=[],options,context){if(!validHTTPResponse(data))return null;if(loaders&&!Array.isArray(loaders))return(0,normalize_loader.D)(loaders);let candidateLoaders=[];loaders&&(candidateLoaders=candidateLoaders.concat(loaders)),options?.ignoreRegisteredLoaders||candidateLoaders.push(...(0,register_loaders.Ph)()),function normalizeLoaders(loaders){for(const loader of loaders)(0,normalize_loader.D)(loader)}(candidateLoaders);const loader=function selectLoaderInternal(data,loaders,options,context){const url=getResourceUrl(data),type=getResourceMIMEType(data),testUrl=stripQueryString(url)||context?.url;let loader=null,reason="";options?.mimeType&&(loader=findLoaderByMIMEType(loaders,options?.mimeType),reason=`match forced by supplied MIME type ${options?.mimeType}`);loader=loader||function findLoaderByUrl(loaders,url){const match=url&&EXT_PATTERN.exec(url),extension=match&&match[1];return extension?function findLoaderByExtension(loaders,extension){extension=extension.toLowerCase();for(const loader of loaders)for(const loaderExtension of loader.extensions)if(loaderExtension.toLowerCase()===extension)return loader;return null}(loaders,extension):null}(loaders,testUrl),reason=reason||(loader?`matched url ${testUrl}`:""),loader=loader||findLoaderByMIMEType(loaders,type),reason=reason||(loader?`matched MIME type ${type}`:""),loader=loader||function findLoaderByInitialBytes(loaders,data){if(!data)return null;for(const loader of loaders)if("string"==typeof data){if(testDataAgainstText(data,loader))return loader}else if(ArrayBuffer.isView(data)){if(testDataAgainstBinary(data.buffer,data.byteOffset,loader))return loader}else if(data instanceof ArrayBuffer){if(testDataAgainstBinary(data,0,loader))return loader}return null}(loaders,data),reason=reason||(loader?`matched initial data ${getFirstCharacters(data)}`:""),options?.fallbackMimeType&&(loader=loader||findLoaderByMIMEType(loaders,options?.fallbackMimeType),reason=reason||(loader?`matched fallback MIME type ${type}`:""));reason&&log.log(1,`selectLoader selected ${loader?.name}: ${reason}.`);return loader}(data,candidateLoaders,options,context);if(!loader&&!options?.nothrow)throw new Error(getNoValidLoaderMessage(data));return loader}function validHTTPResponse(data){return!(data instanceof Response&&204===data.status)}function getNoValidLoaderMessage(data){const url=getResourceUrl(data),type=getResourceMIMEType(data);let message="No valid loader found (";message+=url?`${filename(url)}, `:"no url provided, ",message+=`MIME type: ${type?`"${type}"`:"not provided"}, `;const firstCharacters=data?getFirstCharacters(data):"";return message+=firstCharacters?` first bytes: "${firstCharacters}"`:"first bytes: not available",message+=")",message}function findLoaderByMIMEType(loaders,mimeType){for(const loader of loaders){if(loader.mimeTypes?.some((mimeType1=>compareMIMETypes(mimeType,mimeType1))))return loader;if(compareMIMETypes(mimeType,`application/x.${loader.id}`))return loader}return null}function testDataAgainstText(data,loader){if(loader.testText)return loader.testText(data);return(Array.isArray(loader.tests)?loader.tests:[loader.tests]).some((test=>data.startsWith(test)))}function testDataAgainstBinary(data,byteOffset,loader){return(Array.isArray(loader.tests)?loader.tests:[loader.tests]).some((test=>function testBinary(data,byteOffset,loader,test){if(test instanceof ArrayBuffer)return function compareArrayBuffers(arrayBuffer1,arrayBuffer2,byteLength){if(byteLength=byteLength||arrayBuffer1.byteLength,arrayBuffer1.byteLength<byteLength||arrayBuffer2.byteLength<byteLength)return!1;const array1=new Uint8Array(arrayBuffer1),array2=new Uint8Array(arrayBuffer2);for(let i=0;i<array1.length;++i)if(array1[i]!==array2[i])return!1;return!0}(test,data,test.byteLength);switch(typeof test){case"function":return test(data);case"string":return test===getMagicString(data,byteOffset,test.length);default:return!1}}(data,byteOffset,0,test)))}function getFirstCharacters(data,length=5){if("string"==typeof data)return data.slice(0,length);if(ArrayBuffer.isView(data))return getMagicString(data.buffer,data.byteOffset,length);if(data instanceof ArrayBuffer){return getMagicString(data,0,length)}return""}function getMagicString(arrayBuffer,byteOffset,length){if(arrayBuffer.byteLength<byteOffset+length)return"";const dataView=new DataView(arrayBuffer);let magic="";for(let i=0;i<length;i++)magic+=String.fromCharCode(dataView.getUint8(byteOffset+i));return magic}async function parse(data,loaders,options,context){!loaders||Array.isArray(loaders)||(0,normalize_loader.l)(loaders)||(context=void 0,options=loaders,loaders=void 0),options=options||{};const url=getResourceUrl(data=await data),candidateLoaders=function getLoadersFromContext(loaders,context){if(loaders&&!Array.isArray(loaders))return loaders;let candidateLoaders;if(loaders&&(candidateLoaders=Array.isArray(loaders)?loaders:[loaders]),context&&context.loaders){const contextLoaders=Array.isArray(context.loaders)?context.loaders:[context.loaders];candidateLoaders=candidateLoaders?[...candidateLoaders,...contextLoaders]:contextLoaders}return candidateLoaders&&candidateLoaders.length?candidateLoaders:void 0}(loaders,context),loader=await async function selectLoader(data,loaders=[],options,context){if(!validHTTPResponse(data))return null;let loader=selectLoaderSync(data,loaders,{...options,nothrow:!0},context);if(loader)return loader;if((0,is_type.qf)(data)&&(loader=selectLoaderSync(data=await data.slice(0,10).arrayBuffer(),loaders,options,context)),!loader&&!options?.nothrow)throw new Error(getNoValidLoaderMessage(data));return loader}(data,candidateLoaders,options);return loader?(context=getLoaderContext({url:url,_parse:parse,loaders:candidateLoaders},options=(0,option_utils.a5)(options,loader,candidateLoaders,url),context||null),await async function parseWithLoader(loader,data,options,context){if(function validateWorkerVersion(worker,coreVersion=version_VERSION){assert(worker,"no worker provided");const workerVersion=worker.version;return!(!coreVersion||!workerVersion)}(loader),options=mergeLoaderOptions(loader.options,options),(0,is_type.Sv)(data)){const response=data,{ok:ok,redirected:redirected,status:status,statusText:statusText,type:type,url:url}=response,headers=Object.fromEntries(response.headers.entries());context.response={headers:headers,ok:ok,redirected:redirected,status:status,statusText:statusText,type:type,url:url}}data=await getArrayBufferOrStringFromData(data,loader,options);const loaderWithParser=loader;if(loaderWithParser.parseTextSync&&"string"==typeof data)return loaderWithParser.parseTextSync(data,options,context);if(function canParseWithWorker(loader,options){return!!WorkerFarm.isSupported()&&!(!isBrowser&&!options?._nodeWorkers)&&loader.worker&&options?.worker}(loader,options))return await parseWithWorker(loader,data,options,context,parse);if(loaderWithParser.parseText&&"string"==typeof data)return await loaderWithParser.parseText(data,options,context);if(loaderWithParser.parse)return await loaderWithParser.parse(data,options,context);throw assert(!loaderWithParser.parseSync),new Error(`${loader.id} loader - no parser found and worker is disabled`)}(loader,data,options,context)):null}async function load(url,loaders,options,context){let resolvedLoaders,resolvedOptions;Array.isArray(loaders)||(0,normalize_loader.l)(loaders)?(resolvedLoaders=loaders,resolvedOptions=options):(resolvedLoaders=[],resolvedOptions=loaders);const fetch=getFetchFunction(resolvedOptions);let data=url;return"string"==typeof url&&(data=await fetch(url)),(0,is_type.qf)(url)&&(data=await fetch(url)),Array.isArray(resolvedLoaders),await parse(data,resolvedLoaders,resolvedOptions)}},"./node_modules/@loaders.gl/core/dist/lib/api/register-loaders.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Ph:function(){return getRegisteredLoaders},mk:function(){return registerLoaders}});var _loader_utils_normalize_loader_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@loaders.gl/core/dist/lib/loader-utils/normalize-loader.js"),_loader_utils_option_utils_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@loaders.gl/core/dist/lib/loader-utils/option-utils.js");const getGlobalLoaderRegistry=()=>{const state=(0,_loader_utils_option_utils_js__WEBPACK_IMPORTED_MODULE_0__.K2)();return state.loaderRegistry=state.loaderRegistry||[],state.loaderRegistry};function registerLoaders(loaders){const loaderRegistry=getGlobalLoaderRegistry();loaders=Array.isArray(loaders)?loaders:[loaders];for(const loader of loaders){const normalizedLoader=(0,_loader_utils_normalize_loader_js__WEBPACK_IMPORTED_MODULE_1__.D)(loader);loaderRegistry.find((registeredLoader=>normalizedLoader===registeredLoader))||loaderRegistry.unshift(normalizedLoader)}}function getRegisteredLoaders(){return getGlobalLoaderRegistry()}},"./node_modules/@loaders.gl/core/dist/lib/loader-utils/normalize-loader.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function assert(condition,message){if(!condition)throw new Error(message||"loader assertion failed.")}function isLoaderObject(loader){if(!loader)return!1;Array.isArray(loader)&&(loader=loader[0]);return Array.isArray(loader?.extensions)}function normalizeLoader(loader){let options;return assert(loader,"null loader"),assert(isLoaderObject(loader),"invalid loader"),Array.isArray(loader)&&(options=loader[1],loader=loader[0],loader={...loader,options:{...loader.options,...options}}),(loader?.parseTextSync||loader?.parseText)&&(loader.text=!0),loader.text||(loader.binary=!0),loader}__webpack_require__.d(__webpack_exports__,{l:function(){return isLoaderObject},D:function(){return normalizeLoader}})},"./node_modules/@loaders.gl/core/dist/lib/loader-utils/option-utils.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{pp:function(){return getGlobalLoaderOptions},K2:function(){return getGlobalLoaderState},a5:function(){return normalizeOptions}});var is_type=__webpack_require__("./node_modules/@loaders.gl/core/dist/javascript-utils/is-type.js");const probeLog=new(__webpack_require__("./node_modules/@probe.gl/log/dist/log.js").t)({id:"loaders.gl"});class NullLog{log(){return()=>{}}info(){return()=>{}}warn(){return()=>{}}error(){return()=>{}}}var globals=__webpack_require__("./node_modules/@loaders.gl/core/node_modules/@loaders.gl/loader-utils/dist/lib/env-utils/globals.js");const DEFAULT_LOADER_OPTIONS={fetch:null,mimeType:void 0,nothrow:!1,log:new class ConsoleLog{console;constructor(){this.console=console}log(...args){return this.console.log.bind(this.console,...args)}info(...args){return this.console.info.bind(this.console,...args)}warn(...args){return this.console.warn.bind(this.console,...args)}error(...args){return this.console.error.bind(this.console,...args)}},useLocalLibraries:!1,CDN:"https://unpkg.com/@loaders.gl",worker:!0,maxConcurrency:3,maxMobileConcurrency:1,reuseWorkers:globals.Bd,_nodeWorkers:!1,_workerType:"",limit:0,_limitMB:0,batchSize:"auto",batchDebounceMs:0,metadata:!1,transforms:[]},REMOVED_LOADER_OPTIONS={throws:"nothrow",dataType:"(no longer used)",uri:"baseUri",method:"fetch.method",headers:"fetch.headers",body:"fetch.body",mode:"fetch.mode",credentials:"fetch.credentials",cache:"fetch.cache",redirect:"fetch.redirect",referrer:"fetch.referrer",referrerPolicy:"fetch.referrerPolicy",integrity:"fetch.integrity",keepalive:"fetch.keepalive",signal:"fetch.signal"};function getGlobalLoaderState(){globalThis.loaders=globalThis.loaders||{};const{loaders:loaders}=globalThis;return loaders._state||(loaders._state={}),loaders._state}function getGlobalLoaderOptions(){const state=getGlobalLoaderState();return state.globalOptions=state.globalOptions||{...DEFAULT_LOADER_OPTIONS},state.globalOptions}function normalizeOptions(options,loader,loaders,url){return loaders=loaders||[],function validateOptions(options,loaders){validateOptionsObject(options,null,DEFAULT_LOADER_OPTIONS,REMOVED_LOADER_OPTIONS,loaders);for(const loader of loaders){const idOptions=options&&options[loader.id]||{},loaderOptions=loader.options&&loader.options[loader.id]||{},deprecatedOptions=loader.deprecatedOptions&&loader.deprecatedOptions[loader.id]||{};validateOptionsObject(idOptions,loader.id,loaderOptions,deprecatedOptions,loaders)}}(options,loaders=Array.isArray(loaders)?loaders:[loaders]),normalizeOptionsInternal(loader,options,url)}function validateOptionsObject(options,id,defaultOptions,deprecatedOptions,loaders){const loaderName=id||"Top level",prefix=id?`${id}.`:"";for(const key in options){const isSubOptions=!id&&(0,is_type.Gv)(options[key]);if(!(key in defaultOptions)&&!("baseUri"===key&&!id)&&!("workerUrl"===key&&id))if(key in deprecatedOptions)probeLog.warn(`${loaderName} loader option '${prefix}${key}' no longer supported, use '${deprecatedOptions[key]}'`)();else if(!isSubOptions){const suggestion=findSimilarOption(key,loaders);probeLog.warn(`${loaderName} loader option '${prefix}${key}' not recognized. ${suggestion}`)()}}}function findSimilarOption(optionKey,loaders){const lowerCaseOptionKey=optionKey.toLowerCase();let bestSuggestion="";for(const loader of loaders)for(const key in loader.options){if(optionKey===key)return`Did you mean '${loader.id}.${key}'?`;const lowerCaseKey=key.toLowerCase();(lowerCaseOptionKey.startsWith(lowerCaseKey)||lowerCaseKey.startsWith(lowerCaseOptionKey))&&(bestSuggestion=bestSuggestion||`Did you mean '${loader.id}.${key}'?`)}return bestSuggestion}function normalizeOptionsInternal(loader,options,url){const mergedOptions={...loader.options||{}};return function addUrlOptions(options,url){url&&!("baseUri"in options)&&(options.baseUri=url)}(mergedOptions,url),null===mergedOptions.log&&(mergedOptions.log=new NullLog),mergeNestedFields(mergedOptions,getGlobalLoaderOptions()),mergeNestedFields(mergedOptions,options),mergedOptions}function mergeNestedFields(mergedOptions,options){for(const key in options)if(key in options){const value=options[key];(0,is_type.aC)(value)&&(0,is_type.aC)(mergedOptions[key])?mergedOptions[key]={...mergedOptions[key],...options[key]}:mergedOptions[key]=options[key]}}},"./node_modules/@loaders.gl/core/node_modules/@loaders.gl/loader-utils/dist/lib/env-utils/globals.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Bd:function(){return isBrowser}});var process=__webpack_require__("./node_modules/process/browser.js");"undefined"!=typeof self&&self,"undefined"!=typeof window&&window,void 0!==__webpack_require__.g&&__webpack_require__.g,"undefined"!=typeof document&&document;const isBrowser=Boolean("object"!=typeof process||"[object process]"!==String(process)||process.browser),matches=void 0!==process&&process.version&&/v([0-9]*)/.exec(process.version);matches&&parseFloat(matches[1])},"./node_modules/@luma.gl/constants/dist/webgl-constants.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var GLEnum;__webpack_require__.d(__webpack_exports__,{GL:function(){return GLEnum}}),function(GLEnum){GLEnum[GLEnum.DEPTH_BUFFER_BIT=256]="DEPTH_BUFFER_BIT",GLEnum[GLEnum.STENCIL_BUFFER_BIT=1024]="STENCIL_BUFFER_BIT",GLEnum[GLEnum.COLOR_BUFFER_BIT=16384]="COLOR_BUFFER_BIT",GLEnum[GLEnum.POINTS=0]="POINTS",GLEnum[GLEnum.LINES=1]="LINES",GLEnum[GLEnum.LINE_LOOP=2]="LINE_LOOP",GLEnum[GLEnum.LINE_STRIP=3]="LINE_STRIP",GLEnum[GLEnum.TRIANGLES=4]="TRIANGLES",GLEnum[GLEnum.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",GLEnum[GLEnum.TRIANGLE_FAN=6]="TRIANGLE_FAN",GLEnum[GLEnum.ZERO=0]="ZERO",GLEnum[GLEnum.ONE=1]="ONE",GLEnum[GLEnum.SRC_COLOR=768]="SRC_COLOR",GLEnum[GLEnum.ONE_MINUS_SRC_COLOR=769]="ONE_MINUS_SRC_COLOR",GLEnum[GLEnum.SRC_ALPHA=770]="SRC_ALPHA",GLEnum[GLEnum.ONE_MINUS_SRC_ALPHA=771]="ONE_MINUS_SRC_ALPHA",GLEnum[GLEnum.DST_ALPHA=772]="DST_ALPHA",GLEnum[GLEnum.ONE_MINUS_DST_ALPHA=773]="ONE_MINUS_DST_ALPHA",GLEnum[GLEnum.DST_COLOR=774]="DST_COLOR",GLEnum[GLEnum.ONE_MINUS_DST_COLOR=775]="ONE_MINUS_DST_COLOR",GLEnum[GLEnum.SRC_ALPHA_SATURATE=776]="SRC_ALPHA_SATURATE",GLEnum[GLEnum.CONSTANT_COLOR=32769]="CONSTANT_COLOR",GLEnum[GLEnum.ONE_MINUS_CONSTANT_COLOR=32770]="ONE_MINUS_CONSTANT_COLOR",GLEnum[GLEnum.CONSTANT_ALPHA=32771]="CONSTANT_ALPHA",GLEnum[GLEnum.ONE_MINUS_CONSTANT_ALPHA=32772]="ONE_MINUS_CONSTANT_ALPHA",GLEnum[GLEnum.FUNC_ADD=32774]="FUNC_ADD",GLEnum[GLEnum.FUNC_SUBTRACT=32778]="FUNC_SUBTRACT",GLEnum[GLEnum.FUNC_REVERSE_SUBTRACT=32779]="FUNC_REVERSE_SUBTRACT",GLEnum[GLEnum.BLEND_EQUATION=32777]="BLEND_EQUATION",GLEnum[GLEnum.BLEND_EQUATION_RGB=32777]="BLEND_EQUATION_RGB",GLEnum[GLEnum.BLEND_EQUATION_ALPHA=34877]="BLEND_EQUATION_ALPHA",GLEnum[GLEnum.BLEND_DST_RGB=32968]="BLEND_DST_RGB",GLEnum[GLEnum.BLEND_SRC_RGB=32969]="BLEND_SRC_RGB",GLEnum[GLEnum.BLEND_DST_ALPHA=32970]="BLEND_DST_ALPHA",GLEnum[GLEnum.BLEND_SRC_ALPHA=32971]="BLEND_SRC_ALPHA",GLEnum[GLEnum.BLEND_COLOR=32773]="BLEND_COLOR",GLEnum[GLEnum.ARRAY_BUFFER_BINDING=34964]="ARRAY_BUFFER_BINDING",GLEnum[GLEnum.ELEMENT_ARRAY_BUFFER_BINDING=34965]="ELEMENT_ARRAY_BUFFER_BINDING",GLEnum[GLEnum.LINE_WIDTH=2849]="LINE_WIDTH",GLEnum[GLEnum.ALIASED_POINT_SIZE_RANGE=33901]="ALIASED_POINT_SIZE_RANGE",GLEnum[GLEnum.ALIASED_LINE_WIDTH_RANGE=33902]="ALIASED_LINE_WIDTH_RANGE",GLEnum[GLEnum.CULL_FACE_MODE=2885]="CULL_FACE_MODE",GLEnum[GLEnum.FRONT_FACE=2886]="FRONT_FACE",GLEnum[GLEnum.DEPTH_RANGE=2928]="DEPTH_RANGE",GLEnum[GLEnum.DEPTH_WRITEMASK=2930]="DEPTH_WRITEMASK",GLEnum[GLEnum.DEPTH_CLEAR_VALUE=2931]="DEPTH_CLEAR_VALUE",GLEnum[GLEnum.DEPTH_FUNC=2932]="DEPTH_FUNC",GLEnum[GLEnum.STENCIL_CLEAR_VALUE=2961]="STENCIL_CLEAR_VALUE",GLEnum[GLEnum.STENCIL_FUNC=2962]="STENCIL_FUNC",GLEnum[GLEnum.STENCIL_FAIL=2964]="STENCIL_FAIL",GLEnum[GLEnum.STENCIL_PASS_DEPTH_FAIL=2965]="STENCIL_PASS_DEPTH_FAIL",GLEnum[GLEnum.STENCIL_PASS_DEPTH_PASS=2966]="STENCIL_PASS_DEPTH_PASS",GLEnum[GLEnum.STENCIL_REF=2967]="STENCIL_REF",GLEnum[GLEnum.STENCIL_VALUE_MASK=2963]="STENCIL_VALUE_MASK",GLEnum[GLEnum.STENCIL_WRITEMASK=2968]="STENCIL_WRITEMASK",GLEnum[GLEnum.STENCIL_BACK_FUNC=34816]="STENCIL_BACK_FUNC",GLEnum[GLEnum.STENCIL_BACK_FAIL=34817]="STENCIL_BACK_FAIL",GLEnum[GLEnum.STENCIL_BACK_PASS_DEPTH_FAIL=34818]="STENCIL_BACK_PASS_DEPTH_FAIL",GLEnum[GLEnum.STENCIL_BACK_PASS_DEPTH_PASS=34819]="STENCIL_BACK_PASS_DEPTH_PASS",GLEnum[GLEnum.STENCIL_BACK_REF=36003]="STENCIL_BACK_REF",GLEnum[GLEnum.STENCIL_BACK_VALUE_MASK=36004]="STENCIL_BACK_VALUE_MASK",GLEnum[GLEnum.STENCIL_BACK_WRITEMASK=36005]="STENCIL_BACK_WRITEMASK",GLEnum[GLEnum.VIEWPORT=2978]="VIEWPORT",GLEnum[GLEnum.SCISSOR_BOX=3088]="SCISSOR_BOX",GLEnum[GLEnum.COLOR_CLEAR_VALUE=3106]="COLOR_CLEAR_VALUE",GLEnum[GLEnum.COLOR_WRITEMASK=3107]="COLOR_WRITEMASK",GLEnum[GLEnum.UNPACK_ALIGNMENT=3317]="UNPACK_ALIGNMENT",GLEnum[GLEnum.PACK_ALIGNMENT=3333]="PACK_ALIGNMENT",GLEnum[GLEnum.MAX_TEXTURE_SIZE=3379]="MAX_TEXTURE_SIZE",GLEnum[GLEnum.MAX_VIEWPORT_DIMS=3386]="MAX_VIEWPORT_DIMS",GLEnum[GLEnum.SUBPIXEL_BITS=3408]="SUBPIXEL_BITS",GLEnum[GLEnum.RED_BITS=3410]="RED_BITS",GLEnum[GLEnum.GREEN_BITS=3411]="GREEN_BITS",GLEnum[GLEnum.BLUE_BITS=3412]="BLUE_BITS",GLEnum[GLEnum.ALPHA_BITS=3413]="ALPHA_BITS",GLEnum[GLEnum.DEPTH_BITS=3414]="DEPTH_BITS",GLEnum[GLEnum.STENCIL_BITS=3415]="STENCIL_BITS",GLEnum[GLEnum.POLYGON_OFFSET_UNITS=10752]="POLYGON_OFFSET_UNITS",GLEnum[GLEnum.POLYGON_OFFSET_FACTOR=32824]="POLYGON_OFFSET_FACTOR",GLEnum[GLEnum.TEXTURE_BINDING_2D=32873]="TEXTURE_BINDING_2D",GLEnum[GLEnum.SAMPLE_BUFFERS=32936]="SAMPLE_BUFFERS",GLEnum[GLEnum.SAMPLES=32937]="SAMPLES",GLEnum[GLEnum.SAMPLE_COVERAGE_VALUE=32938]="SAMPLE_COVERAGE_VALUE",GLEnum[GLEnum.SAMPLE_COVERAGE_INVERT=32939]="SAMPLE_COVERAGE_INVERT",GLEnum[GLEnum.COMPRESSED_TEXTURE_FORMATS=34467]="COMPRESSED_TEXTURE_FORMATS",GLEnum[GLEnum.VENDOR=7936]="VENDOR",GLEnum[GLEnum.RENDERER=7937]="RENDERER",GLEnum[GLEnum.VERSION=7938]="VERSION",GLEnum[GLEnum.IMPLEMENTATION_COLOR_READ_TYPE=35738]="IMPLEMENTATION_COLOR_READ_TYPE",GLEnum[GLEnum.IMPLEMENTATION_COLOR_READ_FORMAT=35739]="IMPLEMENTATION_COLOR_READ_FORMAT",GLEnum[GLEnum.BROWSER_DEFAULT_WEBGL=37444]="BROWSER_DEFAULT_WEBGL",GLEnum[GLEnum.STATIC_DRAW=35044]="STATIC_DRAW",GLEnum[GLEnum.STREAM_DRAW=35040]="STREAM_DRAW",GLEnum[GLEnum.DYNAMIC_DRAW=35048]="DYNAMIC_DRAW",GLEnum[GLEnum.ARRAY_BUFFER=34962]="ARRAY_BUFFER",GLEnum[GLEnum.ELEMENT_ARRAY_BUFFER=34963]="ELEMENT_ARRAY_BUFFER",GLEnum[GLEnum.BUFFER_SIZE=34660]="BUFFER_SIZE",GLEnum[GLEnum.BUFFER_USAGE=34661]="BUFFER_USAGE",GLEnum[GLEnum.CURRENT_VERTEX_ATTRIB=34342]="CURRENT_VERTEX_ATTRIB",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_ENABLED=34338]="VERTEX_ATTRIB_ARRAY_ENABLED",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_SIZE=34339]="VERTEX_ATTRIB_ARRAY_SIZE",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_STRIDE=34340]="VERTEX_ATTRIB_ARRAY_STRIDE",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_TYPE=34341]="VERTEX_ATTRIB_ARRAY_TYPE",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_NORMALIZED=34922]="VERTEX_ATTRIB_ARRAY_NORMALIZED",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_POINTER=34373]="VERTEX_ATTRIB_ARRAY_POINTER",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING=34975]="VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",GLEnum[GLEnum.CULL_FACE=2884]="CULL_FACE",GLEnum[GLEnum.FRONT=1028]="FRONT",GLEnum[GLEnum.BACK=1029]="BACK",GLEnum[GLEnum.FRONT_AND_BACK=1032]="FRONT_AND_BACK",GLEnum[GLEnum.BLEND=3042]="BLEND",GLEnum[GLEnum.DEPTH_TEST=2929]="DEPTH_TEST",GLEnum[GLEnum.DITHER=3024]="DITHER",GLEnum[GLEnum.POLYGON_OFFSET_FILL=32823]="POLYGON_OFFSET_FILL",GLEnum[GLEnum.SAMPLE_ALPHA_TO_COVERAGE=32926]="SAMPLE_ALPHA_TO_COVERAGE",GLEnum[GLEnum.SAMPLE_COVERAGE=32928]="SAMPLE_COVERAGE",GLEnum[GLEnum.SCISSOR_TEST=3089]="SCISSOR_TEST",GLEnum[GLEnum.STENCIL_TEST=2960]="STENCIL_TEST",GLEnum[GLEnum.NO_ERROR=0]="NO_ERROR",GLEnum[GLEnum.INVALID_ENUM=1280]="INVALID_ENUM",GLEnum[GLEnum.INVALID_VALUE=1281]="INVALID_VALUE",GLEnum[GLEnum.INVALID_OPERATION=1282]="INVALID_OPERATION",GLEnum[GLEnum.OUT_OF_MEMORY=1285]="OUT_OF_MEMORY",GLEnum[GLEnum.CONTEXT_LOST_WEBGL=37442]="CONTEXT_LOST_WEBGL",GLEnum[GLEnum.CW=2304]="CW",GLEnum[GLEnum.CCW=2305]="CCW",GLEnum[GLEnum.DONT_CARE=4352]="DONT_CARE",GLEnum[GLEnum.FASTEST=4353]="FASTEST",GLEnum[GLEnum.NICEST=4354]="NICEST",GLEnum[GLEnum.GENERATE_MIPMAP_HINT=33170]="GENERATE_MIPMAP_HINT",GLEnum[GLEnum.BYTE=5120]="BYTE",GLEnum[GLEnum.UNSIGNED_BYTE=5121]="UNSIGNED_BYTE",GLEnum[GLEnum.SHORT=5122]="SHORT",GLEnum[GLEnum.UNSIGNED_SHORT=5123]="UNSIGNED_SHORT",GLEnum[GLEnum.INT=5124]="INT",GLEnum[GLEnum.UNSIGNED_INT=5125]="UNSIGNED_INT",GLEnum[GLEnum.FLOAT=5126]="FLOAT",GLEnum[GLEnum.DOUBLE=5130]="DOUBLE",GLEnum[GLEnum.DEPTH_COMPONENT=6402]="DEPTH_COMPONENT",GLEnum[GLEnum.ALPHA=6406]="ALPHA",GLEnum[GLEnum.RGB=6407]="RGB",GLEnum[GLEnum.RGBA=6408]="RGBA",GLEnum[GLEnum.LUMINANCE=6409]="LUMINANCE",GLEnum[GLEnum.LUMINANCE_ALPHA=6410]="LUMINANCE_ALPHA",GLEnum[GLEnum.UNSIGNED_SHORT_4_4_4_4=32819]="UNSIGNED_SHORT_4_4_4_4",GLEnum[GLEnum.UNSIGNED_SHORT_5_5_5_1=32820]="UNSIGNED_SHORT_5_5_5_1",GLEnum[GLEnum.UNSIGNED_SHORT_5_6_5=33635]="UNSIGNED_SHORT_5_6_5",GLEnum[GLEnum.FRAGMENT_SHADER=35632]="FRAGMENT_SHADER",GLEnum[GLEnum.VERTEX_SHADER=35633]="VERTEX_SHADER",GLEnum[GLEnum.COMPILE_STATUS=35713]="COMPILE_STATUS",GLEnum[GLEnum.DELETE_STATUS=35712]="DELETE_STATUS",GLEnum[GLEnum.LINK_STATUS=35714]="LINK_STATUS",GLEnum[GLEnum.VALIDATE_STATUS=35715]="VALIDATE_STATUS",GLEnum[GLEnum.ATTACHED_SHADERS=35717]="ATTACHED_SHADERS",GLEnum[GLEnum.ACTIVE_ATTRIBUTES=35721]="ACTIVE_ATTRIBUTES",GLEnum[GLEnum.ACTIVE_UNIFORMS=35718]="ACTIVE_UNIFORMS",GLEnum[GLEnum.MAX_VERTEX_ATTRIBS=34921]="MAX_VERTEX_ATTRIBS",GLEnum[GLEnum.MAX_VERTEX_UNIFORM_VECTORS=36347]="MAX_VERTEX_UNIFORM_VECTORS",GLEnum[GLEnum.MAX_VARYING_VECTORS=36348]="MAX_VARYING_VECTORS",GLEnum[GLEnum.MAX_COMBINED_TEXTURE_IMAGE_UNITS=35661]="MAX_COMBINED_TEXTURE_IMAGE_UNITS",GLEnum[GLEnum.MAX_VERTEX_TEXTURE_IMAGE_UNITS=35660]="MAX_VERTEX_TEXTURE_IMAGE_UNITS",GLEnum[GLEnum.MAX_TEXTURE_IMAGE_UNITS=34930]="MAX_TEXTURE_IMAGE_UNITS",GLEnum[GLEnum.MAX_FRAGMENT_UNIFORM_VECTORS=36349]="MAX_FRAGMENT_UNIFORM_VECTORS",GLEnum[GLEnum.SHADER_TYPE=35663]="SHADER_TYPE",GLEnum[GLEnum.SHADING_LANGUAGE_VERSION=35724]="SHADING_LANGUAGE_VERSION",GLEnum[GLEnum.CURRENT_PROGRAM=35725]="CURRENT_PROGRAM",GLEnum[GLEnum.NEVER=512]="NEVER",GLEnum[GLEnum.LESS=513]="LESS",GLEnum[GLEnum.EQUAL=514]="EQUAL",GLEnum[GLEnum.LEQUAL=515]="LEQUAL",GLEnum[GLEnum.GREATER=516]="GREATER",GLEnum[GLEnum.NOTEQUAL=517]="NOTEQUAL",GLEnum[GLEnum.GEQUAL=518]="GEQUAL",GLEnum[GLEnum.ALWAYS=519]="ALWAYS",GLEnum[GLEnum.KEEP=7680]="KEEP",GLEnum[GLEnum.REPLACE=7681]="REPLACE",GLEnum[GLEnum.INCR=7682]="INCR",GLEnum[GLEnum.DECR=7683]="DECR",GLEnum[GLEnum.INVERT=5386]="INVERT",GLEnum[GLEnum.INCR_WRAP=34055]="INCR_WRAP",GLEnum[GLEnum.DECR_WRAP=34056]="DECR_WRAP",GLEnum[GLEnum.NEAREST=9728]="NEAREST",GLEnum[GLEnum.LINEAR=9729]="LINEAR",GLEnum[GLEnum.NEAREST_MIPMAP_NEAREST=9984]="NEAREST_MIPMAP_NEAREST",GLEnum[GLEnum.LINEAR_MIPMAP_NEAREST=9985]="LINEAR_MIPMAP_NEAREST",GLEnum[GLEnum.NEAREST_MIPMAP_LINEAR=9986]="NEAREST_MIPMAP_LINEAR",GLEnum[GLEnum.LINEAR_MIPMAP_LINEAR=9987]="LINEAR_MIPMAP_LINEAR",GLEnum[GLEnum.TEXTURE_MAG_FILTER=10240]="TEXTURE_MAG_FILTER",GLEnum[GLEnum.TEXTURE_MIN_FILTER=10241]="TEXTURE_MIN_FILTER",GLEnum[GLEnum.TEXTURE_WRAP_S=10242]="TEXTURE_WRAP_S",GLEnum[GLEnum.TEXTURE_WRAP_T=10243]="TEXTURE_WRAP_T",GLEnum[GLEnum.TEXTURE_2D=3553]="TEXTURE_2D",GLEnum[GLEnum.TEXTURE=5890]="TEXTURE",GLEnum[GLEnum.TEXTURE_CUBE_MAP=34067]="TEXTURE_CUBE_MAP",GLEnum[GLEnum.TEXTURE_BINDING_CUBE_MAP=34068]="TEXTURE_BINDING_CUBE_MAP",GLEnum[GLEnum.TEXTURE_CUBE_MAP_POSITIVE_X=34069]="TEXTURE_CUBE_MAP_POSITIVE_X",GLEnum[GLEnum.TEXTURE_CUBE_MAP_NEGATIVE_X=34070]="TEXTURE_CUBE_MAP_NEGATIVE_X",GLEnum[GLEnum.TEXTURE_CUBE_MAP_POSITIVE_Y=34071]="TEXTURE_CUBE_MAP_POSITIVE_Y",GLEnum[GLEnum.TEXTURE_CUBE_MAP_NEGATIVE_Y=34072]="TEXTURE_CUBE_MAP_NEGATIVE_Y",GLEnum[GLEnum.TEXTURE_CUBE_MAP_POSITIVE_Z=34073]="TEXTURE_CUBE_MAP_POSITIVE_Z",GLEnum[GLEnum.TEXTURE_CUBE_MAP_NEGATIVE_Z=34074]="TEXTURE_CUBE_MAP_NEGATIVE_Z",GLEnum[GLEnum.MAX_CUBE_MAP_TEXTURE_SIZE=34076]="MAX_CUBE_MAP_TEXTURE_SIZE",GLEnum[GLEnum.TEXTURE0=33984]="TEXTURE0",GLEnum[GLEnum.ACTIVE_TEXTURE=34016]="ACTIVE_TEXTURE",GLEnum[GLEnum.REPEAT=10497]="REPEAT",GLEnum[GLEnum.CLAMP_TO_EDGE=33071]="CLAMP_TO_EDGE",GLEnum[GLEnum.MIRRORED_REPEAT=33648]="MIRRORED_REPEAT",GLEnum[GLEnum.TEXTURE_WIDTH=4096]="TEXTURE_WIDTH",GLEnum[GLEnum.TEXTURE_HEIGHT=4097]="TEXTURE_HEIGHT",GLEnum[GLEnum.FLOAT_VEC2=35664]="FLOAT_VEC2",GLEnum[GLEnum.FLOAT_VEC3=35665]="FLOAT_VEC3",GLEnum[GLEnum.FLOAT_VEC4=35666]="FLOAT_VEC4",GLEnum[GLEnum.INT_VEC2=35667]="INT_VEC2",GLEnum[GLEnum.INT_VEC3=35668]="INT_VEC3",GLEnum[GLEnum.INT_VEC4=35669]="INT_VEC4",GLEnum[GLEnum.BOOL=35670]="BOOL",GLEnum[GLEnum.BOOL_VEC2=35671]="BOOL_VEC2",GLEnum[GLEnum.BOOL_VEC3=35672]="BOOL_VEC3",GLEnum[GLEnum.BOOL_VEC4=35673]="BOOL_VEC4",GLEnum[GLEnum.FLOAT_MAT2=35674]="FLOAT_MAT2",GLEnum[GLEnum.FLOAT_MAT3=35675]="FLOAT_MAT3",GLEnum[GLEnum.FLOAT_MAT4=35676]="FLOAT_MAT4",GLEnum[GLEnum.SAMPLER_2D=35678]="SAMPLER_2D",GLEnum[GLEnum.SAMPLER_CUBE=35680]="SAMPLER_CUBE",GLEnum[GLEnum.LOW_FLOAT=36336]="LOW_FLOAT",GLEnum[GLEnum.MEDIUM_FLOAT=36337]="MEDIUM_FLOAT",GLEnum[GLEnum.HIGH_FLOAT=36338]="HIGH_FLOAT",GLEnum[GLEnum.LOW_INT=36339]="LOW_INT",GLEnum[GLEnum.MEDIUM_INT=36340]="MEDIUM_INT",GLEnum[GLEnum.HIGH_INT=36341]="HIGH_INT",GLEnum[GLEnum.FRAMEBUFFER=36160]="FRAMEBUFFER",GLEnum[GLEnum.RENDERBUFFER=36161]="RENDERBUFFER",GLEnum[GLEnum.RGBA4=32854]="RGBA4",GLEnum[GLEnum.RGB5_A1=32855]="RGB5_A1",GLEnum[GLEnum.RGB565=36194]="RGB565",GLEnum[GLEnum.DEPTH_COMPONENT16=33189]="DEPTH_COMPONENT16",GLEnum[GLEnum.STENCIL_INDEX=6401]="STENCIL_INDEX",GLEnum[GLEnum.STENCIL_INDEX8=36168]="STENCIL_INDEX8",GLEnum[GLEnum.DEPTH_STENCIL=34041]="DEPTH_STENCIL",GLEnum[GLEnum.RENDERBUFFER_WIDTH=36162]="RENDERBUFFER_WIDTH",GLEnum[GLEnum.RENDERBUFFER_HEIGHT=36163]="RENDERBUFFER_HEIGHT",GLEnum[GLEnum.RENDERBUFFER_INTERNAL_FORMAT=36164]="RENDERBUFFER_INTERNAL_FORMAT",GLEnum[GLEnum.RENDERBUFFER_RED_SIZE=36176]="RENDERBUFFER_RED_SIZE",GLEnum[GLEnum.RENDERBUFFER_GREEN_SIZE=36177]="RENDERBUFFER_GREEN_SIZE",GLEnum[GLEnum.RENDERBUFFER_BLUE_SIZE=36178]="RENDERBUFFER_BLUE_SIZE",GLEnum[GLEnum.RENDERBUFFER_ALPHA_SIZE=36179]="RENDERBUFFER_ALPHA_SIZE",GLEnum[GLEnum.RENDERBUFFER_DEPTH_SIZE=36180]="RENDERBUFFER_DEPTH_SIZE",GLEnum[GLEnum.RENDERBUFFER_STENCIL_SIZE=36181]="RENDERBUFFER_STENCIL_SIZE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE=36048]="FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME=36049]="FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL=36050]="FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE=36051]="FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",GLEnum[GLEnum.COLOR_ATTACHMENT0=36064]="COLOR_ATTACHMENT0",GLEnum[GLEnum.DEPTH_ATTACHMENT=36096]="DEPTH_ATTACHMENT",GLEnum[GLEnum.STENCIL_ATTACHMENT=36128]="STENCIL_ATTACHMENT",GLEnum[GLEnum.DEPTH_STENCIL_ATTACHMENT=33306]="DEPTH_STENCIL_ATTACHMENT",GLEnum[GLEnum.NONE=0]="NONE",GLEnum[GLEnum.FRAMEBUFFER_COMPLETE=36053]="FRAMEBUFFER_COMPLETE",GLEnum[GLEnum.FRAMEBUFFER_INCOMPLETE_ATTACHMENT=36054]="FRAMEBUFFER_INCOMPLETE_ATTACHMENT",GLEnum[GLEnum.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT=36055]="FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",GLEnum[GLEnum.FRAMEBUFFER_INCOMPLETE_DIMENSIONS=36057]="FRAMEBUFFER_INCOMPLETE_DIMENSIONS",GLEnum[GLEnum.FRAMEBUFFER_UNSUPPORTED=36061]="FRAMEBUFFER_UNSUPPORTED",GLEnum[GLEnum.FRAMEBUFFER_BINDING=36006]="FRAMEBUFFER_BINDING",GLEnum[GLEnum.RENDERBUFFER_BINDING=36007]="RENDERBUFFER_BINDING",GLEnum[GLEnum.READ_FRAMEBUFFER=36008]="READ_FRAMEBUFFER",GLEnum[GLEnum.DRAW_FRAMEBUFFER=36009]="DRAW_FRAMEBUFFER",GLEnum[GLEnum.MAX_RENDERBUFFER_SIZE=34024]="MAX_RENDERBUFFER_SIZE",GLEnum[GLEnum.INVALID_FRAMEBUFFER_OPERATION=1286]="INVALID_FRAMEBUFFER_OPERATION",GLEnum[GLEnum.UNPACK_FLIP_Y_WEBGL=37440]="UNPACK_FLIP_Y_WEBGL",GLEnum[GLEnum.UNPACK_PREMULTIPLY_ALPHA_WEBGL=37441]="UNPACK_PREMULTIPLY_ALPHA_WEBGL",GLEnum[GLEnum.UNPACK_COLORSPACE_CONVERSION_WEBGL=37443]="UNPACK_COLORSPACE_CONVERSION_WEBGL",GLEnum[GLEnum.READ_BUFFER=3074]="READ_BUFFER",GLEnum[GLEnum.UNPACK_ROW_LENGTH=3314]="UNPACK_ROW_LENGTH",GLEnum[GLEnum.UNPACK_SKIP_ROWS=3315]="UNPACK_SKIP_ROWS",GLEnum[GLEnum.UNPACK_SKIP_PIXELS=3316]="UNPACK_SKIP_PIXELS",GLEnum[GLEnum.PACK_ROW_LENGTH=3330]="PACK_ROW_LENGTH",GLEnum[GLEnum.PACK_SKIP_ROWS=3331]="PACK_SKIP_ROWS",GLEnum[GLEnum.PACK_SKIP_PIXELS=3332]="PACK_SKIP_PIXELS",GLEnum[GLEnum.TEXTURE_BINDING_3D=32874]="TEXTURE_BINDING_3D",GLEnum[GLEnum.UNPACK_SKIP_IMAGES=32877]="UNPACK_SKIP_IMAGES",GLEnum[GLEnum.UNPACK_IMAGE_HEIGHT=32878]="UNPACK_IMAGE_HEIGHT",GLEnum[GLEnum.MAX_3D_TEXTURE_SIZE=32883]="MAX_3D_TEXTURE_SIZE",GLEnum[GLEnum.MAX_ELEMENTS_VERTICES=33e3]="MAX_ELEMENTS_VERTICES",GLEnum[GLEnum.MAX_ELEMENTS_INDICES=33001]="MAX_ELEMENTS_INDICES",GLEnum[GLEnum.MAX_TEXTURE_LOD_BIAS=34045]="MAX_TEXTURE_LOD_BIAS",GLEnum[GLEnum.MAX_FRAGMENT_UNIFORM_COMPONENTS=35657]="MAX_FRAGMENT_UNIFORM_COMPONENTS",GLEnum[GLEnum.MAX_VERTEX_UNIFORM_COMPONENTS=35658]="MAX_VERTEX_UNIFORM_COMPONENTS",GLEnum[GLEnum.MAX_ARRAY_TEXTURE_LAYERS=35071]="MAX_ARRAY_TEXTURE_LAYERS",GLEnum[GLEnum.MIN_PROGRAM_TEXEL_OFFSET=35076]="MIN_PROGRAM_TEXEL_OFFSET",GLEnum[GLEnum.MAX_PROGRAM_TEXEL_OFFSET=35077]="MAX_PROGRAM_TEXEL_OFFSET",GLEnum[GLEnum.MAX_VARYING_COMPONENTS=35659]="MAX_VARYING_COMPONENTS",GLEnum[GLEnum.FRAGMENT_SHADER_DERIVATIVE_HINT=35723]="FRAGMENT_SHADER_DERIVATIVE_HINT",GLEnum[GLEnum.RASTERIZER_DISCARD=35977]="RASTERIZER_DISCARD",GLEnum[GLEnum.VERTEX_ARRAY_BINDING=34229]="VERTEX_ARRAY_BINDING",GLEnum[GLEnum.MAX_VERTEX_OUTPUT_COMPONENTS=37154]="MAX_VERTEX_OUTPUT_COMPONENTS",GLEnum[GLEnum.MAX_FRAGMENT_INPUT_COMPONENTS=37157]="MAX_FRAGMENT_INPUT_COMPONENTS",GLEnum[GLEnum.MAX_SERVER_WAIT_TIMEOUT=37137]="MAX_SERVER_WAIT_TIMEOUT",GLEnum[GLEnum.MAX_ELEMENT_INDEX=36203]="MAX_ELEMENT_INDEX",GLEnum[GLEnum.RED=6403]="RED",GLEnum[GLEnum.RGB8=32849]="RGB8",GLEnum[GLEnum.RGBA8=32856]="RGBA8",GLEnum[GLEnum.RGB10_A2=32857]="RGB10_A2",GLEnum[GLEnum.TEXTURE_3D=32879]="TEXTURE_3D",GLEnum[GLEnum.TEXTURE_WRAP_R=32882]="TEXTURE_WRAP_R",GLEnum[GLEnum.TEXTURE_MIN_LOD=33082]="TEXTURE_MIN_LOD",GLEnum[GLEnum.TEXTURE_MAX_LOD=33083]="TEXTURE_MAX_LOD",GLEnum[GLEnum.TEXTURE_BASE_LEVEL=33084]="TEXTURE_BASE_LEVEL",GLEnum[GLEnum.TEXTURE_MAX_LEVEL=33085]="TEXTURE_MAX_LEVEL",GLEnum[GLEnum.TEXTURE_COMPARE_MODE=34892]="TEXTURE_COMPARE_MODE",GLEnum[GLEnum.TEXTURE_COMPARE_FUNC=34893]="TEXTURE_COMPARE_FUNC",GLEnum[GLEnum.SRGB=35904]="SRGB",GLEnum[GLEnum.SRGB8=35905]="SRGB8",GLEnum[GLEnum.SRGB8_ALPHA8=35907]="SRGB8_ALPHA8",GLEnum[GLEnum.COMPARE_REF_TO_TEXTURE=34894]="COMPARE_REF_TO_TEXTURE",GLEnum[GLEnum.RGBA32F=34836]="RGBA32F",GLEnum[GLEnum.RGB32F=34837]="RGB32F",GLEnum[GLEnum.RGBA16F=34842]="RGBA16F",GLEnum[GLEnum.RGB16F=34843]="RGB16F",GLEnum[GLEnum.TEXTURE_2D_ARRAY=35866]="TEXTURE_2D_ARRAY",GLEnum[GLEnum.TEXTURE_BINDING_2D_ARRAY=35869]="TEXTURE_BINDING_2D_ARRAY",GLEnum[GLEnum.R11F_G11F_B10F=35898]="R11F_G11F_B10F",GLEnum[GLEnum.RGB9_E5=35901]="RGB9_E5",GLEnum[GLEnum.RGBA32UI=36208]="RGBA32UI",GLEnum[GLEnum.RGB32UI=36209]="RGB32UI",GLEnum[GLEnum.RGBA16UI=36214]="RGBA16UI",GLEnum[GLEnum.RGB16UI=36215]="RGB16UI",GLEnum[GLEnum.RGBA8UI=36220]="RGBA8UI",GLEnum[GLEnum.RGB8UI=36221]="RGB8UI",GLEnum[GLEnum.RGBA32I=36226]="RGBA32I",GLEnum[GLEnum.RGB32I=36227]="RGB32I",GLEnum[GLEnum.RGBA16I=36232]="RGBA16I",GLEnum[GLEnum.RGB16I=36233]="RGB16I",GLEnum[GLEnum.RGBA8I=36238]="RGBA8I",GLEnum[GLEnum.RGB8I=36239]="RGB8I",GLEnum[GLEnum.RED_INTEGER=36244]="RED_INTEGER",GLEnum[GLEnum.RGB_INTEGER=36248]="RGB_INTEGER",GLEnum[GLEnum.RGBA_INTEGER=36249]="RGBA_INTEGER",GLEnum[GLEnum.R8=33321]="R8",GLEnum[GLEnum.RG8=33323]="RG8",GLEnum[GLEnum.R16F=33325]="R16F",GLEnum[GLEnum.R32F=33326]="R32F",GLEnum[GLEnum.RG16F=33327]="RG16F",GLEnum[GLEnum.RG32F=33328]="RG32F",GLEnum[GLEnum.R8I=33329]="R8I",GLEnum[GLEnum.R8UI=33330]="R8UI",GLEnum[GLEnum.R16I=33331]="R16I",GLEnum[GLEnum.R16UI=33332]="R16UI",GLEnum[GLEnum.R32I=33333]="R32I",GLEnum[GLEnum.R32UI=33334]="R32UI",GLEnum[GLEnum.RG8I=33335]="RG8I",GLEnum[GLEnum.RG8UI=33336]="RG8UI",GLEnum[GLEnum.RG16I=33337]="RG16I",GLEnum[GLEnum.RG16UI=33338]="RG16UI",GLEnum[GLEnum.RG32I=33339]="RG32I",GLEnum[GLEnum.RG32UI=33340]="RG32UI",GLEnum[GLEnum.R8_SNORM=36756]="R8_SNORM",GLEnum[GLEnum.RG8_SNORM=36757]="RG8_SNORM",GLEnum[GLEnum.RGB8_SNORM=36758]="RGB8_SNORM",GLEnum[GLEnum.RGBA8_SNORM=36759]="RGBA8_SNORM",GLEnum[GLEnum.RGB10_A2UI=36975]="RGB10_A2UI",GLEnum[GLEnum.TEXTURE_IMMUTABLE_FORMAT=37167]="TEXTURE_IMMUTABLE_FORMAT",GLEnum[GLEnum.TEXTURE_IMMUTABLE_LEVELS=33503]="TEXTURE_IMMUTABLE_LEVELS",GLEnum[GLEnum.UNSIGNED_INT_2_10_10_10_REV=33640]="UNSIGNED_INT_2_10_10_10_REV",GLEnum[GLEnum.UNSIGNED_INT_10F_11F_11F_REV=35899]="UNSIGNED_INT_10F_11F_11F_REV",GLEnum[GLEnum.UNSIGNED_INT_5_9_9_9_REV=35902]="UNSIGNED_INT_5_9_9_9_REV",GLEnum[GLEnum.FLOAT_32_UNSIGNED_INT_24_8_REV=36269]="FLOAT_32_UNSIGNED_INT_24_8_REV",GLEnum[GLEnum.UNSIGNED_INT_24_8=34042]="UNSIGNED_INT_24_8",GLEnum[GLEnum.HALF_FLOAT=5131]="HALF_FLOAT",GLEnum[GLEnum.RG=33319]="RG",GLEnum[GLEnum.RG_INTEGER=33320]="RG_INTEGER",GLEnum[GLEnum.INT_2_10_10_10_REV=36255]="INT_2_10_10_10_REV",GLEnum[GLEnum.CURRENT_QUERY=34917]="CURRENT_QUERY",GLEnum[GLEnum.QUERY_RESULT=34918]="QUERY_RESULT",GLEnum[GLEnum.QUERY_RESULT_AVAILABLE=34919]="QUERY_RESULT_AVAILABLE",GLEnum[GLEnum.ANY_SAMPLES_PASSED=35887]="ANY_SAMPLES_PASSED",GLEnum[GLEnum.ANY_SAMPLES_PASSED_CONSERVATIVE=36202]="ANY_SAMPLES_PASSED_CONSERVATIVE",GLEnum[GLEnum.MAX_DRAW_BUFFERS=34852]="MAX_DRAW_BUFFERS",GLEnum[GLEnum.DRAW_BUFFER0=34853]="DRAW_BUFFER0",GLEnum[GLEnum.DRAW_BUFFER1=34854]="DRAW_BUFFER1",GLEnum[GLEnum.DRAW_BUFFER2=34855]="DRAW_BUFFER2",GLEnum[GLEnum.DRAW_BUFFER3=34856]="DRAW_BUFFER3",GLEnum[GLEnum.DRAW_BUFFER4=34857]="DRAW_BUFFER4",GLEnum[GLEnum.DRAW_BUFFER5=34858]="DRAW_BUFFER5",GLEnum[GLEnum.DRAW_BUFFER6=34859]="DRAW_BUFFER6",GLEnum[GLEnum.DRAW_BUFFER7=34860]="DRAW_BUFFER7",GLEnum[GLEnum.DRAW_BUFFER8=34861]="DRAW_BUFFER8",GLEnum[GLEnum.DRAW_BUFFER9=34862]="DRAW_BUFFER9",GLEnum[GLEnum.DRAW_BUFFER10=34863]="DRAW_BUFFER10",GLEnum[GLEnum.DRAW_BUFFER11=34864]="DRAW_BUFFER11",GLEnum[GLEnum.DRAW_BUFFER12=34865]="DRAW_BUFFER12",GLEnum[GLEnum.DRAW_BUFFER13=34866]="DRAW_BUFFER13",GLEnum[GLEnum.DRAW_BUFFER14=34867]="DRAW_BUFFER14",GLEnum[GLEnum.DRAW_BUFFER15=34868]="DRAW_BUFFER15",GLEnum[GLEnum.MAX_COLOR_ATTACHMENTS=36063]="MAX_COLOR_ATTACHMENTS",GLEnum[GLEnum.COLOR_ATTACHMENT1=36065]="COLOR_ATTACHMENT1",GLEnum[GLEnum.COLOR_ATTACHMENT2=36066]="COLOR_ATTACHMENT2",GLEnum[GLEnum.COLOR_ATTACHMENT3=36067]="COLOR_ATTACHMENT3",GLEnum[GLEnum.COLOR_ATTACHMENT4=36068]="COLOR_ATTACHMENT4",GLEnum[GLEnum.COLOR_ATTACHMENT5=36069]="COLOR_ATTACHMENT5",GLEnum[GLEnum.COLOR_ATTACHMENT6=36070]="COLOR_ATTACHMENT6",GLEnum[GLEnum.COLOR_ATTACHMENT7=36071]="COLOR_ATTACHMENT7",GLEnum[GLEnum.COLOR_ATTACHMENT8=36072]="COLOR_ATTACHMENT8",GLEnum[GLEnum.COLOR_ATTACHMENT9=36073]="COLOR_ATTACHMENT9",GLEnum[GLEnum.COLOR_ATTACHMENT10=36074]="COLOR_ATTACHMENT10",GLEnum[GLEnum.COLOR_ATTACHMENT11=36075]="COLOR_ATTACHMENT11",GLEnum[GLEnum.COLOR_ATTACHMENT12=36076]="COLOR_ATTACHMENT12",GLEnum[GLEnum.COLOR_ATTACHMENT13=36077]="COLOR_ATTACHMENT13",GLEnum[GLEnum.COLOR_ATTACHMENT14=36078]="COLOR_ATTACHMENT14",GLEnum[GLEnum.COLOR_ATTACHMENT15=36079]="COLOR_ATTACHMENT15",GLEnum[GLEnum.SAMPLER_3D=35679]="SAMPLER_3D",GLEnum[GLEnum.SAMPLER_2D_SHADOW=35682]="SAMPLER_2D_SHADOW",GLEnum[GLEnum.SAMPLER_2D_ARRAY=36289]="SAMPLER_2D_ARRAY",GLEnum[GLEnum.SAMPLER_2D_ARRAY_SHADOW=36292]="SAMPLER_2D_ARRAY_SHADOW",GLEnum[GLEnum.SAMPLER_CUBE_SHADOW=36293]="SAMPLER_CUBE_SHADOW",GLEnum[GLEnum.INT_SAMPLER_2D=36298]="INT_SAMPLER_2D",GLEnum[GLEnum.INT_SAMPLER_3D=36299]="INT_SAMPLER_3D",GLEnum[GLEnum.INT_SAMPLER_CUBE=36300]="INT_SAMPLER_CUBE",GLEnum[GLEnum.INT_SAMPLER_2D_ARRAY=36303]="INT_SAMPLER_2D_ARRAY",GLEnum[GLEnum.UNSIGNED_INT_SAMPLER_2D=36306]="UNSIGNED_INT_SAMPLER_2D",GLEnum[GLEnum.UNSIGNED_INT_SAMPLER_3D=36307]="UNSIGNED_INT_SAMPLER_3D",GLEnum[GLEnum.UNSIGNED_INT_SAMPLER_CUBE=36308]="UNSIGNED_INT_SAMPLER_CUBE",GLEnum[GLEnum.UNSIGNED_INT_SAMPLER_2D_ARRAY=36311]="UNSIGNED_INT_SAMPLER_2D_ARRAY",GLEnum[GLEnum.MAX_SAMPLES=36183]="MAX_SAMPLES",GLEnum[GLEnum.SAMPLER_BINDING=35097]="SAMPLER_BINDING",GLEnum[GLEnum.PIXEL_PACK_BUFFER=35051]="PIXEL_PACK_BUFFER",GLEnum[GLEnum.PIXEL_UNPACK_BUFFER=35052]="PIXEL_UNPACK_BUFFER",GLEnum[GLEnum.PIXEL_PACK_BUFFER_BINDING=35053]="PIXEL_PACK_BUFFER_BINDING",GLEnum[GLEnum.PIXEL_UNPACK_BUFFER_BINDING=35055]="PIXEL_UNPACK_BUFFER_BINDING",GLEnum[GLEnum.COPY_READ_BUFFER=36662]="COPY_READ_BUFFER",GLEnum[GLEnum.COPY_WRITE_BUFFER=36663]="COPY_WRITE_BUFFER",GLEnum[GLEnum.COPY_READ_BUFFER_BINDING=36662]="COPY_READ_BUFFER_BINDING",GLEnum[GLEnum.COPY_WRITE_BUFFER_BINDING=36663]="COPY_WRITE_BUFFER_BINDING",GLEnum[GLEnum.FLOAT_MAT2x3=35685]="FLOAT_MAT2x3",GLEnum[GLEnum.FLOAT_MAT2x4=35686]="FLOAT_MAT2x4",GLEnum[GLEnum.FLOAT_MAT3x2=35687]="FLOAT_MAT3x2",GLEnum[GLEnum.FLOAT_MAT3x4=35688]="FLOAT_MAT3x4",GLEnum[GLEnum.FLOAT_MAT4x2=35689]="FLOAT_MAT4x2",GLEnum[GLEnum.FLOAT_MAT4x3=35690]="FLOAT_MAT4x3",GLEnum[GLEnum.UNSIGNED_INT_VEC2=36294]="UNSIGNED_INT_VEC2",GLEnum[GLEnum.UNSIGNED_INT_VEC3=36295]="UNSIGNED_INT_VEC3",GLEnum[GLEnum.UNSIGNED_INT_VEC4=36296]="UNSIGNED_INT_VEC4",GLEnum[GLEnum.UNSIGNED_NORMALIZED=35863]="UNSIGNED_NORMALIZED",GLEnum[GLEnum.SIGNED_NORMALIZED=36764]="SIGNED_NORMALIZED",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_INTEGER=35069]="VERTEX_ATTRIB_ARRAY_INTEGER",GLEnum[GLEnum.VERTEX_ATTRIB_ARRAY_DIVISOR=35070]="VERTEX_ATTRIB_ARRAY_DIVISOR",GLEnum[GLEnum.TRANSFORM_FEEDBACK_BUFFER_MODE=35967]="TRANSFORM_FEEDBACK_BUFFER_MODE",GLEnum[GLEnum.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS=35968]="MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS",GLEnum[GLEnum.TRANSFORM_FEEDBACK_VARYINGS=35971]="TRANSFORM_FEEDBACK_VARYINGS",GLEnum[GLEnum.TRANSFORM_FEEDBACK_BUFFER_START=35972]="TRANSFORM_FEEDBACK_BUFFER_START",GLEnum[GLEnum.TRANSFORM_FEEDBACK_BUFFER_SIZE=35973]="TRANSFORM_FEEDBACK_BUFFER_SIZE",GLEnum[GLEnum.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN=35976]="TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN",GLEnum[GLEnum.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS=35978]="MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS",GLEnum[GLEnum.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS=35979]="MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS",GLEnum[GLEnum.INTERLEAVED_ATTRIBS=35980]="INTERLEAVED_ATTRIBS",GLEnum[GLEnum.SEPARATE_ATTRIBS=35981]="SEPARATE_ATTRIBS",GLEnum[GLEnum.TRANSFORM_FEEDBACK_BUFFER=35982]="TRANSFORM_FEEDBACK_BUFFER",GLEnum[GLEnum.TRANSFORM_FEEDBACK_BUFFER_BINDING=35983]="TRANSFORM_FEEDBACK_BUFFER_BINDING",GLEnum[GLEnum.TRANSFORM_FEEDBACK=36386]="TRANSFORM_FEEDBACK",GLEnum[GLEnum.TRANSFORM_FEEDBACK_PAUSED=36387]="TRANSFORM_FEEDBACK_PAUSED",GLEnum[GLEnum.TRANSFORM_FEEDBACK_ACTIVE=36388]="TRANSFORM_FEEDBACK_ACTIVE",GLEnum[GLEnum.TRANSFORM_FEEDBACK_BINDING=36389]="TRANSFORM_FEEDBACK_BINDING",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING=33296]="FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE=33297]="FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_RED_SIZE=33298]="FRAMEBUFFER_ATTACHMENT_RED_SIZE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE=33299]="FRAMEBUFFER_ATTACHMENT_GREEN_SIZE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE=33300]="FRAMEBUFFER_ATTACHMENT_BLUE_SIZE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE=33301]="FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE=33302]="FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE=33303]="FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE",GLEnum[GLEnum.FRAMEBUFFER_DEFAULT=33304]="FRAMEBUFFER_DEFAULT",GLEnum[GLEnum.DEPTH24_STENCIL8=35056]="DEPTH24_STENCIL8",GLEnum[GLEnum.DRAW_FRAMEBUFFER_BINDING=36006]="DRAW_FRAMEBUFFER_BINDING",GLEnum[GLEnum.READ_FRAMEBUFFER_BINDING=36010]="READ_FRAMEBUFFER_BINDING",GLEnum[GLEnum.RENDERBUFFER_SAMPLES=36011]="RENDERBUFFER_SAMPLES",GLEnum[GLEnum.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER=36052]="FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER",GLEnum[GLEnum.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE=36182]="FRAMEBUFFER_INCOMPLETE_MULTISAMPLE",GLEnum[GLEnum.UNIFORM_BUFFER=35345]="UNIFORM_BUFFER",GLEnum[GLEnum.UNIFORM_BUFFER_BINDING=35368]="UNIFORM_BUFFER_BINDING",GLEnum[GLEnum.UNIFORM_BUFFER_START=35369]="UNIFORM_BUFFER_START",GLEnum[GLEnum.UNIFORM_BUFFER_SIZE=35370]="UNIFORM_BUFFER_SIZE",GLEnum[GLEnum.MAX_VERTEX_UNIFORM_BLOCKS=35371]="MAX_VERTEX_UNIFORM_BLOCKS",GLEnum[GLEnum.MAX_FRAGMENT_UNIFORM_BLOCKS=35373]="MAX_FRAGMENT_UNIFORM_BLOCKS",GLEnum[GLEnum.MAX_COMBINED_UNIFORM_BLOCKS=35374]="MAX_COMBINED_UNIFORM_BLOCKS",GLEnum[GLEnum.MAX_UNIFORM_BUFFER_BINDINGS=35375]="MAX_UNIFORM_BUFFER_BINDINGS",GLEnum[GLEnum.MAX_UNIFORM_BLOCK_SIZE=35376]="MAX_UNIFORM_BLOCK_SIZE",GLEnum[GLEnum.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS=35377]="MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS",GLEnum[GLEnum.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS=35379]="MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS",GLEnum[GLEnum.UNIFORM_BUFFER_OFFSET_ALIGNMENT=35380]="UNIFORM_BUFFER_OFFSET_ALIGNMENT",GLEnum[GLEnum.ACTIVE_UNIFORM_BLOCKS=35382]="ACTIVE_UNIFORM_BLOCKS",GLEnum[GLEnum.UNIFORM_TYPE=35383]="UNIFORM_TYPE",GLEnum[GLEnum.UNIFORM_SIZE=35384]="UNIFORM_SIZE",GLEnum[GLEnum.UNIFORM_BLOCK_INDEX=35386]="UNIFORM_BLOCK_INDEX",GLEnum[GLEnum.UNIFORM_OFFSET=35387]="UNIFORM_OFFSET",GLEnum[GLEnum.UNIFORM_ARRAY_STRIDE=35388]="UNIFORM_ARRAY_STRIDE",GLEnum[GLEnum.UNIFORM_MATRIX_STRIDE=35389]="UNIFORM_MATRIX_STRIDE",GLEnum[GLEnum.UNIFORM_IS_ROW_MAJOR=35390]="UNIFORM_IS_ROW_MAJOR",GLEnum[GLEnum.UNIFORM_BLOCK_BINDING=35391]="UNIFORM_BLOCK_BINDING",GLEnum[GLEnum.UNIFORM_BLOCK_DATA_SIZE=35392]="UNIFORM_BLOCK_DATA_SIZE",GLEnum[GLEnum.UNIFORM_BLOCK_ACTIVE_UNIFORMS=35394]="UNIFORM_BLOCK_ACTIVE_UNIFORMS",GLEnum[GLEnum.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES=35395]="UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES",GLEnum[GLEnum.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER=35396]="UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER",GLEnum[GLEnum.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER=35398]="UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER",GLEnum[GLEnum.OBJECT_TYPE=37138]="OBJECT_TYPE",GLEnum[GLEnum.SYNC_CONDITION=37139]="SYNC_CONDITION",GLEnum[GLEnum.SYNC_STATUS=37140]="SYNC_STATUS",GLEnum[GLEnum.SYNC_FLAGS=37141]="SYNC_FLAGS",GLEnum[GLEnum.SYNC_FENCE=37142]="SYNC_FENCE",GLEnum[GLEnum.SYNC_GPU_COMMANDS_COMPLETE=37143]="SYNC_GPU_COMMANDS_COMPLETE",GLEnum[GLEnum.UNSIGNALED=37144]="UNSIGNALED",GLEnum[GLEnum.SIGNALED=37145]="SIGNALED",GLEnum[GLEnum.ALREADY_SIGNALED=37146]="ALREADY_SIGNALED",GLEnum[GLEnum.TIMEOUT_EXPIRED=37147]="TIMEOUT_EXPIRED",GLEnum[GLEnum.CONDITION_SATISFIED=37148]="CONDITION_SATISFIED",GLEnum[GLEnum.WAIT_FAILED=37149]="WAIT_FAILED",GLEnum[GLEnum.SYNC_FLUSH_COMMANDS_BIT=1]="SYNC_FLUSH_COMMANDS_BIT",GLEnum[GLEnum.COLOR=6144]="COLOR",GLEnum[GLEnum.DEPTH=6145]="DEPTH",GLEnum[GLEnum.STENCIL=6146]="STENCIL",GLEnum[GLEnum.MIN=32775]="MIN",GLEnum[GLEnum.MAX=32776]="MAX",GLEnum[GLEnum.DEPTH_COMPONENT24=33190]="DEPTH_COMPONENT24",GLEnum[GLEnum.STREAM_READ=35041]="STREAM_READ",GLEnum[GLEnum.STREAM_COPY=35042]="STREAM_COPY",GLEnum[GLEnum.STATIC_READ=35045]="STATIC_READ",GLEnum[GLEnum.STATIC_COPY=35046]="STATIC_COPY",GLEnum[GLEnum.DYNAMIC_READ=35049]="DYNAMIC_READ",GLEnum[GLEnum.DYNAMIC_COPY=35050]="DYNAMIC_COPY",GLEnum[GLEnum.DEPTH_COMPONENT32F=36012]="DEPTH_COMPONENT32F",GLEnum[GLEnum.DEPTH32F_STENCIL8=36013]="DEPTH32F_STENCIL8",GLEnum[GLEnum.INVALID_INDEX=4294967295]="INVALID_INDEX",GLEnum[GLEnum.TIMEOUT_IGNORED=-1]="TIMEOUT_IGNORED",GLEnum[GLEnum.MAX_CLIENT_WAIT_TIMEOUT_WEBGL=37447]="MAX_CLIENT_WAIT_TIMEOUT_WEBGL",GLEnum[GLEnum.UNMASKED_VENDOR_WEBGL=37445]="UNMASKED_VENDOR_WEBGL",GLEnum[GLEnum.UNMASKED_RENDERER_WEBGL=37446]="UNMASKED_RENDERER_WEBGL",GLEnum[GLEnum.MAX_TEXTURE_MAX_ANISOTROPY_EXT=34047]="MAX_TEXTURE_MAX_ANISOTROPY_EXT",GLEnum[GLEnum.TEXTURE_MAX_ANISOTROPY_EXT=34046]="TEXTURE_MAX_ANISOTROPY_EXT",GLEnum[GLEnum.R16_EXT=33322]="R16_EXT",GLEnum[GLEnum.RG16_EXT=33324]="RG16_EXT",GLEnum[GLEnum.RGB16_EXT=32852]="RGB16_EXT",GLEnum[GLEnum.RGBA16_EXT=32859]="RGBA16_EXT",GLEnum[GLEnum.R16_SNORM_EXT=36760]="R16_SNORM_EXT",GLEnum[GLEnum.RG16_SNORM_EXT=36761]="RG16_SNORM_EXT",GLEnum[GLEnum.RGB16_SNORM_EXT=36762]="RGB16_SNORM_EXT",GLEnum[GLEnum.RGBA16_SNORM_EXT=36763]="RGBA16_SNORM_EXT",GLEnum[GLEnum.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",GLEnum[GLEnum.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777]="COMPRESSED_RGBA_S3TC_DXT1_EXT",GLEnum[GLEnum.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778]="COMPRESSED_RGBA_S3TC_DXT3_EXT",GLEnum[GLEnum.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",GLEnum[GLEnum.COMPRESSED_SRGB_S3TC_DXT1_EXT=35916]="COMPRESSED_SRGB_S3TC_DXT1_EXT",GLEnum[GLEnum.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT=35917]="COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT",GLEnum[GLEnum.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT=35918]="COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT",GLEnum[GLEnum.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT=35919]="COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT",GLEnum[GLEnum.COMPRESSED_RED_RGTC1_EXT=36283]="COMPRESSED_RED_RGTC1_EXT",GLEnum[GLEnum.COMPRESSED_SIGNED_RED_RGTC1_EXT=36284]="COMPRESSED_SIGNED_RED_RGTC1_EXT",GLEnum[GLEnum.COMPRESSED_RED_GREEN_RGTC2_EXT=36285]="COMPRESSED_RED_GREEN_RGTC2_EXT",GLEnum[GLEnum.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT=36286]="COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT",GLEnum[GLEnum.COMPRESSED_RGBA_BPTC_UNORM_EXT=36492]="COMPRESSED_RGBA_BPTC_UNORM_EXT",GLEnum[GLEnum.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT=36493]="COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT",GLEnum[GLEnum.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT=36494]="COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT",GLEnum[GLEnum.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT=36495]="COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT",GLEnum[GLEnum.COMPRESSED_R11_EAC=37488]="COMPRESSED_R11_EAC",GLEnum[GLEnum.COMPRESSED_SIGNED_R11_EAC=37489]="COMPRESSED_SIGNED_R11_EAC",GLEnum[GLEnum.COMPRESSED_RG11_EAC=37490]="COMPRESSED_RG11_EAC",GLEnum[GLEnum.COMPRESSED_SIGNED_RG11_EAC=37491]="COMPRESSED_SIGNED_RG11_EAC",GLEnum[GLEnum.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",GLEnum[GLEnum.COMPRESSED_RGBA8_ETC2_EAC=37493]="COMPRESSED_RGBA8_ETC2_EAC",GLEnum[GLEnum.COMPRESSED_SRGB8_ETC2=37494]="COMPRESSED_SRGB8_ETC2",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC=37495]="COMPRESSED_SRGB8_ALPHA8_ETC2_EAC",GLEnum[GLEnum.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2=37496]="COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2",GLEnum[GLEnum.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2=37497]="COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2",GLEnum[GLEnum.COMPRESSED_RGB_PVRTC_4BPPV1_IMG=35840]="COMPRESSED_RGB_PVRTC_4BPPV1_IMG",GLEnum[GLEnum.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG=35842]="COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",GLEnum[GLEnum.COMPRESSED_RGB_PVRTC_2BPPV1_IMG=35841]="COMPRESSED_RGB_PVRTC_2BPPV1_IMG",GLEnum[GLEnum.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG=35843]="COMPRESSED_RGBA_PVRTC_2BPPV1_IMG",GLEnum[GLEnum.COMPRESSED_RGB_ETC1_WEBGL=36196]="COMPRESSED_RGB_ETC1_WEBGL",GLEnum[GLEnum.COMPRESSED_RGB_ATC_WEBGL=35986]="COMPRESSED_RGB_ATC_WEBGL",GLEnum[GLEnum.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL=35986]="COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL",GLEnum[GLEnum.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL=34798]="COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_4x4_KHR=37808]="COMPRESSED_RGBA_ASTC_4x4_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_5x4_KHR=37809]="COMPRESSED_RGBA_ASTC_5x4_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_5x5_KHR=37810]="COMPRESSED_RGBA_ASTC_5x5_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_6x5_KHR=37811]="COMPRESSED_RGBA_ASTC_6x5_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_6x6_KHR=37812]="COMPRESSED_RGBA_ASTC_6x6_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_8x5_KHR=37813]="COMPRESSED_RGBA_ASTC_8x5_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_8x6_KHR=37814]="COMPRESSED_RGBA_ASTC_8x6_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_8x8_KHR=37815]="COMPRESSED_RGBA_ASTC_8x8_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_10x5_KHR=37816]="COMPRESSED_RGBA_ASTC_10x5_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_10x6_KHR=37817]="COMPRESSED_RGBA_ASTC_10x6_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_10x8_KHR=37818]="COMPRESSED_RGBA_ASTC_10x8_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_10x10_KHR=37819]="COMPRESSED_RGBA_ASTC_10x10_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_12x10_KHR=37820]="COMPRESSED_RGBA_ASTC_12x10_KHR",GLEnum[GLEnum.COMPRESSED_RGBA_ASTC_12x12_KHR=37821]="COMPRESSED_RGBA_ASTC_12x12_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR=37840]="COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR=37841]="COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR=37842]="COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR=37843]="COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR=37844]="COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR=37845]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR=37846]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR=37847]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR=37848]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR=37849]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR=37850]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR=37851]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR=37852]="COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR",GLEnum[GLEnum.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR=37853]="COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR",GLEnum[GLEnum.QUERY_COUNTER_BITS_EXT=34916]="QUERY_COUNTER_BITS_EXT",GLEnum[GLEnum.CURRENT_QUERY_EXT=34917]="CURRENT_QUERY_EXT",GLEnum[GLEnum.QUERY_RESULT_EXT=34918]="QUERY_RESULT_EXT",GLEnum[GLEnum.QUERY_RESULT_AVAILABLE_EXT=34919]="QUERY_RESULT_AVAILABLE_EXT",GLEnum[GLEnum.TIME_ELAPSED_EXT=35007]="TIME_ELAPSED_EXT",GLEnum[GLEnum.TIMESTAMP_EXT=36392]="TIMESTAMP_EXT",GLEnum[GLEnum.GPU_DISJOINT_EXT=36795]="GPU_DISJOINT_EXT",GLEnum[GLEnum.COMPLETION_STATUS_KHR=37297]="COMPLETION_STATUS_KHR",GLEnum[GLEnum.DEPTH_CLAMP_EXT=34383]="DEPTH_CLAMP_EXT",GLEnum[GLEnum.FIRST_VERTEX_CONVENTION_WEBGL=36429]="FIRST_VERTEX_CONVENTION_WEBGL",GLEnum[GLEnum.LAST_VERTEX_CONVENTION_WEBGL=36430]="LAST_VERTEX_CONVENTION_WEBGL",GLEnum[GLEnum.PROVOKING_VERTEX_WEBL=36431]="PROVOKING_VERTEX_WEBL",GLEnum[GLEnum.POLYGON_MODE_WEBGL=2880]="POLYGON_MODE_WEBGL",GLEnum[GLEnum.POLYGON_OFFSET_LINE_WEBGL=10754]="POLYGON_OFFSET_LINE_WEBGL",GLEnum[GLEnum.LINE_WEBGL=6913]="LINE_WEBGL",GLEnum[GLEnum.FILL_WEBGL=6914]="FILL_WEBGL",GLEnum[GLEnum.MAX_CLIP_DISTANCES_WEBGL=3378]="MAX_CLIP_DISTANCES_WEBGL",GLEnum[GLEnum.MAX_CULL_DISTANCES_WEBGL=33529]="MAX_CULL_DISTANCES_WEBGL",GLEnum[GLEnum.MAX_COMBINED_CLIP_AND_CULL_DISTANCES_WEBGL=33530]="MAX_COMBINED_CLIP_AND_CULL_DISTANCES_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE0_WEBGL=12288]="CLIP_DISTANCE0_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE1_WEBGL=12289]="CLIP_DISTANCE1_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE2_WEBGL=12290]="CLIP_DISTANCE2_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE3_WEBGL=12291]="CLIP_DISTANCE3_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE4_WEBGL=12292]="CLIP_DISTANCE4_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE5_WEBGL=12293]="CLIP_DISTANCE5_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE6_WEBGL=12294]="CLIP_DISTANCE6_WEBGL",GLEnum[GLEnum.CLIP_DISTANCE7_WEBGL=12295]="CLIP_DISTANCE7_WEBGL",GLEnum[GLEnum.POLYGON_OFFSET_CLAMP_EXT=36379]="POLYGON_OFFSET_CLAMP_EXT",GLEnum[GLEnum.LOWER_LEFT_EXT=36001]="LOWER_LEFT_EXT",GLEnum[GLEnum.UPPER_LEFT_EXT=36002]="UPPER_LEFT_EXT",GLEnum[GLEnum.NEGATIVE_ONE_TO_ONE_EXT=37726]="NEGATIVE_ONE_TO_ONE_EXT",GLEnum[GLEnum.ZERO_TO_ONE_EXT=37727]="ZERO_TO_ONE_EXT",GLEnum[GLEnum.CLIP_ORIGIN_EXT=37724]="CLIP_ORIGIN_EXT",GLEnum[GLEnum.CLIP_DEPTH_MODE_EXT=37725]="CLIP_DEPTH_MODE_EXT",GLEnum[GLEnum.SRC1_COLOR_WEBGL=35065]="SRC1_COLOR_WEBGL",GLEnum[GLEnum.SRC1_ALPHA_WEBGL=34185]="SRC1_ALPHA_WEBGL",GLEnum[GLEnum.ONE_MINUS_SRC1_COLOR_WEBGL=35066]="ONE_MINUS_SRC1_COLOR_WEBGL",GLEnum[GLEnum.ONE_MINUS_SRC1_ALPHA_WEBGL=35067]="ONE_MINUS_SRC1_ALPHA_WEBGL",GLEnum[GLEnum.MAX_DUAL_SOURCE_DRAW_BUFFERS_WEBGL=35068]="MAX_DUAL_SOURCE_DRAW_BUFFERS_WEBGL",GLEnum[GLEnum.MIRROR_CLAMP_TO_EDGE_EXT=34627]="MIRROR_CLAMP_TO_EDGE_EXT"}(GLEnum||(GLEnum={}))},"./node_modules/@luma.gl/core/dist/adapter-utils/get-attribute-from-layouts.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{M:function(){return getAttributeInfosByLocation},P:function(){return getAttributeInfosFromLayouts}});var log=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/log.js");const TYPE_INFO={f32:["f32",1],"vec2<f32>":["f32",2],"vec3<f32>":["f32",3],"vec4<f32>":["f32",4],f16:["f16",1],"vec2<f16>":["f16",2],"vec3<f16>":["f16",3],"vec4<f16>":["f16",4],i32:["i32",1],"vec2<i32>":["i32",2],"vec3<i32>":["i32",3],"vec4<i32>":["i32",4],u32:["u32",1],"vec2<u32>":["u32",2],"vec3<u32>":["u32",3],"vec4<u32>":["u32",4]},TYPE_SIZES={f32:4,f16:2,i32:4,u32:4};var decode_data_type=__webpack_require__("./node_modules/@luma.gl/core/dist/gpu-type-utils/decode-data-type.js");function decodeVertexFormat(format){let webglOnly;format.endsWith("-webgl")&&(format.replace("-webgl",""),webglOnly=!0);const[type_,count]=format.split("x"),type=type_,components=count?parseInt(count):1,decodedType=(0,decode_data_type.l)(type),result={type:type,components:components,byteLength:decodedType.byteLength*components,integer:decodedType.integer,signed:decodedType.signed,normalized:decodedType.normalized};return webglOnly&&(result.webglOnly=!0),result}function getAttributeInfosFromLayouts(shaderLayout,bufferLayout){const attributeInfos={};for(const attribute of shaderLayout.attributes){const attributeInfo=getAttributeInfoFromLayouts(shaderLayout,bufferLayout,attribute.name);attributeInfo&&(attributeInfos[attribute.name]=attributeInfo)}return attributeInfos}function getAttributeInfosByLocation(shaderLayout,bufferLayout,maxVertexAttributes=16){const attributeInfos=getAttributeInfosFromLayouts(shaderLayout,bufferLayout),locationInfos=new Array(maxVertexAttributes).fill(null);for(const attributeInfo of Object.values(attributeInfos))locationInfos[attributeInfo.location]=attributeInfo;return locationInfos}function getAttributeInfoFromLayouts(shaderLayout,bufferLayout,name){const shaderDeclaration=function getAttributeFromShaderLayout(shaderLayout,name){const attribute=shaderLayout.attributes.find((attr=>attr.name===name));attribute||log.R.warn(`shader layout attribute "${name}" not present in shader`);return attribute||null}(shaderLayout,name),bufferMapping=function getAttributeFromBufferLayout(bufferLayouts,name){checkBufferLayouts(bufferLayouts);let bufferLayoutInfo=function getAttributeFromShortHand(bufferLayouts,name){for(const bufferLayout of bufferLayouts)if(bufferLayout.format&&bufferLayout.name===name)return{attributeName:bufferLayout.name,bufferName:name,stepMode:bufferLayout.stepMode,vertexFormat:bufferLayout.format,byteOffset:0,byteStride:bufferLayout.byteStride||0};return null}(bufferLayouts,name);if(bufferLayoutInfo)return bufferLayoutInfo;if(bufferLayoutInfo=function getAttributeFromAttributesList(bufferLayouts,name){for(const bufferLayout of bufferLayouts){let byteStride=bufferLayout.byteStride;if("number"!=typeof bufferLayout.byteStride)for(const attributeMapping of bufferLayout.attributes||[]){byteStride+=decodeVertexFormat(attributeMapping.format).byteLength}const attributeMapping=bufferLayout.attributes?.find((mapping=>mapping.attribute===name));if(attributeMapping)return{attributeName:attributeMapping.attribute,bufferName:bufferLayout.name,stepMode:bufferLayout.stepMode,vertexFormat:attributeMapping.format,byteOffset:attributeMapping.byteOffset,byteStride:byteStride}}return null}(bufferLayouts,name),bufferLayoutInfo)return bufferLayoutInfo;return log.R.warn(`layout for attribute "${name}" not present in buffer layout`),null}(bufferLayout,name);if(!shaderDeclaration)return null;const attributeTypeInfo=function decodeShaderAttributeType(attributeType){const[dataType,components]=TYPE_INFO[attributeType],integer="i32"===dataType||"u32"===dataType,signed="u32"!==dataType,byteLength=TYPE_SIZES[dataType]*components,defaultVertexFormat=function getCompatibleVertexFormat(dataType,components){let vertexType;switch(dataType){case"f32":vertexType="float32";break;case"i32":vertexType="sint32";break;case"u32":vertexType="uint32";break;case"f16":return components<=2?"float16x2":"float16x4"}return 1===components?vertexType:`${vertexType}x${components}`}(dataType,components);return{dataType:dataType,components:components,defaultVertexFormat:defaultVertexFormat,byteLength:byteLength,integer:integer,signed:signed}}(shaderDeclaration.type),vertexFormat=bufferMapping?.vertexFormat||attributeTypeInfo.defaultVertexFormat,vertexFormatInfo=decodeVertexFormat(vertexFormat);return{attributeName:bufferMapping?.attributeName||shaderDeclaration.name,bufferName:bufferMapping?.bufferName||shaderDeclaration.name,location:shaderDeclaration.location,shaderType:shaderDeclaration.type,shaderDataType:attributeTypeInfo.dataType,shaderComponents:attributeTypeInfo.components,vertexFormat:vertexFormat,bufferDataType:vertexFormatInfo.type,bufferComponents:vertexFormatInfo.components,normalized:vertexFormatInfo.normalized,integer:attributeTypeInfo.integer,stepMode:bufferMapping?.stepMode||shaderDeclaration.stepMode||"vertex",byteOffset:bufferMapping?.byteOffset||0,byteStride:bufferMapping?.byteStride||0}}function checkBufferLayouts(bufferLayouts){for(const bufferLayout of bufferLayouts)(bufferLayout.attributes&&bufferLayout.format||!bufferLayout.attributes&&!bufferLayout.format)&&log.R.warn(`BufferLayout ${name} must have either 'attributes' or 'format' field`)}},"./node_modules/@luma.gl/core/dist/adapter/device.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{pF:function(){return Device},I7:function(){return DeviceFeatures},PI:function(){return DeviceLimits}});var stats_manager=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/stats-manager.js"),log=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/log.js"),uid=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/uid.js"),buffer=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/buffer.js"),decode_texture_format=__webpack_require__("./node_modules/@luma.gl/core/dist/gpu-type-utils/decode-texture-format.js"),texture_format_table=__webpack_require__("./node_modules/@luma.gl/core/dist/gpu-type-utils/texture-format-table.js");class DeviceLimits{}class DeviceFeatures{features;disabledFeatures;constructor(features=[],disabledFeatures){this.features=new Set(features),this.disabledFeatures=disabledFeatures||{}}*[Symbol.iterator](){yield*this.features}has(feature){return!this.disabledFeatures?.[feature]&&this.features.has(feature)}}class Device{static defaultProps={id:null,powerPreference:"high-performance",failIfMajorPerformanceCaveat:!1,createCanvasContext:void 0,onError:error=>log.R.error(error.message)(),_reuseDevices:!1,_requestMaxLimits:!0,_factoryDestroyPolicy:"unused",_initializeFeatures:!0,_disabledFeatures:{"compilation-status-async-webgl":!0},_resourceDefaults:{},webgl:{},debug:log.R.get("debug")||void 0,debugShaders:log.R.get("debug-shaders")||void 0,debugFramebuffers:Boolean(log.R.get("debug-framebuffers")),debugWebGL:Boolean(log.R.get("debug-webgl")),debugSpectorJS:void 0,debugSpectorJSUrl:void 0,_handle:void 0};get[Symbol.toStringTag](){return"Device"}constructor(props){this.props={...Device.defaultProps,...props},this.id=this.props.id||(0,uid.L)(this[Symbol.toStringTag].toLowerCase())}id;props;userData={};statsManager=stats_manager.d;timestamp=0;_reused=!1;_lumaData={};getTextureFormatCapabilities(format){const genericCapabilities=function getTextureFormatCapabilities(format){const info=(0,texture_format_table.q)(format),formatCapabilities={format:format,create:info.f??!0,render:info.render??!0,filter:info.filter??!0,blend:info.blend??!0,store:info.store??!0},formatInfo=(0,decode_texture_format.z)(format),isDepthStencil=format.startsWith("depth")||format.startsWith("stencil"),isSigned=formatInfo?.signed,isInteger=formatInfo?.integer,isWebGLSpecific=formatInfo?.webgl;return formatCapabilities.render&&=!isSigned,formatCapabilities.filter&&=!(isDepthStencil||isSigned||isInteger||isWebGLSpecific),formatCapabilities}(format),checkFeature=featureOrBoolean=>("string"==typeof featureOrBoolean?this.features.has(featureOrBoolean):featureOrBoolean)??!0,supported=checkFeature(genericCapabilities.create),deviceCapabilities={format:format,create:supported,render:supported&&checkFeature(genericCapabilities.render),filter:supported&&checkFeature(genericCapabilities.filter),blend:supported&&checkFeature(genericCapabilities.blend),store:supported&&checkFeature(genericCapabilities.store)};return this._getDeviceSpecificTextureFormatCapabilities(deviceCapabilities)}isTextureFormatSupported(format,capabilities){return this.getTextureFormatCapabilities(format).create}isTextureFormatFilterable(format){return this.getTextureFormatCapabilities(format).filter}isTextureFormatRenderable(format){return this.getTextureFormatCapabilities(format).render}isTextureFormatCompressed(format){return(0,decode_texture_format.Y)(format)}loseDevice(){return!1}reportError(error){this.props.onError(error)}getDefaultCanvasContext(){if(!this.canvasContext)throw new Error("Device has no default CanvasContext. See props.createCanvasContext");return this.canvasContext}createCommandEncoder(props={}){throw new Error("not implemented")}incrementTimestamp(){return this.timestamp++}onError(error){this.props.onError(error)}getCanvasContext(){return this.getDefaultCanvasContext()}readPixelsToArrayWebGL(source,options){throw new Error("not implemented")}readPixelsToBufferWebGL(source,options){throw new Error("not implemented")}setParametersWebGL(parameters){throw new Error("not implemented")}getParametersWebGL(parameters){throw new Error("not implemented")}withParametersWebGL(parameters,func){throw new Error("not implemented")}clearWebGL(options){throw new Error("not implemented")}resetWebGL(){throw new Error("not implemented")}static _getCanvasContextProps(props){return!0===props.createCanvasContext?{}:props.createCanvasContext}_normalizeBufferProps(props){(props instanceof ArrayBuffer||ArrayBuffer.isView(props))&&(props={data:props});const newProps={...props};return(props.usage||0)&buffer.h.INDEX&&!props.indexType&&(props.data instanceof Uint32Array?newProps.indexType="uint32":props.data instanceof Uint16Array?newProps.indexType="uint16":log.R.warn("indices buffer content must be of integer type")()),newProps}}},"./node_modules/@luma.gl/core/dist/adapter/resources/buffer.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{h:function(){return Buffer}});var _resource_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/resource.js");class Buffer extends _resource_js__WEBPACK_IMPORTED_MODULE_0__.F{static defaultProps={..._resource_js__WEBPACK_IMPORTED_MODULE_0__.F.defaultProps,usage:0,byteLength:0,byteOffset:0,data:null,indexType:"uint16",mappedAtCreation:!1};static MAP_READ=1;static MAP_WRITE=2;static COPY_SRC=4;static COPY_DST=8;static INDEX=16;static VERTEX=32;static UNIFORM=64;static STORAGE=128;static INDIRECT=256;static QUERY_RESOLVE=512;get[Symbol.toStringTag](){return"Buffer"}usage;indexType;updateTimestamp;constructor(device,props){const deducedProps={...props};(props.usage||0)&Buffer.INDEX&&!props.indexType&&(props.data instanceof Uint32Array?deducedProps.indexType="uint32":props.data instanceof Uint16Array&&(deducedProps.indexType="uint16")),delete deducedProps.data,super(device,deducedProps,Buffer.defaultProps),this.usage=deducedProps.usage||0,this.indexType=deducedProps.indexType,this.updateTimestamp=device.incrementTimestamp()}clone(props){return this.device.createBuffer({...this.props,...props})}readSyncWebGL(byteOffset,byteLength){throw new Error("not implemented")}static DEBUG_DATA_MAX_LENGTH=32;debugData=new ArrayBuffer(0);_setDebugData(data,byteOffset,byteLength){const arrayBuffer=ArrayBuffer.isView(data)?data.buffer:data,debugDataLength=Math.min(data?data.byteLength:byteLength,Buffer.DEBUG_DATA_MAX_LENGTH);null===arrayBuffer?this.debugData=new ArrayBuffer(debugDataLength):0===byteOffset&&byteLength===arrayBuffer.byteLength?this.debugData=arrayBuffer.slice(0,debugDataLength):this.debugData=arrayBuffer.slice(byteOffset,byteOffset+debugDataLength)}}},"./node_modules/@luma.gl/core/dist/adapter/resources/render-pipeline.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{r:function(){return RenderPipeline}});var _resource_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/resource.js");class RenderPipeline extends _resource_js__WEBPACK_IMPORTED_MODULE_0__.F{static defaultProps={..._resource_js__WEBPACK_IMPORTED_MODULE_0__.F.defaultProps,vs:null,vertexEntryPoint:"vertexMain",vsConstants:{},fs:null,fragmentEntryPoint:"fragmentMain",fsConstants:{},shaderLayout:null,bufferLayout:[],topology:"triangle-list",parameters:{},bindings:{},uniforms:{}};get[Symbol.toStringTag](){return"RenderPipeline"}shaderLayout;bufferLayout;linkStatus="pending";hash="";constructor(device,props){super(device,props,RenderPipeline.defaultProps),this.shaderLayout=this.props.shaderLayout,this.bufferLayout=this.props.bufferLayout||[]}setUniformsWebGL(uniforms){throw new Error("Use uniform blocks")}}},"./node_modules/@luma.gl/core/dist/adapter/resources/resource.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{F:function(){return Resource}});var _utils_uid_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/uid.js");class Resource{static defaultProps={id:"undefined",handle:void 0,userData:void 0};toString(){return`${this[Symbol.toStringTag]||this.constructor.name}:"${this.id}"`}id;props;userData={};_device;destroyed=!1;allocatedBytes=0;_attachedResources=new Set;constructor(device,props,defaultProps){if(!device)throw new Error("no device");this._device=device,this.props=function selectivelyMerge(props,defaultProps){const mergedProps={...defaultProps};for(const key in props)void 0!==props[key]&&(mergedProps[key]=props[key]);return mergedProps}(props,defaultProps);const id="undefined"!==this.props.id?this.props.id:(0,_utils_uid_js__WEBPACK_IMPORTED_MODULE_0__.L)(this[Symbol.toStringTag]);this.props.id=id,this.id=id,this.userData=this.props.userData||{},this.addStats()}destroy(){this.destroyResource()}delete(){return this.destroy(),this}getProps(){return this.props}attachResource(resource){this._attachedResources.add(resource)}detachResource(resource){this._attachedResources.delete(resource)}destroyAttachedResource(resource){this._attachedResources.delete(resource)&&resource.destroy()}destroyAttachedResources(){for(const resource of Object.values(this._attachedResources))resource.destroy();this._attachedResources=new Set}destroyResource(){this.destroyAttachedResources(),this.removeStats(),this.destroyed=!0}removeStats(){const stats=this._device.statsManager.getStats("Resource Counts"),name=this[Symbol.toStringTag];stats.get(`${name}s Active`).decrementCount()}trackAllocatedMemory(bytes,name=this[Symbol.toStringTag]){const stats=this._device.statsManager.getStats("Resource Counts");stats.get("GPU Memory").addCount(bytes),stats.get(`${name} Memory`).addCount(bytes),this.allocatedBytes=bytes}trackDeallocatedMemory(name=this[Symbol.toStringTag]){const stats=this._device.statsManager.getStats("Resource Counts");stats.get("GPU Memory").subtractCount(this.allocatedBytes),stats.get(`${name} Memory`).subtractCount(this.allocatedBytes),this.allocatedBytes=0}addStats(){const stats=this._device.statsManager.getStats("Resource Counts"),name=this[Symbol.toStringTag];stats.get("Resources Created").incrementCount(),stats.get(`${name}s Created`).incrementCount(),stats.get(`${name}s Active`).incrementCount()}}},"./node_modules/@luma.gl/core/dist/adapter/resources/sampler.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{L:function(){return Sampler}});var _resource_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/resource.js");class Sampler extends _resource_js__WEBPACK_IMPORTED_MODULE_0__.F{static defaultProps={..._resource_js__WEBPACK_IMPORTED_MODULE_0__.F.defaultProps,type:"color-sampler",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge",addressModeW:"clamp-to-edge",magFilter:"nearest",minFilter:"nearest",mipmapFilter:"none",lodMinClamp:0,lodMaxClamp:32,compare:"less-equal",maxAnisotropy:1};get[Symbol.toStringTag](){return"Sampler"}constructor(device,props){super(device,props=Sampler.normalizeProps(device,props),Sampler.defaultProps)}static normalizeProps(device,props){return{...props,...device?.props?._resourceDefaults?.sampler||{}}}}},"./node_modules/@luma.gl/core/dist/adapter/resources/shader.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{M:function(){return Shader}});var resource=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/resource.js"),uid=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/uid.js");function formatCompilerMessage(message,lines,lineNum,options){if(options?.inlineSource){const numberedLines=function getNumberedLines(lines,lineNum,options){let numberedLines="";for(let lineIndex=lineNum-2;lineIndex<=lineNum;lineIndex++){const sourceLine=lines[lineIndex-1];void 0!==sourceLine&&(numberedLines+=getNumberedLine(sourceLine,lineNum,options))}return numberedLines}(lines,lineNum);return`\n${numberedLines}${message.linePos>0?`${" ".repeat(message.linePos+5)}^^^\n`:""}${message.type.toUpperCase()}: ${message.message}\n\n`}const color="error"===message.type?"red":"#8B4000";return options?.html?`<div class='luma-compiler-log-error' style="color:${color};"><b> ${message.type.toUpperCase()}: ${message.message}</b></div>`:`${message.type.toUpperCase()}: ${message.message}`}function getNumberedLine(line,lineNum,options){const escapedLine=options?.html?function escapeHTML(unsafe){return unsafe.replaceAll("&","&amp;").replaceAll("<","&lt;").replaceAll(">","&gt;").replaceAll('"',"&quot;").replaceAll("'","&#039;")}(line):line;return`${function padLeft(string,paddedLength){let result="";for(let i=string.length;i<paddedLength;++i)result+=" ";return result+string}(String(lineNum),4)}: ${escapedLine}${options?.html?"<br/>":"\n"}`}class Shader extends resource.F{static defaultProps={...resource.F.defaultProps,language:"auto",stage:void 0,source:"",sourceMap:null,entryPoint:"main",debugShaders:void 0};get[Symbol.toStringTag](){return"Shader"}stage;source;compilationStatus="pending";constructor(device,props){super(device,{id:getShaderIdFromProps(props={...props,debugShaders:props.debugShaders||device.props.debugShaders||"errors"}),...props},Shader.defaultProps),this.stage=this.props.stage,this.source=this.props.source}getCompilationInfoSync(){return null}getTranslatedSource(){return null}async debugShader(){const trigger=this.props.debugShaders;switch(trigger){case"never":return;case"errors":if("success"===this.compilationStatus)return}const messages=await this.getCompilationInfo();"warnings"===trigger&&0===messages?.length||this._displayShaderLog(messages)}_displayShaderLog(messages){if("undefined"==typeof document||!document?.createElement)return;const shaderName=getShaderName(this.source),shaderTitle=`${this.stage} ${shaderName}`;let htmlLog=function formatCompilerLog(shaderLog,source,options){let formattedLog="";const lines=source.split(/\r?\n/),log=shaderLog.slice().sort(((a,b)=>a.lineNum-b.lineNum));switch(options?.showSourceCode||"no"){case"all":let currentMessage=0;for(let lineNum=1;lineNum<=lines.length;lineNum++)for(formattedLog+=getNumberedLine(lines[lineNum-1],lineNum,options);log.length>currentMessage&&log[currentMessage].lineNum===lineNum;){const message=log[currentMessage++];formattedLog+=formatCompilerMessage(message,lines,message.lineNum,{...options,inlineSource:!1})}return formattedLog;case"issues":case"no":for(const message of shaderLog)formattedLog+=formatCompilerMessage(message,lines,message.lineNum,{inlineSource:"no"!==options?.showSourceCode});return formattedLog}}(messages,this.source,{showSourceCode:"all",html:!0});const translatedSource=this.getTranslatedSource();translatedSource&&(htmlLog+=`<br /><br /><h1>Translated Source</h1><br /><br /><code style="user-select:text;"><pre>${translatedSource}</pre></code>`);const button=document.createElement("Button");button.innerHTML=`\n<h1>Shader Compilation Error in ${shaderTitle}</h1><br /><br />\n<code style="user-select:text;"><pre>\n${htmlLog}\n</pre></code>`,button.style.top="10px",button.style.left="10px",button.style.position="absolute",button.style.zIndex="9999",button.style.width="100%",button.style.textAlign="left",document.body.appendChild(button);const errors=document.getElementsByClassName("luma-compiler-log-error");errors[0]?.scrollIntoView(),button.onclick=()=>{const dataURI=`data:text/plain,${encodeURIComponent(this.source)}`;navigator.clipboard.writeText(dataURI)}}}function getShaderIdFromProps(props){return getShaderName(props.source)||props.id||(0,uid.L)(`unnamed ${props.stage}-shader`)}function getShaderName(shader,defaultName="unnamed"){const match=/#define[\s*]SHADER_NAME[\s*]([A-Za-z0-9_-]+)[\s*]/.exec(shader);return match?match[1]:defaultName}},"./node_modules/@luma.gl/core/dist/adapter/resources/texture-view.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{X:function(){return TextureView}});var _resource_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/resource.js");class TextureView extends _resource_js__WEBPACK_IMPORTED_MODULE_0__.F{static defaultProps={..._resource_js__WEBPACK_IMPORTED_MODULE_0__.F.defaultProps,format:void 0,dimension:void 0,aspect:"all",baseMipLevel:0,mipLevelCount:void 0,baseArrayLayer:0,arrayLayerCount:void 0};get[Symbol.toStringTag](){return"TextureView"}constructor(device,props){super(device,props,TextureView.defaultProps)}}},"./node_modules/@luma.gl/core/dist/adapter/resources/texture.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{g:function(){return Texture}});var _resource_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/resource.js");class Texture extends _resource_js__WEBPACK_IMPORTED_MODULE_0__.F{static COPY_SRC=1;static COPY_DST=2;static TEXTURE=4;static STORAGE=8;static RENDER_ATTACHMENT=16;static CubeFaces=["+X","-X","+Y","-Y","+Z","-Z"];static defaultProps={..._resource_js__WEBPACK_IMPORTED_MODULE_0__.F.defaultProps,data:null,dimension:"2d",format:"rgba8unorm",width:void 0,height:void 0,depth:1,mipmaps:!1,compressed:!1,usage:0,mipLevels:void 0,samples:void 0,sampler:{},view:void 0,flipY:void 0};get[Symbol.toStringTag](){return"Texture"}toString(){return`Texture(${this.id},${this.format},${this.width}x${this.height})`}dimension;format;width;height;depth;mipLevels;updateTimestamp;constructor(device,props){if(super(device,props=Texture.normalizeProps(device,props),Texture.defaultProps),this.dimension=this.props.dimension,this.format=this.props.format,this.width=this.props.width,this.height=this.props.height,this.depth=this.props.depth,void 0===this.props.width||void 0===this.props.height){const size=Texture.getTextureDataSize(this.props.data);this.width=size?.width||1,this.height=size?.height||1}this.props.mipmaps&&void 0===this.props.mipLevels&&(this.props.mipLevels="pyramid"),this.mipLevels="pyramid"===this.props.mipLevels?Texture.getMipLevelCount(this.width,this.height):this.props.mipLevels||1,this.updateTimestamp=device.incrementTimestamp()}clone(size){return this.device.createTexture({...this.props,...size})}static isExternalImage(data){return"undefined"!=typeof ImageData&&data instanceof ImageData||"undefined"!=typeof ImageBitmap&&data instanceof ImageBitmap||"undefined"!=typeof HTMLImageElement&&data instanceof HTMLImageElement||"undefined"!=typeof HTMLVideoElement&&data instanceof HTMLVideoElement||"undefined"!=typeof VideoFrame&&data instanceof VideoFrame||"undefined"!=typeof HTMLCanvasElement&&data instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&data instanceof OffscreenCanvas}static getExternalImageSize(data){if("undefined"!=typeof ImageData&&data instanceof ImageData||"undefined"!=typeof ImageBitmap&&data instanceof ImageBitmap||"undefined"!=typeof HTMLCanvasElement&&data instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&data instanceof OffscreenCanvas)return{width:data.width,height:data.height};if("undefined"!=typeof HTMLImageElement&&data instanceof HTMLImageElement)return{width:data.naturalWidth,height:data.naturalHeight};if("undefined"!=typeof HTMLVideoElement&&data instanceof HTMLVideoElement)return{width:data.videoWidth,height:data.videoHeight};if("undefined"!=typeof VideoFrame&&data instanceof VideoFrame)return{width:data.displayWidth,height:data.displayHeight};throw new Error("Unknown image type")}static isTextureLevelData(data){const typedArray=data?.data;return ArrayBuffer.isView(typedArray)}static getTextureDataSize(data){if(!data)return null;if(ArrayBuffer.isView(data))return null;if(Array.isArray(data))return Texture.getTextureDataSize(data[0]);if(Texture.isExternalImage(data))return Texture.getExternalImageSize(data);if(data&&"object"==typeof data&&data.constructor===Object){const untypedData=Object.values(data)[0];return{width:untypedData.width,height:untypedData.height}}throw new Error("texture size deduction failed")}static normalizeTextureData(data,options){let lodArray;return lodArray=ArrayBuffer.isView(data)?[{data:data,width:options.width,height:options.height}]:Array.isArray(data)?data:[data],lodArray}static getMipLevelCount(width,height){return Math.floor(Math.log2(Math.max(width,height)))+1}static getCubeFaceDepth(face){switch(face){case"+X":return 0;case"-X":return 1;case"+Y":return 2;case"-Y":return 3;case"+Z":return 4;case"-Z":return 5;default:throw new Error(face)}}static defaultCopyExternalImageOptions={image:void 0,sourceX:0,sourceY:0,width:void 0,height:void 0,depth:1,mipLevel:0,x:0,y:0,z:0,aspect:"all",colorSpace:"srgb",premultipliedAlpha:!1,flipY:!1};static normalizeProps(device,props){const newProps={...props},overriddenDefaultProps=device?.props?._resourceDefaults?.texture||{};Object.assign(newProps,overriddenDefaultProps);const{width:width,height:height}=newProps;return"number"==typeof width&&(newProps.width=Math.max(1,Math.ceil(width))),"number"==typeof height&&(newProps.height=Math.max(1,Math.ceil(height))),newProps}}},"./node_modules/@luma.gl/core/dist/gpu-type-utils/decode-data-type.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function decodeVertexType(type){const bytes=function getDataTypeBytes(type){const bytes=TYPE_SIZES[type];return bytes}(TYPE_MAP[type]),normalized=type.includes("norm"),integer=!normalized&&!type.startsWith("float"),signed=type.startsWith("s");return{dataType:TYPE_MAP[type],byteLength:bytes,integer:integer,signed:signed,normalized:normalized}}__webpack_require__.d(__webpack_exports__,{l:function(){return decodeVertexType}});const TYPE_MAP={uint8:"uint8",sint8:"sint8",unorm8:"uint8",snorm8:"sint8",uint16:"uint16",sint16:"sint16",unorm16:"uint16",snorm16:"sint16",float16:"float16",float32:"float32",uint32:"uint32",sint32:"sint32"},TYPE_SIZES={uint8:1,sint8:1,uint16:2,sint16:2,float16:2,float32:4,uint32:4,sint32:4}},"./node_modules/@luma.gl/core/dist/gpu-type-utils/decode-texture-format.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Y:function(){return isTextureFormatCompressed},z:function(){return decodeTextureFormat}});var _decode_data_type_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/core/dist/gpu-type-utils/decode-data-type.js"),_texture_format_table_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@luma.gl/core/dist/gpu-type-utils/texture-format-table.js");const COMPRESSED_TEXTURE_FORMAT_PREFIXES=["bc1","bc2","bc3","bc4","bc5","bc6","bc7","etc1","etc2","eac","atc","astc","pvrtc"],RGB_FORMAT_REGEX=/^(r|rg|rgb|rgba|bgra)([0-9]*)([a-z]*)(-srgb)?(-webgl)?$/;function isTextureFormatCompressed(format){return COMPRESSED_TEXTURE_FORMAT_PREFIXES.some((prefix=>format.startsWith(prefix)))}function decodeTextureFormat(format){let formatInfo=function decodeTextureFormatUsingTable(format){const info=(0,_texture_format_table_js__WEBPACK_IMPORTED_MODULE_1__.q)(format),bytesPerPixel=info.bytesPerPixel||1,bitsPerChannel=info.bitsPerChannel||[8,8,8,8];delete info.bitsPerChannel,delete info.bytesPerPixel,delete info.f,delete info.render,delete info.filter,delete info.blend,delete info.store;const formatInfo={...info,format:format,attachment:info.attachment||"color",channels:info.channels||"r",components:info.components||info.channels?.length||1,bytesPerPixel:bytesPerPixel,bitsPerChannel:bitsPerChannel,dataType:info.dataType||"uint8",srgb:info.srgb??!1,packed:info.packed??!1,webgl:info.webgl??!1,integer:info.integer??!1,signed:info.signed??!1,normalized:info.normalized??!1,compressed:info.compressed??!1};return formatInfo}(format);if(isTextureFormatCompressed(format)){formatInfo.channels="rgb",formatInfo.components=3,formatInfo.bytesPerPixel=1,formatInfo.srgb=!1,formatInfo.compressed=!0;const blockSize=function getCompressedTextureBlockSize(format){const matches=/.*-(\d+)x(\d+)-.*/.exec(format);if(matches){const[,blockWidth,blockHeight]=matches;return{blockWidth:Number(blockWidth),blockHeight:Number(blockHeight)}}return null}(format);blockSize&&(formatInfo.blockWidth=blockSize.blockWidth,formatInfo.blockHeight=blockSize.blockHeight)}const matches=RGB_FORMAT_REGEX.exec(format);if(matches){const[,channels,length,type,srgb,suffix]=matches,dataType=`${type}${length}`,decodedType=(0,_decode_data_type_js__WEBPACK_IMPORTED_MODULE_0__.l)(dataType),bits=8*decodedType.byteLength,components=channels.length,bitsPerChannel=[bits,components>=2?bits:0,components>=3?bits:0,components>=4?bits:0];formatInfo={format:format,attachment:formatInfo.attachment,dataType:decodedType.dataType,components:components,channels:channels,integer:decodedType.integer,signed:decodedType.signed,normalized:decodedType.normalized,bitsPerChannel:bitsPerChannel,bytesPerPixel:decodedType.byteLength*channels.length,packed:formatInfo.packed,srgb:formatInfo.srgb},"-webgl"===suffix&&(formatInfo.webgl=!0),"-srgb"===srgb&&(formatInfo.srgb=!0)}return format.endsWith("-webgl")&&(formatInfo.webgl=!0),format.endsWith("-srgb")&&(formatInfo.srgb=!0),formatInfo}},"./node_modules/@luma.gl/core/dist/gpu-type-utils/texture-format-table.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{q:function(){return getTextureFormatDefinition}});const texture_compression_astc="texture-compression-astc";function getTextureFormatDefinition(format){const info=TEXTURE_FORMAT_TABLE[format];if(!info)throw new Error(`Unsupported texture format ${format}`);return info}const TEXTURE_FORMAT_TABLE={r8unorm:{},r8snorm:{render:"snorm8-renderable-webgl"},r8uint:{},r8sint:{},rg8unorm:{},rg8snorm:{render:"snorm8-renderable-webgl"},rg8uint:{},rg8sint:{},r16uint:{},r16sint:{},r16float:{render:"float16-renderable-webgl",filter:"float16-filterable-webgl"},"r16unorm-webgl":{f:"norm16-renderable-webgl"},"r16snorm-webgl":{f:"snorm16-renderable-webgl"},"rgba4unorm-webgl":{channels:"rgba",bitsPerChannel:[4,4,4,4],packed:!0},"rgb565unorm-webgl":{channels:"rgb",bitsPerChannel:[5,6,5,0],packed:!0},"rgb5a1unorm-webgl":{channels:"rgba",bitsPerChannel:[5,5,5,1],packed:!0},"rgb8unorm-webgl":{},"rgb8snorm-webgl":{},rgba8unorm:{},"rgba8unorm-srgb":{},rgba8snorm:{render:"snorm8-renderable-webgl"},rgba8uint:{},rgba8sint:{},bgra8unorm:{},"bgra8unorm-srgb":{},rg16uint:{},rg16sint:{},rg16float:{render:"float16-renderable-webgl",filter:"float16-filterable-webgl"},"rg16unorm-webgl":{render:"norm16-renderable-webgl"},"rg16snorm-webgl":{render:"snorm16-renderable-webgl"},r32uint:{},r32sint:{},r32float:{render:"float32-renderable-webgl",filter:"float32-filterable"},rgb9e5ufloat:{channels:"rgb",packed:!0,render:"rgb9e5ufloat-renderable-webgl"},rg11b10ufloat:{channels:"rgb",bitsPerChannel:[11,11,10,0],packed:!0,p:1,render:"float32-renderable-webgl"},rgb10a2unorm:{channels:"rgba",bitsPerChannel:[10,10,10,2],packed:!0,p:1},"rgb10a2uint-webgl":{channels:"rgba",bitsPerChannel:[10,10,10,2],packed:!0,p:1,wgpu:!1},"rgb16unorm-webgl":{f:"norm16-renderable-webgl"},"rgb16snorm-webgl":{f:"norm16-renderable-webgl"},rg32uint:{},rg32sint:{},rg32float:{render:!1,filter:"float32-filterable"},rgba16uint:{},rgba16sint:{},rgba16float:{render:"float16-renderable-webgl",filter:"float16-filterable-webgl"},"rgba16unorm-webgl":{render:"norm16-renderable-webgl"},"rgba16snorm-webgl":{render:"snorm16-renderable-webgl"},"rgb32float-webgl":{render:"float32-renderable-webgl",filter:"float32-filterable"},rgba32uint:{},rgba32sint:{},rgba32float:{render:"float32-renderable-webgl",filter:"float32-filterable"},stencil8:{attachment:"stencil",bitsPerChannel:[8,0,0,0],dataType:"uint8"},depth16unorm:{attachment:"depth",bitsPerChannel:[16,0,0,0],dataType:"uint16"},depth24plus:{attachment:"depth",bitsPerChannel:[24,0,0,0],dataType:"uint32"},depth32float:{attachment:"depth",bitsPerChannel:[32,0,0,0],dataType:"float32"},"depth24plus-stencil8":{attachment:"depth-stencil",bitsPerChannel:[24,8,0,0],packed:!0},"depth32float-stencil8":{attachment:"depth-stencil",bitsPerChannel:[32,8,0,0],packed:!0},"bc1-rgb-unorm-webgl":{f:"texture-compression-bc"},"bc1-rgb-unorm-srgb-webgl":{f:"texture-compression-bc"},"bc1-rgba-unorm":{f:"texture-compression-bc"},"bc1-rgba-unorm-srgb":{f:"texture-compression-bc"},"bc2-rgba-unorm":{f:"texture-compression-bc"},"bc2-rgba-unorm-srgb":{f:"texture-compression-bc"},"bc3-rgba-unorm":{f:"texture-compression-bc"},"bc3-rgba-unorm-srgb":{f:"texture-compression-bc"},"bc4-r-unorm":{f:"texture-compression-bc"},"bc4-r-snorm":{f:"texture-compression-bc"},"bc5-rg-unorm":{f:"texture-compression-bc"},"bc5-rg-snorm":{f:"texture-compression-bc"},"bc6h-rgb-ufloat":{f:"texture-compression-bc"},"bc6h-rgb-float":{f:"texture-compression-bc"},"bc7-rgba-unorm":{f:"texture-compression-bc"},"bc7-rgba-unorm-srgb":{f:"texture-compression-bc"},"etc2-rgb8unorm":{f:"texture-compression-etc2"},"etc2-rgb8unorm-srgb":{f:"texture-compression-etc2"},"etc2-rgb8a1unorm":{f:"texture-compression-etc2"},"etc2-rgb8a1unorm-srgb":{f:"texture-compression-etc2"},"etc2-rgba8unorm":{f:"texture-compression-etc2"},"etc2-rgba8unorm-srgb":{f:"texture-compression-etc2"},"eac-r11unorm":{f:"texture-compression-etc2"},"eac-r11snorm":{f:"texture-compression-etc2"},"eac-rg11unorm":{f:"texture-compression-etc2"},"eac-rg11snorm":{f:"texture-compression-etc2"},"astc-4x4-unorm":{f:texture_compression_astc},"astc-4x4-unorm-srgb":{f:texture_compression_astc},"astc-5x4-unorm":{f:texture_compression_astc},"astc-5x4-unorm-srgb":{f:texture_compression_astc},"astc-5x5-unorm":{f:texture_compression_astc},"astc-5x5-unorm-srgb":{f:texture_compression_astc},"astc-6x5-unorm":{f:texture_compression_astc},"astc-6x5-unorm-srgb":{f:texture_compression_astc},"astc-6x6-unorm":{f:texture_compression_astc},"astc-6x6-unorm-srgb":{f:texture_compression_astc},"astc-8x5-unorm":{f:texture_compression_astc},"astc-8x5-unorm-srgb":{f:texture_compression_astc},"astc-8x6-unorm":{f:texture_compression_astc},"astc-8x6-unorm-srgb":{f:texture_compression_astc},"astc-8x8-unorm":{f:texture_compression_astc},"astc-8x8-unorm-srgb":{f:texture_compression_astc},"astc-10x5-unorm":{f:texture_compression_astc},"astc-10x5-unorm-srgb":{f:texture_compression_astc},"astc-10x6-unorm":{f:texture_compression_astc},"astc-10x6-unorm-srgb":{f:texture_compression_astc},"astc-10x8-unorm":{f:texture_compression_astc},"astc-10x8-unorm-srgb":{f:texture_compression_astc},"astc-10x10-unorm":{f:texture_compression_astc},"astc-10x10-unorm-srgb":{f:texture_compression_astc},"astc-12x10-unorm":{f:texture_compression_astc},"astc-12x10-unorm-srgb":{f:texture_compression_astc},"astc-12x12-unorm":{f:texture_compression_astc},"astc-12x12-unorm-srgb":{f:texture_compression_astc},"pvrtc-rgb4unorm-webgl":{f:"texture-compression-pvrtc-webgl"},"pvrtc-rgba4unorm-webgl":{f:"texture-compression-pvrtc-webgl"},"pvrtc-rbg2unorm-webgl":{f:"texture-compression-pvrtc-webgl"},"pvrtc-rgba2unorm-webgl":{f:"texture-compression-pvrtc-webgl"},"etc1-rbg-unorm-webgl":{f:"texture-compression-etc1-webgl"},"atc-rgb-unorm-webgl":{f:"texture-compression-atc-webgl"},"atc-rgba-unorm-webgl":{f:"texture-compression-atc-webgl"},"atc-rgbai-unorm-webgl":{f:"texture-compression-atc-webgl"}}},"./node_modules/@luma.gl/core/dist/gpu-type-utils/vertex-format-from-attribute.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function getDataTypeFromTypedArray(arrayOrType){const type=ArrayBuffer.isView(arrayOrType)?arrayOrType.constructor:arrayOrType;switch(type){case Float32Array:return"float32";case Uint16Array:return"uint16";case Uint32Array:return"uint32";case Uint8Array:case Uint8ClampedArray:return"uint8";case Int8Array:return"sint8";case Int16Array:return"sint16";case Int32Array:return"sint32";default:throw new Error(type.constructor.name)}}function getTypedArrayFromDataType(dataType){switch(dataType){case"float32":return Float32Array;case"uint32":return Uint32Array;case"sint32":return Int32Array;case"uint16":case"unorm16":return Uint16Array;case"sint16":case"snorm16":return Int16Array;case"uint8":case"unorm8":return Uint8Array;case"sint8":case"snorm8":return Int8Array;default:throw new Error(dataType)}}function getVertexFormatFromAttribute(typedArray,size,normalized){if(!size||size>4)throw new Error(`size ${size}`);const components=size;let dataType=getDataTypeFromTypedArray(typedArray);if("uint8"===dataType&&normalized&&1===components)return"unorm8-webgl";if("uint8"===dataType&&normalized&&3===components)return"unorm8x3-webgl";if("uint8"===dataType||"sint8"===dataType){if(1===components||3===components)throw new Error(`size: ${size}`);return normalized&&(dataType=dataType.replace("int","norm")),`${dataType}x${components}`}if("uint16"===dataType||"sint16"===dataType){if(1===components||3===components)throw new Error(`size: ${size}`);return normalized&&(dataType=dataType.replace("int","norm")),`${dataType}x${components}`}return 1===components?dataType:`${dataType}x${components}`}__webpack_require__.d(__webpack_exports__,{OB:function(){return getVertexFormatFromAttribute},UE:function(){return getDataTypeFromTypedArray},Y0:function(){return getTypedArrayFromDataType}})},"./node_modules/@luma.gl/core/dist/utils/array-utils-flat.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){let arrayBuffer;function getScratchArrayBuffer(byteLength){return(!arrayBuffer||arrayBuffer.byteLength<byteLength)&&(arrayBuffer=new ArrayBuffer(byteLength)),arrayBuffer}function getScratchArray(Type,length){return new Type(getScratchArrayBuffer(Type.BYTES_PER_ELEMENT*length),0,length)}__webpack_require__.d(__webpack_exports__,{X:function(){return getScratchArray},o:function(){return getScratchArrayBuffer}})},"./node_modules/@luma.gl/core/dist/utils/log.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{R:function(){return log}});const log=new(__webpack_require__("./node_modules/@probe.gl/log/dist/log.js").t)({id:"luma.gl"})},"./node_modules/@luma.gl/core/dist/utils/stats-manager.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{d:function(){return lumaStats}});var _probe_gl_stats__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@probe.gl/stats/dist/index.js");const lumaStats=new class StatsManager{stats=new Map;getStats(name){return this.get(name)}get(name){return this.stats.has(name)||this.stats.set(name,new _probe_gl_stats__WEBPACK_IMPORTED_MODULE_0__.Uz({id:name})),this.stats.get(name)}}},"./node_modules/@luma.gl/core/dist/utils/uid.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{L:function(){return uid}});const uidCounters={};function uid(id="id"){uidCounters[id]=uidCounters[id]||1;return`${id}-${uidCounters[id]++}`}},"./node_modules/@luma.gl/engine/dist/compute/buffer-transform.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{p:function(){return BufferTransform}});var _luma_gl_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/buffer.js"),_luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/lib/glsl-utils/shader-utils.js"),_model_model_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/engine/dist/model/model.js");class BufferTransform{device;model;transformFeedback;static defaultProps={..._model_model_js__WEBPACK_IMPORTED_MODULE_0__.K.defaultProps,outputs:void 0,feedbackBuffers:void 0};static isSupported(device){return"webgl"===device?.info?.type}constructor(device,props=BufferTransform.defaultProps){if(!BufferTransform.isSupported(device))throw new Error("BufferTransform not yet implemented on WebGPU");this.device=device,this.model=new _model_model_js__WEBPACK_IMPORTED_MODULE_0__.K(this.device,{id:props.id||"buffer-transform-model",fs:props.fs||(0,_luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_1__.Wk)(),topology:props.topology||"point-list",varyings:props.outputs||props.varyings,...props}),this.transformFeedback=this.device.createTransformFeedback({layout:this.model.pipeline.shaderLayout,buffers:props.feedbackBuffers}),this.model.setTransformFeedback(this.transformFeedback),Object.seal(this)}destroy(){this.model&&this.model.destroy()}delete(){this.destroy()}run(options){options?.inputBuffers&&this.model.setAttributes(options.inputBuffers),options?.outputBuffers&&this.transformFeedback.setBuffers(options.outputBuffers);const renderPass=this.device.beginRenderPass(options);this.model.draw(renderPass),renderPass.end()}getBuffer(varyingName){return this.transformFeedback.getBuffer(varyingName)}readAsync(varyingName){const result=this.getBuffer(varyingName);if(!result)throw new Error("BufferTransform#getBuffer");if(result instanceof _luma_gl_core__WEBPACK_IMPORTED_MODULE_2__.h)return result.readAsync();const{buffer:buffer,byteOffset:byteOffset=0,byteLength:byteLength=buffer.byteLength}=result;return buffer.readAsync(byteOffset,byteLength)}}},"./node_modules/@luma.gl/engine/dist/geometry/geometry.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{V:function(){return Geometry}});var _utils_uid_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/engine/dist/utils/uid.js");class Geometry{id;topology;vertexCount;indices;attributes;userData={};constructor(props){const{attributes:attributes={},indices:indices=null,vertexCount:vertexCount=null}=props;this.id=props.id||(0,_utils_uid_js__WEBPACK_IMPORTED_MODULE_0__.L)("geometry"),this.topology=props.topology,indices&&(this.indices=ArrayBuffer.isView(indices)?{value:indices,size:1}:indices),this.attributes={};for(const[attributeName,attributeValue]of Object.entries(attributes)){const attribute=ArrayBuffer.isView(attributeValue)?{value:attributeValue}:attributeValue;if(!ArrayBuffer.isView(attribute.value))throw new Error(`${this._print(attributeName)}: must be typed array or object with value as typed array`);if("POSITION"!==attributeName&&"positions"!==attributeName||attribute.size||(attribute.size=3),"indices"===attributeName){if(this.indices)throw new Error("Multiple indices detected");this.indices=attribute}else this.attributes[attributeName]=attribute}this.indices&&void 0!==this.indices.isIndexed&&(this.indices=Object.assign({},this.indices),delete this.indices.isIndexed),this.vertexCount=vertexCount||this._calculateVertexCount(this.attributes,this.indices)}getVertexCount(){return this.vertexCount}getAttributes(){return this.indices?{indices:this.indices,...this.attributes}:this.attributes}_print(attributeName){return`Geometry ${this.id} attribute ${attributeName}`}_setAttributes(attributes,indices){return this}_calculateVertexCount(attributes,indices){if(indices)return indices.value.length;let vertexCount=1/0;for(const attribute of Object.values(attributes)){const{value:value,size:size,constant:constant}=attribute;!constant&&value&&void 0!==size&&size>=1&&(vertexCount=Math.min(vertexCount,value.length/size))}return vertexCount}}},"./node_modules/@luma.gl/engine/dist/model/model.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{K:function(){return Model}});var render_pipeline=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/render-pipeline.js"),log=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/log.js");class BufferLayoutHelper{bufferLayouts;constructor(bufferLayouts){this.bufferLayouts=bufferLayouts}getBufferLayout(name){return this.bufferLayouts.find((layout=>layout.name===name))||null}getAttributeNamesForBuffer(bufferLayout){return bufferLayout.attributes?bufferLayout.attributes?.map((layout=>layout.attribute)):[bufferLayout.name]}mergeBufferLayouts(bufferLayouts1,bufferLayouts2){const mergedLayouts=[...bufferLayouts1];for(const attribute of bufferLayouts2){const index=mergedLayouts.findIndex((attribute2=>attribute2.name===attribute.name));index<0?mergedLayouts.push(attribute):mergedLayouts[index]=attribute}return mergedLayouts}}var buffer=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/buffer.js");function isNumberArray(value){return Array.isArray(value)?0===value.length||"number"==typeof value[0]:function isTypedArray(value){return ArrayBuffer.isView(value)&&!(value instanceof DataView)}(value)}class UniformBlock{name;uniforms={};modifiedUniforms={};modified=!0;bindingLayout={};needsRedraw="initialized";constructor(props){if(this.name=props?.name||"unnamed",props?.name&&props?.shaderLayout){const binding=props?.shaderLayout.bindings?.find((binding_=>"uniform"===binding_.type&&binding_.name===props?.name));if(!binding)throw new Error(props?.name);const uniformBlock=binding;for(const uniform of uniformBlock.uniforms||[])this.bindingLayout[uniform.name]=uniform}}setUniforms(uniforms){for(const[key,value]of Object.entries(uniforms))this._setUniform(key,value),this.needsRedraw||this.setNeedsRedraw(`${this.name}.${key}=${value}`)}setNeedsRedraw(reason){this.needsRedraw=this.needsRedraw||reason}getAllUniforms(){return this.modifiedUniforms={},this.needsRedraw=!1,this.uniforms||{}}_setUniform(key,value){(function arrayEqual(a,b,limit=16){if(a!==b)return!1;const arrayA=a,arrayB=b;if(!isNumberArray(arrayA))return!1;if(isNumberArray(arrayB)&&arrayA.length===arrayB.length)for(let i=0;i<arrayA.length;++i)if(arrayB[i]!==arrayA[i])return!1;return!0})(this.uniforms[key],value)||(this.uniforms[key]=function arrayCopy(a){return isNumberArray(a)?a.slice():a}(value),this.modifiedUniforms[key]=!0,this.modified=!0)}}const UNIFORM_FORMATS={f32:{type:"f32",components:1},i32:{type:"i32",components:1},u32:{type:"u32",components:1},"vec2<f32>":{type:"f32",components:2},"vec3<f32>":{type:"f32",components:3},"vec4<f32>":{type:"f32",components:4},"vec2<i32>":{type:"i32",components:2},"vec3<i32>":{type:"i32",components:3},"vec4<i32>":{type:"i32",components:4},"vec2<u32>":{type:"u32",components:2},"vec3<u32>":{type:"u32",components:3},"vec4<u32>":{type:"u32",components:4},"mat2x2<f32>":{type:"f32",components:4},"mat2x3<f32>":{type:"f32",components:6},"mat2x4<f32>":{type:"f32",components:8},"mat3x2<f32>":{type:"f32",components:6},"mat3x3<f32>":{type:"f32",components:9},"mat3x4<f32>":{type:"f32",components:12},"mat4x2<f32>":{type:"f32",components:8},"mat4x3<f32>":{type:"f32",components:12},"mat4x4<f32>":{type:"f32",components:16}};function alignTo(size,count){switch(count){case 1:return size;case 2:return size+size%2;default:return size+(4-size%4)%4}}var array_utils_flat=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/array-utils-flat.js");class UniformBufferLayout{layout={};byteLength;constructor(uniformTypes){let size=0;for(const[key,uniformType]of Object.entries(uniformTypes)){const typeAndComponents=UNIFORM_FORMATS[uniformType],{type:type,components:count}=typeAndComponents;size=alignTo(size,count);const offset=size;size+=count,this.layout[key]={type:type,size:count,offset:offset}}size+=(4-size%4)%4;const actualByteLength=4*size;this.byteLength=Math.max(actualByteLength,1024)}getData(uniformValues){const bufferSize=Math.max(this.byteLength,1024),arrayBuffer=(0,array_utils_flat.o)(bufferSize),typedArrays={i32:new Int32Array(arrayBuffer),u32:new Uint32Array(arrayBuffer),f32:new Float32Array(arrayBuffer),f16:new Uint16Array(arrayBuffer)};for(const[name,value]of Object.entries(uniformValues)){const uniformLayout=this.layout[name];if(!uniformLayout){log.R.warn(`Supplied uniform value ${name} not present in uniform block layout`)();continue}const{type:type,size:size,offset:offset}=uniformLayout,typedArray=typedArrays[type];if(1===size){if("number"!=typeof value&&"boolean"!=typeof value){log.R.warn(`Supplied value for single component uniform ${name} is not a number: ${value}`)();continue}typedArray[offset]=Number(value)}else{if(!isNumberArray(value)){log.R.warn(`Supplied value for multi component / array uniform ${name} is not a numeric array: ${value}`)();continue}typedArray.set(value,offset)}}return new Uint8Array(arrayBuffer)}has(name){return Boolean(this.layout[name])}get(name){return this.layout[name]}}class UniformStore{uniformBlocks=new Map;uniformBufferLayouts=new Map;uniformBuffers=new Map;constructor(blocks){for(const[bufferName,block]of Object.entries(blocks)){const uniformBufferName=bufferName,uniformBufferLayout=new UniformBufferLayout(block.uniformTypes||{});this.uniformBufferLayouts.set(uniformBufferName,uniformBufferLayout);const uniformBlock=new UniformBlock({name:bufferName});uniformBlock.setUniforms(block.defaultUniforms||{}),this.uniformBlocks.set(uniformBufferName,uniformBlock)}}destroy(){for(const uniformBuffer of this.uniformBuffers.values())uniformBuffer.destroy()}setUniforms(uniforms){for(const[blockName,uniformValues]of Object.entries(uniforms))this.uniformBlocks.get(blockName)?.setUniforms(uniformValues);this.updateUniformBuffers()}getUniformBufferByteLength(uniformBufferName){return this.uniformBufferLayouts.get(uniformBufferName)?.byteLength||0}getUniformBufferData(uniformBufferName){const uniformValues=this.uniformBlocks.get(uniformBufferName)?.getAllUniforms()||{};return this.uniformBufferLayouts.get(uniformBufferName)?.getData(uniformValues)}createUniformBuffer(device,uniformBufferName,uniforms){uniforms&&this.setUniforms(uniforms);const byteLength=this.getUniformBufferByteLength(uniformBufferName),uniformBuffer=device.createBuffer({usage:buffer.h.UNIFORM|buffer.h.COPY_DST,byteLength:byteLength}),uniformBufferData=this.getUniformBufferData(uniformBufferName);return uniformBuffer.write(uniformBufferData),uniformBuffer}getManagedUniformBuffer(device,uniformBufferName){if(!this.uniformBuffers.get(uniformBufferName)){const byteLength=this.getUniformBufferByteLength(uniformBufferName),uniformBuffer=device.createBuffer({usage:buffer.h.UNIFORM|buffer.h.COPY_DST,byteLength:byteLength});this.uniformBuffers.set(uniformBufferName,uniformBuffer)}return this.uniformBuffers.get(uniformBufferName)}updateUniformBuffers(){let reason=!1;for(const uniformBufferName of this.uniformBlocks.keys()){const bufferReason=this.updateUniformBuffer(uniformBufferName);reason||=bufferReason}return reason&&log.R.log(3,`UniformStore.updateUniformBuffers(): ${reason}`)(),reason}updateUniformBuffer(uniformBufferName){const uniformBlock=this.uniformBlocks.get(uniformBufferName);let uniformBuffer=this.uniformBuffers.get(uniformBufferName),reason=!1;if(uniformBuffer&&uniformBlock?.needsRedraw){reason||=uniformBlock.needsRedraw;const uniformBufferData=this.getUniformBufferData(uniformBufferName);uniformBuffer=this.uniformBuffers.get(uniformBufferName),uniformBuffer?.write(uniformBufferData);const uniformValues=this.uniformBlocks.get(uniformBufferName)?.getAllUniforms();log.R.log(4,`Writing to uniform buffer ${String(uniformBufferName)}`,uniformBufferData,uniformValues)()}return reason}}var a,texture_view=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/texture-view.js"),texture=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/texture.js"),sampler=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/sampler.js"),get_attribute_from_layouts=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter-utils/get-attribute-from-layouts.js"),vertex_format_from_attribute=__webpack_require__("./node_modules/@luma.gl/core/dist/gpu-type-utils/vertex-format-from-attribute.js"),shader_assembler=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/lib/shader-assembler.js");class e{constructor(e,t){this.name=e,this.attributes=t,this.size=0}get isArray(){return!1}get isStruct(){return!1}get isTemplate(){return!1}getTypeName(){return this.name}}class t{constructor(e,t,n){this.name=e,this.type=t,this.attributes=n,this.offset=0,this.size=0}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class n extends e{constructor(e,t){super(e,t),this.members=[],this.align=0,this.startLine=-1,this.endLine=-1,this.inUse=!1}get isStruct(){return!0}}class s extends e{constructor(e,t){super(e,t),this.count=0,this.stride=0}get isArray(){return!0}}class r extends e{constructor(e,t,n,s){super(e,n),this.format=t,this.access=s}get isTemplate(){return!0}getTypeName(){let e=this.name;if(null!==this.format){if("vec2"===e||"vec3"===e||"vec4"===e||"mat2x2"===e||"mat2x3"===e||"mat2x4"===e||"mat3x2"===e||"mat3x3"===e||"mat3x4"===e||"mat4x2"===e||"mat4x3"===e||"mat4x4"===e){if("f32"===this.format.name)return e+="f",e;if("i32"===this.format.name)return e+="i",e;if("u32"===this.format.name)return e+="u",e;if("bool"===this.format.name)return e+="b",e;if("f16"===this.format.name)return e+="h",e}e+=`<${this.format.name}>`}else if("vec2"===e||"vec3"===e||"vec4"===e)return e;return e}}(e=>{e[e.Uniform=0]="Uniform",e[e.Storage=1]="Storage",e[e.Texture=2]="Texture",e[e.Sampler=3]="Sampler",e[e.StorageTexture=4]="StorageTexture"})(a||(a={}));class i{constructor(e,t,n,s,r,a,i){this.name=e,this.type=t,this.group=n,this.binding=s,this.attributes=r,this.resourceType=a,this.access=i}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get size(){return this.type.size}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class o{constructor(e,t){this.name=e,this.type=t}}class l{constructor(e,t,n,s){this.name=e,this.type=t,this.locationType=n,this.location=s,this.interpolation=null}}class c{constructor(e,t,n,s){this.name=e,this.type=t,this.locationType=n,this.location=s}}class u{constructor(e,t,n,s){this.name=e,this.type=t,this.attributes=n,this.id=s}}class h{constructor(e,t,n){this.name=e,this.type=t,this.attributes=n}}class f{constructor(e,t=null,n){this.stage=null,this.inputs=[],this.outputs=[],this.arguments=[],this.returnType=null,this.resources=[],this.overrides=[],this.startLine=-1,this.endLine=-1,this.inUse=!1,this.calls=new Set,this.name=e,this.stage=t,this.attributes=n}}class p{constructor(){this.vertex=[],this.fragment=[],this.compute=[]}}const d=new Float32Array(1),m=new Int32Array(d.buffer),_=new Uint16Array(1);function g(e){d[0]=e;const t=m[0],n=t>>31&1;let s=t>>23&255,r=8388607&t;if(255===s)return _[0]=n<<15|31744|(0!==r?512:0),_[0];if(0===s){if(0===r)return _[0]=n<<15,_[0];r|=8388608;let e=113;for(;!(8388608&r);)r<<=1,e--;return s=127-e,r&=8388607,s>0?(r=(r>>126-s)+(r>>127-s&1),_[0]=n<<15|s<<10|r>>13,_[0]):(_[0]=n<<15,_[0])}return s=s-127+15,s>=31?(_[0]=n<<15|31744,_[0]):s<=0?s<-10?(_[0]=n<<15,_[0]):(r=(8388608|r)>>1-s,_[0]=n<<15|r>>13,_[0]):(r>>=13,_[0]=n<<15|s<<10|r,_[0])}const x=new Uint32Array(1),y=new Float32Array(x.buffer,0,1);function b(e){const t=112+(e>>6&31)<<23|(63&e)<<17;return x[0]=t,y[0]}function w(e,t,n,s){const r=[0,0,0,0];for(let c=0;c<s;++c)switch(n){case"8unorm":r[c]=e[t]/255,t++;break;case"8snorm":r[c]=e[t]/255*2-1,t++;break;case"8uint":r[c]=e[t],t++;break;case"8sint":r[c]=e[t]-127,t++;break;case"16uint":r[c]=e[t]|e[t+1]<<8,t+=2;break;case"16sint":r[c]=(e[t]|e[t+1]<<8)-32768,t+=2;break;case"16float":r[c]=(void 0,void 0,void 0,i=(32768&(a=e[t]|e[t+1]<<8))>>15,l=1023&a,0==(o=(31744&a)>>10)?(i?-1:1)*Math.pow(2,-14)*(l/Math.pow(2,10)):31==o?l?NaN:1/0*(i?-1:1):(i?-1:1)*Math.pow(2,o-15)*(1+l/Math.pow(2,10))),t+=2;break;case"32uint":case"32sint":r[c]=e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24,t+=4;break;case"32float":r[c]=new Float32Array(e.buffer,t,1)[0],t+=4}var a,i,o,l;return r}function k(e,t,n,s,r){for(let a=0;a<s;++a)switch(n){case"8unorm":e[t]=255*r[a],t++;break;case"8snorm":e[t]=.5*(r[a]+1)*255,t++;break;case"8uint":e[t]=r[a],t++;break;case"8sint":e[t]=r[a]+127,t++;break;case"16uint":new Uint16Array(e.buffer,t,1)[0]=r[a],t+=2;break;case"16sint":new Int16Array(e.buffer,t,1)[0]=r[a],t+=2;break;case"16float":{const n=g(r[a]);new Uint16Array(e.buffer,t,1)[0]=n,t+=2;break}case"32uint":new Uint32Array(e.buffer,t,1)[0]=r[a],t+=4;break;case"32sint":new Int32Array(e.buffer,t,1)[0]=r[a],t+=4;break;case"32float":new Float32Array(e.buffer,t,1)[0]=r[a],t+=4}return r}const I={r8unorm:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r8snorm:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r8uint:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r8sint:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},rg8unorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg8snorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg8uint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg8sint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rgba8unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},"rgba8unorm-srgb":{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba8snorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba8uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba8sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},bgra8unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},"bgra8unorm-srgb":{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},r16uint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r16sint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r16float:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},rg16uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg16sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg16float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rgba16uint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba16sint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba16float:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},r32uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r32sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r32float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},rg32uint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg32sint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg32float:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rgba32uint:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba32sint:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba32float:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgb10a2uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgb10a2unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rg11b10ufloat:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},stencil8:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!1,hasStencil:!0,channels:1},depth16unorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!1,channels:1},depth24plus:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!1,depthOnlyFormat:"depth32float",channels:1},"depth24plus-stencil8":{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!0,depthOnlyFormat:"depth32float",channels:1},depth32float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!1,channels:1},"depth32float-stencil8":{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!0,stencilOnlyFormat:"depth32float",channels:1},rgb9e5ufloat:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},"bc1-rgba-unorm":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc1-rgba-unorm-srgb":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc2-rgba-unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc2-rgba-unorm-srgb":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc3-rgba-unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc3-rgba-unorm-srgb":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc4-r-unorm":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:1},"bc4-r-snorm":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:1},"bc5-rg-unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:2},"bc5-rg-snorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:2},"bc6h-rgb-ufloat":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc6h-rgb-float":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc7-rgba-unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc7-rgba-unorm-srgb":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgb8unorm":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgb8unorm-srgb":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgb8a1unorm":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgb8a1unorm-srgb":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgba8unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgba8unorm-srgb":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"eac-r11unorm":{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!0,channels:1},"eac-r11snorm":{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!0,channels:1},"eac-rg11unorm":{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!0,channels:2},"eac-rg11snorm":{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!0,channels:2},"astc-4x4-unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"astc-4x4-unorm-srgb":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"astc-5x4-unorm":{bytesPerBlock:16,blockWidth:5,blockHeight:4,isCompressed:!0,channels:4},"astc-5x4-unorm-srgb":{bytesPerBlock:16,blockWidth:5,blockHeight:4,isCompressed:!0,channels:4},"astc-5x5-unorm":{bytesPerBlock:16,blockWidth:5,blockHeight:5,isCompressed:!0,channels:4},"astc-5x5-unorm-srgb":{bytesPerBlock:16,blockWidth:5,blockHeight:5,isCompressed:!0,channels:4},"astc-6x5-unorm":{bytesPerBlock:16,blockWidth:6,blockHeight:5,isCompressed:!0,channels:4},"astc-6x5-unorm-srgb":{bytesPerBlock:16,blockWidth:6,blockHeight:5,isCompressed:!0,channels:4},"astc-6x6-unorm":{bytesPerBlock:16,blockWidth:6,blockHeight:6,isCompressed:!0,channels:4},"astc-6x6-unorm-srgb":{bytesPerBlock:16,blockWidth:6,blockHeight:6,isCompressed:!0,channels:4},"astc-8x5-unorm":{bytesPerBlock:16,blockWidth:8,blockHeight:5,isCompressed:!0,channels:4},"astc-8x5-unorm-srgb":{bytesPerBlock:16,blockWidth:8,blockHeight:5,isCompressed:!0,channels:4},"astc-8x6-unorm":{bytesPerBlock:16,blockWidth:8,blockHeight:6,isCompressed:!0,channels:4},"astc-8x6-unorm-srgb":{bytesPerBlock:16,blockWidth:8,blockHeight:6,isCompressed:!0,channels:4},"astc-8x8-unorm":{bytesPerBlock:16,blockWidth:8,blockHeight:8,isCompressed:!0,channels:4},"astc-8x8-unorm-srgb":{bytesPerBlock:16,blockWidth:8,blockHeight:8,isCompressed:!0,channels:4},"astc-10x5-unorm":{bytesPerBlock:16,blockWidth:10,blockHeight:5,isCompressed:!0,channels:4},"astc-10x5-unorm-srgb":{bytesPerBlock:16,blockWidth:10,blockHeight:5,isCompressed:!0,channels:4},"astc-10x6-unorm":{bytesPerBlock:16,blockWidth:10,blockHeight:6,isCompressed:!0,channels:4},"astc-10x6-unorm-srgb":{bytesPerBlock:16,blockWidth:10,blockHeight:6,isCompressed:!0,channels:4},"astc-10x8-unorm":{bytesPerBlock:16,blockWidth:10,blockHeight:8,isCompressed:!0,channels:4},"astc-10x8-unorm-srgb":{bytesPerBlock:16,blockWidth:10,blockHeight:8,isCompressed:!0,channels:4},"astc-10x10-unorm":{bytesPerBlock:16,blockWidth:10,blockHeight:10,isCompressed:!0,channels:4},"astc-10x10-unorm-srgb":{bytesPerBlock:16,blockWidth:10,blockHeight:10,isCompressed:!0,channels:4},"astc-12x10-unorm":{bytesPerBlock:16,blockWidth:12,blockHeight:10,isCompressed:!0,channels:4},"astc-12x10-unorm-srgb":{bytesPerBlock:16,blockWidth:12,blockHeight:10,isCompressed:!0,channels:4},"astc-12x12-unorm":{bytesPerBlock:16,blockWidth:12,blockHeight:12,isCompressed:!0,channels:4},"astc-12x12-unorm-srgb":{bytesPerBlock:16,blockWidth:12,blockHeight:12,isCompressed:!0,channels:4}};class T{constructor(){this.id=T._id++,this.line=0}get isAstNode(){return!0}get astNodeType(){return""}search(e){e(this)}searchBlock(e,t){if(e){t(S.instance);for(const n of e)n instanceof Array?this.searchBlock(n,t):n.search(t);t(A.instance)}}constEvaluate(e,t){throw new Error("Cannot evaluate node")}constEvaluateString(e){return this.constEvaluate(e).toString()}}T._id=0;class S extends T{}S.instance=new S;class A extends T{}A.instance=new A;const E=new Set(["all","all","any","select","arrayLength","abs","acos","acosh","asin","asinh","atan","atanh","atan2","ceil","clamp","cos","cosh","countLeadingZeros","countOneBits","countTrailingZeros","cross","degrees","determinant","distance","dot","dot4U8Packed","dot4I8Packed","exp","exp2","extractBits","faceForward","firstLeadingBit","firstTrailingBit","floor","fma","fract","frexp","insertBits","inverseSqrt","ldexp","length","log","log2","max","min","mix","modf","normalize","pow","quantizeToF16","radians","reflect","refract","reverseBits","round","saturate","sign","sin","sinh","smoothStep","sqrt","step","tan","tanh","transpose","trunc","dpdx","dpdxCoarse","dpdxFine","dpdy","dpdyCoarse","dpdyFine","fwidth","fwidthCoarse","fwidthFine","textureDimensions","textureGather","textureGatherCompare","textureLoad","textureNumLayers","textureNumLevels","textureNumSamples","textureSample","textureSampleBias","textureSampleCompare","textureSampleCompareLevel","textureSampleGrad","textureSampleLevel","textureSampleBaseClampToEdge","textureStore","atomicLoad","atomicStore","atomicAdd","atomicSub","atomicMax","atomicMin","atomicAnd","atomicOr","atomicXor","atomicExchange","atomicCompareExchangeWeak","pack4x8snorm","pack4x8unorm","pack4xI8","pack4xU8","pack4x8Clamp","pack4xU8Clamp","pack2x16snorm","pack2x16unorm","pack2x16float","unpack4x8snorm","unpack4x8unorm","unpack4xI8","unpack4xU8","unpack2x16snorm","unpack2x16unorm","unpack2x16float","storageBarrier","textureBarrier","workgroupBarrier","workgroupUniformLoad","subgroupAdd","subgroupExclusiveAdd","subgroupInclusiveAdd","subgroupAll","subgroupAnd","subgroupAny","subgroupBallot","subgroupBroadcast","subgroupBroadcastFirst","subgroupElect","subgroupMax","subgroupMin","subgroupMul","subgroupExclusiveMul","subgroupInclusiveMul","subgroupOr","subgroupShuffle","subgroupShuffleDown","subgroupShuffleUp","subgroupShuffleXor","subgroupXor","quadBroadcast","quadSwapDiagonal","quadSwapX","quadSwapY"]);class $ extends T{constructor(){super()}}class L extends ${constructor(e,t,n,s,r,a){super(),this.calls=new Set,this.name=e,this.args=t,this.returnType=n,this.body=s,this.startLine=r,this.endLine=a}get astNodeType(){return"function"}search(e){if(this.attributes)for(const t of this.attributes)e(t);e(this);for(const t of this.args)e(t);this.searchBlock(this.body,e)}}class C extends ${constructor(e){super(),this.expression=e}get astNodeType(){return"staticAssert"}search(e){this.expression.search(e)}}class D extends ${constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"while"}search(e){this.condition.search(e),this.searchBlock(this.body,e)}}class N extends ${constructor(e,t){super(),this.body=e,this.loopId=t}get astNodeType(){return"continuing"}search(e){this.searchBlock(this.body,e)}}class V extends ${constructor(e,t,n,s){super(),this.init=e,this.condition=t,this.increment=n,this.body=s}get astNodeType(){return"for"}search(e){var t,n,s;null===(t=this.init)||void 0===t||t.search(e),null===(n=this.condition)||void 0===n||n.search(e),null===(s=this.increment)||void 0===s||s.search(e),this.searchBlock(this.body,e)}}class O extends ${constructor(e,t,n,s,r){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=s,this.value=r}get astNodeType(){return"var"}search(e){var t;e(this),null===(t=this.value)||void 0===t||t.search(e)}}class B extends ${constructor(e,t,n){super(),this.attributes=null,this.name=e,this.type=t,this.value=n}get astNodeType(){return"override"}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}class F extends ${constructor(e,t,n,s,r){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=s,this.value=r}get astNodeType(){return"let"}search(e){var t;e(this),null===(t=this.value)||void 0===t||t.search(e)}}class M extends ${constructor(e,t,n,s,r){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=s,this.value=r}get astNodeType(){return"const"}constEvaluate(e,t){return this.value.constEvaluate(e,t)}search(e){var t;e(this),null===(t=this.value)||void 0===t||t.search(e)}}var U,P,W,q;(e=>{e.increment="++",e.decrement="--"})(U||(U={})),(e=>{e.parse=function(t){const n=t;if("parse"==n)throw new Error("Invalid value for IncrementOperator");return e[n]}})(U||(U={}));class H extends ${constructor(e,t){super(),this.operator=e,this.variable=t}get astNodeType(){return"increment"}search(e){this.variable.search(e)}}(e=>{e.assign="=",e.addAssign="+=",e.subtractAssin="-=",e.multiplyAssign="*=",e.divideAssign="/=",e.moduloAssign="%=",e.andAssign="&=",e.orAssign="|=",e.xorAssign="^=",e.shiftLeftAssign="<<=",e.shiftRightAssign=">>="})(P||(P={})),(e=>{e.parse=function(e){const t=e;if("parse"==t)throw new Error("Invalid value for AssignOperator");return t}})(P||(P={}));class z extends ${constructor(e,t,n){super(),this.operator=e,this.variable=t,this.value=n}get astNodeType(){return"assign"}search(e){this.variable.search(e),this.value.search(e)}}class R extends ${constructor(e,t){super(),this.name=e,this.args=t}get astNodeType(){return"call"}isBuiltin(){return E.has(this.name)}search(e){for(const t of this.args)t.search(e);e(this)}}class G extends ${constructor(e,t){super(),this.body=e,this.continuing=t}get astNodeType(){return"loop"}}class X extends ${constructor(e,t){super(),this.condition=e,this.cases=t}get astNodeType(){return"switch"}}class j extends ${constructor(e,t,n,s){super(),this.condition=e,this.body=t,this.elseif=n,this.else=s}get astNodeType(){return"if"}search(e){this.condition.search(e),this.searchBlock(this.body,e),this.searchBlock(this.elseif,e),this.searchBlock(this.else,e)}}class Z extends ${constructor(e){super(),this.value=e}get astNodeType(){return"return"}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}class Q extends ${constructor(e){super(),this.name=e}get astNodeType(){return"enable"}}class Y extends ${constructor(e){super(),this.extensions=e}get astNodeType(){return"requires"}}class K extends ${constructor(e,t){super(),this.severity=e,this.rule=t}get astNodeType(){return"diagnostic"}}class J extends ${constructor(e,t){super(),this.name=e,this.type=t}get astNodeType(){return"alias"}}class ee extends ${constructor(){super()}get astNodeType(){return"discard"}}class te extends ${constructor(){super(),this.condition=null,this.loopId=-1}get astNodeType(){return"break"}}class ne extends ${constructor(){super(),this.loopId=-1}get astNodeType(){return"continue"}}class se extends ${constructor(e){super(),this.attributes=null,this.name=e}get astNodeType(){return"type"}get isStruct(){return!1}get isArray(){return!1}static maxFormatType(e){let t=e[0];if("f32"===t.name)return t;for(let n=1;n<e.length;++n){const s=se._priority.get(t.name);se._priority.get(e[n].name)<s&&(t=e[n])}return"x32"===t.name?se.i32:t}getTypeName(){return this.name}}se.x32=new se("x32"),se.f32=new se("f32"),se.i32=new se("i32"),se.u32=new se("u32"),se.f16=new se("f16"),se.bool=new se("bool"),se.void=new se("void"),se._priority=new Map([["f32",0],["f16",1],["u32",2],["i32",3],["x32",3]]);class re extends se{constructor(e){super(e)}}class ae extends se{constructor(e,t,n,s){super(e),this.members=t,this.startLine=n,this.endLine=s}get astNodeType(){return"struct"}get isStruct(){return!0}getMemberIndex(e){for(let t=0;t<this.members.length;t++)if(this.members[t].name==e)return t;return-1}search(e){for(const t of this.members)e(t)}}class ie extends se{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return"template"}getTypeName(){let e=this.name;if(null!==this.format){if("vec2"===e||"vec3"===e||"vec4"===e||"mat2x2"===e||"mat2x3"===e||"mat2x4"===e||"mat3x2"===e||"mat3x3"===e||"mat3x4"===e||"mat4x2"===e||"mat4x3"===e||"mat4x4"===e){if("f32"===this.format.name)return e+="f",e;if("i32"===this.format.name)return e+="i",e;if("u32"===this.format.name)return e+="u",e;if("bool"===this.format.name)return e+="b",e;if("f16"===this.format.name)return e+="h",e}e+=`<${this.format.name}>`}else if("vec2"===e||"vec3"===e||"vec4"===e)return e;return e}}ie.vec2f=new ie("vec2",se.f32,null),ie.vec3f=new ie("vec3",se.f32,null),ie.vec4f=new ie("vec4",se.f32,null),ie.vec2i=new ie("vec2",se.i32,null),ie.vec3i=new ie("vec3",se.i32,null),ie.vec4i=new ie("vec4",se.i32,null),ie.vec2u=new ie("vec2",se.u32,null),ie.vec3u=new ie("vec3",se.u32,null),ie.vec4u=new ie("vec4",se.u32,null),ie.vec2h=new ie("vec2",se.f16,null),ie.vec3h=new ie("vec3",se.f16,null),ie.vec4h=new ie("vec4",se.f16,null),ie.vec2b=new ie("vec2",se.bool,null),ie.vec3b=new ie("vec3",se.bool,null),ie.vec4b=new ie("vec4",se.bool,null),ie.mat2x2f=new ie("mat2x2",se.f32,null),ie.mat2x3f=new ie("mat2x3",se.f32,null),ie.mat2x4f=new ie("mat2x4",se.f32,null),ie.mat3x2f=new ie("mat3x2",se.f32,null),ie.mat3x3f=new ie("mat3x3",se.f32,null),ie.mat3x4f=new ie("mat3x4",se.f32,null),ie.mat4x2f=new ie("mat4x2",se.f32,null),ie.mat4x3f=new ie("mat4x3",se.f32,null),ie.mat4x4f=new ie("mat4x4",se.f32,null),ie.mat2x2h=new ie("mat2x2",se.f16,null),ie.mat2x3h=new ie("mat2x3",se.f16,null),ie.mat2x4h=new ie("mat2x4",se.f16,null),ie.mat3x2h=new ie("mat3x2",se.f16,null),ie.mat3x3h=new ie("mat3x3",se.f16,null),ie.mat3x4h=new ie("mat3x4",se.f16,null),ie.mat4x2h=new ie("mat4x2",se.f16,null),ie.mat4x3h=new ie("mat4x3",se.f16,null),ie.mat4x4h=new ie("mat4x4",se.f16,null),ie.mat2x2i=new ie("mat2x2",se.i32,null),ie.mat2x3i=new ie("mat2x3",se.i32,null),ie.mat2x4i=new ie("mat2x4",se.i32,null),ie.mat3x2i=new ie("mat3x2",se.i32,null),ie.mat3x3i=new ie("mat3x3",se.i32,null),ie.mat3x4i=new ie("mat3x4",se.i32,null),ie.mat4x2i=new ie("mat4x2",se.i32,null),ie.mat4x3i=new ie("mat4x3",se.i32,null),ie.mat4x4i=new ie("mat4x4",se.i32,null),ie.mat2x2u=new ie("mat2x2",se.u32,null),ie.mat2x3u=new ie("mat2x3",se.u32,null),ie.mat2x4u=new ie("mat2x4",se.u32,null),ie.mat3x2u=new ie("mat3x2",se.u32,null),ie.mat3x3u=new ie("mat3x3",se.u32,null),ie.mat3x4u=new ie("mat3x4",se.u32,null),ie.mat4x2u=new ie("mat4x2",se.u32,null),ie.mat4x3u=new ie("mat4x3",se.u32,null),ie.mat4x4u=new ie("mat4x4",se.u32,null);class oe extends se{constructor(e,t,n,s){super(e),this.storage=t,this.type=n,this.access=s}get astNodeType(){return"pointer"}}class le extends se{constructor(e,t,n,s){super(e),this.attributes=t,this.format=n,this.count=s}get astNodeType(){return"array"}get isArray(){return!0}}class ce extends se{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return"sampler"}}class ue extends T{constructor(){super(),this.postfix=null}}class he extends ue{constructor(e){super(),this.value=e}get astNodeType(){return"stringExpr"}toString(){return this.value}constEvaluateString(){return this.value}}class fe extends ue{constructor(e,t){super(),this.type=e,this.args=t}get astNodeType(){return"createExpr"}search(e){if(e(this),this.args)for(const t of this.args)t.search(e)}constEvaluate(e,t){return t&&(t[0]=this.type),e.evalExpression(this,e.context)}}class pe extends ue{constructor(e,t){super(),this.cachedReturnValue=null,this.name=e,this.args=t}get astNodeType(){return"callExpr"}setCachedReturnValue(e){this.cachedReturnValue=e}get isBuiltin(){return E.has(this.name)}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){for(const t of this.args)t.search(e);e(this)}}class de extends ue{constructor(e){super(),this.name=e}get astNodeType(){return"varExpr"}search(e){e(this),this.postfix&&this.postfix.search(e)}constEvaluate(e,t){return e.evalExpression(this,e.context)}}class me extends ue{constructor(e,t){super(),this.name=e,this.initializer=t}get astNodeType(){return"constExpr"}constEvaluate(e,t){if(this.initializer){const t=e.evalExpression(this.initializer,e.context);return null!==t&&this.postfix?t.getSubData(e,this.postfix,e.context):t}return null}search(e){this.initializer.search(e)}}class _e extends ue{constructor(e,t){super(),this.value=e,this.type=t}get astNodeType(){return"literalExpr"}constEvaluate(e,t){return void 0!==t&&(t[0]=this.type),this.value}get isScalar(){return this.value instanceof Ve}get isVector(){return this.value instanceof Be||this.value instanceof Fe}get scalarValue(){return this.value instanceof Ve?this.value.value:(console.error("Value is not scalar."),0)}get vectorValue(){return this.value instanceof Be||this.value instanceof Fe?this.value.data:(console.error("Value is not a vector or matrix."),new Float32Array(0))}}class ge extends ue{constructor(e,t){super(),this.type=e,this.value=t}get astNodeType(){return"bitcastExpr"}search(e){this.value.search(e)}}class ye extends ue{constructor(e){super(),this.index=e}search(e){this.index.search(e)}}class be extends ue{constructor(){super()}}class ve extends be{constructor(e,t){super(),this.operator=e,this.right=t}get astNodeType(){return"unaryOp"}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){this.right.search(e)}}class we extends be{constructor(e,t,n){super(),this.operator=e,this.left=t,this.right=n}get astNodeType(){return"binaryOp"}_getPromotedType(e,t){return e.name===t.name?e:"f32"===e.name||"f32"===t.name?se.f32:"u32"===e.name||"u32"===t.name?se.u32:se.i32}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){this.left.search(e),this.right.search(e)}}class ke extends T{constructor(e){super(),this.body=e}}class Ie extends ue{constructor(){super()}get astNodeType(){return"default"}}class Te extends ke{constructor(e,t){super(t),this.selectors=e}get astNodeType(){return"case"}search(e){this.searchBlock(this.body,e)}}class Se extends ke{constructor(e){super(e)}get astNodeType(){return"default"}search(e){this.searchBlock(this.body,e)}}class Ae extends T{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return"argument"}}class Ee extends T{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"elseif"}search(e){this.condition.search(e),this.searchBlock(this.body,e)}}class $e extends T{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return"member"}}class Le extends T{constructor(e,t){super(),this.name=e,this.value=t}get astNodeType(){return"attribute"}}class Ce{constructor(e,t){this.parent=null,this.typeInfo=e,this.parent=t,this.id=Ce._id++}clone(){throw`Clone: Not implemented for ${this.constructor.name}`}setDataValue(e,t,n,s){console.error(`SetDataValue: Not implemented for ${this.constructor.name}`)}getSubData(e,t,n){return console.error(`GetDataValue: Not implemented for ${this.constructor.name}`),null}toString(){return`<${this.typeInfo.name}>`}}Ce._id=0;class De extends Ce{constructor(){super(new e("void",null),null)}toString(){return"void"}}De.void=new De;class Ne extends Ce{constructor(t){super(new e("pointer",null),null),this.reference=t}clone(){return this}setDataValue(e,t,n,s){this.reference.setDataValue(e,t,n,s)}getSubData(e,t,n){return t?this.reference.getSubData(e,t,n):this}}class Ve extends Ce{constructor(e,t,n=null){super(t,n),e instanceof Int32Array||e instanceof Uint32Array||e instanceof Float32Array?this.data=e:"x32"===this.typeInfo.name?e-Math.floor(e)!=0?this.data=new Float32Array([e]):this.data=e>=0?new Uint32Array([e]):new Int32Array([e]):"i32"===this.typeInfo.name||"bool"===this.typeInfo.name?this.data=new Int32Array([e]):"u32"===this.typeInfo.name?this.data=new Uint32Array([e]):"f32"===this.typeInfo.name||"f16"===this.typeInfo.name?this.data=new Float32Array([e]):console.error("ScalarData2: Invalid type",t)}clone(){if(this.data instanceof Float32Array)return new Ve(new Float32Array(this.data),this.typeInfo,null);if(this.data instanceof Int32Array)return new Ve(new Int32Array(this.data),this.typeInfo,null);if(this.data instanceof Uint32Array)return new Ve(new Uint32Array(this.data),this.typeInfo,null);throw"ScalarData: Invalid data type"}get value(){return this.data[0]}set value(e){this.data[0]=e}setDataValue(e,t,n,s){if(n)return void console.error("SetDataValue: Scalar data does not support postfix",n);if(!(t instanceof Ve))return void console.error("SetDataValue: Invalid value",t);let r=t.data[0];"i32"===this.typeInfo.name||"u32"===this.typeInfo.name?r=Math.floor(r):"bool"===this.typeInfo.name&&(r=r?1:0),this.data[0]=r}getSubData(e,t,n){return t?(console.error("getSubData: Scalar data does not support postfix",t),null):this}toString(){return`${this.value}`}}function Oe(e,t,n){const s=t.length;return 2===s?"f32"===n?new Be(new Float32Array(t),e.getTypeInfo("vec2f")):"i32"===n||"bool"===n?new Be(new Int32Array(t),e.getTypeInfo("vec2i")):"u32"===n?new Be(new Uint32Array(t),e.getTypeInfo("vec2u")):"f16"===n?new Be(new Float32Array(t),e.getTypeInfo("vec2h")):(console.error(`getSubData: Unknown format ${n}`),null):3===s?"f32"===n?new Be(new Float32Array(t),e.getTypeInfo("vec3f")):"i32"===n||"bool"===n?new Be(new Int32Array(t),e.getTypeInfo("vec3i")):"u32"===n?new Be(new Uint32Array(t),e.getTypeInfo("vec3u")):"f16"===n?new Be(new Float32Array(t),e.getTypeInfo("vec3h")):(console.error(`getSubData: Unknown format ${n}`),null):4===s?"f32"===n?new Be(new Float32Array(t),e.getTypeInfo("vec4f")):"i32"===n||"bool"===n?new Be(new Int32Array(t),e.getTypeInfo("vec4i")):"u32"===n?new Be(new Uint32Array(t),e.getTypeInfo("vec4u")):"f16"===n?new Be(new Float32Array(t),e.getTypeInfo("vec4h")):(console.error(`getSubData: Unknown format ${n}`),null):(console.error(`getSubData: Invalid vector size ${t.length}`),null)}class Be extends Ce{constructor(e,t,n=null){if(super(t,n),e instanceof Float32Array||e instanceof Uint32Array||e instanceof Int32Array)this.data=e;else{const t=this.typeInfo.name;"vec2f"===t||"vec3f"===t||"vec4f"===t?this.data=new Float32Array(e):"vec2i"===t||"vec3i"===t||"vec4i"===t?this.data=new Int32Array(e):"vec2u"===t||"vec3u"===t||"vec4u"===t?this.data=new Uint32Array(e):"vec2h"===t||"vec3h"===t||"vec4h"===t?this.data=new Float32Array(e):"vec2b"===t||"vec3b"===t||"vec4b"===t?this.data=new Int32Array(e):"vec2"===t||"vec3"===t||"vec4"===t?this.data=new Float32Array(e):console.error(`VectorData: Invalid type ${t}`)}}clone(){if(this.data instanceof Float32Array)return new Be(new Float32Array(this.data),this.typeInfo,null);if(this.data instanceof Int32Array)return new Be(new Int32Array(this.data),this.typeInfo,null);if(this.data instanceof Uint32Array)return new Be(new Uint32Array(this.data),this.typeInfo,null);throw"VectorData: Invalid data type"}setDataValue(e,t,n,s){n instanceof he?console.error("TODO: Set vector postfix"):t instanceof Be?this.data=t.data:console.error("SetDataValue: Invalid value",t)}getSubData(e,t,n){if(null===t)return this;let s=e.getTypeInfo("f32");if(this.typeInfo instanceof r)s=this.typeInfo.format||s;else{const t=this.typeInfo.name;"vec2f"===t||"vec3f"===t||"vec4f"===t?s=e.getTypeInfo("f32"):"vec2i"===t||"vec3i"===t||"vec4i"===t?s=e.getTypeInfo("i32"):"vec2b"===t||"vec3b"===t||"vec4b"===t?s=e.getTypeInfo("bool"):"vec2u"===t||"vec3u"===t||"vec4u"===t?s=e.getTypeInfo("u32"):"vec2h"===t||"vec3h"===t||"vec4h"===t?s=e.getTypeInfo("f16"):console.error(`GetSubData: Unknown type ${t}`)}let a=this;for(;null!==t&&null!==a;){if(t instanceof ye){const r=t.index;let i=-1;if(r instanceof _e){if(!(r.value instanceof Ve))return console.error(`GetSubData: Invalid array index ${r.value}`),null;i=r.value.value}else{const t=e.evalExpression(r,n);if(!(t instanceof Ve))return console.error("GetSubData: Unknown index type",r),null;i=t.value}if(i<0||i>=a.data.length)return console.error("GetSubData: Index out of range",i),null;if(a.data instanceof Float32Array){const e=new Float32Array(a.data.buffer,a.data.byteOffset+4*i,1);return new Ve(e,s)}if(a.data instanceof Int32Array){const e=new Int32Array(a.data.buffer,a.data.byteOffset+4*i,1);return new Ve(e,s)}if(a.data instanceof Uint32Array){const e=new Uint32Array(a.data.buffer,a.data.byteOffset+4*i,1);return new Ve(e,s)}throw"GetSubData: Invalid data type"}if(!(t instanceof he))return console.error("GetSubData: Unknown postfix",t),null;{const n=t.value.toLowerCase();if(1===n.length){let e=0;if("x"===n||"r"===n)e=0;else if("y"===n||"g"===n)e=1;else if("z"===n||"b"===n)e=2;else{if("w"!==n&&"a"!==n)return console.error(`GetSubData: Unknown member ${n}`),null;e=3}if(this.data instanceof Float32Array){let t=new Float32Array(this.data.buffer,this.data.byteOffset+4*e,1);return new Ve(t,s,this)}if(this.data instanceof Int32Array){let t=new Int32Array(this.data.buffer,this.data.byteOffset+4*e,1);return new Ve(t,s,this)}if(this.data instanceof Uint32Array){let t=new Uint32Array(this.data.buffer,this.data.byteOffset+4*e,1);return new Ve(t,s,this)}}const r=[];for(const e of n)"x"===e||"r"===e?r.push(this.data[0]):"y"===e||"g"===e?r.push(this.data[1]):"z"===e||"b"===e?r.push(this.data[2]):"w"===e||"a"===e?r.push(this.data[3]):console.error(`GetDataValue: Unknown member ${e}`);a=Oe(e,r,s.name)}t=t.postfix}return a}toString(){let e=`${this.data[0]}`;for(let t=1;t<this.data.length;++t)e+=`, ${this.data[t]}`;return e}}class Fe extends Ce{constructor(e,t,n=null){super(t,n),e instanceof Float32Array?this.data=e:this.data=new Float32Array(e)}clone(){return new Fe(new Float32Array(this.data),this.typeInfo,null)}setDataValue(e,t,n,s){n instanceof he?console.error("TODO: Set matrix postfix"):t instanceof Fe?this.data=t.data:console.error("SetDataValue: Invalid value",t)}getSubData(e,t,n){if(null===t)return this;const s=this.typeInfo.name;if(e.getTypeInfo("f32"),this.typeInfo instanceof r)this.typeInfo.format;else if(s.endsWith("f"))e.getTypeInfo("f32");else if(s.endsWith("i"))e.getTypeInfo("i32");else if(s.endsWith("u"))e.getTypeInfo("u32");else{if(!s.endsWith("h"))return console.error(`GetDataValue: Unknown type ${s}`),null;e.getTypeInfo("f16")}if(t instanceof ye){const r=t.index;let a=-1;if(r instanceof _e){if(!(r.value instanceof Ve))return console.error(`GetDataValue: Invalid array index ${r.value}`),null;a=r.value.value}else{const t=e.evalExpression(r,n);if(!(t instanceof Ve))return console.error("GetDataValue: Unknown index type",r),null;a=t.value}if(a<0||a>=this.data.length)return console.error("GetDataValue: Index out of range",a),null;const i=s.endsWith("h")?"h":"f";let o;if("mat2x2"===s||"mat2x2f"===s||"mat2x2h"===s||"mat3x2"===s||"mat3x2f"===s||"mat3x2h"===s||"mat4x2"===s||"mat4x2f"===s||"mat4x2h"===s)o=new Be(new Float32Array(this.data.buffer,this.data.byteOffset+2*a*4,2),e.getTypeInfo(`vec2${i}`));else if("mat2x3"===s||"mat2x3f"===s||"mat2x3h"===s||"mat3x3"===s||"mat3x3f"===s||"mat3x3h"===s||"mat4x3"===s||"mat4x3f"===s||"mat4x3h"===s)o=new Be(new Float32Array(this.data.buffer,this.data.byteOffset+3*a*4,3),e.getTypeInfo(`vec3${i}`));else{if("mat2x4"!==s&&"mat2x4f"!==s&&"mat2x4h"!==s&&"mat3x4"!==s&&"mat3x4f"!==s&&"mat3x4h"!==s&&"mat4x4"!==s&&"mat4x4f"!==s&&"mat4x4h"!==s)return console.error(`GetDataValue: Unknown type ${s}`),null;o=new Be(new Float32Array(this.data.buffer,this.data.byteOffset+4*a*4,4),e.getTypeInfo(`vec4${i}`))}return t.postfix?o.getSubData(e,t.postfix,n):o}return console.error("GetDataValue: Invalid postfix",t),null}toString(){let e=`${this.data[0]}`;for(let t=1;t<this.data.length;++t)e+=`, ${this.data[t]}`;return e}}class Me extends Ce{constructor(e,t,n=0,s=null){super(t,s),this.buffer=e instanceof ArrayBuffer?e:e.buffer,this.offset=n}clone(){const e=new Uint8Array(new Uint8Array(this.buffer,this.offset,this.typeInfo.size));return new Me(e.buffer,this.typeInfo,0,null)}setDataValue(t,r,a,i){if(null===r)return void console.log("setDataValue: NULL data.");let o=this.offset,l=this.typeInfo;for(;a;){if(a instanceof ye)if(l instanceof s){const e=a.index;if(e instanceof _e){if(!(e.value instanceof Ve))return void console.error(`SetDataValue: Invalid index type ${e.value}`);o+=e.value.value*l.stride}else{const n=t.evalExpression(e,i);if(!(n instanceof Ve))return void console.error("SetDataValue: Unknown index type",e);o+=n.value*l.stride}l=l.format}else console.error(`SetDataValue: Type ${l.getTypeName()} is not an array`);else{if(!(a instanceof he))return void console.error("SetDataValue: Unknown postfix type",a);{const t=a.value;if(l instanceof n){let e=!1;for(const n of l.members)if(n.name===t){o+=n.offset,l=n.type,e=!0;break}if(!e)return void console.error(`SetDataValue: Member ${t} not found`)}else if(l instanceof e){const e=l.getTypeName();let n=0;if("x"===t||"r"===t)n=0;else if("y"===t||"g"===t)n=1;else if("z"===t||"b"===t)n=2;else{if("w"!==t&&"a"!==t)return void console.error(`SetDataValue: Unknown member ${t}`);n=3}if(!(r instanceof Ve))return void console.error("SetDataValue: Invalid value",r);const s=r.value;return"vec2f"===e?void(new Float32Array(this.buffer,o,2)[n]=s):"vec3f"===e?void(new Float32Array(this.buffer,o,3)[n]=s):"vec4f"===e?void(new Float32Array(this.buffer,o,4)[n]=s):"vec2i"===e?void(new Int32Array(this.buffer,o,2)[n]=s):"vec3i"===e?void(new Int32Array(this.buffer,o,3)[n]=s):"vec4i"===e?void(new Int32Array(this.buffer,o,4)[n]=s):"vec2u"===e?void(new Uint32Array(this.buffer,o,2)[n]=s):"vec3u"===e?void(new Uint32Array(this.buffer,o,3)[n]=s):"vec4u"===e?void(new Uint32Array(this.buffer,o,4)[n]=s):void console.error(`SetDataValue: Type ${e} is not a struct`)}}}a=a.postfix}this.setData(t,r,l,o,i)}setData(e,t,n,s,r){const a=n.getTypeName();if("f32"!==a&&"f16"!==a)if("i32"!==a&&"atomic<i32>"!==a&&"x32"!==a)if("u32"!==a&&"atomic<u32>"!==a)if("bool"!==a)if("vec2f"!==a&&"vec2h"!==a)if("vec3f"!==a&&"vec3h"!==a)if("vec4f"!==a&&"vec4h"!==a)if("vec2i"!==a)if("vec3i"!==a)if("vec4i"!==a)if("vec2u"!==a)if("vec3u"!==a)if("vec4u"!==a)if("vec2b"!==a)if("vec3b"!==a)if("vec4b"!==a)if("mat2x2f"!==a&&"mat2x2h"!==a)if("mat2x3f"!==a&&"mat2x3h"!==a)if("mat2x4f"!==a&&"mat2x4h"!==a)if("mat3x2f"!==a&&"mat3x2h"!==a)if("mat3x3f"!==a&&"mat3x3h"!==a)if("mat3x4f"!==a&&"mat3x4h"!==a)if("mat4x2f"!==a&&"mat4x2h"!==a)if("mat4x3f"!==a&&"mat4x3h"!==a)if("mat4x4f"!==a&&"mat4x4h"!==a)if(t instanceof Me){if(n===t.typeInfo)return void new Uint8Array(this.buffer,s,t.buffer.byteLength).set(new Uint8Array(t.buffer));console.error("SetDataValue: Type mismatch",a,t.typeInfo.getTypeName())}else console.error(`SetData: Unknown type ${a}`);else{const e=new Float32Array(this.buffer,s,16);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7],e[8]=t.data[8],e[9]=t.data[9],e[10]=t.data[10],e[11]=t.data[11],e[12]=t.data[12],e[13]=t.data[13],e[14]=t.data[14],e[15]=t.data[15]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15])}else{const e=new Float32Array(this.buffer,s,12);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7],e[8]=t.data[8],e[9]=t.data[9],e[10]=t.data[10],e[11]=t.data[11]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11])}else{const e=new Float32Array(this.buffer,s,8);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7])}else{const e=new Float32Array(this.buffer,s,12);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7],e[8]=t.data[8],e[9]=t.data[9],e[10]=t.data[10],e[11]=t.data[11]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11])}else{const e=new Float32Array(this.buffer,s,9);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7],e[8]=t.data[8]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8])}else{const e=new Float32Array(this.buffer,s,6);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5])}else{const e=new Float32Array(this.buffer,s,8);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7])}else{const e=new Float32Array(this.buffer,s,6);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5])}else{const e=new Float32Array(this.buffer,s,4);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3])}else{const e=new Uint32Array(this.buffer,s,4);t instanceof Be?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3])}else{const e=new Uint32Array(this.buffer,s,3);t instanceof Be?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2])}else{const e=new Uint32Array(this.buffer,s,2);t instanceof Be?(e[0]=t.data[0],e[1]=t.data[1]):(e[0]=t[0],e[1]=t[1])}else{const e=new Uint32Array(this.buffer,s,4);t instanceof Be?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3])}else{const e=new Uint32Array(this.buffer,s,3);t instanceof Be?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2])}else{const e=new Uint32Array(this.buffer,s,2);t instanceof Be?(e[0]=t.data[0],e[1]=t.data[1]):(e[0]=t[0],e[1]=t[1])}else{const e=new Int32Array(this.buffer,s,4);t instanceof Be?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3])}else{const e=new Int32Array(this.buffer,s,3);t instanceof Be?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2])}else{const e=new Int32Array(this.buffer,s,2);t instanceof Be?(e[0]=t.data[0],e[1]=t.data[1]):(e[0]=t[0],e[1]=t[1])}else{const e=new Float32Array(this.buffer,s,4);t instanceof Be?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3])}else{const e=new Float32Array(this.buffer,s,3);t instanceof Be?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2])}else{const e=new Float32Array(this.buffer,s,2);t instanceof Be?(e[0]=t.data[0],e[1]=t.data[1]):(e[0]=t[0],e[1]=t[1])}else t instanceof Ve&&(new Int32Array(this.buffer,s,1)[0]=t.value);else t instanceof Ve&&(new Uint32Array(this.buffer,s,1)[0]=t.value);else t instanceof Ve&&(new Int32Array(this.buffer,s,1)[0]=t.value);else t instanceof Ve&&(new Float32Array(this.buffer,s,1)[0]=t.value)}getSubData(t,a,i){var o,l,c;if(null===a)return this;let u=this.offset,h=this.typeInfo;for(;a;){if(a instanceof ye){const e=a.index,n=t.evalExpression(e,i);let r=0;if(n instanceof Ve?r=n.value:console.error("GetDataValue: Invalid index type",e),h instanceof s)u+=r*h.stride,h=h.format;else{const e=h.getTypeName();"mat4x4"===e||"mat4x4f"===e||"mat4x4h"===e?(u+=16*r,h=t.getTypeInfo("vec4f")):console.error(`getDataValue: Type ${h.getTypeName()} is not an array`)}}else{if(!(a instanceof he))return console.error("GetDataValue: Unknown postfix type",a),null;{const s=a.value;if(h instanceof n){let e=!1;for(const t of h.members)if(t.name===s){u+=t.offset,h=t.type,e=!0;break}if(!e)return console.error(`GetDataValue: Member ${s} not found`),null}else if(h instanceof e){const e=h.getTypeName();if("vec2f"===e||"vec3f"===e||"vec4f"===e||"vec2i"===e||"vec3i"===e||"vec4i"===e||"vec2u"===e||"vec3u"===e||"vec4u"===e||"vec2b"===e||"vec3b"===e||"vec4b"===e||"vec2h"===e||"vec3h"===e||"vec4h"===e||"vec2"===e||"vec3"===e||"vec4"===e){if(s.length>0&&s.length<5){let n="f";const r=[];for(let a=0;a<s.length;++a){const i=s[a].toLowerCase();let o=0;if("x"===i||"r"===i)o=0;else if("y"===i||"g"===i)o=1;else if("z"===i||"b"===i)o=2;else{if("w"!==i&&"a"!==i)return console.error(`Unknown member ${s}`),null;o=3}if(1===s.length){if(e.endsWith("f"))return this.buffer.byteLength<u+4*o+4?(console.log("Insufficient buffer data"),null):new Ve(new Float32Array(this.buffer,u+4*o,1),t.getTypeInfo("f32"),this);if(e.endsWith("h"))return new Ve(new Float32Array(this.buffer,u+4*o,1),t.getTypeInfo("f16"),this);if(e.endsWith("i"))return new Ve(new Int32Array(this.buffer,u+4*o,1),t.getTypeInfo("i32"),this);if(e.endsWith("b"))return new Ve(new Int32Array(this.buffer,u+4*o,1),t.getTypeInfo("bool"),this);if(e.endsWith("u"))return new Ve(new Uint32Array(this.buffer,u+4*o,1),t.getTypeInfo("i32"),this)}if("vec2f"===e)r.push(new Float32Array(this.buffer,u,2)[o]);else if("vec3f"===e){if(u+12>=this.buffer.byteLength)return console.log("Insufficient buffer data"),null;const e=new Float32Array(this.buffer,u,3);r.push(e[o])}else if("vec4f"===e)r.push(new Float32Array(this.buffer,u,4)[o]);else if("vec2i"===e)n="i",r.push(new Int32Array(this.buffer,u,2)[o]);else if("vec3i"===e)n="i",r.push(new Int32Array(this.buffer,u,3)[o]);else if("vec4i"===e)n="i",r.push(new Int32Array(this.buffer,u,4)[o]);else if("vec2u"===e){n="u";const e=new Uint32Array(this.buffer,u,2);r.push(e[o])}else"vec3u"===e?(n="u",r.push(new Uint32Array(this.buffer,u,3)[o])):"vec4u"===e&&(n="u",r.push(new Uint32Array(this.buffer,u,4)[o]))}return 2===r.length?h=t.getTypeInfo(`vec2${n}`):3===r.length?h=t.getTypeInfo(`vec3${n}`):4===r.length?h=t.getTypeInfo(`vec4${n}`):console.error(`GetDataValue: Invalid vector length ${r.length}`),new Be(r,h,null)}return console.error(`GetDataValue: Unknown member ${s}`),null}return console.error(`GetDataValue: Type ${e} is not a struct`),null}}}a=a.postfix}const f=h.getTypeName();return"f32"===f?new Ve(new Float32Array(this.buffer,u,1),h,this):"i32"===f?new Ve(new Int32Array(this.buffer,u,1),h,this):"u32"===f?new Ve(new Uint32Array(this.buffer,u,1),h,this):"vec2f"===f?new Be(new Float32Array(this.buffer,u,2),h,this):"vec3f"===f?new Be(new Float32Array(this.buffer,u,3),h,this):"vec4f"===f?new Be(new Float32Array(this.buffer,u,4),h,this):"vec2i"===f?new Be(new Int32Array(this.buffer,u,2),h,this):"vec3i"===f?new Be(new Int32Array(this.buffer,u,3),h,this):"vec4i"===f?new Be(new Int32Array(this.buffer,u,4),h,this):"vec2u"===f?new Be(new Uint32Array(this.buffer,u,2),h,this):"vec3u"===f?new Be(new Uint32Array(this.buffer,u,3),h,this):"vec4u"===f?new Be(new Uint32Array(this.buffer,u,4),h,this):h instanceof r&&"atomic"===h.name?"u32"===(null===(o=h.format)||void 0===o?void 0:o.name)?new Ve(new Uint32Array(this.buffer,u,1)[0],h.format,this):"i32"===(null===(l=h.format)||void 0===l?void 0:l.name)?new Ve(new Int32Array(this.buffer,u,1)[0],h.format,this):(console.error(`GetDataValue: Invalid atomic format ${null===(c=h.format)||void 0===c?void 0:c.name}`),null):new Me(this.buffer,h,u,this)}toString(){let e="";if(this.typeInfo instanceof s)if("f32"===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`}else if("i32"===this.typeInfo.format.name){const t=new Int32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`}else if("u32"===this.typeInfo.format.name){const t=new Uint32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`}else if("vec2f"===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}]`;for(let n=1;n<t.length/2;++n)e+=`, [${t[2*n]}, ${t[2*n+1]}]`}else if("vec3f"===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}, ${t[2]}]`;for(let n=4;n<t.length;n+=4)e+=`, [${t[n]}, ${t[n+1]}, ${t[n+2]}]`}else if("vec4f"===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}, ${t[2]}, ${t[3]}]`;for(let n=4;n<t.length;n+=4)e+=`, [${t[n]}, ${t[n+1]}, ${t[n+2]}, ${t[n+3]}]`}else e="[...]";else this.typeInfo instanceof n?e+="{...}":e="[...]";return e}}class Ue extends Ce{constructor(e,t,n,s){super(t,null),this.data=e,this.descriptor=n,this.view=s}clone(){return new Ue(this.data,this.typeInfo,this.descriptor,this.view)}get width(){var e,t;const n=this.descriptor.size;return n instanceof Array&&n.length>0?null!==(e=n[0])&&void 0!==e?e:0:n instanceof Object&&null!==(t=n.width)&&void 0!==t?t:0}get height(){var e,t;const n=this.descriptor.size;return n instanceof Array&&n.length>1?null!==(e=n[1])&&void 0!==e?e:0:n instanceof Object&&null!==(t=n.height)&&void 0!==t?t:0}get depthOrArrayLayers(){var e,t;const n=this.descriptor.size;return n instanceof Array&&n.length>2?null!==(e=n[2])&&void 0!==e?e:0:n instanceof Object&&null!==(t=n.depthOrArrayLayers)&&void 0!==t?t:0}get format(){var e;return this.descriptor&&null!==(e=this.descriptor.format)&&void 0!==e?e:"rgba8unorm"}get sampleCount(){var e;return this.descriptor&&null!==(e=this.descriptor.sampleCount)&&void 0!==e?e:1}get mipLevelCount(){var e;return this.descriptor&&null!==(e=this.descriptor.mipLevelCount)&&void 0!==e?e:1}get dimension(){var e;return this.descriptor&&null!==(e=this.descriptor.dimension)&&void 0!==e?e:"2d"}getMipLevelSize(e){if(e>=this.mipLevelCount)return[0,0,0];const t=[this.width,this.height,this.depthOrArrayLayers];for(let n=0;n<t.length;++n)t[n]=Math.max(1,t[n]>>e);return t}get texelByteSize(){const e=this.format,t=I[e];return t?t.isDepthStencil?4:t.bytesPerBlock:0}get bytesPerRow(){return this.width*this.texelByteSize}get isDepthStencil(){const e=this.format,t=I[e];return!!t&&t.isDepthStencil}getGpuSize(){const e=this.format,t=I[e],n=this.width;if(!e||n<=0||!t)return-1;const s=this.height,r=this.depthOrArrayLayers,a=this.dimension;return n/t.blockWidth*("1d"===a?1:s/t.blockHeight)*t.bytesPerBlock*r}getPixel(e,t,n=0,s=0){const r=this.texelByteSize,a=this.bytesPerRow,i=this.height,o=this.data[s];return function v(e,t,n,s,r,a,i,o,l){const c=s*(i>>=r)*(a>>=r)+n*i+t*o;switch(l){case"r8unorm":return[w(e,c,"8unorm",1)[0]];case"r8snorm":return[w(e,c,"8snorm",1)[0]];case"r8uint":return[w(e,c,"8uint",1)[0]];case"r8sint":return[w(e,c,"8sint",1)[0]];case"rg8unorm":{const t=w(e,c,"8unorm",2);return[t[0],t[1]]}case"rg8snorm":{const t=w(e,c,"8snorm",2);return[t[0],t[1]]}case"rg8uint":{const t=w(e,c,"8uint",2);return[t[0],t[1]]}case"rg8sint":{const t=w(e,c,"8sint",2);return[t[0],t[1]]}case"rgba8unorm-srgb":case"rgba8unorm":{const t=w(e,c,"8unorm",4);return[t[0],t[1],t[2],t[3]]}case"rgba8snorm":{const t=w(e,c,"8snorm",4);return[t[0],t[1],t[2],t[3]]}case"rgba8uint":{const t=w(e,c,"8uint",4);return[t[0],t[1],t[2],t[3]]}case"rgba8sint":{const t=w(e,c,"8sint",4);return[t[0],t[1],t[2],t[3]]}case"bgra8unorm-srgb":case"bgra8unorm":{const t=w(e,c,"8unorm",4);return[t[2],t[1],t[0],t[3]]}case"r16uint":return[w(e,c,"16uint",1)[0]];case"r16sint":return[w(e,c,"16sint",1)[0]];case"r16float":return[w(e,c,"16float",1)[0]];case"rg16uint":{const t=w(e,c,"16uint",2);return[t[0],t[1]]}case"rg16sint":{const t=w(e,c,"16sint",2);return[t[0],t[1]]}case"rg16float":{const t=w(e,c,"16float",2);return[t[0],t[1]]}case"rgba16uint":{const t=w(e,c,"16uint",4);return[t[0],t[1],t[2],t[3]]}case"rgba16sint":{const t=w(e,c,"16sint",4);return[t[0],t[1],t[2],t[3]]}case"rgba16float":{const t=w(e,c,"16float",4);return[t[0],t[1],t[2],t[3]]}case"r32uint":return[w(e,c,"32uint",1)[0]];case"r32sint":return[w(e,c,"32sint",1)[0]];case"depth16unorm":case"depth24plus":case"depth24plus-stencil8":case"depth32float":case"depth32float-stencil8":case"r32float":return[w(e,c,"32float",1)[0]];case"rg32uint":{const t=w(e,c,"32uint",2);return[t[0],t[1]]}case"rg32sint":{const t=w(e,c,"32sint",2);return[t[0],t[1]]}case"rg32float":{const t=w(e,c,"32float",2);return[t[0],t[1]]}case"rgba32uint":{const t=w(e,c,"32uint",4);return[t[0],t[1],t[2],t[3]]}case"rgba32sint":{const t=w(e,c,"32sint",4);return[t[0],t[1],t[2],t[3]]}case"rgba32float":{const t=w(e,c,"32float",4);return[t[0],t[1],t[2],t[3]]}case"rg11b10ufloat":{const t=new Uint32Array(e.buffer,c,1)[0],n=(4192256&t)>>11,s=(4290772992&t)>>22;return[b(2047&t),b(n),function(e){const t=112+(e>>5&31)<<23|(31&e)<<18;return x[0]=t,y[0]}(s),1]}}return null}(new Uint8Array(o),e,t,n,s,i,a,r,this.format)}setPixel(e,t,n,s,r){const a=this.texelByteSize,i=this.bytesPerRow,o=this.height,l=this.data[s];!function(e,t,n,s,r,a,i,o,l,c){const u=s*(i>>=r)*(a>>=r)+n*i+t*o;switch(l){case"r8unorm":return void k(e,u,"8unorm",1,c);case"r8snorm":return void k(e,u,"8snorm",1,c);case"r8uint":return void k(e,u,"8uint",1,c);case"r8sint":return void k(e,u,"8sint",1,c);case"rg8unorm":return void k(e,u,"8unorm",2,c);case"rg8snorm":return void k(e,u,"8snorm",2,c);case"rg8uint":return void k(e,u,"8uint",2,c);case"rg8sint":return void k(e,u,"8sint",2,c);case"rgba8unorm-srgb":case"rgba8unorm":case"bgra8unorm-srgb":case"bgra8unorm":return void k(e,u,"8unorm",4,c);case"rgba8snorm":return void k(e,u,"8snorm",4,c);case"rgba8uint":return void k(e,u,"8uint",4,c);case"rgba8sint":return void k(e,u,"8sint",4,c);case"r16uint":return void k(e,u,"16uint",1,c);case"r16sint":return void k(e,u,"16sint",1,c);case"r16float":return void k(e,u,"16float",1,c);case"rg16uint":return void k(e,u,"16uint",2,c);case"rg16sint":return void k(e,u,"16sint",2,c);case"rg16float":return void k(e,u,"16float",2,c);case"rgba16uint":return void k(e,u,"16uint",4,c);case"rgba16sint":return void k(e,u,"16sint",4,c);case"rgba16float":return void k(e,u,"16float",4,c);case"r32uint":return void k(e,u,"32uint",1,c);case"r32sint":return void k(e,u,"32sint",1,c);case"depth16unorm":case"depth24plus":case"depth24plus-stencil8":case"depth32float":case"depth32float-stencil8":case"r32float":return void k(e,u,"32float",1,c);case"rg32uint":return void k(e,u,"32uint",2,c);case"rg32sint":return void k(e,u,"32sint",2,c);case"rg32float":return void k(e,u,"32float",2,c);case"rgba32uint":return void k(e,u,"32uint",4,c);case"rgba32sint":return void k(e,u,"32sint",4,c);case"rgba32float":return void k(e,u,"32float",4,c);case"rg11b10ufloat":console.error("TODO: rg11b10ufloat not supported for writing")}}(new Uint8Array(l),e,t,n,s,o,i,a,this.format,r)}}(e=>{e[e.token=0]="token",e[e.keyword=1]="keyword",e[e.reserved=2]="reserved"})(q||(q={}));class Pe{constructor(e,t,n){this.name=e,this.type=t,this.rule=n}toString(){return this.name}}class We{}W=We,We.none=new Pe("",q.reserved,""),We.eof=new Pe("EOF",q.token,""),We.reserved={asm:new Pe("asm",q.reserved,"asm"),bf16:new Pe("bf16",q.reserved,"bf16"),do:new Pe("do",q.reserved,"do"),enum:new Pe("enum",q.reserved,"enum"),f16:new Pe("f16",q.reserved,"f16"),f64:new Pe("f64",q.reserved,"f64"),handle:new Pe("handle",q.reserved,"handle"),i8:new Pe("i8",q.reserved,"i8"),i16:new Pe("i16",q.reserved,"i16"),i64:new Pe("i64",q.reserved,"i64"),mat:new Pe("mat",q.reserved,"mat"),premerge:new Pe("premerge",q.reserved,"premerge"),regardless:new Pe("regardless",q.reserved,"regardless"),typedef:new Pe("typedef",q.reserved,"typedef"),u8:new Pe("u8",q.reserved,"u8"),u16:new Pe("u16",q.reserved,"u16"),u64:new Pe("u64",q.reserved,"u64"),unless:new Pe("unless",q.reserved,"unless"),using:new Pe("using",q.reserved,"using"),vec:new Pe("vec",q.reserved,"vec"),void:new Pe("void",q.reserved,"void")},We.keywords={array:new Pe("array",q.keyword,"array"),atomic:new Pe("atomic",q.keyword,"atomic"),bool:new Pe("bool",q.keyword,"bool"),f32:new Pe("f32",q.keyword,"f32"),i32:new Pe("i32",q.keyword,"i32"),mat2x2:new Pe("mat2x2",q.keyword,"mat2x2"),mat2x3:new Pe("mat2x3",q.keyword,"mat2x3"),mat2x4:new Pe("mat2x4",q.keyword,"mat2x4"),mat3x2:new Pe("mat3x2",q.keyword,"mat3x2"),mat3x3:new Pe("mat3x3",q.keyword,"mat3x3"),mat3x4:new Pe("mat3x4",q.keyword,"mat3x4"),mat4x2:new Pe("mat4x2",q.keyword,"mat4x2"),mat4x3:new Pe("mat4x3",q.keyword,"mat4x3"),mat4x4:new Pe("mat4x4",q.keyword,"mat4x4"),ptr:new Pe("ptr",q.keyword,"ptr"),sampler:new Pe("sampler",q.keyword,"sampler"),sampler_comparison:new Pe("sampler_comparison",q.keyword,"sampler_comparison"),struct:new Pe("struct",q.keyword,"struct"),texture_1d:new Pe("texture_1d",q.keyword,"texture_1d"),texture_2d:new Pe("texture_2d",q.keyword,"texture_2d"),texture_2d_array:new Pe("texture_2d_array",q.keyword,"texture_2d_array"),texture_3d:new Pe("texture_3d",q.keyword,"texture_3d"),texture_cube:new Pe("texture_cube",q.keyword,"texture_cube"),texture_cube_array:new Pe("texture_cube_array",q.keyword,"texture_cube_array"),texture_multisampled_2d:new Pe("texture_multisampled_2d",q.keyword,"texture_multisampled_2d"),texture_storage_1d:new Pe("texture_storage_1d",q.keyword,"texture_storage_1d"),texture_storage_2d:new Pe("texture_storage_2d",q.keyword,"texture_storage_2d"),texture_storage_2d_array:new Pe("texture_storage_2d_array",q.keyword,"texture_storage_2d_array"),texture_storage_3d:new Pe("texture_storage_3d",q.keyword,"texture_storage_3d"),texture_depth_2d:new Pe("texture_depth_2d",q.keyword,"texture_depth_2d"),texture_depth_2d_array:new Pe("texture_depth_2d_array",q.keyword,"texture_depth_2d_array"),texture_depth_cube:new Pe("texture_depth_cube",q.keyword,"texture_depth_cube"),texture_depth_cube_array:new Pe("texture_depth_cube_array",q.keyword,"texture_depth_cube_array"),texture_depth_multisampled_2d:new Pe("texture_depth_multisampled_2d",q.keyword,"texture_depth_multisampled_2d"),texture_external:new Pe("texture_external",q.keyword,"texture_external"),u32:new Pe("u32",q.keyword,"u32"),vec2:new Pe("vec2",q.keyword,"vec2"),vec3:new Pe("vec3",q.keyword,"vec3"),vec4:new Pe("vec4",q.keyword,"vec4"),bitcast:new Pe("bitcast",q.keyword,"bitcast"),block:new Pe("block",q.keyword,"block"),break:new Pe("break",q.keyword,"break"),case:new Pe("case",q.keyword,"case"),continue:new Pe("continue",q.keyword,"continue"),continuing:new Pe("continuing",q.keyword,"continuing"),default:new Pe("default",q.keyword,"default"),diagnostic:new Pe("diagnostic",q.keyword,"diagnostic"),discard:new Pe("discard",q.keyword,"discard"),else:new Pe("else",q.keyword,"else"),enable:new Pe("enable",q.keyword,"enable"),fallthrough:new Pe("fallthrough",q.keyword,"fallthrough"),false:new Pe("false",q.keyword,"false"),fn:new Pe("fn",q.keyword,"fn"),for:new Pe("for",q.keyword,"for"),function:new Pe("function",q.keyword,"function"),if:new Pe("if",q.keyword,"if"),let:new Pe("let",q.keyword,"let"),const:new Pe("const",q.keyword,"const"),loop:new Pe("loop",q.keyword,"loop"),while:new Pe("while",q.keyword,"while"),private:new Pe("private",q.keyword,"private"),read:new Pe("read",q.keyword,"read"),read_write:new Pe("read_write",q.keyword,"read_write"),return:new Pe("return",q.keyword,"return"),requires:new Pe("requires",q.keyword,"requires"),storage:new Pe("storage",q.keyword,"storage"),switch:new Pe("switch",q.keyword,"switch"),true:new Pe("true",q.keyword,"true"),alias:new Pe("alias",q.keyword,"alias"),type:new Pe("type",q.keyword,"type"),uniform:new Pe("uniform",q.keyword,"uniform"),var:new Pe("var",q.keyword,"var"),override:new Pe("override",q.keyword,"override"),workgroup:new Pe("workgroup",q.keyword,"workgroup"),write:new Pe("write",q.keyword,"write"),r8unorm:new Pe("r8unorm",q.keyword,"r8unorm"),r8snorm:new Pe("r8snorm",q.keyword,"r8snorm"),r8uint:new Pe("r8uint",q.keyword,"r8uint"),r8sint:new Pe("r8sint",q.keyword,"r8sint"),r16uint:new Pe("r16uint",q.keyword,"r16uint"),r16sint:new Pe("r16sint",q.keyword,"r16sint"),r16float:new Pe("r16float",q.keyword,"r16float"),rg8unorm:new Pe("rg8unorm",q.keyword,"rg8unorm"),rg8snorm:new Pe("rg8snorm",q.keyword,"rg8snorm"),rg8uint:new Pe("rg8uint",q.keyword,"rg8uint"),rg8sint:new Pe("rg8sint",q.keyword,"rg8sint"),r32uint:new Pe("r32uint",q.keyword,"r32uint"),r32sint:new Pe("r32sint",q.keyword,"r32sint"),r32float:new Pe("r32float",q.keyword,"r32float"),rg16uint:new Pe("rg16uint",q.keyword,"rg16uint"),rg16sint:new Pe("rg16sint",q.keyword,"rg16sint"),rg16float:new Pe("rg16float",q.keyword,"rg16float"),rgba8unorm:new Pe("rgba8unorm",q.keyword,"rgba8unorm"),rgba8unorm_srgb:new Pe("rgba8unorm_srgb",q.keyword,"rgba8unorm_srgb"),rgba8snorm:new Pe("rgba8snorm",q.keyword,"rgba8snorm"),rgba8uint:new Pe("rgba8uint",q.keyword,"rgba8uint"),rgba8sint:new Pe("rgba8sint",q.keyword,"rgba8sint"),bgra8unorm:new Pe("bgra8unorm",q.keyword,"bgra8unorm"),bgra8unorm_srgb:new Pe("bgra8unorm_srgb",q.keyword,"bgra8unorm_srgb"),rgb10a2unorm:new Pe("rgb10a2unorm",q.keyword,"rgb10a2unorm"),rg11b10float:new Pe("rg11b10float",q.keyword,"rg11b10float"),rg32uint:new Pe("rg32uint",q.keyword,"rg32uint"),rg32sint:new Pe("rg32sint",q.keyword,"rg32sint"),rg32float:new Pe("rg32float",q.keyword,"rg32float"),rgba16uint:new Pe("rgba16uint",q.keyword,"rgba16uint"),rgba16sint:new Pe("rgba16sint",q.keyword,"rgba16sint"),rgba16float:new Pe("rgba16float",q.keyword,"rgba16float"),rgba32uint:new Pe("rgba32uint",q.keyword,"rgba32uint"),rgba32sint:new Pe("rgba32sint",q.keyword,"rgba32sint"),rgba32float:new Pe("rgba32float",q.keyword,"rgba32float"),static_assert:new Pe("static_assert",q.keyword,"static_assert")},We.tokens={decimal_float_literal:new Pe("decimal_float_literal",q.token,/((-?[0-9]*\.[0-9]+|-?[0-9]+\.[0-9]*)((e|E)(\+|-)?[0-9]+)?[fh]?)|(-?[0-9]+(e|E)(\+|-)?[0-9]+[fh]?)|(-?[0-9]+[fh])/),hex_float_literal:new Pe("hex_float_literal",q.token,/-?0x((([0-9a-fA-F]*\.[0-9a-fA-F]+|[0-9a-fA-F]+\.[0-9a-fA-F]*)((p|P)(\+|-)?[0-9]+[fh]?)?)|([0-9a-fA-F]+(p|P)(\+|-)?[0-9]+[fh]?))/),int_literal:new Pe("int_literal",q.token,/-?0x[0-9a-fA-F]+|0i?|-?[1-9][0-9]*i?/),uint_literal:new Pe("uint_literal",q.token,/0x[0-9a-fA-F]+u|0u|[1-9][0-9]*u/),name:new Pe("name",q.token,/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/u),ident:new Pe("ident",q.token,/[_a-zA-Z][0-9a-zA-Z_]*/),and:new Pe("and",q.token,"&"),and_and:new Pe("and_and",q.token,"&&"),arrow:new Pe("arrow ",q.token,"->"),attr:new Pe("attr",q.token,"@"),forward_slash:new Pe("forward_slash",q.token,"/"),bang:new Pe("bang",q.token,"!"),bracket_left:new Pe("bracket_left",q.token,"["),bracket_right:new Pe("bracket_right",q.token,"]"),brace_left:new Pe("brace_left",q.token,"{"),brace_right:new Pe("brace_right",q.token,"}"),colon:new Pe("colon",q.token,":"),comma:new Pe("comma",q.token,","),equal:new Pe("equal",q.token,"="),equal_equal:new Pe("equal_equal",q.token,"=="),not_equal:new Pe("not_equal",q.token,"!="),greater_than:new Pe("greater_than",q.token,">"),greater_than_equal:new Pe("greater_than_equal",q.token,">="),shift_right:new Pe("shift_right",q.token,">>"),less_than:new Pe("less_than",q.token,"<"),less_than_equal:new Pe("less_than_equal",q.token,"<="),shift_left:new Pe("shift_left",q.token,"<<"),modulo:new Pe("modulo",q.token,"%"),minus:new Pe("minus",q.token,"-"),minus_minus:new Pe("minus_minus",q.token,"--"),period:new Pe("period",q.token,"."),plus:new Pe("plus",q.token,"+"),plus_plus:new Pe("plus_plus",q.token,"++"),or:new Pe("or",q.token,"|"),or_or:new Pe("or_or",q.token,"||"),paren_left:new Pe("paren_left",q.token,"("),paren_right:new Pe("paren_right",q.token,")"),semicolon:new Pe("semicolon",q.token,";"),star:new Pe("star",q.token,"*"),tilde:new Pe("tilde",q.token,"~"),underscore:new Pe("underscore",q.token,"_"),xor:new Pe("xor",q.token,"^"),plus_equal:new Pe("plus_equal",q.token,"+="),minus_equal:new Pe("minus_equal",q.token,"-="),times_equal:new Pe("times_equal",q.token,"*="),division_equal:new Pe("division_equal",q.token,"/="),modulo_equal:new Pe("modulo_equal",q.token,"%="),and_equal:new Pe("and_equal",q.token,"&="),or_equal:new Pe("or_equal",q.token,"|="),xor_equal:new Pe("xor_equal",q.token,"^="),shift_right_equal:new Pe("shift_right_equal",q.token,">>="),shift_left_equal:new Pe("shift_left_equal",q.token,"<<=")},We.simpleTokens={"@":W.tokens.attr,"{":W.tokens.brace_left,"}":W.tokens.brace_right,":":W.tokens.colon,",":W.tokens.comma,"(":W.tokens.paren_left,")":W.tokens.paren_right,";":W.tokens.semicolon},We.literalTokens={"&":W.tokens.and,"&&":W.tokens.and_and,"->":W.tokens.arrow,"/":W.tokens.forward_slash,"!":W.tokens.bang,"[":W.tokens.bracket_left,"]":W.tokens.bracket_right,"=":W.tokens.equal,"==":W.tokens.equal_equal,"!=":W.tokens.not_equal,">":W.tokens.greater_than,">=":W.tokens.greater_than_equal,">>":W.tokens.shift_right,"<":W.tokens.less_than,"<=":W.tokens.less_than_equal,"<<":W.tokens.shift_left,"%":W.tokens.modulo,"-":W.tokens.minus,"--":W.tokens.minus_minus,".":W.tokens.period,"+":W.tokens.plus,"++":W.tokens.plus_plus,"|":W.tokens.or,"||":W.tokens.or_or,"*":W.tokens.star,"~":W.tokens.tilde,_:W.tokens.underscore,"^":W.tokens.xor,"+=":W.tokens.plus_equal,"-=":W.tokens.minus_equal,"*=":W.tokens.times_equal,"/=":W.tokens.division_equal,"%=":W.tokens.modulo_equal,"&=":W.tokens.and_equal,"|=":W.tokens.or_equal,"^=":W.tokens.xor_equal,">>=":W.tokens.shift_right_equal,"<<=":W.tokens.shift_left_equal},We.regexTokens={decimal_float_literal:W.tokens.decimal_float_literal,hex_float_literal:W.tokens.hex_float_literal,int_literal:W.tokens.int_literal,uint_literal:W.tokens.uint_literal,ident:W.tokens.ident},We.storage_class=[W.keywords.function,W.keywords.private,W.keywords.workgroup,W.keywords.uniform,W.keywords.storage],We.access_mode=[W.keywords.read,W.keywords.write,W.keywords.read_write],We.sampler_type=[W.keywords.sampler,W.keywords.sampler_comparison],We.sampled_texture_type=[W.keywords.texture_1d,W.keywords.texture_2d,W.keywords.texture_2d_array,W.keywords.texture_3d,W.keywords.texture_cube,W.keywords.texture_cube_array],We.multisampled_texture_type=[W.keywords.texture_multisampled_2d],We.storage_texture_type=[W.keywords.texture_storage_1d,W.keywords.texture_storage_2d,W.keywords.texture_storage_2d_array,W.keywords.texture_storage_3d],We.depth_texture_type=[W.keywords.texture_depth_2d,W.keywords.texture_depth_2d_array,W.keywords.texture_depth_cube,W.keywords.texture_depth_cube_array,W.keywords.texture_depth_multisampled_2d],We.texture_external_type=[W.keywords.texture_external],We.any_texture_type=[...W.sampled_texture_type,...W.multisampled_texture_type,...W.storage_texture_type,...W.depth_texture_type,...W.texture_external_type],We.texel_format=[W.keywords.r8unorm,W.keywords.r8snorm,W.keywords.r8uint,W.keywords.r8sint,W.keywords.r16uint,W.keywords.r16sint,W.keywords.r16float,W.keywords.rg8unorm,W.keywords.rg8snorm,W.keywords.rg8uint,W.keywords.rg8sint,W.keywords.r32uint,W.keywords.r32sint,W.keywords.r32float,W.keywords.rg16uint,W.keywords.rg16sint,W.keywords.rg16float,W.keywords.rgba8unorm,W.keywords.rgba8unorm_srgb,W.keywords.rgba8snorm,W.keywords.rgba8uint,W.keywords.rgba8sint,W.keywords.bgra8unorm,W.keywords.bgra8unorm_srgb,W.keywords.rgb10a2unorm,W.keywords.rg11b10float,W.keywords.rg32uint,W.keywords.rg32sint,W.keywords.rg32float,W.keywords.rgba16uint,W.keywords.rgba16sint,W.keywords.rgba16float,W.keywords.rgba32uint,W.keywords.rgba32sint,W.keywords.rgba32float],We.const_literal=[W.tokens.int_literal,W.tokens.uint_literal,W.tokens.decimal_float_literal,W.tokens.hex_float_literal,W.keywords.true,W.keywords.false],We.literal_or_ident=[W.tokens.ident,W.tokens.int_literal,W.tokens.uint_literal,W.tokens.decimal_float_literal,W.tokens.hex_float_literal,W.tokens.name],We.element_count_expression=[W.tokens.int_literal,W.tokens.uint_literal,W.tokens.ident],We.template_types=[W.keywords.vec2,W.keywords.vec3,W.keywords.vec4,W.keywords.mat2x2,W.keywords.mat2x3,W.keywords.mat2x4,W.keywords.mat3x2,W.keywords.mat3x3,W.keywords.mat3x4,W.keywords.mat4x2,W.keywords.mat4x3,W.keywords.mat4x4,W.keywords.atomic,W.keywords.bitcast,...W.any_texture_type],We.attribute_name=[W.tokens.ident,W.keywords.block,W.keywords.diagnostic],We.assignment_operators=[W.tokens.equal,W.tokens.plus_equal,W.tokens.minus_equal,W.tokens.times_equal,W.tokens.division_equal,W.tokens.modulo_equal,W.tokens.and_equal,W.tokens.or_equal,W.tokens.xor_equal,W.tokens.shift_right_equal,W.tokens.shift_left_equal],We.increment_operators=[W.tokens.plus_plus,W.tokens.minus_minus];class qe{constructor(e,t,n,s,r){this.type=e,this.lexeme=t,this.line=n,this.start=s,this.end=r}toString(){return this.lexeme}isTemplateType(){return-1!=We.template_types.indexOf(this.type)}isArrayType(){return this.type==We.keywords.array}isArrayOrTemplateType(){return this.isArrayType()||this.isTemplateType()}}class He{constructor(e){this._tokens=[],this._start=0,this._current=0,this._line=1,this._source=null!=e?e:""}scanTokens(){for(;!this._isAtEnd();)if(this._start=this._current,!this.scanToken())throw`Invalid syntax at line ${this._line}`;return this._tokens.push(new qe(We.eof,"",this._line,this._current,this._current)),this._tokens}scanToken(){let e=this._advance();if("\n"==e)return this._line++,!0;if(this._isWhitespace(e))return!0;if("/"==e){if("/"==this._peekAhead()){for(;"\n"!=e;){if(this._isAtEnd())return!0;e=this._advance()}return this._line++,!0}if("*"==this._peekAhead()){this._advance();let t=1;for(;t>0;){if(this._isAtEnd())return!0;if(e=this._advance(),"\n"==e)this._line++;else if("*"==e){if("/"==this._peekAhead()&&(this._advance(),t--,0==t))return!0}else"/"==e&&"*"==this._peekAhead()&&(this._advance(),t++)}return!0}}const t=We.simpleTokens[e];if(t)return this._addToken(t),!0;let n=We.none;const s=this._isAlpha(e),r="_"===e;if(this._isAlphaNumeric(e)){let t=this._peekAhead();for(;this._isAlphaNumeric(t);)e+=this._advance(),t=this._peekAhead()}if(s){const t=We.keywords[e];if(t)return this._addToken(t),!0}if(s||r)return this._addToken(We.tokens.ident),!0;for(;;){let t=this._findType(e);const s=this._peekAhead();if("-"==e&&this._tokens.length>0){if("="==s)return this._current++,e+=s,this._addToken(We.tokens.minus_equal),!0;if("-"==s)return this._current++,e+=s,this._addToken(We.tokens.minus_minus),!0;const n=this._tokens.length-1;if((-1!=We.literal_or_ident.indexOf(this._tokens[n].type)||this._tokens[n].type==We.tokens.paren_right)&&">"!=s)return this._addToken(t),!0}if(">"==e&&(">"==s||"="==s)){let e=!1,n=this._tokens.length-1;for(let t=0;t<5&&n>=0&&-1===We.assignment_operators.indexOf(this._tokens[n].type);++t,--n)if(this._tokens[n].type===We.tokens.less_than){n>0&&this._tokens[n-1].isArrayOrTemplateType()&&(e=!0);break}if(e)return this._addToken(t),!0}if(t===We.none){let s=e,r=0;const a=2;for(let e=0;e<a;++e)if(s+=this._peekAhead(e),t=this._findType(s),t!==We.none){r=e;break}if(t===We.none)return n!==We.none&&(this._current--,this._addToken(n),!0);e=s,this._current+=r+1}if(n=t,this._isAtEnd())break;e+=this._advance()}return n!==We.none&&(this._addToken(n),!0)}_findType(e){for(const t in We.regexTokens){const n=We.regexTokens[t];if(this._match(e,n.rule))return n}return We.literalTokens[e]||We.none}_match(e,t){const n=t.exec(e);return n&&0==n.index&&n[0]==e}_isAtEnd(){return this._current>=this._source.length}_isAlpha(e){return!this._isNumeric(e)&&!this._isWhitespace(e)&&"_"!==e&&"."!==e&&"("!==e&&")"!==e&&"["!==e&&"]"!==e&&"{"!==e&&"}"!==e&&","!==e&&";"!==e&&":"!==e&&"="!==e&&"!"!==e&&"<"!==e&&">"!==e&&"+"!==e&&"-"!==e&&"*"!==e&&"/"!==e&&"%"!==e&&"&"!==e&&"|"!==e&&"^"!==e&&"~"!==e&&"@"!==e&&"#"!==e&&"?"!==e&&"'"!==e&&"`"!==e&&'"'!==e&&"\\"!==e&&"\n"!==e&&"\r"!==e&&"\t"!==e&&"\0"!==e}_isNumeric(e){return e>="0"&&e<="9"}_isAlphaNumeric(e){return this._isAlpha(e)||this._isNumeric(e)||"_"===e}_isWhitespace(e){return" "==e||"\t"==e||"\r"==e}_advance(e=0){let t=this._source[this._current];return e=e||0,e++,this._current+=e,t}_peekAhead(e=0){return e=e||0,this._current+e>=this._source.length?"\0":this._source[this._current+e]}_addToken(e){const t=this._source.substring(this._start,this._current);this._tokens.push(new qe(e,t,this._line,this._start,this._current))}}function ze(e){return Array.isArray(e)||(null==e?void 0:e.buffer)instanceof ArrayBuffer}const Re=new Float32Array(1),Ge=new Uint32Array(Re.buffer),Xe=new Uint32Array(Re.buffer),je=new Int32Array(1),Ze=new Float32Array(je.buffer),Qe=new Uint32Array(je.buffer),Ye=new Uint32Array(1),Ke=new Float32Array(Ye.buffer),Je=new Int32Array(Ye.buffer);function et(e,t,n){if(t===n)return e;if("f32"===t){if("i32"===n||"x32"===n)return Re[0]=e,Ge[0];if("u32"===n)return Re[0]=e,Xe[0]}else if("i32"===t||"x32"===t){if("f32"===n)return je[0]=e,Ze[0];if("u32"===n)return je[0]=e,Qe[0]}else if("u32"===t){if("f32"===n)return Ye[0]=e,Ke[0];if("i32"===n||"x32"===n)return Ye[0]=e,Je[0]}return console.error(`Unsupported cast from ${t} to ${n}`),e}class tt{constructor(e){this.resources=null,this.inUse=!1,this.info=null,this.node=e}}class nt{constructor(e,t){this.align=e,this.size=t}}class st{constructor(){this.uniforms=[],this.storage=[],this.textures=[],this.samplers=[],this.aliases=[],this.overrides=[],this.structs=[],this.entry=new p,this.functions=[],this._types=new Map,this._functions=new Map}_isStorageTexture(e){return"texture_storage_1d"==e.name||"texture_storage_2d"==e.name||"texture_storage_2d_array"==e.name||"texture_storage_3d"==e.name}updateAST(e){for(const t of e)t instanceof L&&this._functions.set(t.name,new tt(t));for(const t of e)if(t instanceof ae){const e=this.getTypeInfo(t,null);e instanceof n&&this.structs.push(e)}for(const t of e)if(t instanceof J)this.aliases.push(this._getAliasInfo(t));else if(t instanceof B){const e=t,n=this._getAttributeNum(e.attributes,"id",0),s=null!=e.type?this.getTypeInfo(e.type,e.attributes):null;this.overrides.push(new u(e.name,s,e.attributes,n))}else if(this._isUniformVar(t)){const e=t,n=this._getAttributeNum(e.attributes,"group",0),s=this._getAttributeNum(e.attributes,"binding",0),r=this.getTypeInfo(e.type,e.attributes),o=new i(e.name,r,n,s,e.attributes,a.Uniform,e.access);o.access||(o.access="read"),this.uniforms.push(o)}else if(this._isStorageVar(t)){const e=t,n=this._getAttributeNum(e.attributes,"group",0),s=this._getAttributeNum(e.attributes,"binding",0),r=this.getTypeInfo(e.type,e.attributes),o=this._isStorageTexture(r),l=new i(e.name,r,n,s,e.attributes,o?a.StorageTexture:a.Storage,e.access);l.access||(l.access="read"),this.storage.push(l)}else if(this._isTextureVar(t)){const e=t,n=this._getAttributeNum(e.attributes,"group",0),s=this._getAttributeNum(e.attributes,"binding",0),r=this.getTypeInfo(e.type,e.attributes),o=this._isStorageTexture(r),l=new i(e.name,r,n,s,e.attributes,o?a.StorageTexture:a.Texture,e.access);l.access||(l.access="read"),o?this.storage.push(l):this.textures.push(l)}else if(this._isSamplerVar(t)){const e=t,n=this._getAttributeNum(e.attributes,"group",0),s=this._getAttributeNum(e.attributes,"binding",0),r=this.getTypeInfo(e.type,e.attributes),o=new i(e.name,r,n,s,e.attributes,a.Sampler,e.access);this.samplers.push(o)}else if(t instanceof L){const e=this._getAttribute(t,"vertex"),n=this._getAttribute(t,"fragment"),s=this._getAttribute(t,"compute"),r=e||n||s,a=new f(t.name,null==r?void 0:r.name,t.attributes);a.attributes=t.attributes,a.startLine=t.startLine,a.endLine=t.endLine,this.functions.push(a),this._functions.get(t.name).info=a,r&&(this._functions.get(t.name).inUse=!0,a.inUse=!0,a.resources=this._findResources(t,!!r),a.inputs=this._getInputs(t.args),a.outputs=this._getOutputs(t.returnType),this.entry[r.name].push(a)),a.arguments=t.args.map((e=>new h(e.name,this.getTypeInfo(e.type,e.attributes),e.attributes))),a.returnType=t.returnType?this.getTypeInfo(t.returnType,t.attributes):null}for(const e of this._functions.values())e.info&&(e.info.inUse=e.inUse,this._addCalls(e.node,e.info.calls));for(const e of this._functions.values())e.node.search((t=>{var n,s,r;if(t instanceof Le){if(t.value)if(ze(t.value))for(const s of t.value)for(const t of this.overrides)s===t.name&&(null===(n=e.info)||void 0===n||n.overrides.push(t));else for(const n of this.overrides)t.value===n.name&&(null===(s=e.info)||void 0===s||s.overrides.push(n))}else if(t instanceof de)for(const n of this.overrides)t.name===n.name&&(null===(r=e.info)||void 0===r||r.overrides.push(n))}));for(const e of this.uniforms)this._markStructsInUse(e.type);for(const e of this.storage)this._markStructsInUse(e.type)}getStructInfo(e){for(const t of this.structs)if(t.name==e)return t;return null}getOverrideInfo(e){for(const t of this.overrides)if(t.name==e)return t;return null}_markStructsInUse(e){if(e)if(e.isStruct){if(e.inUse=!0,e.members)for(const t of e.members)this._markStructsInUse(t.type)}else if(e.isArray)this._markStructsInUse(e.format);else if(e.isTemplate)e.format&&this._markStructsInUse(e.format);else{const t=this._getAlias(e.name);t&&this._markStructsInUse(t)}}_addCalls(e,t){var n;for(const s of e.calls){const e=null===(n=this._functions.get(s.name))||void 0===n?void 0:n.info;e&&t.add(e)}}findResource(e,t,n){if(n){for(const s of this.entry.compute)if(s.name===n)for(const n of s.resources)if(n.group==e&&n.binding==t)return n;for(const s of this.entry.vertex)if(s.name===n)for(const n of s.resources)if(n.group==e&&n.binding==t)return n;for(const s of this.entry.fragment)if(s.name===n)for(const n of s.resources)if(n.group==e&&n.binding==t)return n}for(const n of this.uniforms)if(n.group==e&&n.binding==t)return n;for(const n of this.storage)if(n.group==e&&n.binding==t)return n;for(const n of this.textures)if(n.group==e&&n.binding==t)return n;for(const n of this.samplers)if(n.group==e&&n.binding==t)return n;return null}_findResource(e){for(const t of this.uniforms)if(t.name==e)return t;for(const t of this.storage)if(t.name==e)return t;for(const t of this.textures)if(t.name==e)return t;for(const t of this.samplers)if(t.name==e)return t;return null}_markStructsFromAST(e){const t=this.getTypeInfo(e,null);this._markStructsInUse(t)}_findResources(e,t){const n=[],s=this,r=[];return e.search((a=>{if(a instanceof S)r.push({});else if(a instanceof A)r.pop();else if(a instanceof O){const e=a;t&&null!==e.type&&this._markStructsFromAST(e.type),r.length>0&&(r[r.length-1][e.name]=e)}else if(a instanceof fe){const e=a;t&&null!==e.type&&this._markStructsFromAST(e.type)}else if(a instanceof F){const e=a;t&&null!==e.type&&this._markStructsFromAST(e.type),r.length>0&&(r[r.length-1][e.name]=e)}else if(a instanceof de){const e=a;if(r.length>0&&r[r.length-1][e.name])return;const t=s._findResource(e.name);t&&n.push(t)}else if(a instanceof pe){const r=a,i=s._functions.get(r.name);i&&(t&&(i.inUse=!0),e.calls.add(i.node),null===i.resources&&(i.resources=s._findResources(i.node,t)),n.push(...i.resources))}else if(a instanceof R){const r=a,i=s._functions.get(r.name);i&&(t&&(i.inUse=!0),e.calls.add(i.node),null===i.resources&&(i.resources=s._findResources(i.node,t)),n.push(...i.resources))}})),[...new Map(n.map((e=>[e.name,e]))).values()]}getBindGroups(){const e=[];function t(t,n){t>=e.length&&(e.length=t+1),void 0===e[t]&&(e[t]=[]),n>=e[t].length&&(e[t].length=n+1)}for(const n of this.uniforms)t(n.group,n.binding),e[n.group][n.binding]=n;for(const n of this.storage)t(n.group,n.binding),e[n.group][n.binding]=n;for(const n of this.textures)t(n.group,n.binding),e[n.group][n.binding]=n;for(const n of this.samplers)t(n.group,n.binding),e[n.group][n.binding]=n;return e}_getOutputs(e,t=void 0){if(void 0===t&&(t=[]),e instanceof ae)this._getStructOutputs(e,t);else{const n=this._getOutputInfo(e);null!==n&&t.push(n)}return t}_getStructOutputs(e,t){for(const n of e.members)if(n.type instanceof ae)this._getStructOutputs(n.type,t);else{const e=this._getAttribute(n,"location")||this._getAttribute(n,"builtin");if(null!==e){const s=this.getTypeInfo(n.type,n.type.attributes),r=this._parseInt(e.value),a=new c(n.name,s,e.name,r);t.push(a)}}}_getOutputInfo(e){const t=this._getAttribute(e,"location")||this._getAttribute(e,"builtin");if(null!==t){const n=this.getTypeInfo(e,e.attributes),s=this._parseInt(t.value);return new c("",n,t.name,s)}return null}_getInputs(e,t=void 0){void 0===t&&(t=[]);for(const n of e)if(n.type instanceof ae)this._getStructInputs(n.type,t);else{const e=this._getInputInfo(n);null!==e&&t.push(e)}return t}_getStructInputs(e,t){for(const n of e.members)if(n.type instanceof ae)this._getStructInputs(n.type,t);else{const e=this._getInputInfo(n);null!==e&&t.push(e)}}_getInputInfo(e){const t=this._getAttribute(e,"location")||this._getAttribute(e,"builtin");if(null!==t){const n=this._getAttribute(e,"interpolation"),s=this.getTypeInfo(e.type,e.attributes),r=this._parseInt(t.value),a=new l(e.name,s,t.name,r);return null!==n&&(a.interpolation=this._parseString(n.value)),a}return null}_parseString(e){return e instanceof Array&&(e=e[0]),e}_parseInt(e){e instanceof Array&&(e=e[0]);const t=parseInt(e);return isNaN(t)?e:t}_getAlias(e){for(const t of this.aliases)if(t.name==e)return t.type;return null}_getAliasInfo(e){return new o(e.name,this.getTypeInfo(e.type,null))}getTypeInfoByName(e){for(const t of this.structs)if(t.name==e)return t;for(const t of this.aliases)if(t.name==e)return t.type;return null}getTypeInfo(a,i=null){if(this._types.has(a))return this._types.get(a);if(a instanceof le){const e=a,t=e.format?this.getTypeInfo(e.format,e.attributes):null,n=new s(e.name,i);return n.format=t,n.count=e.count,this._types.set(a,n),this._updateTypeInfo(n),n}if(a instanceof ae){const e=a,s=new n(e.name,i);s.startLine=e.startLine,s.endLine=e.endLine;for(const n of e.members){const e=this.getTypeInfo(n.type,n.attributes);s.members.push(new t(n.name,e,n.attributes))}return this._types.set(a,s),this._updateTypeInfo(s),s}if(a instanceof ce){const t=a,n=t.format instanceof se,s=t.format?n?this.getTypeInfo(t.format,null):new e(t.format,null):null,o=new r(t.name,s,i,t.access);return this._types.set(a,o),this._updateTypeInfo(o),o}if(a instanceof ie){const e=a,t=e.format?this.getTypeInfo(e.format,null):null,n=new r(e.name,t,i,e.access);return this._types.set(a,n),this._updateTypeInfo(n),n}const o=new e(a.name,i);return this._types.set(a,o),this._updateTypeInfo(o),o}_updateTypeInfo(e){var t,r,a;const i=this._getTypeSize(e);if(e.size=null!==(t=null==i?void 0:i.size)&&void 0!==t?t:0,e instanceof s&&e.format){const t=this._getTypeSize(e.format);e.stride=Math.max(null!==(r=null==t?void 0:t.size)&&void 0!==r?r:0,null!==(a=null==t?void 0:t.align)&&void 0!==a?a:0),this._updateTypeInfo(e.format)}e instanceof n&&this._updateStructInfo(e)}_updateStructInfo(e){var t;let n=0,s=0,r=0,a=0;for(let i=0,o=e.members.length;i<o;++i){const o=e.members[i],l=this._getTypeSize(o);if(!l)continue;null!==(t=this._getAlias(o.type.name))&&void 0!==t||o.type;const c=l.align,u=l.size;n=this._roundUp(c,n+s),s=u,r=n,a=Math.max(a,c),o.offset=n,o.size=u,this._updateTypeInfo(o.type)}e.size=this._roundUp(a,r+s),e.align=a}_getTypeSize(r){var a,i;if(null==r)return null;const o=this._getAttributeNum(r.attributes,"size",0),l=this._getAttributeNum(r.attributes,"align",0);if(r instanceof t&&(r=r.type),r instanceof e){const e=this._getAlias(r.name);null!==e&&(r=e)}{const e=st._typeInfo[r.name];if(void 0!==e){const t="f16"===(null===(a=r.format)||void 0===a?void 0:a.name)?2:1;return new nt(Math.max(l,e.align/t),Math.max(o,e.size/t))}}{const e=st._typeInfo[r.name.substring(0,r.name.length-1)];if(e){const t="h"===r.name[r.name.length-1]?2:1;return new nt(Math.max(l,e.align/t),Math.max(o,e.size/t))}}if(r instanceof s){let e=r,t=8,n=8;const s=this._getTypeSize(e.format);return null!==s&&(n=s.size,t=s.align),n=e.count*this._getAttributeNum(null!==(i=null==r?void 0:r.attributes)&&void 0!==i?i:null,"stride",this._roundUp(t,n)),o&&(n=o),new nt(Math.max(l,t),Math.max(o,n))}if(r instanceof n){let e=0,t=0,n=0,s=0,a=0;for(const t of r.members){const r=this._getTypeSize(t.type);null!==r&&(e=Math.max(r.align,e),n=this._roundUp(r.align,n+s),s=r.size,a=n)}return t=this._roundUp(e,a+s),new nt(Math.max(l,e),Math.max(o,t))}return null}_isUniformVar(e){return e instanceof O&&"uniform"==e.storage}_isStorageVar(e){return e instanceof O&&"storage"==e.storage}_isTextureVar(e){return e instanceof O&&null!==e.type&&-1!=st._textureTypes.indexOf(e.type.name)}_isSamplerVar(e){return e instanceof O&&null!==e.type&&-1!=st._samplerTypes.indexOf(e.type.name)}_getAttribute(e,t){const n=e;if(!n||!n.attributes)return null;const s=n.attributes;for(let e of s)if(e.name==t)return e;return null}_getAttributeNum(e,t,n){if(null===e)return n;for(let s of e)if(s.name==t){let e=null!==s&&null!==s.value?s.value:n;return e instanceof Array&&(e=e[0]),"number"==typeof e?e:"string"==typeof e?parseInt(e):n}return n}_roundUp(e,t){return Math.ceil(t/e)*e}}st._typeInfo={f16:{align:2,size:2},i32:{align:4,size:4},u32:{align:4,size:4},f32:{align:4,size:4},atomic:{align:4,size:4},vec2:{align:8,size:8},vec3:{align:16,size:12},vec4:{align:16,size:16},mat2x2:{align:8,size:16},mat3x2:{align:8,size:24},mat4x2:{align:8,size:32},mat2x3:{align:16,size:32},mat3x3:{align:16,size:48},mat4x3:{align:16,size:64},mat2x4:{align:16,size:32},mat3x4:{align:16,size:48},mat4x4:{align:16,size:64}},st._textureTypes=We.any_texture_type.map((e=>e.name)),st._samplerTypes=We.sampler_type.map((e=>e.name));class rt{constructor(e,t,n){this.name=e,this.value=t,this.node=n}clone(){return new rt(this.name,this.value,this.node)}}class at{constructor(e){this.name=e.name,this.node=e}clone(){return new at(this.node)}}class it{constructor(e){this.parent=null,this.variables=new Map,this.functions=new Map,this.currentFunctionName="",e&&(this.parent=e,this.currentFunctionName=e.currentFunctionName)}getVariable(e){var t;return this.variables.has(e)?null!==(t=this.variables.get(e))&&void 0!==t?t:null:this.parent?this.parent.getVariable(e):null}getFunction(e){var t;return this.functions.has(e)?null!==(t=this.functions.get(e))&&void 0!==t?t:null:this.parent?this.parent.getFunction(e):null}createVariable(e,t,n){this.variables.set(e,new rt(e,t,null!=n?n:null))}setVariable(e,t,n){const s=this.getVariable(e);null!==s?s.value=t:this.createVariable(e,t,n)}getVariableValue(e){var t;const n=this.getVariable(e);return null!==(t=null==n?void 0:n.value)&&void 0!==t?t:null}clone(){return new it(this)}}class ot{evalExpression(e,t){return null}getTypeInfo(e){return null}getVariableName(e,t){return""}}class lt{constructor(e){this.exec=e}getTypeInfo(e){return this.exec.getTypeInfo(e)}All(e,t){const n=this.exec.evalExpression(e.args[0],t);let s=!0;if(n instanceof Be)return n.data.forEach((e=>{e||(s=!1)})),new Ve(s?1:0,this.getTypeInfo("bool"));throw new Error(`All() expects a vector argument. Line ${e.line}`)}Any(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be){const e=n.data.some((e=>e));return new Ve(e?1:0,this.getTypeInfo("bool"))}throw new Error(`Any() expects a vector argument. Line ${e.line}`)}Select(e,t){const n=this.exec.evalExpression(e.args[2],t);if(!(n instanceof Ve))throw new Error(`Select() expects a bool condition. Line ${e.line}`);return n.value?this.exec.evalExpression(e.args[1],t):this.exec.evalExpression(e.args[0],t)}ArrayLength(e,t){let n=e.args[0];n instanceof ve&&(n=n.right);const s=this.exec.evalExpression(n,t);if(s instanceof Me&&0===s.typeInfo.size){const e=s.typeInfo,t=s.buffer.byteLength/e.stride;return new Ve(t,this.getTypeInfo("u32"))}return new Ve(s.typeInfo.size,this.getTypeInfo("u32"))}Abs(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.abs(e))),n.typeInfo);const s=n;return new Ve(Math.abs(s.value),s.typeInfo)}Acos(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.acos(e))),n.typeInfo);const s=n;return new Ve(Math.acos(s.value),n.typeInfo)}Acosh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.acosh(e))),n.typeInfo);const s=n;return new Ve(Math.acosh(s.value),n.typeInfo)}Asin(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.asin(e))),n.typeInfo);const s=n;return new Ve(Math.asin(s.value),n.typeInfo)}Asinh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.asinh(e))),n.typeInfo);const s=n;return new Ve(Math.asinh(s.value),n.typeInfo)}Atan(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.atan(e))),n.typeInfo);const s=n;return new Ve(Math.atan(s.value),n.typeInfo)}Atanh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.atanh(e))),n.typeInfo);const s=n;return new Ve(Math.atanh(s.value),n.typeInfo)}Atan2(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Be&&s instanceof Be)return new Be(n.data.map(((e,t)=>Math.atan2(e,s.data[t]))),n.typeInfo);const r=n,a=s;return new Ve(Math.atan2(r.value,a.value),n.typeInfo)}Ceil(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.ceil(e))),n.typeInfo);const s=n;return new Ve(Math.ceil(s.value),n.typeInfo)}_clamp(e,t,n){return Math.min(Math.max(e,t),n)}Clamp(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Be&&s instanceof Be&&r instanceof Be)return new Be(n.data.map(((e,t)=>this._clamp(e,s.data[t],r.data[t]))),n.typeInfo);const a=n,i=s,o=r;return new Ve(this._clamp(a.value,i.value,o.value),n.typeInfo)}Cos(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.cos(e))),n.typeInfo);const s=n;return new Ve(Math.cos(s.value),n.typeInfo)}Cosh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.cosh(e))),n.typeInfo);const s=n;return new Ve(Math.cos(s.value),n.typeInfo)}CountLeadingZeros(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.clz32(e))),n.typeInfo);const s=n;return new Ve(Math.clz32(s.value),n.typeInfo)}_countOneBits(e){let t=0;for(;0!==e;)1&e&&t++,e>>=1;return t}CountOneBits(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>this._countOneBits(e))),n.typeInfo);const s=n;return new Ve(this._countOneBits(s.value),n.typeInfo)}_countTrailingZeros(e){if(0===e)return 32;let t=0;for(;!(1&e);)e>>=1,t++;return t}CountTrailingZeros(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>this._countTrailingZeros(e))),n.typeInfo);const s=n;return new Ve(this._countTrailingZeros(s.value),n.typeInfo)}Cross(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Be&&s instanceof Be){if(3!==n.data.length||3!==s.data.length)return console.error(`Cross() expects 3D vectors. Line ${e.line}`),null;const t=n.data,r=s.data;return new Be([t[1]*r[2]-r[1]*t[2],t[2]*r[0]-r[2]*t[0],t[0]*r[1]-r[0]*t[1]],n.typeInfo)}return console.error(`Cross() expects vector arguments. Line ${e.line}`),null}Degrees(e,t){const n=this.exec.evalExpression(e.args[0],t),s=180/Math.PI;return n instanceof Be?new Be(n.data.map((e=>e*s)),n.typeInfo):new Ve(n.value*s,this.getTypeInfo("f32"))}Determinant(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe){const e=n.data,t=n.typeInfo.getTypeName(),s=t.endsWith("h")?this.getTypeInfo("f16"):this.getTypeInfo("f32");if("mat2x2"===t||"mat2x2f"===t||"mat2x2h"===t)return new Ve(e[0]*e[3]-e[1]*e[2],s);if("mat2x3"===t||"mat2x3f"===t||"mat2x3h"===t)return new Ve(e[0]*(e[4]*e[8]-e[5]*e[7])-e[1]*(e[3]*e[8]-e[5]*e[6])+e[2]*(e[3]*e[7]-e[4]*e[6]),s);if("mat2x4"===t||"mat2x4f"===t||"mat2x4h"===t)console.error(`TODO: Determinant for ${t}`);else if("mat3x2"===t||"mat3x2f"===t||"mat3x2h"===t)console.error(`TODO: Determinant for ${t}`);else{if("mat3x3"===t||"mat3x3f"===t||"mat3x3h"===t)return new Ve(e[0]*(e[4]*e[8]-e[5]*e[7])-e[1]*(e[3]*e[8]-e[5]*e[6])+e[2]*(e[3]*e[7]-e[4]*e[6]),s);"mat3x4"===t||"mat3x4f"===t||"mat3x4h"===t||"mat4x2"===t||"mat4x2f"===t||"mat4x2h"===t||"mat4x3"===t||"mat4x3f"===t||"mat4x3h"===t?console.error(`TODO: Determinant for ${t}`):"mat4x4"!==t&&"mat4x4f"!==t&&"mat4x4h"!==t||console.error(`TODO: Determinant for ${t}`)}}return console.error(`Determinant expects a matrix argument. Line ${e.line}`),null}Distance(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Be&&s instanceof Be){let e=0;for(let t=0;t<n.data.length;++t)e+=(n.data[t]-s.data[t])*(n.data[t]-s.data[t]);return new Ve(Math.sqrt(e),this.getTypeInfo("f32"))}const r=n,a=s;return new Ve(Math.abs(r.value-a.value),n.typeInfo)}_dot(e,t){let n=0;for(let s=0;s<e.length;++s)n+=t[s]*e[s];return n}Dot(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);return n instanceof Be&&s instanceof Be?new Ve(this._dot(n.data,s.data),this.getTypeInfo("f32")):(console.error(`Dot() expects vector arguments. Line ${e.line}`),null)}Dot4U8Packed(e,t){return console.error(`TODO: dot4U8Packed. Line ${e.line}`),null}Dot4I8Packed(e,t){return console.error(`TODO: dot4I8Packed. Line ${e.line}`),null}Exp(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.exp(e))),n.typeInfo);const s=n;return new Ve(Math.exp(s.value),n.typeInfo)}Exp2(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.pow(2,e))),n.typeInfo);const s=n;return new Ve(Math.pow(2,s.value),n.typeInfo)}ExtractBits(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if("u32"!==s.typeInfo.name&&"x32"!==s.typeInfo.name)return console.error(`ExtractBits() expects an i32 offset argument. Line ${e.line}`),null;if("u32"!==r.typeInfo.name&&"x32"!==r.typeInfo.name)return console.error(`ExtractBits() expects an i32 count argument. Line ${e.line}`),null;const a=s.value,i=r.value;if(n instanceof Be)return new Be(n.data.map((e=>e>>a&(1<<i)-1)),n.typeInfo);if("i32"!==n.typeInfo.name&&"x32"!==n.typeInfo.name)return console.error(`ExtractBits() expects an i32 argument. Line ${e.line}`),null;const o=n.value;return new Ve(o>>a&(1<<i)-1,this.getTypeInfo("i32"))}FaceForward(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Be&&s instanceof Be&&r instanceof Be){const e=this._dot(s.data,r.data);return new Be(e<0?Array.from(n.data):n.data.map((e=>-e)),n.typeInfo)}return console.error(`FaceForward() expects vector arguments. Line ${e.line}`),null}_firstLeadingBit(e){return 0===e?-1:31-Math.clz32(e)}FirstLeadingBit(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>this._firstLeadingBit(e))),n.typeInfo);const s=n;return new Ve(this._firstLeadingBit(s.value),n.typeInfo)}_firstTrailingBit(e){return 0===e?-1:Math.log2(e&-e)}FirstTrailingBit(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>this._firstTrailingBit(e))),n.typeInfo);const s=n;return new Ve(this._firstTrailingBit(s.value),n.typeInfo)}Floor(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.floor(e))),n.typeInfo);const s=n;return new Ve(Math.floor(s.value),n.typeInfo)}Fma(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Be&&s instanceof Be&&r instanceof Be)return n.data.length!==s.data.length||n.data.length!==r.data.length?(console.error(`Fma() expects vectors of the same length. Line ${e.line}`),null):new Be(n.data.map(((e,t)=>e*s.data[t]+r.data[t])),n.typeInfo);const a=n,i=s,o=r;return new Ve(a.value*i.value+o.value,a.typeInfo)}Fract(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>e-Math.floor(e))),n.typeInfo);const s=n;return new Ve(s.value-Math.floor(s.value),n.typeInfo)}Frexp(e,t){return console.error(`TODO: frexp. Line ${e.line}`),null}InsertBits(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t),a=this.exec.evalExpression(e.args[3],t);if("u32"!==r.typeInfo.name&&"x32"!==r.typeInfo.name)return console.error(`InsertBits() expects an i32 offset argument. Line ${e.line}`),null;const i=r.value,o=(1<<a.value)-1<<i,l=~o;if(n instanceof Be&&s instanceof Be)return new Be(n.data.map(((e,t)=>e&l|s.data[t]<<i&o)),n.typeInfo);const c=n.value,u=s.value;return new Ve(c&l|u<<i&o,n.typeInfo)}InverseSqrt(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>1/Math.sqrt(e))),n.typeInfo);const s=n;return new Ve(1/Math.sqrt(s.value),n.typeInfo)}Ldexp(e,t){return console.error(`TODO: ldexp. Line ${e.line}`),null}Length(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be){let e=0;return n.data.forEach((t=>{e+=t*t})),new Ve(Math.sqrt(e),this.getTypeInfo("f32"))}const s=n;return new Ve(Math.abs(s.value),n.typeInfo)}Log(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.log(e))),n.typeInfo);const s=n;return new Ve(Math.log(s.value),n.typeInfo)}Log2(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.log2(e))),n.typeInfo);const s=n;return new Ve(Math.log2(s.value),n.typeInfo)}Max(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Be&&s instanceof Be)return new Be(n.data.map(((e,t)=>Math.max(e,s.data[t]))),n.typeInfo);const r=n,a=s;return new Ve(Math.max(r.value,a.value),n.typeInfo)}Min(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Be&&s instanceof Be)return new Be(n.data.map(((e,t)=>Math.min(e,s.data[t]))),n.typeInfo);const r=n,a=s;return new Ve(Math.min(r.value,a.value),n.typeInfo)}Mix(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Be&&s instanceof Be&&r instanceof Be)return new Be(n.data.map(((e,t)=>n.data[t]*(1-r.data[t])+s.data[t]*r.data[t])),n.typeInfo);const a=s,i=r;return new Ve(n.value*(1-i.value)+a.value*i.value,n.typeInfo)}Modf(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Be&&s instanceof Be)return new Be(n.data.map(((e,t)=>e%s.data[t])),n.typeInfo);const r=s;return new Ve(n.value%r.value,n.typeInfo)}Normalize(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be){const s=this.Length(e,t).value;return new Be(n.data.map((e=>e/s)),n.typeInfo)}return console.error(`Normalize() expects a vector argument. Line ${e.line}`),null}Pow(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Be&&s instanceof Be)return new Be(n.data.map(((e,t)=>Math.pow(e,s.data[t]))),n.typeInfo);const r=n,a=s;return new Ve(Math.pow(r.value,a.value),n.typeInfo)}QuantizeToF16(e,t){const n=this.exec.evalExpression(e.args[0],t);return n instanceof Be?new Be(n.data.map((e=>e)),n.typeInfo):new Ve(n.value,n.typeInfo)}Radians(e,t){const n=this.exec.evalExpression(e.args[0],t);return n instanceof Be?new Be(n.data.map((e=>e*Math.PI/180)),n.typeInfo):new Ve(n.value*Math.PI/180,this.getTypeInfo("f32"))}Reflect(e,t){let n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Be&&s instanceof Be){const e=this._dot(n.data,s.data);return new Be(n.data.map(((t,n)=>t-2*e*s.data[n])),n.typeInfo)}return console.error(`Reflect() expects vector arguments. Line ${e.line}`),null}Refract(e,t){let n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Be&&s instanceof Be&&r instanceof Ve){const e=this._dot(s.data,n.data);return new Be(n.data.map(((t,n)=>{const a=1-r.value*r.value*(1-e*e);if(a<0)return 0;const i=Math.sqrt(a);return r.value*t-(r.value*e+i)*s.data[n]})),n.typeInfo)}return console.error(`Refract() expects vector arguments and a scalar argument. Line ${e.line}`),null}ReverseBits(e,t){return console.error(`TODO: reverseBits. Line ${e.line}`),null}Round(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.round(e))),n.typeInfo);const s=n;return new Ve(Math.round(s.value),n.typeInfo)}Saturate(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.min(Math.max(e,0),1))),n.typeInfo);const s=n;return new Ve(Math.min(Math.max(s.value,0),1),n.typeInfo)}Sign(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.sign(e))),n.typeInfo);const s=n;return new Ve(Math.sign(s.value),n.typeInfo)}Sin(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.sin(e))),n.typeInfo);const s=n;return new Ve(Math.sin(s.value),n.typeInfo)}Sinh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.sinh(e))),n.typeInfo);const s=n;return new Ve(Math.sinh(s.value),n.typeInfo)}_smoothstep(e,t,n){const s=Math.min(Math.max((n-e)/(t-e),0),1);return s*s*(3-2*s)}SmoothStep(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(r instanceof Be&&n instanceof Be&&s instanceof Be)return new Be(r.data.map(((e,t)=>this._smoothstep(n.data[t],s.data[t],e))),r.typeInfo);const a=n,i=s,o=r;return new Ve(this._smoothstep(a.value,i.value,o.value),r.typeInfo)}Sqrt(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.sqrt(e))),n.typeInfo);const s=n;return new Ve(Math.sqrt(s.value),n.typeInfo)}Step(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(s instanceof Be&&n instanceof Be)return new Be(s.data.map(((e,t)=>e<n.data[t]?0:1)),s.typeInfo);const r=n;return new Ve(s.value<r.value?0:1,r.typeInfo)}Tan(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.tan(e))),n.typeInfo);const s=n;return new Ve(Math.tan(s.value),n.typeInfo)}Tanh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.tanh(e))),n.typeInfo);const s=n;return new Ve(Math.tanh(s.value),n.typeInfo)}_getTransposeType(e){const t=e.getTypeName();return"mat2x2f"===t||"mat2x2h"===t?e:"mat2x3f"===t?this.getTypeInfo("mat3x2f"):"mat2x3h"===t?this.getTypeInfo("mat3x2h"):"mat2x4f"===t?this.getTypeInfo("mat4x2f"):"mat2x4h"===t?this.getTypeInfo("mat4x2h"):"mat3x2f"===t?this.getTypeInfo("mat2x3f"):"mat3x2h"===t?this.getTypeInfo("mat2x3h"):"mat3x3f"===t||"mat3x3h"===t?e:"mat3x4f"===t?this.getTypeInfo("mat4x3f"):"mat3x4h"===t?this.getTypeInfo("mat4x3h"):"mat4x2f"===t?this.getTypeInfo("mat2x4f"):"mat4x2h"===t?this.getTypeInfo("mat2x4h"):"mat4x3f"===t?this.getTypeInfo("mat3x4f"):"mat4x3h"===t?this.getTypeInfo("mat3x4h"):("mat4x4f"===t||"mat4x4h"===t||console.error(`Invalid matrix type ${t}`),e)}Transpose(e,t){const n=this.exec.evalExpression(e.args[0],t);if(!(n instanceof Fe))return console.error(`Transpose() expects a matrix argument. Line ${e.line}`),null;const s=this._getTransposeType(n.typeInfo);if("mat2x2"===n.typeInfo.name||"mat2x2f"===n.typeInfo.name||"mat2x2h"===n.typeInfo.name){const e=n.data;return new Fe([e[0],e[2],e[1],e[3]],s)}if("mat2x3"===n.typeInfo.name||"mat2x3f"===n.typeInfo.name||"mat2x3h"===n.typeInfo.name){const e=n.data;return new Fe([e[0],e[3],e[6],e[1],e[4],e[7]],s)}if("mat2x4"===n.typeInfo.name||"mat2x4f"===n.typeInfo.name||"mat2x4h"===n.typeInfo.name){const e=n.data;return new Fe([e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13]],s)}if("mat3x2"===n.typeInfo.name||"mat3x2f"===n.typeInfo.name||"mat3x2h"===n.typeInfo.name){const e=n.data;return new Fe([e[0],e[3],e[1],e[4],e[2],e[5]],s)}if("mat3x3"===n.typeInfo.name||"mat3x3f"===n.typeInfo.name||"mat3x3h"===n.typeInfo.name){const e=n.data;return new Fe([e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]],s)}if("mat3x4"===n.typeInfo.name||"mat3x4f"===n.typeInfo.name||"mat3x4h"===n.typeInfo.name){const e=n.data;return new Fe([e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14]],s)}if("mat4x2"===n.typeInfo.name||"mat4x2f"===n.typeInfo.name||"mat4x2h"===n.typeInfo.name){const e=n.data;return new Fe([e[0],e[4],e[1],e[5],e[2],e[6]],s)}if("mat4x3"===n.typeInfo.name||"mat4x3f"===n.typeInfo.name||"mat4x3h"===n.typeInfo.name){const e=n.data;return new Fe([e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]],s)}if("mat4x4"===n.typeInfo.name||"mat4x4f"===n.typeInfo.name||"mat4x4h"===n.typeInfo.name){const e=n.data;return new Fe([e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15]],s)}return console.error(`Invalid matrix type ${n.typeInfo.name}`),null}Trunc(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Be)return new Be(n.data.map((e=>Math.trunc(e))),n.typeInfo);const s=n;return new Ve(Math.trunc(s.value),n.typeInfo)}Dpdx(e,t){return console.error(`TODO: dpdx. Line ${e.line}`),null}DpdxCoarse(e,t){return console.error(`TODO: dpdxCoarse. Line ${e.line}`),null}DpdxFine(e,t){return console.error("TODO: dpdxFine"),null}Dpdy(e,t){return console.error("TODO: dpdy"),null}DpdyCoarse(e,t){return console.error("TODO: dpdyCoarse"),null}DpdyFine(e,t){return console.error("TODO: dpdyFine"),null}Fwidth(e,t){return console.error("TODO: fwidth"),null}FwidthCoarse(e,t){return console.error("TODO: fwidthCoarse"),null}FwidthFine(e,t){return console.error("TODO: fwidthFine"),null}TextureDimensions(e,t){const n=e.args[0],s=e.args.length>1?this.exec.evalExpression(e.args[1],t).value:0;if(n instanceof de){const r=n.name,a=t.getVariableValue(r);if(a instanceof Ue){if(s<0||s>=a.mipLevelCount)return console.error(`Invalid mip level for textureDimensions. Line ${e.line}`),null;const t=a.getMipLevelSize(s),n=a.dimension;return"1d"===n?new Ve(t[0],this.getTypeInfo("u32")):"3d"===n?new Be(t,this.getTypeInfo("vec3u")):"2d"===n?new Be(t.slice(0,2),this.getTypeInfo("vec2u")):(console.error(`Invalid texture dimension ${n} not found. Line ${e.line}`),null)}return console.error(`Texture ${r} not found. Line ${e.line}`),null}return console.error(`Invalid texture argument for textureDimensions. Line ${e.line}`),null}TextureGather(e,t){return console.error("TODO: textureGather"),null}TextureGatherCompare(e,t){return console.error("TODO: textureGatherCompare"),null}TextureLoad(e,t){const n=e.args[0],s=this.exec.evalExpression(e.args[1],t),r=e.args.length>2?this.exec.evalExpression(e.args[2],t).value:0;if(!(s instanceof Be)||2!==s.data.length)return console.error(`Invalid UV argument for textureLoad. Line ${e.line}`),null;if(n instanceof de){const a=n.name,i=t.getVariableValue(a);if(i instanceof Ue){const t=Math.floor(s.data[0]),n=Math.floor(s.data[1]);if(t<0||t>=i.width||n<0||n>=i.height)return console.error(`Texture ${a} out of bounds. Line ${e.line}`),null;const o=i.getPixel(t,n,0,r);return null===o?(console.error(`Invalid texture format for textureLoad. Line ${e.line}`),null):new Be(o,this.getTypeInfo("vec4f"))}return console.error(`Texture ${a} not found. Line ${e.line}`),null}return console.error(`Invalid texture argument for textureLoad. Line ${e.line}`),null}TextureNumLayers(e,t){const n=e.args[0];if(n instanceof de){const s=n.name,r=t.getVariableValue(s);return r instanceof Ue?new Ve(r.depthOrArrayLayers,this.getTypeInfo("u32")):(console.error(`Texture ${s} not found. Line ${e.line}`),null)}return console.error(`Invalid texture argument for textureNumLayers. Line ${e.line}`),null}TextureNumLevels(e,t){const n=e.args[0];if(n instanceof de){const s=n.name,r=t.getVariableValue(s);return r instanceof Ue?new Ve(r.mipLevelCount,this.getTypeInfo("u32")):(console.error(`Texture ${s} not found. Line ${e.line}`),null)}return console.error(`Invalid texture argument for textureNumLevels. Line ${e.line}`),null}TextureNumSamples(e,t){const n=e.args[0];if(n instanceof de){const s=n.name,r=t.getVariableValue(s);return r instanceof Ue?new Ve(r.sampleCount,this.getTypeInfo("u32")):(console.error(`Texture ${s} not found. Line ${e.line}`),null)}return console.error(`Invalid texture argument for textureNumSamples. Line ${e.line}`),null}TextureSample(e,t){return console.error("TODO: textureSample"),null}TextureSampleBias(e,t){return console.error("TODO: textureSampleBias"),null}TextureSampleCompare(e,t){return console.error("TODO: textureSampleCompare"),null}TextureSampleCompareLevel(e,t){return console.error("TODO: textureSampleCompareLevel"),null}TextureSampleGrad(e,t){return console.error("TODO: textureSampleGrad"),null}TextureSampleLevel(e,t){return console.error("TODO: textureSampleLevel"),null}TextureSampleBaseClampToEdge(e,t){return console.error("TODO: textureSampleBaseClampToEdge"),null}TextureStore(e,t){const n=e.args[0],s=this.exec.evalExpression(e.args[1],t),r=4===e.args.length?this.exec.evalExpression(e.args[2],t).value:0,a=4===e.args.length?this.exec.evalExpression(e.args[3],t).data:this.exec.evalExpression(e.args[2],t).data;if(4!==a.length)return console.error(`Invalid value argument for textureStore. Line ${e.line}`),null;if(!(s instanceof Be)||2!==s.data.length)return console.error(`Invalid UV argument for textureStore. Line ${e.line}`),null;if(n instanceof de){const i=n.name,o=t.getVariableValue(i);if(o instanceof Ue){const t=o.getMipLevelSize(0),n=Math.floor(s.data[0]),l=Math.floor(s.data[1]);return n<0||n>=t[0]||l<0||l>=t[1]?(console.error(`Texture ${i} out of bounds. Line ${e.line}`),null):(o.setPixel(n,l,0,r,Array.from(a)),null)}return console.error(`Texture ${i} not found. Line ${e.line}`),null}return console.error(`Invalid texture argument for textureStore. Line ${e.line}`),null}AtomicLoad(e,t){let n=e.args[0];n instanceof ve&&(n=n.right);const s=this.exec.getVariableName(n,t);return t.getVariable(s).value.getSubData(this.exec,n.postfix,t)}AtomicStore(e,t){let n=e.args[0];n instanceof ve&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t);return o instanceof Ve&&i instanceof Ve&&(o.value=i.value),r.value instanceof Me&&r.value.setDataValue(this.exec,o,n.postfix,t),null}AtomicAdd(e,t){let n=e.args[0];n instanceof ve&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),l=new Ve(o.value,o.typeInfo);return o instanceof Ve&&i instanceof Ve&&(o.value+=i.value),r.value instanceof Me&&r.value.setDataValue(this.exec,o,n.postfix,t),l}AtomicSub(e,t){let n=e.args[0];n instanceof ve&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),l=new Ve(o.value,o.typeInfo);return o instanceof Ve&&i instanceof Ve&&(o.value-=i.value),r.value instanceof Me&&r.value.setDataValue(this.exec,o,n.postfix,t),l}AtomicMax(e,t){let n=e.args[0];n instanceof ve&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),l=new Ve(o.value,o.typeInfo);return o instanceof Ve&&i instanceof Ve&&(o.value=Math.max(o.value,i.value)),r.value instanceof Me&&r.value.setDataValue(this.exec,o,n.postfix,t),l}AtomicMin(e,t){let n=e.args[0];n instanceof ve&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),l=new Ve(o.value,o.typeInfo);return o instanceof Ve&&i instanceof Ve&&(o.value=Math.min(o.value,i.value)),r.value instanceof Me&&r.value.setDataValue(this.exec,o,n.postfix,t),l}AtomicAnd(e,t){let n=e.args[0];n instanceof ve&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),l=new Ve(o.value,o.typeInfo);return o instanceof Ve&&i instanceof Ve&&(o.value=o.value&i.value),r.value instanceof Me&&r.value.setDataValue(this.exec,o,n.postfix,t),l}AtomicOr(e,t){let n=e.args[0];n instanceof ve&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),l=new Ve(o.value,o.typeInfo);return o instanceof Ve&&i instanceof Ve&&(o.value=o.value|i.value),r.value instanceof Me&&r.value.setDataValue(this.exec,o,n.postfix,t),l}AtomicXor(e,t){let n=e.args[0];n instanceof ve&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),l=new Ve(o.value,o.typeInfo);return o instanceof Ve&&i instanceof Ve&&(o.value=o.value^i.value),r.value instanceof Me&&r.value.setDataValue(this.exec,o,n.postfix,t),l}AtomicExchange(e,t){let n=e.args[0];n instanceof ve&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),l=new Ve(o.value,o.typeInfo);return o instanceof Ve&&i instanceof Ve&&(o.value=i.value),r.value instanceof Me&&r.value.setDataValue(this.exec,o,n.postfix,t),l}AtomicCompareExchangeWeak(e,t){return console.error("TODO: atomicCompareExchangeWeak"),null}Pack4x8snorm(e,t){return console.error("TODO: pack4x8snorm"),null}Pack4x8unorm(e,t){return console.error("TODO: pack4x8unorm"),null}Pack4xI8(e,t){return console.error("TODO: pack4xI8"),null}Pack4xU8(e,t){return console.error("TODO: pack4xU8"),null}Pack4x8Clamp(e,t){return console.error("TODO: pack4x8Clamp"),null}Pack4xU8Clamp(e,t){return console.error("TODO: pack4xU8Clamp"),null}Pack2x16snorm(e,t){return console.error("TODO: pack2x16snorm"),null}Pack2x16unorm(e,t){return console.error("TODO: pack2x16unorm"),null}Pack2x16float(e,t){return console.error("TODO: pack2x16float"),null}Unpack4x8snorm(e,t){return console.error("TODO: unpack4x8snorm"),null}Unpack4x8unorm(e,t){return console.error("TODO: unpack4x8unorm"),null}Unpack4xI8(e,t){return console.error("TODO: unpack4xI8"),null}Unpack4xU8(e,t){return console.error("TODO: unpack4xU8"),null}Unpack2x16snorm(e,t){return console.error("TODO: unpack2x16snorm"),null}Unpack2x16unorm(e,t){return console.error("TODO: unpack2x16unorm"),null}Unpack2x16float(e,t){return console.error("TODO: unpack2x16float"),null}StorageBarrier(e,t){return null}TextureBarrier(e,t){return null}WorkgroupBarrier(e,t){return null}WorkgroupUniformLoad(e,t){return null}SubgroupAdd(e,t){return console.error("TODO: subgroupAdd"),null}SubgroupExclusiveAdd(e,t){return console.error("TODO: subgroupExclusiveAdd"),null}SubgroupInclusiveAdd(e,t){return console.error("TODO: subgroupInclusiveAdd"),null}SubgroupAll(e,t){return console.error("TODO: subgroupAll"),null}SubgroupAnd(e,t){return console.error("TODO: subgroupAnd"),null}SubgroupAny(e,t){return console.error("TODO: subgroupAny"),null}SubgroupBallot(e,t){return console.error("TODO: subgroupBallot"),null}SubgroupBroadcast(e,t){return console.error("TODO: subgroupBroadcast"),null}SubgroupBroadcastFirst(e,t){return console.error("TODO: subgroupBroadcastFirst"),null}SubgroupElect(e,t){return console.error("TODO: subgroupElect"),null}SubgroupMax(e,t){return console.error("TODO: subgroupMax"),null}SubgroupMin(e,t){return console.error("TODO: subgroupMin"),null}SubgroupMul(e,t){return console.error("TODO: subgroupMul"),null}SubgroupExclusiveMul(e,t){return console.error("TODO: subgroupExclusiveMul"),null}SubgroupInclusiveMul(e,t){return console.error("TODO: subgroupInclusiveMul"),null}SubgroupOr(e,t){return console.error("TODO: subgroupOr"),null}SubgroupShuffle(e,t){return console.error("TODO: subgroupShuffle"),null}SubgroupShuffleDown(e,t){return console.error("TODO: subgroupShuffleDown"),null}SubgroupShuffleUp(e,t){return console.error("TODO: subgroupShuffleUp"),null}SubgroupShuffleXor(e,t){return console.error("TODO: subgroupShuffleXor"),null}SubgroupXor(e,t){return console.error("TODO: subgroupXor"),null}QuadBroadcast(e,t){return console.error("TODO: quadBroadcast"),null}QuadSwapDiagonal(e,t){return console.error("TODO: quadSwapDiagonal"),null}QuadSwapX(e,t){return console.error("TODO: quadSwapX"),null}QuadSwapY(e,t){return console.error("TODO: quadSwapY"),null}}const ct={vec2:2,vec2f:2,vec2i:2,vec2u:2,vec2b:2,vec2h:2,vec3:3,vec3f:3,vec3i:3,vec3u:3,vec3b:3,vec3h:3,vec4:4,vec4f:4,vec4i:4,vec4u:4,vec4b:4,vec4h:4},ut={mat2x2:[2,2,4],mat2x2f:[2,2,4],mat2x2h:[2,2,4],mat2x3:[2,3,6],mat2x3f:[2,3,6],mat2x3h:[2,3,6],mat2x4:[2,4,8],mat2x4f:[2,4,8],mat2x4h:[2,4,8],mat3x2:[3,2,6],mat3x2f:[3,2,6],mat3x2h:[3,2,6],mat3x3:[3,3,9],mat3x3f:[3,3,9],mat3x3h:[3,3,9],mat3x4:[3,4,12],mat3x4f:[3,4,12],mat3x4h:[3,4,12],mat4x2:[4,2,8],mat4x2f:[4,2,8],mat4x2h:[4,2,8],mat4x3:[4,3,12],mat4x3f:[4,3,12],mat4x3h:[4,3,12],mat4x4:[4,4,16],mat4x4f:[4,4,16],mat4x4h:[4,4,16]};class ht extends ot{constructor(e,t){var n;super(),this.ast=null!=e?e:[],this.reflection=new st,this.reflection.updateAST(this.ast),this.context=null!==(n=null==t?void 0:t.clone())&&void 0!==n?n:new it,this.builtins=new lt(this),this.typeInfo={bool:this.getTypeInfo(se.bool),i32:this.getTypeInfo(se.i32),u32:this.getTypeInfo(se.u32),f32:this.getTypeInfo(se.f32),f16:this.getTypeInfo(se.f16),vec2f:this.getTypeInfo(ie.vec2f),vec2u:this.getTypeInfo(ie.vec2u),vec2i:this.getTypeInfo(ie.vec2i),vec2h:this.getTypeInfo(ie.vec2h),vec3f:this.getTypeInfo(ie.vec3f),vec3u:this.getTypeInfo(ie.vec3u),vec3i:this.getTypeInfo(ie.vec3i),vec3h:this.getTypeInfo(ie.vec3h),vec4f:this.getTypeInfo(ie.vec4f),vec4u:this.getTypeInfo(ie.vec4u),vec4i:this.getTypeInfo(ie.vec4i),vec4h:this.getTypeInfo(ie.vec4h),mat2x2f:this.getTypeInfo(ie.mat2x2f),mat2x3f:this.getTypeInfo(ie.mat2x3f),mat2x4f:this.getTypeInfo(ie.mat2x4f),mat3x2f:this.getTypeInfo(ie.mat3x2f),mat3x3f:this.getTypeInfo(ie.mat3x3f),mat3x4f:this.getTypeInfo(ie.mat3x4f),mat4x2f:this.getTypeInfo(ie.mat4x2f),mat4x3f:this.getTypeInfo(ie.mat4x3f),mat4x4f:this.getTypeInfo(ie.mat4x4f)}}getVariableValue(e){var t,n;const r=null!==(n=null===(t=this.context.getVariable(e))||void 0===t?void 0:t.value)&&void 0!==n?n:null;if(null===r)return null;if(r instanceof Ve)return r.value;if(r instanceof Be)return Array.from(r.data);if(r instanceof Fe)return Array.from(r.data);if(r instanceof Me&&r.typeInfo instanceof s){if("u32"===r.typeInfo.format.name)return Array.from(new Uint32Array(r.buffer,r.offset,r.typeInfo.count));if("i32"===r.typeInfo.format.name)return Array.from(new Int32Array(r.buffer,r.offset,r.typeInfo.count));if("f32"===r.typeInfo.format.name)return Array.from(new Float32Array(r.buffer,r.offset,r.typeInfo.count))}return console.error(`Unsupported return variable type ${r.typeInfo.name}`),null}execute(e){(e=null!=e?e:{}).constants&&this._setOverrides(e.constants,this.context),this._execStatements(this.ast,this.context)}dispatchWorkgroups(e,t,n,s){const r=this.context.clone();(s=null!=s?s:{}).constants&&this._setOverrides(s.constants,r),this._execStatements(this.ast,r);const a=r.getFunction(e);if(!a)return void console.error(`Function ${e} not found`);if("number"==typeof t)t=[t,1,1];else{if(0===t.length)return void console.error("Invalid dispatch count");1===t.length?t=[t[0],1,1]:2===t.length?t=[t[0],t[1],1]:t.length>3&&(t=[t[0],t[1],t[2]])}const i=t[0],o=t[1],l=t[2],c=this.getTypeInfo("vec3u");r.setVariable("@num_workgroups",new Be(t,c));for(const e in n)for(const t in n[e]){const s=n[e][t];r.variables.forEach((n=>{var r;const a=n.node;if(null==a?void 0:a.attributes){let i=null,o=null;for(const e of a.attributes)"binding"===e.name?i=e.value:"group"===e.name&&(o=e.value);if(t==i&&e==o)if(void 0!==s.texture&&void 0!==s.descriptor){const e=new Ue(s.texture,this.getTypeInfo(a.type),s.descriptor,null!==(r=s.texture.view)&&void 0!==r?r:null);n.value=e}else void 0!==s.uniform?n.value=new Me(s.uniform,this.getTypeInfo(a.type)):n.value=new Me(s,this.getTypeInfo(a.type))}}))}for(let e=0;e<l;++e)for(let t=0;t<o;++t)for(let n=0;n<i;++n)r.setVariable("@workgroup_id",new Be([n,t,e],this.getTypeInfo("vec3u"))),this._dispatchWorkgroup(a,[n,t,e],r)}execStatement(e,t){if(e instanceof Z)return this.evalExpression(e.value,t);if(e instanceof te){if(e.condition){const n=this.evalExpression(e.condition,t);if(!(n instanceof Ve))throw new Error("Invalid break-if condition");if(!n.value)return null}return ht._breakObj}if(e instanceof ne)return ht._continueObj;if(e instanceof F)this._let(e,t);else if(e instanceof O)this._var(e,t);else if(e instanceof M)this._const(e,t);else if(e instanceof L)this._function(e,t);else{if(e instanceof j)return this._if(e,t);if(e instanceof X)return this._switch(e,t);if(e instanceof V)return this._for(e,t);if(e instanceof D)return this._while(e,t);if(e instanceof G)return this._loop(e,t);if(e instanceof N){const n=t.clone();return n.currentFunctionName=t.currentFunctionName,this._execStatements(e.body,n)}if(e instanceof z)this._assign(e,t);else if(e instanceof H)this._increment(e,t);else{if(e instanceof ae)return null;if(e instanceof B){const n=e.name;null===t.getVariable(n)&&t.setVariable(n,new Ve(0,this.getTypeInfo("u32")))}else if(e instanceof R)this._call(e,t);else{if(e instanceof K)return null;if(e instanceof J)return null;console.error("Invalid statement type.",e,`Line ${e.line}`)}}}return null}evalExpression(e,t){return e instanceof we?this._evalBinaryOp(e,t):e instanceof _e?this._evalLiteral(e,t):e instanceof de?this._evalVariable(e,t):e instanceof pe?this._evalCall(e,t):e instanceof fe?this._evalCreate(e,t):e instanceof me?this._evalConst(e,t):e instanceof ge?this._evalBitcast(e,t):e instanceof ve?this._evalUnaryOp(e,t):(console.error("Invalid expression type",e,`Line ${e.line}`),null)}getTypeInfo(e){var t;if(e instanceof se){const t=this.reflection.getTypeInfo(e);if(null!==t)return t}let n=null!==(t=this.typeInfo[e])&&void 0!==t?t:null;return null!==n||(n=this.reflection.getTypeInfoByName(e)),n}_setOverrides(e,t){for(const n in e){const s=e[n],r=this.reflection.getOverrideInfo(n);null!==r?(null===r.type&&(r.type=this.getTypeInfo("u32")),"u32"===r.type.name||"i32"===r.type.name||"f32"===r.type.name||"f16"===r.type.name?t.setVariable(n,new Ve(s,r.type)):"bool"===r.type.name?t.setVariable(n,new Ve(s?1:0,r.type)):"vec2"===r.type.name||"vec3"===r.type.name||"vec4"===r.type.name||"vec2f"===r.type.name||"vec3f"===r.type.name||"vec4f"===r.type.name||"vec2i"===r.type.name||"vec3i"===r.type.name||"vec4i"===r.type.name||"vec2u"===r.type.name||"vec3u"===r.type.name||"vec4u"===r.type.name||"vec2h"===r.type.name||"vec3h"===r.type.name||"vec4h"===r.type.name?t.setVariable(n,new Be(s,r.type)):console.error(`Invalid constant type for ${n}`)):console.error(`Override ${n} does not exist in the shader.`)}}_dispatchWorkgroup(e,t,n){const s=[1,1,1];for(const t of e.node.attributes)if("workgroup_size"===t.name){if(t.value.length>0){const e=n.getVariableValue(t.value[0]);s[0]=e instanceof Ve?e.value:parseInt(t.value[0])}if(t.value.length>1){const e=n.getVariableValue(t.value[1]);s[1]=e instanceof Ve?e.value:parseInt(t.value[1])}if(t.value.length>2){const e=n.getVariableValue(t.value[2]);s[2]=e instanceof Ve?e.value:parseInt(t.value[2])}}const r=this.getTypeInfo("vec3u"),a=this.getTypeInfo("u32");n.setVariable("@workgroup_size",new Be(s,r));const i=s[0],o=s[1],l=s[2];for(let c=0,u=0;c<l;++c)for(let l=0;l<o;++l)for(let o=0;o<i;++o,++u){const i=[o,l,c],h=[o+t[0]*s[0],l+t[1]*s[1],c+t[2]*s[2]];n.setVariable("@local_invocation_id",new Be(i,r)),n.setVariable("@global_invocation_id",new Be(h,r)),n.setVariable("@local_invocation_index",new Ve(u,a)),this._dispatchExec(e,n)}}_dispatchExec(e,t){for(const n of e.node.args)for(const e of n.attributes)if("builtin"===e.name){const s=`@${e.value}`,r=t.getVariable(s);void 0!==r&&t.variables.set(n.name,r)}this._execStatements(e.node.body,t)}getVariableName(e,t){for(;e instanceof ve;)e=e.right;return e instanceof de?e.name:(console.error("Unknown variable type",e,"Line",e.line),null)}_execStatements(e,t){for(const n of e){if(n instanceof Array){const e=t.clone(),s=this._execStatements(n,e);if(s)return s;continue}const e=this.execStatement(n,t);if(e)return e}return null}_call(e,t){const n=t.clone();n.currentFunctionName=e.name;const s=t.getFunction(e.name);if(s){for(let t=0;t<s.node.args.length;++t){const r=s.node.args[t],a=this.evalExpression(e.args[t],n);n.setVariable(r.name,a,r)}this._execStatements(s.node.body,n)}else e.isBuiltin?this._callBuiltinFunction(e,n):this.getTypeInfo(e.name)&&this._evalCreate(e,t)}_increment(e,t){const n=this.getVariableName(e.variable,t),s=t.getVariable(n);s?"++"===e.operator?s.value instanceof Ve?s.value.value++:console.error(`Variable ${n} is not a scalar. Line ${e.line}`):"--"===e.operator?s.value instanceof Ve?s.value.value--:console.error(`Variable ${n} is not a scalar. Line ${e.line}`):console.error(`Unknown increment operator ${e.operator}. Line ${e.line}`):console.error(`Variable ${n} not found. Line ${e.line}`)}_getVariableData(e,t){if(e instanceof de){const n=this.getVariableName(e,t),s=t.getVariable(n);return null===s?(console.error(`Variable ${n} not found. Line ${e.line}`),null):s.value.getSubData(this,e.postfix,t)}if(e instanceof ve){if("*"===e.operator){const n=this._getVariableData(e.right,t);return n instanceof Ne?n.reference.getSubData(this,e.postfix,t):(console.error(`Variable ${e.right} is not a pointer. Line ${e.line}`),null)}if("&"===e.operator){const n=this._getVariableData(e.right,t);return new Ne(n)}}return null}_assign(e,t){let n=null,s="<var>",r=null;if(e.variable instanceof ve){const n=this._getVariableData(e.variable,t),s=this.evalExpression(e.value,t),r=e.operator;if("="===r){if(n instanceof Ve||n instanceof Be||n instanceof Fe){if(s instanceof Ve||s instanceof Be||s instanceof Fe&&n.data.length===s.data.length)return void n.data.set(s.data);console.error(`Invalid assignment. Line ${e.line}`)}else if(n instanceof Me&&s instanceof Me&&n.buffer.byteLength-n.offset>=s.buffer.byteLength-s.offset)return void(n.buffer.byteLength%4==0?new Uint32Array(n.buffer,n.offset,n.typeInfo.size/4).set(new Uint32Array(s.buffer,s.offset,s.typeInfo.size/4)):new Uint8Array(n.buffer,n.offset,n.typeInfo.size).set(new Uint8Array(s.buffer,s.offset,s.typeInfo.size)));return console.error(`Invalid assignment. Line ${e.line}`),null}if("+="===r)return n instanceof Ve||n instanceof Be||n instanceof Fe?s instanceof Ve||s instanceof Be||s instanceof Fe?void n.data.set(s.data.map(((e,t)=>n.data[t]+e))):void console.error(`Invalid assignment . Line ${e.line}`):void console.error(`Invalid assignment. Line ${e.line}`);if("-="===r)return(n instanceof Ve||n instanceof Be||n instanceof Fe)&&(s instanceof Ve||s instanceof Be||s instanceof Fe)?void n.data.set(s.data.map(((e,t)=>n.data[t]-e))):void console.error(`Invalid assignment. Line ${e.line}`)}if(e.variable instanceof ve){if("*"===e.variable.operator){s=this.getVariableName(e.variable.right,t);const r=t.getVariable(s);if(!(r&&r.value instanceof Ne))return void console.error(`Variable ${s} is not a pointer. Line ${e.line}`);n=r.value.reference;let a=e.variable.postfix;if(!a){let t=e.variable.right;for(;t instanceof ve;){if(t.postfix){a=t.postfix;break}t=t.right}}a&&(n=n.getSubData(this,a,t))}}else{r=e.variable.postfix,s=this.getVariableName(e.variable,t);const a=t.getVariable(s);if(null===a)return void console.error(`Variable ${s} not found. Line ${e.line}`);n=a.value}if(n instanceof Ne&&(n=n.reference),null===n)return void console.error(`Variable ${s} not found. Line ${e.line}`);const a=this.evalExpression(e.value,t),i=e.operator;if("="===i)if(n instanceof Me)n.setDataValue(this,a,r,t);else if(r){if(!(n instanceof Be||n instanceof Fe))return void console.error(`Variable ${s} is not a vector or matrix. Line ${e.line}`);if(r instanceof ye){const i=this.evalExpression(r.index,t).value;if(n instanceof Be){if(!(a instanceof Ve))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[i]=a.value}else{if(!(n instanceof Fe))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);{const i=this.evalExpression(r.index,t).value;if(i<0)return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);if(!(a instanceof Be))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);{const t=n.typeInfo.getTypeName();if("mat2x2"===t||"mat2x2f"===t||"mat2x2h"===t){if(!(i<2&&2===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[2*i]=a.data[0],n.data[2*i+1]=a.data[1]}else if("mat2x3"===t||"mat2x3f"===t||"mat2x3h"===t){if(!(i<2&&3===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[3*i]=a.data[0],n.data[3*i+1]=a.data[1],n.data[3*i+2]=a.data[2]}else if("mat2x4"===t||"mat2x4f"===t||"mat2x4h"===t){if(!(i<2&&4===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[4*i]=a.data[0],n.data[4*i+1]=a.data[1],n.data[4*i+2]=a.data[2],n.data[4*i+3]=a.data[3]}else if("mat3x2"===t||"mat3x2f"===t||"mat3x2h"===t){if(!(i<3&&2===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[2*i]=a.data[0],n.data[2*i+1]=a.data[1]}else if("mat3x3"===t||"mat3x3f"===t||"mat3x3h"===t){if(!(i<3&&3===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[3*i]=a.data[0],n.data[3*i+1]=a.data[1],n.data[3*i+2]=a.data[2]}else if("mat3x4"===t||"mat3x4f"===t||"mat3x4h"===t){if(!(i<3&&4===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[4*i]=a.data[0],n.data[4*i+1]=a.data[1],n.data[4*i+2]=a.data[2],n.data[4*i+3]=a.data[3]}else if("mat4x2"===t||"mat4x2f"===t||"mat4x2h"===t){if(!(i<4&&2===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[2*i]=a.data[0],n.data[2*i+1]=a.data[1]}else if("mat4x3"===t||"mat4x3f"===t||"mat4x3h"===t){if(!(i<4&&3===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[3*i]=a.data[0],n.data[3*i+1]=a.data[1],n.data[3*i+2]=a.data[2]}else{if("mat4x4"!==t&&"mat4x4f"!==t&&"mat4x4h"!==t)return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);if(!(i<4&&4===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[4*i]=a.data[0],n.data[4*i+1]=a.data[1],n.data[4*i+2]=a.data[2],n.data[4*i+3]=a.data[3]}}}}}else if(r instanceof he){const t=r.value;if(!(n instanceof Be))return void console.error(`Invalid assignment to ${t}. Variable ${s} is not a vector. Line ${e.line}`);if(a instanceof Ve){if(t.length>1)return void console.error(`Invalid assignment to ${t} for variable ${s}. Line ${e.line}`);if("x"===t)n.data[0]=a.value;else if("y"===t){if(n.data.length<2)return void console.error(`Invalid assignment to ${t} for variable ${s}. Line ${e.line}`);n.data[1]=a.value}else if("z"===t){if(n.data.length<3)return void console.error(`Invalid assignment to ${t} for variable ${s}. Line ${e.line}`);n.data[2]=a.value}else if("w"===t){if(n.data.length<4)return void console.error(`Invalid assignment to ${t} for variable ${s}. Line ${e.line}`);n.data[3]=a.value}}else{if(!(a instanceof Be))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);if(t.length!==a.data.length)return void console.error(`Invalid assignment to ${t} for variable ${s}. Line ${e.line}`);for(let r=0;r<t.length;++r){const i=t[r];if("x"===i||"r"===i)n.data[0]=a.data[r];else if("y"===i||"g"===i){if(a.data.length<2)return void console.error(`Invalid assignment to ${i} for variable ${s}. Line ${e.line}`);n.data[1]=a.data[r]}else if("z"===i||"b"===i){if(a.data.length<3)return void console.error(`Invalid assignment to ${i} for variable ${s}. Line ${e.line}`);n.data[2]=a.data[r]}else{if("w"!==i&&"a"!==i)return void console.error(`Invalid assignment to ${i} for variable ${s}. Line ${e.line}`);if(a.data.length<4)return void console.error(`Invalid assignment to ${i} for variable ${s}. Line ${e.line}`);n.data[3]=a.data[r]}}}}}else n instanceof Ve&&a instanceof Ve?n.value=a.value:n instanceof Be&&a instanceof Be||n instanceof Fe&&a instanceof Fe?n.data.set(a.data):console.error(`Invalid assignment to ${s}. Line ${e.line}`);else{const s=n.getSubData(this,r,t);if(s instanceof Be&&a instanceof Ve){const t=s.data,n=a.value;if("+="===i)for(let e=0;e<t.length;++e)t[e]+=n;else if("-="===i)for(let e=0;e<t.length;++e)t[e]-=n;else if("*="===i)for(let e=0;e<t.length;++e)t[e]*=n;else if("/="===i)for(let e=0;e<t.length;++e)t[e]/=n;else if("%="===i)for(let e=0;e<t.length;++e)t[e]%=n;else if("&="===i)for(let e=0;e<t.length;++e)t[e]&=n;else if("|="===i)for(let e=0;e<t.length;++e)t[e]|=n;else if("^="===i)for(let e=0;e<t.length;++e)t[e]^=n;else if("<<="===i)for(let e=0;e<t.length;++e)t[e]<<=n;else if(">>="===i)for(let e=0;e<t.length;++e)t[e]>>=n;else console.error(`Invalid operator ${i}. Line ${e.line}`)}else if(s instanceof Be&&a instanceof Be){const t=s.data,n=a.data;if(t.length!==n.length)return void console.error(`Vector length mismatch. Line ${e.line}`);if("+="===i)for(let e=0;e<t.length;++e)t[e]+=n[e];else if("-="===i)for(let e=0;e<t.length;++e)t[e]-=n[e];else if("*="===i)for(let e=0;e<t.length;++e)t[e]*=n[e];else if("/="===i)for(let e=0;e<t.length;++e)t[e]/=n[e];else if("%="===i)for(let e=0;e<t.length;++e)t[e]%=n[e];else if("&="===i)for(let e=0;e<t.length;++e)t[e]&=n[e];else if("|="===i)for(let e=0;e<t.length;++e)t[e]|=n[e];else if("^="===i)for(let e=0;e<t.length;++e)t[e]^=n[e];else if("<<="===i)for(let e=0;e<t.length;++e)t[e]<<=n[e];else if(">>="===i)for(let e=0;e<t.length;++e)t[e]>>=n[e];else console.error(`Invalid operator ${i}. Line ${e.line}`)}else{if(!(s instanceof Ve&&a instanceof Ve))return void console.error(`Invalid type for ${e.operator} operator. Line ${e.line}`);"+="===i?s.value+=a.value:"-="===i?s.value-=a.value:"*="===i?s.value*=a.value:"/="===i?s.value/=a.value:"%="===i?s.value%=a.value:"&="===i?s.value&=a.value:"|="===i?s.value|=a.value:"^="===i?s.value^=a.value:"<<="===i?s.value<<=a.value:">>="===i?s.value>>=a.value:console.error(`Invalid operator ${i}. Line ${e.line}`)}n instanceof Me&&n.setDataValue(this,s,r,t)}}_function(e,t){const n=new at(e);t.functions.set(e.name,n)}_const(e,t){let n=null;null!==e.value&&(n=this.evalExpression(e.value,t)),t.createVariable(e.name,n,e)}_let(e,t){let n=null;if(null!==e.value){if(n=this.evalExpression(e.value,t),null===n)return void console.error(`Invalid value for variable ${e.name}. Line ${e.line}`);e.value instanceof ve||(n=n.clone())}else{const s=e.type.name;if("f32"===s||"i32"===s||"u32"===s||"bool"===s||"f16"===s||"vec2"===s||"vec3"===s||"vec4"===s||"vec2f"===s||"vec3f"===s||"vec4f"===s||"vec2i"===s||"vec3i"===s||"vec4i"===s||"vec2u"===s||"vec3u"===s||"vec4u"===s||"vec2h"===s||"vec3h"===s||"vec4h"===s||"vec2b"===s||"vec3b"===s||"vec4b"===s||"mat2x2"===s||"mat2x3"===s||"mat2x4"===s||"mat3x2"===s||"mat3x3"===s||"mat3x4"===s||"mat4x2"===s||"mat4x3"===s||"mat4x4"===s||"mat2x2f"===s||"mat2x3f"===s||"mat2x4f"===s||"mat3x2f"===s||"mat3x3f"===s||"mat3x4f"===s||"mat4x2f"===s||"mat4x3f"===s||"mat4x4f"===s||"mat2x2h"===s||"mat2x3h"===s||"mat2x4h"===s||"mat3x2h"===s||"mat3x3h"===s||"mat3x4h"===s||"mat4x2h"===s||"mat4x3h"===s||"mat4x4h"===s||"array"===s){const s=new fe(e.type,[]);n=this._evalCreate(s,t)}}t.createVariable(e.name,n,e)}_var(e,t){let n=null;if(null!==e.value){if(n=this.evalExpression(e.value,t),null===n)return void console.error(`Invalid value for variable ${e.name}. Line ${e.line}`);e.value instanceof ve||(n=n.clone())}else{if(null===e.type)return void console.error(`Variable ${e.name} has no type. Line ${e.line}`);const s=e.type.name;if("f32"===s||"i32"===s||"u32"===s||"bool"===s||"f16"===s||"vec2"===s||"vec3"===s||"vec4"===s||"vec2f"===s||"vec3f"===s||"vec4f"===s||"vec2i"===s||"vec3i"===s||"vec4i"===s||"vec2u"===s||"vec3u"===s||"vec4u"===s||"vec2h"===s||"vec3h"===s||"vec4h"===s||"vec2b"===s||"vec3b"===s||"vec4b"===s||"mat2x2"===s||"mat2x3"===s||"mat2x4"===s||"mat3x2"===s||"mat3x3"===s||"mat3x4"===s||"mat4x2"===s||"mat4x3"===s||"mat4x4"===s||"mat2x2f"===s||"mat2x3f"===s||"mat2x4f"===s||"mat3x2f"===s||"mat3x3f"===s||"mat3x4f"===s||"mat4x2f"===s||"mat4x3f"===s||"mat4x4f"===s||"mat2x2h"===s||"mat2x3h"===s||"mat2x4h"===s||"mat3x2h"===s||"mat3x3h"===s||"mat3x4h"===s||"mat4x2h"===s||"mat4x3h"===s||"mat4x4h"===s||e.type instanceof le||e.type instanceof ae||e.type instanceof ie){const s=new fe(e.type,[]);n=this._evalCreate(s,t)}}t.createVariable(e.name,n,e)}_switch(e,t){t=t.clone();const n=this.evalExpression(e.condition,t);if(!(n instanceof Ve))return console.error(`Invalid if condition. Line ${e.line}`),null;let s=null;for(const r of e.cases)if(r instanceof Te)for(const a of r.selectors){if(a instanceof Ie){s=r;continue}const i=this.evalExpression(a,t);if(!(i instanceof Ve))return console.error(`Invalid case selector. Line ${e.line}`),null;if(i.value===n.value)return this._execStatements(r.body,t)}else r instanceof Se&&(s=r);return s?this._execStatements(s.body,t):null}_if(e,t){t=t.clone();const n=this.evalExpression(e.condition,t);if(!(n instanceof Ve))return console.error(`Invalid if condition. Line ${e.line}`),null;if(n.value)return this._execStatements(e.body,t);for(const n of e.elseif){const s=this.evalExpression(n.condition,t);if(!(s instanceof Ve))return console.error(`Invalid if condition. Line ${e.line}`),null;if(s.value)return this._execStatements(n.body,t)}return e.else?this._execStatements(e.else,t):null}_getScalarValue(e){return e instanceof Ve?e.value:(console.error("Expected scalar value.",e),0)}_for(e,t){for(t=t.clone(),this.execStatement(e.init,t);this._getScalarValue(this.evalExpression(e.condition,t));){const n=this._execStatements(e.body,t);if(n===ht._breakObj)break;if(null!==n&&n!==ht._continueObj)return n;this.execStatement(e.increment,t)}return null}_loop(e,t){for(t=t.clone();;){const n=this._execStatements(e.body,t);if(n===ht._breakObj)break;if(n===ht._continueObj){if(e.continuing&&this._execStatements(e.continuing.body,t)===ht._breakObj)break}else if(null!==n)return n}return null}_while(e,t){for(t=t.clone();this._getScalarValue(this.evalExpression(e.condition,t));){const n=this._execStatements(e.body,t);if(n===ht._breakObj)break;if(n!==ht._continueObj&&null!==n)return n}return null}_evalBitcast(e,t){const n=this.evalExpression(e.value,t),s=e.type;if(n instanceof Ve){const e=et(n.value,n.typeInfo.name,s.name);return new Ve(e,this.getTypeInfo(s))}if(n instanceof Be){const t=n.typeInfo.getTypeName();let r="";if(t.endsWith("f"))r="f32";else if(t.endsWith("i"))r="i32";else if(t.endsWith("u"))r="u32";else if(t.endsWith("b"))r="bool";else{if(!t.endsWith("h"))return console.error(`Unknown vector type ${t}. Line ${e.line}`),null;r="f16"}const a=s.getTypeName();let i="";if(a.endsWith("f"))i="f32";else if(a.endsWith("i"))i="i32";else if(a.endsWith("u"))i="u32";else if(a.endsWith("b"))i="bool";else{if(!a.endsWith("h"))return console.error(`Unknown vector type ${i}. Line ${e.line}`),null;i="f16"}const o=function(e,t,n){if(t===n)return e;const s=new Array(e.length);for(let r=0;r<e.length;r++)s[r]=et(e[r],t,n);return s}(Array.from(n.data),r,i);return new Be(o,this.getTypeInfo(s))}return console.error(`TODO: bitcast for ${n.typeInfo.name}. Line ${e.line}`),null}_evalConst(e,t){return t.getVariableValue(e.name).clone().getSubData(this,e.postfix,t)}_evalCreate(e,t){var r;if(e instanceof fe){if(null===e.type)return De.void;switch(e.type.getTypeName()){case"bool":case"i32":case"u32":case"f32":case"f16":return this._callConstructorValue(e,t);case"vec2":case"vec3":case"vec4":case"vec2f":case"vec3f":case"vec4f":case"vec2h":case"vec3h":case"vec4h":case"vec2i":case"vec3i":case"vec4i":case"vec2u":case"vec3u":case"vec4u":case"vec2b":case"vec3b":case"vec4b":return this._callConstructorVec(e,t);case"mat2x2":case"mat2x2f":case"mat2x2h":case"mat2x3":case"mat2x3f":case"mat2x3h":case"mat2x4":case"mat2x4f":case"mat2x4h":case"mat3x2":case"mat3x2f":case"mat3x2h":case"mat3x3":case"mat3x3f":case"mat3x3h":case"mat3x4":case"mat3x4f":case"mat3x4h":case"mat4x2":case"mat4x2f":case"mat4x2h":case"mat4x3":case"mat4x3f":case"mat4x3h":case"mat4x4":case"mat4x4f":case"mat4x4h":return this._callConstructorMatrix(e,t)}}const a=e instanceof fe?e.type.name:e.name,i=e instanceof fe?this.getTypeInfo(e.type):this.getTypeInfo(e.name);if(null===i)return console.error(`Unknown type ${a}. Line ${e.line}`),null;if(0===i.size)return null;const o=new Me(new ArrayBuffer(i.size),i,0);if(i instanceof n){if(e.args)for(let n=0;n<e.args.length;++n){const s=i.members[n],r=e.args[n],a=this.evalExpression(r,t);o.setData(this,a,s.type,s.offset,t)}}else if(i instanceof s){let n=0;if(e.args)for(let s=0;s<e.args.length;++s){const a=e.args[s],l=this.evalExpression(a,t);null===i.format&&("x32"===(null===(r=l.typeInfo)||void 0===r?void 0:r.name)?i.format=this.getTypeInfo("i32"):i.format=l.typeInfo),o.setData(this,l,i.format,n,t),n+=i.stride}}else console.error(`Unknown type "${a}". Line ${e.line}`);return e instanceof fe?o.getSubData(this,e.postfix,t):o}_evalLiteral(e,t){const n=this.getTypeInfo(e.type),s=n.name;return"x32"===s||"u32"===s||"f32"===s||"f16"===s||"i32"===s||"bool"===s?new Ve(e.scalarValue,n):"vec2"===s||"vec3"===s||"vec4"===s||"vec2f"===s||"vec3f"===s||"vec4f"===s||"vec2h"===s||"vec3h"===s||"vec4h"===s||"vec2i"===s||"vec3i"===s||"vec4i"===s||"vec2u"===s||"vec3u"===s||"vec4u"===s?this._callConstructorVec(e,t):"mat2x2"===s||"mat2x3"===s||"mat2x4"===s||"mat3x2"===s||"mat3x3"===s||"mat3x4"===s||"mat4x2"===s||"mat4x3"===s||"mat4x4"===s||"mat2x2f"===s||"mat2x3f"===s||"mat2x4f"===s||"mat3x2f"===s||"mat3x3f"===s||"mat3x4f"===s||"mat4x2f"===s||"mat4x3f"===s||"mat4x4f"===s||"mat2x2h"===s||"mat2x3h"===s||"mat2x4h"===s||"mat3x2h"===s||"mat3x3h"===s||"mat3x4h"===s||"mat4x2h"===s||"mat4x3h"===s||"mat4x4h"===s?this._callConstructorMatrix(e,t):e.value}_evalVariable(e,t){const n=t.getVariableValue(e.name);return null===n?n:n.getSubData(this,e.postfix,t)}_maxFormatTypeInfo(e){let t=e[0];if("f32"===t.name)return t;for(let n=1;n<e.length;++n){const s=ht._priority.get(t.name);ht._priority.get(e[n].name)<s&&(t=e[n])}return"x32"===t.name?this.getTypeInfo("i32"):t}_evalUnaryOp(e,t){const n=this.evalExpression(e.right,t);if("&"===e.operator)return new Ne(n);if("*"===e.operator)return n instanceof Ne?n.reference.getSubData(this,e.postfix,t):(console.error(`Invalid dereference. Line ${e.line}`),null);const s=n instanceof Ve?n.value:n instanceof Be?Array.from(n.data):null;switch(e.operator){case"+":{if(ze(s)){const e=s.map(((e,t)=>+e));return new Be(e,n.typeInfo)}const e=s,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new Ve(+e,t)}case"-":{if(ze(s)){const e=s.map(((e,t)=>-e));return new Be(e,n.typeInfo)}const e=s,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new Ve(-e,t)}case"!":{if(ze(s)){const e=s.map(((e,t)=>e?0:1));return new Be(e,n.typeInfo)}const e=s,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new Ve(e?0:1,t)}case"~":{if(ze(s)){const e=s.map(((e,t)=>~e));return new Be(e,n.typeInfo)}const e=s,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new Ve(~e,t)}}return console.error(`Invalid unary operator ${e.operator}. Line ${e.line}`),null}_evalBinaryOp(e,t){const n=this.evalExpression(e.left,t),s=this.evalExpression(e.right,t),r=n instanceof Ve?n.value:n instanceof Be||n instanceof Fe?Array.from(n.data):null,a=s instanceof Ve?s.value:s instanceof Be||s instanceof Fe?Array.from(s.data):null;switch(e.operator){case"+":{if(ze(r)&&ze(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e+s[t]));return new Be(i,n.typeInfo)}if(ze(r)){const e=a,t=r.map(((t,n)=>t+e));return new Be(t,n.typeInfo)}if(ze(a)){const e=r,t=a.map(((t,n)=>e+t));return new Be(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Ve(t+i,o)}case"-":{if(ze(r)&&ze(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e-s[t]));return new Be(i,n.typeInfo)}if(ze(r)){const e=a,t=r.map(((t,n)=>t-e));return new Be(t,n.typeInfo)}if(ze(a)){const e=r,t=a.map(((t,n)=>e-t));return new Be(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Ve(t-i,o)}case"*":{if(ze(r)&&ze(a)){const t=r,i=a;if(n instanceof Fe&&s instanceof Fe){const r=function(e,t,n,s){if(void 0===ut[t.name]||void 0===ut[s.name])return null;const r=ut[t.name][0],a=ut[t.name][1],i=ut[s.name][0];if(r!==ut[s.name][1])return null;const o=new Array(i*a);for(let t=0;t<a;t++)for(let s=0;s<i;s++){let l=0;for(let i=0;i<r;i++)l+=e[i*a+t]*n[s*r+i];o[t*i+s]=l}return o}(t,n.typeInfo,i,s.typeInfo);if(null===r)return console.error(`Matrix multiplication failed. Line ${e.line}.`),null;const a=ut[s.typeInfo.name][0],o=ut[n.typeInfo.name][1],l=this.getTypeInfo(`mat${a}x${o}f`);return new Fe(r,l)}if(n instanceof Fe&&s instanceof Be){const r=function(e,t,n,s){if(void 0===ut[t.name]||void 0===ct[s.name])return null;const r=ut[t.name][0],a=ut[t.name][1];if(r!==n.length)return null;const i=new Array(a);for(let t=0;t<a;t++){let s=0;for(let i=0;i<r;i++)s+=e[i*a+t]*n[i];i[t]=s}return i}(t,n.typeInfo,i,s.typeInfo);return null===r?(console.error(`Matrix vector multiplication failed. Line ${e.line}.`),null):new Be(r,s.typeInfo)}if(n instanceof Be&&s instanceof Fe){const r=function(e,t,n,s){if(void 0===ct[t.name]||void 0===ut[s.name])return null;const r=ut[s.name][0],a=ut[s.name][1];if(a!==e.length)return null;const i=[];for(let t=0;t<r;t++){let s=0;for(let i=0;i<a;i++)s+=e[i]*n[i*r+t];i[t]=s}return i}(t,n.typeInfo,i,s.typeInfo);return null===r?(console.error(`Matrix vector multiplication failed. Line ${e.line}.`),null):new Be(r,n.typeInfo)}{if(t.length!==i.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const s=t.map(((e,t)=>e*i[t]));return new Be(s,n.typeInfo)}}if(ze(r)){const e=a,t=r.map(((t,n)=>t*e));return n instanceof Fe?new Fe(t,n.typeInfo):new Be(t,n.typeInfo)}if(ze(a)){const e=r,t=a.map(((t,n)=>e*t));return s instanceof Fe?new Fe(t,s.typeInfo):new Be(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Ve(t*i,o)}case"%":{if(ze(r)&&ze(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e%s[t]));return new Be(i,n.typeInfo)}if(ze(r)){const e=a,t=r.map(((t,n)=>t%e));return new Be(t,n.typeInfo)}if(ze(a)){const e=r,t=a.map(((t,n)=>e%t));return new Be(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Ve(t%i,o)}case"/":{if(ze(r)&&ze(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e/s[t]));return new Be(i,n.typeInfo)}if(ze(r)){const e=a,t=r.map(((t,n)=>t/e));return new Be(t,n.typeInfo)}if(ze(a)){const e=r,t=a.map(((t,n)=>e/t));return new Be(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Ve(t/i,o)}case"&":{if(ze(r)&&ze(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e&s[t]));return new Be(i,n.typeInfo)}if(ze(r)){const e=a,t=r.map(((t,n)=>t&e));return new Be(t,n.typeInfo)}if(ze(a)){const e=r,t=a.map(((t,n)=>e&t));return new Be(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Ve(t&i,o)}case"|":{if(ze(r)&&ze(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e|s[t]));return new Be(i,n.typeInfo)}if(ze(r)){const e=a,t=r.map(((t,n)=>t|e));return new Be(t,n.typeInfo)}if(ze(a)){const e=r,t=a.map(((t,n)=>e|t));return new Be(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Ve(t|i,o)}case"^":{if(ze(r)&&ze(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e^s[t]));return new Be(i,n.typeInfo)}if(ze(r)){const e=a,t=r.map(((t,n)=>t^e));return new Be(t,n.typeInfo)}if(ze(a)){const e=r,t=a.map(((t,n)=>e^t));return new Be(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Ve(t^i,o)}case"<<":{if(ze(r)&&ze(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e<<s[t]));return new Be(i,n.typeInfo)}if(ze(r)){const e=a,t=r.map(((t,n)=>t<<e));return new Be(t,n.typeInfo)}if(ze(a)){const e=r,t=a.map(((t,n)=>e<<t));return new Be(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Ve(t<<i,o)}case">>":{if(ze(r)&&ze(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e>>s[t]));return new Be(i,n.typeInfo)}if(ze(r)){const e=a,t=r.map(((t,n)=>t>>e));return new Be(t,n.typeInfo)}if(ze(a)){const e=r,t=a.map(((t,n)=>e>>t));return new Be(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Ve(t>>i,o)}case">":if(ze(r)&&ze(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e>s[t]?1:0));return new Be(i,n.typeInfo)}if(ze(r)){const e=a,t=r.map(((t,n)=>t>e?1:0));return new Be(t,n.typeInfo)}if(ze(a)){const e=r,t=a.map(((t,n)=>e>t?1:0));return new Be(t,s.typeInfo)}return new Ve(r>a?1:0,this.getTypeInfo("bool"));case"<":if(ze(r)&&ze(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e<s[t]?1:0));return new Be(i,n.typeInfo)}if(ze(r)){const e=a,t=r.map(((t,n)=>t<e?1:0));return new Be(t,n.typeInfo)}if(ze(a)){const e=r,t=a.map(((t,n)=>e<t?1:0));return new Be(t,s.typeInfo)}return new Ve(r<a?1:0,this.getTypeInfo("bool"));case"==":if(ze(r)&&ze(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e===s[t]?1:0));return new Be(i,n.typeInfo)}if(ze(r)){const e=a,t=r.map(((t,n)=>t==e?1:0));return new Be(t,n.typeInfo)}if(ze(a)){const e=r,t=a.map(((t,n)=>e==t?1:0));return new Be(t,s.typeInfo)}return new Ve(r===a?1:0,this.getTypeInfo("bool"));case"!=":if(ze(r)&&ze(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e!==s[t]?1:0));return new Be(i,n.typeInfo)}if(ze(r)){const e=a,t=r.map(((t,n)=>t!==e?1:0));return new Be(t,n.typeInfo)}if(ze(a)){const e=r,t=a.map(((t,n)=>e!==t?1:0));return new Be(t,s.typeInfo)}return new Ve(r!==a?1:0,this.getTypeInfo("bool"));case">=":if(ze(r)&&ze(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e>=s[t]?1:0));return new Be(i,n.typeInfo)}if(ze(r)){const e=a,t=r.map(((t,n)=>t>=e?1:0));return new Be(t,n.typeInfo)}if(ze(a)){const e=r,t=a.map(((t,n)=>e>=t?1:0));return new Be(t,s.typeInfo)}return new Ve(r>=a?1:0,this.getTypeInfo("bool"));case"<=":if(ze(r)&&ze(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e<=s[t]?1:0));return new Be(i,n.typeInfo)}if(ze(r)){const e=a,t=r.map(((t,n)=>t<=e?1:0));return new Be(t,n.typeInfo)}if(ze(a)){const e=r,t=a.map(((t,n)=>e<=t?1:0));return new Be(t,s.typeInfo)}return new Ve(r<=a?1:0,this.getTypeInfo("bool"));case"&&":if(ze(r)&&ze(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e&&s[t]?1:0));return new Be(i,n.typeInfo)}if(ze(r)){const e=a,t=r.map(((t,n)=>t&&e?1:0));return new Be(t,n.typeInfo)}if(ze(a)){const e=r,t=a.map(((t,n)=>e&&t?1:0));return new Be(t,s.typeInfo)}return new Ve(r&&a?1:0,this.getTypeInfo("bool"));case"||":if(ze(r)&&ze(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e||s[t]?1:0));return new Be(i,n.typeInfo)}if(ze(r)){const e=a,t=r.map(((t,n)=>t||e?1:0));return new Be(t,n.typeInfo)}if(ze(a)){const e=r,t=a.map(((t,n)=>e||t?1:0));return new Be(t,s.typeInfo)}return new Ve(r||a?1:0,this.getTypeInfo("bool"))}return console.error(`Unknown operator ${e.operator}. Line ${e.line}`),null}_evalCall(e,t){if(null!==e.cachedReturnValue)return e.cachedReturnValue;const n=t.clone();n.currentFunctionName=e.name;const s=t.getFunction(e.name);if(!s)return e.isBuiltin?this._callBuiltinFunction(e,n):this.getTypeInfo(e.name)?this._evalCreate(e,t):(console.error(`Unknown function "${e.name}". Line ${e.line}`),null);for(let t=0;t<s.node.args.length;++t){const r=s.node.args[t],a=this.evalExpression(e.args[t],n);n.createVariable(r.name,a,r)}return this._execStatements(s.node.body,n)}_callBuiltinFunction(e,t){switch(e.name){case"all":return this.builtins.All(e,t);case"any":return this.builtins.Any(e,t);case"select":return this.builtins.Select(e,t);case"arrayLength":return this.builtins.ArrayLength(e,t);case"abs":return this.builtins.Abs(e,t);case"acos":return this.builtins.Acos(e,t);case"acosh":return this.builtins.Acosh(e,t);case"asin":return this.builtins.Asin(e,t);case"asinh":return this.builtins.Asinh(e,t);case"atan":return this.builtins.Atan(e,t);case"atanh":return this.builtins.Atanh(e,t);case"atan2":return this.builtins.Atan2(e,t);case"ceil":return this.builtins.Ceil(e,t);case"clamp":return this.builtins.Clamp(e,t);case"cos":return this.builtins.Cos(e,t);case"cosh":return this.builtins.Cosh(e,t);case"countLeadingZeros":return this.builtins.CountLeadingZeros(e,t);case"countOneBits":return this.builtins.CountOneBits(e,t);case"countTrailingZeros":return this.builtins.CountTrailingZeros(e,t);case"cross":return this.builtins.Cross(e,t);case"degrees":return this.builtins.Degrees(e,t);case"determinant":return this.builtins.Determinant(e,t);case"distance":return this.builtins.Distance(e,t);case"dot":return this.builtins.Dot(e,t);case"dot4U8Packed":return this.builtins.Dot4U8Packed(e,t);case"dot4I8Packed":return this.builtins.Dot4I8Packed(e,t);case"exp":return this.builtins.Exp(e,t);case"exp2":return this.builtins.Exp2(e,t);case"extractBits":return this.builtins.ExtractBits(e,t);case"faceForward":return this.builtins.FaceForward(e,t);case"firstLeadingBit":return this.builtins.FirstLeadingBit(e,t);case"firstTrailingBit":return this.builtins.FirstTrailingBit(e,t);case"floor":return this.builtins.Floor(e,t);case"fma":return this.builtins.Fma(e,t);case"fract":return this.builtins.Fract(e,t);case"frexp":return this.builtins.Frexp(e,t);case"insertBits":return this.builtins.InsertBits(e,t);case"inverseSqrt":return this.builtins.InverseSqrt(e,t);case"ldexp":return this.builtins.Ldexp(e,t);case"length":return this.builtins.Length(e,t);case"log":return this.builtins.Log(e,t);case"log2":return this.builtins.Log2(e,t);case"max":return this.builtins.Max(e,t);case"min":return this.builtins.Min(e,t);case"mix":return this.builtins.Mix(e,t);case"modf":return this.builtins.Modf(e,t);case"normalize":return this.builtins.Normalize(e,t);case"pow":return this.builtins.Pow(e,t);case"quantizeToF16":return this.builtins.QuantizeToF16(e,t);case"radians":return this.builtins.Radians(e,t);case"reflect":return this.builtins.Reflect(e,t);case"refract":return this.builtins.Refract(e,t);case"reverseBits":return this.builtins.ReverseBits(e,t);case"round":return this.builtins.Round(e,t);case"saturate":return this.builtins.Saturate(e,t);case"sign":return this.builtins.Sign(e,t);case"sin":return this.builtins.Sin(e,t);case"sinh":return this.builtins.Sinh(e,t);case"smoothStep":return this.builtins.SmoothStep(e,t);case"sqrt":return this.builtins.Sqrt(e,t);case"step":return this.builtins.Step(e,t);case"tan":return this.builtins.Tan(e,t);case"tanh":return this.builtins.Tanh(e,t);case"transpose":return this.builtins.Transpose(e,t);case"trunc":return this.builtins.Trunc(e,t);case"dpdx":return this.builtins.Dpdx(e,t);case"dpdxCoarse":return this.builtins.DpdxCoarse(e,t);case"dpdxFine":return this.builtins.DpdxFine(e,t);case"dpdy":return this.builtins.Dpdy(e,t);case"dpdyCoarse":return this.builtins.DpdyCoarse(e,t);case"dpdyFine":return this.builtins.DpdyFine(e,t);case"fwidth":return this.builtins.Fwidth(e,t);case"fwidthCoarse":return this.builtins.FwidthCoarse(e,t);case"fwidthFine":return this.builtins.FwidthFine(e,t);case"textureDimensions":return this.builtins.TextureDimensions(e,t);case"textureGather":return this.builtins.TextureGather(e,t);case"textureGatherCompare":return this.builtins.TextureGatherCompare(e,t);case"textureLoad":return this.builtins.TextureLoad(e,t);case"textureNumLayers":return this.builtins.TextureNumLayers(e,t);case"textureNumLevels":return this.builtins.TextureNumLevels(e,t);case"textureNumSamples":return this.builtins.TextureNumSamples(e,t);case"textureSample":return this.builtins.TextureSample(e,t);case"textureSampleBias":return this.builtins.TextureSampleBias(e,t);case"textureSampleCompare":return this.builtins.TextureSampleCompare(e,t);case"textureSampleCompareLevel":return this.builtins.TextureSampleCompareLevel(e,t);case"textureSampleGrad":return this.builtins.TextureSampleGrad(e,t);case"textureSampleLevel":return this.builtins.TextureSampleLevel(e,t);case"textureSampleBaseClampToEdge":return this.builtins.TextureSampleBaseClampToEdge(e,t);case"textureStore":return this.builtins.TextureStore(e,t);case"atomicLoad":return this.builtins.AtomicLoad(e,t);case"atomicStore":return this.builtins.AtomicStore(e,t);case"atomicAdd":return this.builtins.AtomicAdd(e,t);case"atomicSub":return this.builtins.AtomicSub(e,t);case"atomicMax":return this.builtins.AtomicMax(e,t);case"atomicMin":return this.builtins.AtomicMin(e,t);case"atomicAnd":return this.builtins.AtomicAnd(e,t);case"atomicOr":return this.builtins.AtomicOr(e,t);case"atomicXor":return this.builtins.AtomicXor(e,t);case"atomicExchange":return this.builtins.AtomicExchange(e,t);case"atomicCompareExchangeWeak":return this.builtins.AtomicCompareExchangeWeak(e,t);case"pack4x8snorm":return this.builtins.Pack4x8snorm(e,t);case"pack4x8unorm":return this.builtins.Pack4x8unorm(e,t);case"pack4xI8":return this.builtins.Pack4xI8(e,t);case"pack4xU8":return this.builtins.Pack4xU8(e,t);case"pack4x8Clamp":return this.builtins.Pack4x8Clamp(e,t);case"pack4xU8Clamp":return this.builtins.Pack4xU8Clamp(e,t);case"pack2x16snorm":return this.builtins.Pack2x16snorm(e,t);case"pack2x16unorm":return this.builtins.Pack2x16unorm(e,t);case"pack2x16float":return this.builtins.Pack2x16float(e,t);case"unpack4x8snorm":return this.builtins.Unpack4x8snorm(e,t);case"unpack4x8unorm":return this.builtins.Unpack4x8unorm(e,t);case"unpack4xI8":return this.builtins.Unpack4xI8(e,t);case"unpack4xU8":return this.builtins.Unpack4xU8(e,t);case"unpack2x16snorm":return this.builtins.Unpack2x16snorm(e,t);case"unpack2x16unorm":return this.builtins.Unpack2x16unorm(e,t);case"unpack2x16float":return this.builtins.Unpack2x16float(e,t);case"storageBarrier":return this.builtins.StorageBarrier(e,t);case"textureBarrier":return this.builtins.TextureBarrier(e,t);case"workgroupBarrier":return this.builtins.WorkgroupBarrier(e,t);case"workgroupUniformLoad":return this.builtins.WorkgroupUniformLoad(e,t);case"subgroupAdd":return this.builtins.SubgroupAdd(e,t);case"subgroupExclusiveAdd":return this.builtins.SubgroupExclusiveAdd(e,t);case"subgroupInclusiveAdd":return this.builtins.SubgroupInclusiveAdd(e,t);case"subgroupAll":return this.builtins.SubgroupAll(e,t);case"subgroupAnd":return this.builtins.SubgroupAnd(e,t);case"subgroupAny":return this.builtins.SubgroupAny(e,t);case"subgroupBallot":return this.builtins.SubgroupBallot(e,t);case"subgroupBroadcast":return this.builtins.SubgroupBroadcast(e,t);case"subgroupBroadcastFirst":return this.builtins.SubgroupBroadcastFirst(e,t);case"subgroupElect":return this.builtins.SubgroupElect(e,t);case"subgroupMax":return this.builtins.SubgroupMax(e,t);case"subgroupMin":return this.builtins.SubgroupMin(e,t);case"subgroupMul":return this.builtins.SubgroupMul(e,t);case"subgroupExclusiveMul":return this.builtins.SubgroupExclusiveMul(e,t);case"subgroupInclusiveMul":return this.builtins.SubgroupInclusiveMul(e,t);case"subgroupOr":return this.builtins.SubgroupOr(e,t);case"subgroupShuffle":return this.builtins.SubgroupShuffle(e,t);case"subgroupShuffleDown":return this.builtins.SubgroupShuffleDown(e,t);case"subgroupShuffleUp":return this.builtins.SubgroupShuffleUp(e,t);case"subgroupShuffleXor":return this.builtins.SubgroupShuffleXor(e,t);case"subgroupXor":return this.builtins.SubgroupXor(e,t);case"quadBroadcast":return this.builtins.QuadBroadcast(e,t);case"quadSwapDiagonal":return this.builtins.QuadSwapDiagonal(e,t);case"quadSwapX":return this.builtins.QuadSwapX(e,t);case"quadSwapY":return this.builtins.QuadSwapY(e,t)}const n=t.getFunction(e.name);if(n){const s=t.clone();for(let t=0;t<n.node.args.length;++t){const r=n.node.args[t],a=this.evalExpression(e.args[t],s);s.setVariable(r.name,a,r)}return this._execStatements(n.node.body,s)}return null}_callConstructorValue(e,t){if(!e.args||0===e.args.length)return new Ve(0,this.getTypeInfo(e.type));const n=this.evalExpression(e.args[0],t);return n.typeInfo=this.getTypeInfo(e.type),n.getSubData(this,e.postfix,t).clone()}_callConstructorVec(e,t){const n=this.getTypeInfo(e.type),s=e.type.getTypeName(),r=ct[s];if(void 0===r)return console.error(`Invalid vec constructor ${s}. Line ${e.line}`),null;const a=[];if(e instanceof _e)if(e.isVector){const t=e.vectorValue;for(const e of t)a.push(e)}else a.push(e.scalarValue);else if(e.args)for(const n of e.args){const e=this.evalExpression(n,t);if(e instanceof Be){const t=e.data;for(let e=0;e<t.length;++e){let n=t[e];a.push(n)}}else if(e instanceof Ve){let t=e.value;a.push(t)}}if(e.type instanceof ie&&null===e.type.format&&(e.type.format=ie.f32),0===a.length){const s=new Array(r).fill(0);return new Be(s,n).getSubData(this,e.postfix,t)}if(1===a.length)for(;a.length<r;)a.push(a[0]);return a.length<r?(console.error(`Invalid vec constructor. Line ${e.line}`),null):new Be(a.length>r?a.slice(0,r):a,n).getSubData(this,e.postfix,t)}_callConstructorMatrix(e,t){const n=this.getTypeInfo(e.type),s=e.type.getTypeName(),a=ut[s];if(void 0===a)return console.error(`Invalid matrix constructor ${s}. Line ${e.line}`),null;const i=[];if(e instanceof _e)if(e.isVector){const t=e.vectorValue;for(const e of t)i.push(e)}else i.push(e.scalarValue);else if(e.args)for(const n of e.args){const e=this.evalExpression(n,t);e instanceof Be?i.push(...e.data):e instanceof Ve?i.push(e.value):e instanceof Fe&&i.push(...e.data)}if(n instanceof r&&null===n.format&&(n.format=this.getTypeInfo("f32")),0===i.length){const s=new Array(a[2]).fill(0);return new Fe(s,n).getSubData(this,e.postfix,t)}return i.length!==a[2]?(console.error(`Invalid matrix constructor. Line ${e.line}`),null):new Fe(i,n).getSubData(this,e.postfix,t)}}ht._breakObj=new Ce(new e("BREAK",null),null),ht._continueObj=new Ce(new e("CONTINUE",null),null),ht._priority=new Map([["f32",0],["f16",1],["u32",2],["i32",3],["x32",3]]);class ft{constructor(){this.constants=new Map,this.aliases=new Map,this.structs=new Map}}class pt{constructor(){this._tokens=[],this._current=0,this._currentLine=1,this._deferArrayCountEval=[],this._currentLoop=[],this._context=new ft,this._exec=new ht,this._forwardTypeCount=0}parse(e){this._initialize(e),this._deferArrayCountEval.length=0;const t=[];for(;!this._isAtEnd();){const e=this._global_decl_or_directive();if(!e)break;t.push(e)}if(this._deferArrayCountEval.length>0){for(const e of this._deferArrayCountEval){const t=e.arrayType,n=e.countNode;if(n instanceof de){const e=n.name,s=this._context.constants.get(e);if(s)try{const e=s.constEvaluate(this._exec);t.count=e}catch(e){}}}this._deferArrayCountEval.length=0}if(this._forwardTypeCount>0)for(const e of t)e.search((e=>{e instanceof $e||e instanceof oe?e.type=this._forwardType(e.type):e instanceof le?e.format=this._forwardType(e.format):e instanceof O||e instanceof F||e instanceof M?e.type=this._forwardType(e.type):e instanceof L?e.returnType=this._forwardType(e.returnType):e instanceof Ae&&(e.type=this._forwardType(e.type))}));return t}_forwardType(e){if(e instanceof re){const t=this._getType(e.name);if(t)return t}else e instanceof oe?e.type=this._forwardType(e.type):e instanceof le&&(e.format=this._forwardType(e.format));return e}_initialize(e){if(e)if("string"==typeof e){const t=new He(e);this._tokens=t.scanTokens()}else this._tokens=e;else this._tokens=[];this._current=0}_updateNode(e,t){return e.line=null!=t?t:this._currentLine,e}_error(e,t){return{token:e,message:t,toString:()=>`${t}`}}_isAtEnd(){return this._current>=this._tokens.length||this._peek().type==We.eof}_match(e){if(e instanceof Pe)return!!this._check(e)&&(this._advance(),!0);for(let t=0,n=e.length;t<n;++t){const n=e[t];if(this._check(n))return this._advance(),!0}return!1}_consume(e,t){if(this._check(e))return this._advance();throw this._error(this._peek(),`${t}. Line:${this._currentLine}`)}_check(e){if(this._isAtEnd())return!1;const t=this._peek();if(e instanceof Array){const n=t.type;let s=!1;for(const t of e){if(n===t)return!0;t===We.tokens.name&&(s=!0)}if(s){const e=We.tokens.name.rule.exec(t.lexeme);if(e&&0==e.index&&e[0]==t.lexeme)return!0}return!1}if(t.type===e)return!0;if(e===We.tokens.name){const e=We.tokens.name.rule.exec(t.lexeme);return e&&0==e.index&&e[0]==t.lexeme}return!1}_advance(){var e,t;return this._currentLine=null!==(t=null===(e=this._peek())||void 0===e?void 0:e.line)&&void 0!==t?t:-1,this._isAtEnd()||this._current++,this._previous()}_peek(){return this._tokens[this._current]}_previous(){return this._tokens[this._current-1]}_global_decl_or_directive(){for(;this._match(We.tokens.semicolon)&&!this._isAtEnd(););if(this._match(We.keywords.alias)){const e=this._type_alias();return this._consume(We.tokens.semicolon,"Expected ';'"),this._exec.reflection.updateAST([e]),e}if(this._match(We.keywords.diagnostic)){const e=this._diagnostic();return this._consume(We.tokens.semicolon,"Expected ';'"),this._exec.reflection.updateAST([e]),e}if(this._match(We.keywords.requires)){const e=this._requires_directive();return this._consume(We.tokens.semicolon,"Expected ';'"),this._exec.reflection.updateAST([e]),e}if(this._match(We.keywords.enable)){const e=this._enable_directive();return this._consume(We.tokens.semicolon,"Expected ';'"),this._exec.reflection.updateAST([e]),e}const e=this._attribute();if(this._check(We.keywords.var)){const t=this._global_variable_decl();return null!=t&&(t.attributes=e),this._consume(We.tokens.semicolon,"Expected ';'."),this._exec.reflection.updateAST([t]),t}if(this._check(We.keywords.override)){const t=this._override_variable_decl();return null!=t&&(t.attributes=e),this._consume(We.tokens.semicolon,"Expected ';'."),this._exec.reflection.updateAST([t]),t}if(this._check(We.keywords.let)){const t=this._global_let_decl();return null!=t&&(t.attributes=e),this._consume(We.tokens.semicolon,"Expected ';'."),this._exec.reflection.updateAST([t]),t}if(this._check(We.keywords.const)){const t=this._global_const_decl();return null!=t&&(t.attributes=e),this._consume(We.tokens.semicolon,"Expected ';'."),this._exec.reflection.updateAST([t]),t}if(this._check(We.keywords.struct)){const t=this._struct_decl();return null!=t&&(t.attributes=e),this._exec.reflection.updateAST([t]),t}if(this._check(We.keywords.fn)){const t=this._function_decl();return null!=t&&(t.attributes=e),this._exec.reflection.updateAST([t]),t}return null}_function_decl(){if(!this._match(We.keywords.fn))return null;const e=this._currentLine,t=this._consume(We.tokens.ident,"Expected function name.").toString();this._consume(We.tokens.paren_left,"Expected '(' for function arguments.");const n=[];if(!this._check(We.tokens.paren_right))do{if(this._check(We.tokens.paren_right))break;const e=this._attribute(),t=this._consume(We.tokens.name,"Expected argument name.").toString();this._consume(We.tokens.colon,"Expected ':' for argument type.");const s=this._attribute(),r=this._type_decl();null!=r&&(r.attributes=s,n.push(this._updateNode(new Ae(t,r,e))))}while(this._match(We.tokens.comma));this._consume(We.tokens.paren_right,"Expected ')' after function arguments.");let s=null;if(this._match(We.tokens.arrow)){const e=this._attribute();s=this._type_decl(),null!=s&&(s.attributes=e)}const r=this._compound_statement(),a=this._currentLine;return this._updateNode(new L(t,n,s,r,e,a),e)}_compound_statement(){const e=[];for(this._consume(We.tokens.brace_left,"Expected '{' for block.");!this._check(We.tokens.brace_right);){const t=this._statement();null!==t&&e.push(t)}return this._consume(We.tokens.brace_right,"Expected '}' for block."),e}_statement(){for(;this._match(We.tokens.semicolon)&&!this._isAtEnd(););if(this._check(We.tokens.attr)&&this._attribute(),this._check(We.keywords.if))return this._if_statement();if(this._check(We.keywords.switch))return this._switch_statement();if(this._check(We.keywords.loop))return this._loop_statement();if(this._check(We.keywords.for))return this._for_statement();if(this._check(We.keywords.while))return this._while_statement();if(this._check(We.keywords.continuing))return this._continuing_statement();if(this._check(We.keywords.static_assert))return this._static_assert_statement();if(this._check(We.tokens.brace_left))return this._compound_statement();let e=null;if(this._check(We.keywords.return))e=this._return_statement();else if(this._check([We.keywords.var,We.keywords.let,We.keywords.const]))e=this._variable_statement();else if(this._match(We.keywords.discard))e=this._updateNode(new ee);else if(this._match(We.keywords.break)){const t=this._updateNode(new te);if(this._currentLoop.length>0){const e=this._currentLoop[this._currentLoop.length-1];t.loopId=e.id}e=t,this._check(We.keywords.if)&&(this._advance(),t.condition=this._optional_paren_expression())}else if(this._match(We.keywords.continue)){const t=this._updateNode(new ne);if(!(this._currentLoop.length>0))throw this._error(this._peek(),`Continue statement must be inside a loop. Line: ${t.line}`);{const e=this._currentLoop[this._currentLoop.length-1];t.loopId=e.id}e=t}else e=this._increment_decrement_statement()||this._func_call_statement()||this._assignment_statement();return null!=e&&this._consume(We.tokens.semicolon,"Expected ';' after statement."),e}_static_assert_statement(){if(!this._match(We.keywords.static_assert))return null;const e=this._currentLine,t=this._optional_paren_expression();return this._updateNode(new C(t),e)}_while_statement(){if(!this._match(We.keywords.while))return null;const e=this._updateNode(new D(null,null));return this._currentLoop.push(e),e.condition=this._optional_paren_expression(),this._check(We.tokens.attr)&&this._attribute(),e.body=this._compound_statement(),this._currentLoop.pop(),e}_continuing_statement(){const e=this._currentLoop.length>0?this._currentLoop[this._currentLoop.length-1].id:-1;if(!this._match(We.keywords.continuing))return null;const t=this._currentLine,n=this._compound_statement();return this._updateNode(new N(n,e),t)}_for_statement(){if(!this._match(We.keywords.for))return null;this._consume(We.tokens.paren_left,"Expected '('.");const e=this._updateNode(new V(null,null,null,null));return this._currentLoop.push(e),e.init=this._check(We.tokens.semicolon)?null:this._for_init(),this._consume(We.tokens.semicolon,"Expected ';'."),e.condition=this._check(We.tokens.semicolon)?null:this._short_circuit_or_expression(),this._consume(We.tokens.semicolon,"Expected ';'."),e.increment=this._check(We.tokens.paren_right)?null:this._for_increment(),this._consume(We.tokens.paren_right,"Expected ')'."),this._check(We.tokens.attr)&&this._attribute(),e.body=this._compound_statement(),this._currentLoop.pop(),e}_for_init(){return this._variable_statement()||this._func_call_statement()||this._assignment_statement()}_for_increment(){return this._func_call_statement()||this._increment_decrement_statement()||this._assignment_statement()}_variable_statement(){if(this._check(We.keywords.var)){const e=this._variable_decl();if(null===e)throw this._error(this._peek(),"Variable declaration expected.");let t=null;return this._match(We.tokens.equal)&&(t=this._short_circuit_or_expression()),this._updateNode(new O(e.name,e.type,e.storage,e.access,t),e.line)}if(this._match(We.keywords.let)){const e=this._currentLine,t=this._consume(We.tokens.name,"Expected name for let.").toString();let n=null;if(this._match(We.tokens.colon)){const e=this._attribute();n=this._type_decl(),null!=n&&(n.attributes=e)}this._consume(We.tokens.equal,"Expected '=' for let.");const s=this._short_circuit_or_expression();return this._updateNode(new F(t,n,null,null,s),e)}if(this._match(We.keywords.const)){const e=this._currentLine,t=this._consume(We.tokens.name,"Expected name for const.").toString();let n=null;if(this._match(We.tokens.colon)){const e=this._attribute();n=this._type_decl(),null!=n&&(n.attributes=e)}this._consume(We.tokens.equal,"Expected '=' for const.");const s=this._short_circuit_or_expression();return null===n&&s instanceof _e&&(n=s.type),this._updateNode(new M(t,n,null,null,s),e)}return null}_increment_decrement_statement(){const e=this._current,t=this._unary_expression();if(null==t)return null;if(!this._check(We.increment_operators))return this._current=e,null;const n=this._consume(We.increment_operators,"Expected increment operator");return this._updateNode(new H(n.type===We.tokens.plus_plus?U.increment:U.decrement,t))}_assignment_statement(){let e=null;const t=this._currentLine;if(this._check(We.tokens.brace_right))return null;let n=this._match(We.tokens.underscore);if(n||(e=this._unary_expression()),!n&&null==e)return null;const s=this._consume(We.assignment_operators,"Expected assignment operator."),r=this._short_circuit_or_expression();return this._updateNode(new z(P.parse(s.lexeme),e,r),t)}_func_call_statement(){if(!this._check(We.tokens.ident))return null;const e=this._currentLine,t=this._current,n=this._consume(We.tokens.ident,"Expected function name."),s=this._argument_expression_list();return null===s?(this._current=t,null):this._updateNode(new R(n.lexeme,s),e)}_loop_statement(){if(!this._match(We.keywords.loop))return null;this._check(We.tokens.attr)&&this._attribute(),this._consume(We.tokens.brace_left,"Expected '{' for loop.");const e=this._updateNode(new G([],null));this._currentLoop.push(e);let t=this._statement();for(;null!==t;){if(Array.isArray(t))for(let n of t)e.body.push(n);else e.body.push(t);if(t instanceof N){e.continuing=t;break}t=this._statement()}return this._currentLoop.pop(),this._consume(We.tokens.brace_right,"Expected '}' for loop."),e}_switch_statement(){if(!this._match(We.keywords.switch))return null;const e=this._updateNode(new X(null,[]));if(this._currentLoop.push(e),e.condition=this._optional_paren_expression(),this._check(We.tokens.attr)&&this._attribute(),this._consume(We.tokens.brace_left,"Expected '{' for switch."),e.cases=this._switch_body(),null==e.cases||0==e.cases.length)throw this._error(this._previous(),"Expected 'case' or 'default'.");return this._consume(We.tokens.brace_right,"Expected '}' for switch."),this._currentLoop.pop(),e}_switch_body(){const e=[];let t=!1;for(;this._check([We.keywords.default,We.keywords.case]);){if(this._match(We.keywords.case)){const n=this._case_selectors();for(const e of n)if(e instanceof Ie){if(t)throw this._error(this._previous(),"Multiple default cases in switch statement.");t=!0;break}this._match(We.tokens.colon),this._check(We.tokens.attr)&&this._attribute(),this._consume(We.tokens.brace_left,"Exected '{' for switch case.");const s=this._case_body();this._consume(We.tokens.brace_right,"Exected '}' for switch case."),e.push(this._updateNode(new Te(n,s)))}if(this._match(We.keywords.default)){if(t)throw this._error(this._previous(),"Multiple default cases in switch statement.");this._match(We.tokens.colon),this._check(We.tokens.attr)&&this._attribute(),this._consume(We.tokens.brace_left,"Exected '{' for switch default.");const n=this._case_body();this._consume(We.tokens.brace_right,"Exected '}' for switch default."),e.push(this._updateNode(new Se(n)))}}return e}_case_selectors(){const e=[];for(this._match(We.keywords.default)?e.push(this._updateNode(new Ie)):e.push(this._shift_expression());this._match(We.tokens.comma);)this._match(We.keywords.default)?e.push(this._updateNode(new Ie)):e.push(this._shift_expression());return e}_case_body(){if(this._match(We.keywords.fallthrough))return this._consume(We.tokens.semicolon,"Expected ';'"),[];let e=this._statement();if(null==e)return[];e instanceof Array||(e=[e]);const t=this._case_body();return 0==t.length?e:[...e,t[0]]}_if_statement(){if(!this._match(We.keywords.if))return null;const e=this._currentLine,t=this._optional_paren_expression();this._check(We.tokens.attr)&&this._attribute();const n=this._compound_statement();let s=[];this._match_elseif()&&(this._check(We.tokens.attr)&&this._attribute(),s=this._elseif_statement(s));let r=null;return this._match(We.keywords.else)&&(this._check(We.tokens.attr)&&this._attribute(),r=this._compound_statement()),this._updateNode(new j(t,n,s,r),e)}_match_elseif(){return this._tokens[this._current].type===We.keywords.else&&this._tokens[this._current+1].type===We.keywords.if&&(this._advance(),this._advance(),!0)}_elseif_statement(e=[]){const t=this._optional_paren_expression(),n=this._compound_statement();return e.push(this._updateNode(new Ee(t,n))),this._match_elseif()&&(this._check(We.tokens.attr)&&this._attribute(),this._elseif_statement(e)),e}_return_statement(){if(!this._match(We.keywords.return))return null;const e=this._short_circuit_or_expression();return this._updateNode(new Z(e))}_short_circuit_or_expression(){let e=this._short_circuit_and_expr();for(;this._match(We.tokens.or_or);)e=this._updateNode(new we(this._previous().toString(),e,this._short_circuit_and_expr()));return e}_short_circuit_and_expr(){let e=this._inclusive_or_expression();for(;this._match(We.tokens.and_and);)e=this._updateNode(new we(this._previous().toString(),e,this._inclusive_or_expression()));return e}_inclusive_or_expression(){let e=this._exclusive_or_expression();for(;this._match(We.tokens.or);)e=this._updateNode(new we(this._previous().toString(),e,this._exclusive_or_expression()));return e}_exclusive_or_expression(){let e=this._and_expression();for(;this._match(We.tokens.xor);)e=this._updateNode(new we(this._previous().toString(),e,this._and_expression()));return e}_and_expression(){let e=this._equality_expression();for(;this._match(We.tokens.and);)e=this._updateNode(new we(this._previous().toString(),e,this._equality_expression()));return e}_equality_expression(){const e=this._relational_expression();return this._match([We.tokens.equal_equal,We.tokens.not_equal])?this._updateNode(new we(this._previous().toString(),e,this._relational_expression())):e}_relational_expression(){let e=this._shift_expression();for(;this._match([We.tokens.less_than,We.tokens.greater_than,We.tokens.less_than_equal,We.tokens.greater_than_equal]);)e=this._updateNode(new we(this._previous().toString(),e,this._shift_expression()));return e}_shift_expression(){let e=this._additive_expression();for(;this._match([We.tokens.shift_left,We.tokens.shift_right]);)e=this._updateNode(new we(this._previous().toString(),e,this._additive_expression()));return e}_additive_expression(){let e=this._multiplicative_expression();for(;this._match([We.tokens.plus,We.tokens.minus]);)e=this._updateNode(new we(this._previous().toString(),e,this._multiplicative_expression()));return e}_multiplicative_expression(){let e=this._unary_expression();for(;this._match([We.tokens.star,We.tokens.forward_slash,We.tokens.modulo]);)e=this._updateNode(new we(this._previous().toString(),e,this._unary_expression()));return e}_unary_expression(){return this._match([We.tokens.minus,We.tokens.bang,We.tokens.tilde,We.tokens.star,We.tokens.and])?this._updateNode(new ve(this._previous().toString(),this._unary_expression())):this._singular_expression()}_singular_expression(){const e=this._primary_expression(),t=this._postfix_expression();return t&&(e.postfix=t),e}_postfix_expression(){if(this._match(We.tokens.bracket_left)){const e=this._short_circuit_or_expression();this._consume(We.tokens.bracket_right,"Expected ']'.");const t=this._updateNode(new ye(e)),n=this._postfix_expression();return n&&(t.postfix=n),t}if(this._match(We.tokens.period)){const e=this._consume(We.tokens.name,"Expected member name."),t=this._postfix_expression(),n=this._updateNode(new he(e.lexeme));return t&&(n.postfix=t),n}return null}_getStruct(e){return this._context.aliases.has(e)?this._context.aliases.get(e).type:this._context.structs.has(e)?this._context.structs.get(e):null}_getType(e){const t=this._getStruct(e);if(null!==t)return t;switch(e){case"void":return se.void;case"bool":return se.bool;case"i32":return se.i32;case"u32":return se.u32;case"f32":return se.f32;case"f16":return se.f16;case"vec2f":return ie.vec2f;case"vec3f":return ie.vec3f;case"vec4f":return ie.vec4f;case"vec2i":return ie.vec2i;case"vec3i":return ie.vec3i;case"vec4i":return ie.vec4i;case"vec2u":return ie.vec2u;case"vec3u":return ie.vec3u;case"vec4u":return ie.vec4u;case"vec2h":return ie.vec2h;case"vec3h":return ie.vec3h;case"vec4h":return ie.vec4h;case"mat2x2f":return ie.mat2x2f;case"mat2x3f":return ie.mat2x3f;case"mat2x4f":return ie.mat2x4f;case"mat3x2f":return ie.mat3x2f;case"mat3x3f":return ie.mat3x3f;case"mat3x4f":return ie.mat3x4f;case"mat4x2f":return ie.mat4x2f;case"mat4x3f":return ie.mat4x3f;case"mat4x4f":return ie.mat4x4f;case"mat2x2h":return ie.mat2x2h;case"mat2x3h":return ie.mat2x3h;case"mat2x4h":return ie.mat2x4h;case"mat3x2h":return ie.mat3x2h;case"mat3x3h":return ie.mat3x3h;case"mat3x4h":return ie.mat3x4h;case"mat4x2h":return ie.mat4x2h;case"mat4x3h":return ie.mat4x3h;case"mat4x4h":return ie.mat4x4h;case"mat2x2i":return ie.mat2x2i;case"mat2x3i":return ie.mat2x3i;case"mat2x4i":return ie.mat2x4i;case"mat3x2i":return ie.mat3x2i;case"mat3x3i":return ie.mat3x3i;case"mat3x4i":return ie.mat3x4i;case"mat4x2i":return ie.mat4x2i;case"mat4x3i":return ie.mat4x3i;case"mat4x4i":return ie.mat4x4i;case"mat2x2u":return ie.mat2x2u;case"mat2x3u":return ie.mat2x3u;case"mat2x4u":return ie.mat2x4u;case"mat3x2u":return ie.mat3x2u;case"mat3x3u":return ie.mat3x3u;case"mat3x4u":return ie.mat3x4u;case"mat4x2u":return ie.mat4x2u;case"mat4x3u":return ie.mat4x3u;case"mat4x4u":return ie.mat4x4u}return null}_validateTypeRange(e,t){if("i32"===t.name){if(e<-2147483648||e>2147483647)throw this._error(this._previous(),`Value out of range for i32: ${e}. Line: ${this._currentLine}.`)}else if("u32"===t.name&&(e<0||e>4294967295))throw this._error(this._previous(),`Value out of range for u32: ${e}. Line: ${this._currentLine}.`)}_primary_expression(){if(this._match(We.tokens.ident)){const e=this._previous().toString();if(this._check(We.tokens.paren_left)){const t=this._argument_expression_list(),n=this._getType(e);return null!==n?this._updateNode(new fe(n,t)):this._updateNode(new pe(e,t))}if(this._context.constants.has(e)){const t=this._context.constants.get(e);return this._updateNode(new me(e,t.value))}return this._updateNode(new de(e))}if(this._match(We.tokens.int_literal)){const e=this._previous().toString();let t=e.endsWith("i")||e.endsWith("i")?se.i32:e.endsWith("u")||e.endsWith("U")?se.u32:se.x32;const n=parseInt(e);return this._validateTypeRange(n,t),this._updateNode(new _e(new Ve(n,this._exec.getTypeInfo(t)),t))}if(this._match(We.tokens.uint_literal)){const e=parseInt(this._previous().toString());return this._validateTypeRange(e,se.u32),this._updateNode(new _e(new Ve(e,this._exec.getTypeInfo(se.u32)),se.u32))}if(this._match([We.tokens.decimal_float_literal,We.tokens.hex_float_literal])){let e=this._previous().toString(),t=e.endsWith("h");t&&(e=e.substring(0,e.length-1));const n=parseFloat(e);this._validateTypeRange(n,t?se.f16:se.f32);const s=t?se.f16:se.f32;return this._updateNode(new _e(new Ve(n,this._exec.getTypeInfo(s)),s))}if(this._match([We.keywords.true,We.keywords.false])){let e=this._previous().toString()===We.keywords.true.rule;return this._updateNode(new _e(new Ve(e?1:0,this._exec.getTypeInfo(se.bool)),se.bool))}if(this._check(We.tokens.paren_left))return this._paren_expression();if(this._match(We.keywords.bitcast)){this._consume(We.tokens.less_than,"Expected '<'.");const e=this._type_decl();this._consume(We.tokens.greater_than,"Expected '>'.");const t=this._paren_expression();return this._updateNode(new ge(e,t))}const e=this._type_decl(),t=this._argument_expression_list();return this._updateNode(new fe(e,t))}_argument_expression_list(){if(!this._match(We.tokens.paren_left))return null;const e=[];do{if(this._check(We.tokens.paren_right))break;const t=this._short_circuit_or_expression();e.push(t)}while(this._match(We.tokens.comma));return this._consume(We.tokens.paren_right,"Expected ')' for agument list"),e}_optional_paren_expression(){this._match(We.tokens.paren_left);const e=this._short_circuit_or_expression();return this._match(We.tokens.paren_right),e}_paren_expression(){this._consume(We.tokens.paren_left,"Expected '('.");const e=this._short_circuit_or_expression();return this._consume(We.tokens.paren_right,"Expected ')'."),e}_struct_decl(){if(!this._match(We.keywords.struct))return null;const e=this._currentLine,t=this._consume(We.tokens.ident,"Expected name for struct.").toString();this._consume(We.tokens.brace_left,"Expected '{' for struct body.");const n=[];for(;!this._check(We.tokens.brace_right);){const e=this._attribute(),t=this._consume(We.tokens.name,"Expected variable name.").toString();this._consume(We.tokens.colon,"Expected ':' for struct member type.");const s=this._attribute(),r=this._type_decl();null!=r&&(r.attributes=s),this._check(We.tokens.brace_right)?this._match(We.tokens.comma):this._consume(We.tokens.comma,"Expected ',' for struct member."),n.push(this._updateNode(new $e(t,r,e)))}this._consume(We.tokens.brace_right,"Expected '}' after struct body.");const s=this._currentLine,r=this._updateNode(new ae(t,n,e,s),e);return this._context.structs.set(t,r),r}_global_variable_decl(){const e=this._variable_decl();if(!e)return null;if(this._match(We.tokens.equal)){const t=this._const_expression();e.value=t}if(null!==e.type&&e.value instanceof _e){if("x32"!==e.value.type.name&&e.type.getTypeName()!==e.value.type.getTypeName())throw this._error(this._peek(),`Invalid cast from ${e.value.type.name} to ${e.type.name}. Line:${this._currentLine}`);e.value.isScalar&&this._validateTypeRange(e.value.scalarValue,e.type),e.value.type=e.type}else null===e.type&&e.value instanceof _e&&(e.type="x32"===e.value.type.name?se.i32:e.value.type,e.value.isScalar&&this._validateTypeRange(e.value.scalarValue,e.type));return e}_override_variable_decl(){const e=this._override_decl();return e&&this._match(We.tokens.equal)&&(e.value=this._const_expression()),e}_global_const_decl(){var e;if(!this._match(We.keywords.const))return null;const t=this._consume(We.tokens.name,"Expected variable name"),n=this._currentLine;let s=null;if(this._match(We.tokens.colon)){const e=this._attribute();s=this._type_decl(),null!=s&&(s.attributes=e)}let a=null;this._consume(We.tokens.equal,"const declarations require an assignment");const i=this._short_circuit_or_expression();try{let e=[se.f32],n=i.constEvaluate(this._exec,e);n instanceof Ve&&this._validateTypeRange(n.value,e[0]),e[0]instanceof ie&&null===e[0].format&&n.typeInfo instanceof r&&null!==n.typeInfo.format&&("f16"===n.typeInfo.format.name?e[0].format=se.f16:"f32"===n.typeInfo.format.name?e[0].format=se.f32:"i32"===n.typeInfo.format.name?e[0].format=se.i32:"u32"===n.typeInfo.format.name?e[0].format=se.u32:"bool"===n.typeInfo.format.name?e[0].format=se.bool:console.error(`TODO: impelement template format type ${n.typeInfo.format.name}`)),a=this._updateNode(new _e(n,e[0])),this._exec.context.setVariable(t.toString(),n)}catch(e){a=i}if(null!==s&&a instanceof _e){if("x32"!==a.type.name&&s.getTypeName()!==a.type.getTypeName())throw this._error(this._peek(),`Invalid cast from ${a.type.name} to ${s.name}. Line:${this._currentLine}`);a.type=s,a.isScalar&&this._validateTypeRange(a.scalarValue,a.type)}else null===s&&a instanceof _e&&(s=null!==(e=null==a?void 0:a.type)&&void 0!==e?e:se.f32,s===se.x32&&(s=se.i32));const o=this._updateNode(new M(t.toString(),s,"","",a),n);return this._context.constants.set(o.name,o),o}_global_let_decl(){if(!this._match(We.keywords.let))return null;const e=this._currentLine,t=this._consume(We.tokens.name,"Expected variable name");let n=null;if(this._match(We.tokens.colon)){const e=this._attribute();n=this._type_decl(),null!=n&&(n.attributes=e)}let s=null;if(this._match(We.tokens.equal)&&(s=this._const_expression()),null!==n&&s instanceof _e){if("x32"!==s.type.name&&n.getTypeName()!==s.type.getTypeName())throw this._error(this._peek(),`Invalid cast from ${s.type.name} to ${n.name}. Line:${this._currentLine}`);s.type=n}else null===n&&s instanceof _e&&(n="x32"===s.type.name?se.i32:s.type);return s instanceof _e&&s.isScalar&&this._validateTypeRange(s.scalarValue,n),this._updateNode(new F(t.toString(),n,"","",s),e)}_const_expression(){return this._short_circuit_or_expression()}_variable_decl(){if(!this._match(We.keywords.var))return null;const e=this._currentLine;let t="",n="";this._match(We.tokens.less_than)&&(t=this._consume(We.storage_class,"Expected storage_class.").toString(),this._match(We.tokens.comma)&&(n=this._consume(We.access_mode,"Expected access_mode.").toString()),this._consume(We.tokens.greater_than,"Expected '>'."));const s=this._consume(We.tokens.name,"Expected variable name");let r=null;if(this._match(We.tokens.colon)){const e=this._attribute();r=this._type_decl(),null!=r&&(r.attributes=e)}return this._updateNode(new O(s.toString(),r,t,n,null),e)}_override_decl(){if(!this._match(We.keywords.override))return null;const e=this._consume(We.tokens.name,"Expected variable name");let t=null;if(this._match(We.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}return this._updateNode(new B(e.toString(),t,null))}_diagnostic(){this._consume(We.tokens.paren_left,"Expected '('");const e=this._consume(We.tokens.ident,"Expected severity control name.");this._consume(We.tokens.comma,"Expected ','");let t=this._consume(We.tokens.ident,"Expected diagnostic rule name.").toString();return this._match(We.tokens.period)&&(t+=`.${this._consume(We.tokens.ident,"Expected diagnostic message.").toString()}`),this._consume(We.tokens.paren_right,"Expected ')'"),this._updateNode(new K(e.toString(),t))}_enable_directive(){const e=this._consume(We.tokens.ident,"identity expected.");return this._updateNode(new Q(e.toString()))}_requires_directive(){const e=[this._consume(We.tokens.ident,"identity expected.").toString()];for(;this._match(We.tokens.comma);){const t=this._consume(We.tokens.ident,"identity expected.");e.push(t.toString())}return this._updateNode(new Y(e))}_type_alias(){const e=this._consume(We.tokens.ident,"identity expected.");this._consume(We.tokens.equal,"Expected '=' for type alias.");let t=this._type_decl();if(null===t)throw this._error(this._peek(),"Expected Type for Alias.");this._context.aliases.has(t.name)&&(t=this._context.aliases.get(t.name).type);const n=this._updateNode(new J(e.toString(),t));return this._context.aliases.set(n.name,n),n}_type_decl(){if(this._check([We.tokens.ident,...We.texel_format,We.keywords.bool,We.keywords.f32,We.keywords.i32,We.keywords.u32])){const e=this._advance().toString();if(this._context.structs.has(e))return this._context.structs.get(e);if(this._context.aliases.has(e))return this._context.aliases.get(e).type;if(!this._getType(e)){const t=this._updateNode(new re(e));return this._forwardTypeCount++,t}return this._updateNode(new se(e))}let e=this._texture_sampler_types();if(e)return e;if(this._check(We.template_types)){let e=this._advance().toString(),t=null,n=null;return this._match(We.tokens.less_than)&&(t=this._type_decl(),n=null,this._match(We.tokens.comma)&&(n=this._consume(We.access_mode,"Expected access_mode for pointer").toString()),this._consume(We.tokens.greater_than,"Expected '>' for type.")),this._updateNode(new ie(e,t,n))}if(this._match(We.keywords.ptr)){let e=this._previous().toString();this._consume(We.tokens.less_than,"Expected '<' for pointer.");const t=this._consume(We.storage_class,"Expected storage_class for pointer");this._consume(We.tokens.comma,"Expected ',' for pointer.");const n=this._type_decl();let s=null;return this._match(We.tokens.comma)&&(s=this._consume(We.access_mode,"Expected access_mode for pointer").toString()),this._consume(We.tokens.greater_than,"Expected '>' for pointer."),this._updateNode(new oe(e,t.toString(),n,s))}const t=this._attribute();if(this._match(We.keywords.array)){let e=null,n=-1;const s=this._previous();let r=null;if(this._match(We.tokens.less_than)){e=this._type_decl(),this._context.aliases.has(e.name)&&(e=this._context.aliases.get(e.name).type);let t="";if(this._match(We.tokens.comma)){r=this._shift_expression();try{t=r.constEvaluate(this._exec).toString(),r=null}catch(e){t="1"}}this._consume(We.tokens.greater_than,"Expected '>' for array."),n=t?parseInt(t):0}const a=this._updateNode(new le(s.toString(),t,e,n));return r&&this._deferArrayCountEval.push({arrayType:a,countNode:r}),a}return null}_texture_sampler_types(){if(this._match(We.sampler_type))return this._updateNode(new ce(this._previous().toString(),null,null));if(this._match(We.depth_texture_type))return this._updateNode(new ce(this._previous().toString(),null,null));if(this._match(We.sampled_texture_type)||this._match(We.multisampled_texture_type)){const e=this._previous();this._consume(We.tokens.less_than,"Expected '<' for sampler type.");const t=this._type_decl();return this._consume(We.tokens.greater_than,"Expected '>' for sampler type."),this._updateNode(new ce(e.toString(),t,null))}if(this._match(We.storage_texture_type)){const e=this._previous();this._consume(We.tokens.less_than,"Expected '<' for sampler type.");const t=this._consume(We.texel_format,"Invalid texel format.").toString();this._consume(We.tokens.comma,"Expected ',' after texel format.");const n=this._consume(We.access_mode,"Expected access mode for storage texture type.").toString();return this._consume(We.tokens.greater_than,"Expected '>' for sampler type."),this._updateNode(new ce(e.toString(),t,n))}return null}_attribute(){let e=[];for(;this._match(We.tokens.attr);){const t=this._consume(We.attribute_name,"Expected attribute name"),n=this._updateNode(new Le(t.toString(),null));if(this._match(We.tokens.paren_left)){if(n.value=this._consume(We.literal_or_ident,"Expected attribute value").toString(),this._check(We.tokens.comma)){this._advance();do{const e=this._consume(We.literal_or_ident,"Expected attribute value").toString();n.value instanceof Array||(n.value=[n.value]),n.value.push(e)}while(this._match(We.tokens.comma))}this._consume(We.tokens.paren_right,"Expected ')'")}e.push(n)}return 0==e.length?null:e}}class dt extends st{constructor(e){super(),e&&this.update(e)}update(e){const t=(new pt).parse(e);this.updateAST(t)}}function getShaderLayoutFromWGSL(source){const shaderLayout={attributes:[],bindings:[]};let parsedWGSL;try{parsedWGSL=function parseWGSL(source){try{return new dt(source)}catch(error){if(error instanceof Error)throw error;let message="WGSL parse error";throw"object"==typeof error&&error?.message&&(message+=`: ${error.message} `),"object"==typeof error&&error?.token&&(message+=error.token.line||""),new Error(message,{cause:error})}}(source)}catch(error){return log.R.error(error.message)(),shaderLayout}for(const uniform of parsedWGSL.uniforms){const members=[];for(const attribute of uniform.type?.members||[])members.push({name:attribute.name,type:getType(attribute.type)});shaderLayout.bindings.push({type:"uniform",name:uniform.name,group:uniform.group,location:uniform.binding,members:members})}for(const texture of parsedWGSL.textures)shaderLayout.bindings.push({type:"texture",name:texture.name,group:texture.group,location:texture.binding});for(const sampler of parsedWGSL.samplers)shaderLayout.bindings.push({type:"sampler",name:sampler.name,group:sampler.group,location:sampler.binding});const vertex=parsedWGSL.entry.vertex[0],attributeCount=vertex?.inputs.length||0;for(let i=0;i<attributeCount;i++){const wgslAttribute=vertex.inputs[i];if("location"===wgslAttribute.locationType){const type=getType(wgslAttribute.type);shaderLayout.attributes.push({name:wgslAttribute.name,location:Number(wgslAttribute.location),type:type})}}return shaderLayout}function getType(type){return type.format?`${type.name}<${type.format.name}>`:type.name}var uid=__webpack_require__("./node_modules/@luma.gl/engine/dist/utils/uid.js");class GPUGeometry{id;userData={};topology;bufferLayout=[];vertexCount;indices;attributes;constructor(props){if(this.id=props.id||(0,uid.L)("geometry"),this.topology=props.topology,this.indices=props.indices||null,this.attributes=props.attributes,this.vertexCount=props.vertexCount,this.bufferLayout=props.bufferLayout||[],this.indices&&!(this.indices.usage&buffer.h.INDEX))throw new Error("Index buffer must have INDEX usage")}destroy(){this.indices?.destroy();for(const attribute of Object.values(this.attributes))attribute.destroy()}getVertexCount(){return this.vertexCount}getAttributes(){return this.attributes}getIndexes(){return this.indices||null}_calculateVertexCount(positions){return positions.byteLength/12}}function makeGPUGeometry(device,geometry){if(geometry instanceof GPUGeometry)return geometry;const indices=function getIndexBufferFromGeometry(device,geometry){if(!geometry.indices)return;const data=geometry.indices.value;return device.createBuffer({usage:buffer.h.INDEX,data:data})}(device,geometry),{attributes:attributes,bufferLayout:bufferLayout}=function getAttributeBuffersFromGeometry(device,geometry){const bufferLayout=[],attributes={};for(const[attributeName,attribute]of Object.entries(geometry.attributes)){let name=attributeName;switch(attributeName){case"POSITION":name="positions";break;case"NORMAL":name="normals";break;case"TEXCOORD_0":name="texCoords";break;case"COLOR_0":name="colors"}if(attribute){attributes[name]=device.createBuffer({data:attribute.value,id:`${attributeName}-buffer`});const{value:value,size:size,normalized:normalized}=attribute;bufferLayout.push({name:name,format:(0,vertex_format_from_attribute.OB)(value,size,normalized)})}}const vertexCount=geometry._calculateVertexCount(geometry.attributes,geometry.indices);return{attributes:attributes,bufferLayout:bufferLayout,vertexCount:vertexCount}}(device,geometry);return new GPUGeometry({topology:geometry.topology||"triangle-list",bufferLayout:bufferLayout,vertexCount:geometry.vertexCount,indices:indices,attributes:attributes})}var resource=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/resource.js");class ComputePipeline extends resource.F{static defaultProps={...resource.F.defaultProps,shader:void 0,entryPoint:void 0,constants:{},shaderLayout:void 0};get[Symbol.toStringTag](){return"ComputePipeline"}hash="";shaderLayout;constructor(device,props){super(device,props,ComputePipeline.defaultProps),this.shaderLayout=props.shaderLayout}}class PipelineFactory{static defaultProps={...render_pipeline.r.defaultProps};static getDefaultPipelineFactory(device){return device._lumaData.defaultPipelineFactory=device._lumaData.defaultPipelineFactory||new PipelineFactory(device),device._lumaData.defaultPipelineFactory}device;destroyPolicy;_hashCounter=0;_hashes={};_renderPipelineCache={};_computePipelineCache={};constructor(device){this.device=device,this.destroyPolicy=device.props._factoryDestroyPolicy}createRenderPipeline(props){const allProps={...render_pipeline.r.defaultProps,...props},hash=this._hashRenderPipeline(allProps);if(!this._renderPipelineCache[hash]){const pipeline=this.device.createRenderPipeline({...allProps,id:allProps.id?`${allProps.id}-cached`:void 0});pipeline.hash=hash,this._renderPipelineCache[hash]={pipeline:pipeline,useCount:0}}return this._renderPipelineCache[hash].useCount++,this._renderPipelineCache[hash].pipeline}createComputePipeline(props){const allProps={...ComputePipeline.defaultProps,...props},hash=this._hashComputePipeline(allProps);if(!this._computePipelineCache[hash]){const pipeline=this.device.createComputePipeline({...allProps,id:allProps.id?`${allProps.id}-cached`:void 0});pipeline.hash=hash,this._computePipelineCache[hash]={pipeline:pipeline,useCount:0}}return this._computePipelineCache[hash].useCount++,this._computePipelineCache[hash].pipeline}release(pipeline){const hash=pipeline.hash,cache=pipeline instanceof ComputePipeline?this._computePipelineCache:this._renderPipelineCache;cache[hash].useCount--,0===cache[hash].useCount&&"unused"===this.destroyPolicy&&(cache[hash].pipeline.destroy(),delete cache[hash])}_hashComputePipeline(props){return`${this._getHash(props.shader.source)}`}_hashRenderPipeline(props){const vsHash=props.vs?this._getHash(props.vs.source):0,fsHash=props.fs?this._getHash(props.fs.source):0,bufferLayoutHash=this._getHash(JSON.stringify(props.bufferLayout));if("webgl"===this.device.type)return`${vsHash}/${fsHash}V-BL${bufferLayoutHash}`;{const parameterHash=this._getHash(JSON.stringify(props.parameters));return`${vsHash}/${fsHash}V-T${props.topology}P${parameterHash}BL${bufferLayoutHash}`}}_getHash(key){return void 0===this._hashes[key]&&(this._hashes[key]=this._hashCounter++),this._hashes[key]}}var shader=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/shader.js");class ShaderFactory{static defaultProps={...shader.M.defaultProps};static getDefaultShaderFactory(device){return device._lumaData.defaultShaderFactory||=new ShaderFactory(device),device._lumaData.defaultShaderFactory}device;destroyPolicy;_cache={};constructor(device){this.device=device,this.destroyPolicy=device.props._factoryDestroyPolicy}createShader(props){const key=this._hashShader(props);let cacheEntry=this._cache[key];if(!cacheEntry){const shader=this.device.createShader({...props,id:props.id?`${props.id}-cached`:void 0});this._cache[key]=cacheEntry={shader:shader,useCount:0}}return cacheEntry.useCount++,cacheEntry.shader}release(shader){const key=this._hashShader(shader),cacheEntry=this._cache[key];cacheEntry&&(cacheEntry.useCount--,0===cacheEntry.useCount&&"unused"===this.destroyPolicy&&(delete this._cache[key],cacheEntry.shader.destroy()))}_hashShader(value){return`${value.stage}:${value.source}`}}let canvas=null,ctx=null;function deepEqual(a,b,depth){if(a===b)return!0;if(!depth||!a||!b)return!1;if(Array.isArray(a)){if(!Array.isArray(b)||a.length!==b.length)return!1;for(let i=0;i<a.length;i++)if(!deepEqual(a[i],b[i],depth-1))return!1;return!0}if(Array.isArray(b))return!1;if("object"==typeof a&&"object"==typeof b){const aKeys=Object.keys(a),bKeys=Object.keys(b);if(aKeys.length!==bKeys.length)return!1;for(const key of aKeys){if(!b.hasOwnProperty(key))return!1;if(!deepEqual(a[key],b[key],depth-1))return!1}return!0}return!1}var shader_module_dependencies=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/lib/shader-module/shader-module-dependencies.js"),is_array=__webpack_require__("./node_modules/@math.gl/types/dist/is-array.js");function splitUniformsAndBindings(uniforms){const result={bindings:{},uniforms:{}};return Object.keys(uniforms).forEach((name=>{const uniform=uniforms[name];!function isUniformValue(value){return(0,is_array.H9)(value)||"number"==typeof value||"boolean"==typeof value}(uniform)?result.bindings[name]=uniform:result.uniforms[name]=uniform})),result}class ShaderInputs{options={disableWarnings:!1};modules;moduleUniforms;moduleBindings;constructor(modules,options){Object.assign(this.options,options);const resolvedModules=(0,shader_module_dependencies.$Q)(Object.values(modules).filter((module=>module.dependencies)));for(const resolvedModule of resolvedModules)modules[resolvedModule.name]=resolvedModule;log.R.log(1,"Creating ShaderInputs with modules",Object.keys(modules))(),this.modules=modules,this.moduleUniforms={},this.moduleBindings={};for(const[name,module]of Object.entries(modules))this._addModule(module),module.name&&name!==module.name&&!this.options.disableWarnings&&log.R.warn(`Module name: ${name} vs ${module.name}`)()}destroy(){}setProps(props){for(const name of Object.keys(props)){const moduleName=name,moduleProps=props[moduleName]||{},module=this.modules[moduleName];if(!module){this.options.disableWarnings||log.R.warn(`Module ${name} not found`)();continue}const oldUniforms=this.moduleUniforms[moduleName],oldBindings=this.moduleBindings[moduleName],uniformsAndBindings=module.getUniforms?.(moduleProps,oldUniforms)||moduleProps,{uniforms:uniforms,bindings:bindings}=splitUniformsAndBindings(uniformsAndBindings);this.moduleUniforms[moduleName]={...oldUniforms,...uniforms},this.moduleBindings[moduleName]={...oldBindings,...bindings}}}getModules(){return Object.values(this.modules)}getUniformValues(){return this.moduleUniforms}getBindingValues(){const bindings={};for(const moduleBindings of Object.values(this.moduleBindings))Object.assign(bindings,moduleBindings);return bindings}getDebugTable(){const table={};for(const[moduleName,module]of Object.entries(this.moduleUniforms))for(const[key,value]of Object.entries(module))table[`${moduleName}.${key}`]={type:this.modules[moduleName].uniformTypes?.[key],value:String(value)};return table}_addModule(module){const moduleName=module.name;this.moduleUniforms[moduleName]=module.defaultUniforms||{},this.moduleBindings[moduleName]={}}}let pathPrefix="";async function loadImageBitmap(url,opts){const image=new Image;return image.crossOrigin=opts?.crossOrigin||"anonymous",image.src=url.startsWith("http")?url:pathPrefix+url,await image.decode(),opts?await createImageBitmap(image,opts):await createImageBitmap(image)}class AsyncTexture{device;id;texture;sampler;view;ready;isReady=!1;destroyed=!1;resolveReady=()=>{};rejectReady=()=>{};get[Symbol.toStringTag](){return"AsyncTexture"}toString(){return`AsyncTexture:"${this.id}"(${this.isReady?"ready":"loading"})`}constructor(device,props){this.device=device,this.id=props.id||(0,uid.L)("async-texture"),"string"==typeof props?.data&&"2d"===props.dimension&&(props={...props,data:loadImageBitmap(props.data)}),this.ready=new Promise(((resolve,reject)=>{this.resolveReady=()=>{this.isReady=!0,resolve()},this.rejectReady=reject})),this.initAsync(props)}async initAsync(props){const asyncData=props.data,data=await awaitAllPromises(asyncData).then(undefined,undefined);if(this.destroyed)return;const syncProps={...props,data:data};this.texture=this.device.createTexture(syncProps),this.sampler=this.texture.sampler,this.view=this.texture.view,this.isReady=!0}destroy(){this.texture&&(this.texture.destroy(),this.texture=null),this.destroyed=!0}resize(size){if(!this.isReady)throw new Error("Cannot resize texture before it is ready");if(size.width===this.texture.width&&size.height===this.texture.height)return!1;if(this.texture){const texture=this.texture;this.texture=texture.clone(size),texture.destroy()}return!0}}async function awaitAllPromises(x){if(x=await x,Array.isArray(x))return await Promise.all(x.map(awaitAllPromises));if(x&&"object"==typeof x&&x.constructor===Object){const object=x,values=await Promise.all(Object.values(object)),keys=Object.keys(object),resolvedObject={};for(let i=0;i<keys.length;i++)resolvedObject[keys[i]]=values[i];return resolvedObject}return x}class Model{static defaultProps={...render_pipeline.r.defaultProps,source:void 0,vs:null,fs:null,id:"unnamed",handle:void 0,userData:{},defines:{},modules:[],moduleSettings:void 0,geometry:null,indexBuffer:null,attributes:{},constantAttributes:{},varyings:[],isInstanced:void 0,instanceCount:0,vertexCount:0,shaderInputs:void 0,pipelineFactory:void 0,shaderFactory:void 0,transformFeedback:void 0,shaderAssembler:shader_assembler._.getDefaultShaderAssembler(),debugShaders:void 0,disableWarnings:void 0};device;id;source;vs;fs;pipelineFactory;shaderFactory;userData={};parameters;topology;bufferLayout;isInstanced=void 0;instanceCount=0;vertexCount;indexBuffer=null;bufferAttributes={};constantAttributes={};bindings={};uniforms={};vertexArray;transformFeedback=null;pipeline;shaderInputs;_uniformStore;_attributeInfos={};_gpuGeometry=null;_getModuleUniforms;props;_pipelineNeedsUpdate="newly created";_needsRedraw="initializing";_destroyed=!1;_lastDrawTimestamp=-1;get[Symbol.toStringTag](){return"Model"}toString(){return`Model(${this.id})`}constructor(device,props){this.props={...Model.defaultProps,...props},props=this.props,this.id=props.id||(0,uid.L)("model"),this.device=device,Object.assign(this.userData,props.userData);const moduleMap=Object.fromEntries(this.props.modules?.map((module=>[module.name,module]))||[]),shaderInputs=props.shaderInputs||new ShaderInputs(moduleMap,{disableWarnings:this.props.disableWarnings});this.setShaderInputs(shaderInputs);const platformInfo=function getPlatformInfo(device){return{type:device.type,shaderLanguage:device.info.shadingLanguage,shaderLanguageVersion:device.info.shadingLanguageVersion,gpu:device.info.gpu,features:device.features}}(device),modules=(this.props.modules?.length>0?this.props.modules:this.shaderInputs?.getModules())||[];if("webgpu"===this.device.type&&this.props.source){const{source:source,getUniforms:getUniforms}=this.props.shaderAssembler.assembleWGSLShader({platformInfo:platformInfo,...this.props,modules:modules});this.source=source,this._getModuleUniforms=getUniforms,this.props.shaderLayout||=getShaderLayoutFromWGSL(this.source)}else{const{vs:vs,fs:fs,getUniforms:getUniforms}=this.props.shaderAssembler.assembleGLSLShaderPair({platformInfo:platformInfo,...this.props,modules:modules});this.vs=vs,this.fs=fs,this._getModuleUniforms=getUniforms}this.vertexCount=this.props.vertexCount,this.instanceCount=this.props.instanceCount,this.topology=this.props.topology,this.bufferLayout=this.props.bufferLayout,this.parameters=this.props.parameters,props.geometry&&this.setGeometry(props.geometry),this.pipelineFactory=props.pipelineFactory||PipelineFactory.getDefaultPipelineFactory(this.device),this.shaderFactory=props.shaderFactory||ShaderFactory.getDefaultShaderFactory(this.device),this.pipeline=this._updatePipeline(),this.vertexArray=device.createVertexArray({renderPipeline:this.pipeline}),this._gpuGeometry&&this._setGeometryAttributes(this._gpuGeometry),"isInstanced"in props&&(this.isInstanced=props.isInstanced),props.instanceCount&&this.setInstanceCount(props.instanceCount),props.vertexCount&&this.setVertexCount(props.vertexCount),props.indexBuffer&&this.setIndexBuffer(props.indexBuffer),props.attributes&&this.setAttributes(props.attributes),props.constantAttributes&&this.setConstantAttributes(props.constantAttributes),props.bindings&&this.setBindings(props.bindings),props.uniforms&&this.setUniformsWebGL(props.uniforms),props.moduleSettings&&this.updateModuleSettingsWebGL(props.moduleSettings),props.transformFeedback&&(this.transformFeedback=props.transformFeedback),Object.seal(this)}destroy(){this._destroyed||(this.pipelineFactory.release(this.pipeline),this.shaderFactory.release(this.pipeline.vs),this.pipeline.fs&&this.shaderFactory.release(this.pipeline.fs),this._uniformStore.destroy(),this._gpuGeometry?.destroy(),this._destroyed=!0)}needsRedraw(){this._getBindingsUpdateTimestamp()>this._lastDrawTimestamp&&this.setNeedsRedraw("contents of bound textures or buffers updated");const needsRedraw=this._needsRedraw;return this._needsRedraw=!1,needsRedraw}setNeedsRedraw(reason){this._needsRedraw||=reason}predraw(){this.updateShaderInputs(),this.pipeline=this._updatePipeline()}draw(renderPass){const loadingBinding=this._areBindingsLoading();if(loadingBinding)return log.R.info(2,`>>> DRAWING ABORTED ${this.id}: ${loadingBinding} not loaded`)(),!1;try{renderPass.pushDebugGroup(`${this}.predraw(${renderPass})`),this.predraw()}finally{renderPass.popDebugGroup()}let drawSuccess;try{renderPass.pushDebugGroup(`${this}.draw(${renderPass})`),this._logDrawCallStart(),this.pipeline=this._updatePipeline();const syncBindings=this._getBindings();this.pipeline.setBindings(syncBindings,{disableWarnings:this.props.disableWarnings}),isObjectEmpty(this.uniforms)||this.pipeline.setUniformsWebGL(this.uniforms);const{indexBuffer:indexBuffer}=this.vertexArray,indexCount=indexBuffer?indexBuffer.byteLength/("uint32"===indexBuffer.indexType?4:2):void 0;drawSuccess=this.pipeline.draw({renderPass:renderPass,vertexArray:this.vertexArray,isInstanced:this.isInstanced,vertexCount:this.vertexCount,instanceCount:this.instanceCount,indexCount:indexCount,transformFeedback:this.transformFeedback||void 0,parameters:this.parameters,topology:this.topology})}finally{renderPass.popDebugGroup(),this._logDrawCallEnd()}return this._logFramebuffer(renderPass),drawSuccess?(this._lastDrawTimestamp=this.device.timestamp,this._needsRedraw=!1):this._needsRedraw="waiting for resource initialization",drawSuccess}setGeometry(geometry){this._gpuGeometry?.destroy();const gpuGeometry=geometry&&makeGPUGeometry(this.device,geometry);if(gpuGeometry){this.setTopology(gpuGeometry.topology||"triangle-list");const bufferLayoutHelper=new BufferLayoutHelper(this.bufferLayout);this.bufferLayout=bufferLayoutHelper.mergeBufferLayouts(gpuGeometry.bufferLayout,this.bufferLayout),this.vertexArray&&this._setGeometryAttributes(gpuGeometry)}this._gpuGeometry=gpuGeometry}setTopology(topology){topology!==this.topology&&(this.topology=topology,this._setPipelineNeedsUpdate("topology"))}setBufferLayout(bufferLayout){const bufferLayoutHelper=new BufferLayoutHelper(this.bufferLayout);this.bufferLayout=this._gpuGeometry?bufferLayoutHelper.mergeBufferLayouts(bufferLayout,this._gpuGeometry.bufferLayout):bufferLayout,this._setPipelineNeedsUpdate("bufferLayout"),this.pipeline=this._updatePipeline(),this.vertexArray=this.device.createVertexArray({renderPipeline:this.pipeline}),this._gpuGeometry&&this._setGeometryAttributes(this._gpuGeometry)}setParameters(parameters){deepEqual(parameters,this.parameters,2)||(this.parameters=parameters,this._setPipelineNeedsUpdate("parameters"))}setInstanceCount(instanceCount){this.instanceCount=instanceCount,void 0===this.isInstanced&&instanceCount>0&&(this.isInstanced=!0),this.setNeedsRedraw("instanceCount")}setVertexCount(vertexCount){this.vertexCount=vertexCount,this.setNeedsRedraw("vertexCount")}setShaderInputs(shaderInputs){this.shaderInputs=shaderInputs,this._uniformStore=new UniformStore(this.shaderInputs.modules);for(const[moduleName,module]of Object.entries(this.shaderInputs.modules))if(shaderModuleHasUniforms(module)){const uniformBuffer=this._uniformStore.getManagedUniformBuffer(this.device,moduleName);this.bindings[`${moduleName}Uniforms`]=uniformBuffer}this.setNeedsRedraw("shaderInputs")}updateShaderInputs(){this._uniformStore.setUniforms(this.shaderInputs.getUniformValues()),this.setBindings(this.shaderInputs.getBindingValues()),this.setNeedsRedraw("shaderInputs")}setBindings(bindings){Object.assign(this.bindings,bindings),this.setNeedsRedraw("bindings")}setTransformFeedback(transformFeedback){this.transformFeedback=transformFeedback,this.setNeedsRedraw("transformFeedback")}setIndexBuffer(indexBuffer){this.vertexArray.setIndexBuffer(indexBuffer),this.setNeedsRedraw("indexBuffer")}setAttributes(buffers,options){const disableWarnings=options?.disableWarnings??this.props.disableWarnings;buffers.indices&&log.R.warn(`Model:${this.id} setAttributes() - indexBuffer should be set using setIndexBuffer()`)();const bufferLayoutHelper=new BufferLayoutHelper(this.bufferLayout);for(const[bufferName,buffer]of Object.entries(buffers)){const bufferLayout=bufferLayoutHelper.getBufferLayout(bufferName);if(!bufferLayout){disableWarnings||log.R.warn(`Model(${this.id}): Missing layout for buffer "${bufferName}".`)();continue}const attributeNames=bufferLayoutHelper.getAttributeNamesForBuffer(bufferLayout);let set=!1;for(const attributeName of attributeNames){const attributeInfo=this._attributeInfos[attributeName];attributeInfo&&(this.vertexArray.setBuffer(attributeInfo.location,buffer),set=!0)}set||disableWarnings||log.R.warn(`Model(${this.id}): Ignoring buffer "${buffer.id}" for unknown attribute "${bufferName}"`)()}this.setNeedsRedraw("attributes")}setConstantAttributes(attributes,options){for(const[attributeName,value]of Object.entries(attributes)){const attributeInfo=this._attributeInfos[attributeName];attributeInfo?this.vertexArray.setConstantWebGL(attributeInfo.location,value):(options?.disableWarnings??this.props.disableWarnings)||log.R.warn(`Model "${this.id}: Ignoring constant supplied for unknown attribute "${attributeName}"`)()}this.setNeedsRedraw("constants")}setUniforms(uniforms){this.setUniformsWebGL(uniforms)}setUniformsWebGL(uniforms){isObjectEmpty(uniforms)||(this.pipeline.setUniformsWebGL(uniforms),Object.assign(this.uniforms,uniforms)),this.setNeedsRedraw("uniforms")}updateModuleSettingsWebGL(props){const{bindings:bindings,uniforms:uniforms}=splitUniformsAndBindings(this._getModuleUniforms(props));Object.assign(this.bindings,bindings),Object.assign(this.uniforms,uniforms),this.setNeedsRedraw("moduleSettings")}_areBindingsLoading(){for(const binding of Object.values(this.bindings))if(binding instanceof AsyncTexture&&!binding.isReady)return binding.id;return!1}_getBindings(){const validBindings={};for(const[name,binding]of Object.entries(this.bindings))binding instanceof AsyncTexture?binding.isReady&&(validBindings[name]=binding.texture):validBindings[name]=binding;return validBindings}_getBindingsUpdateTimestamp(){let timestamp=0;for(const binding of Object.values(this.bindings))binding instanceof texture_view.X?timestamp=Math.max(timestamp,binding.texture.updateTimestamp):binding instanceof buffer.h||binding instanceof texture.g?timestamp=Math.max(timestamp,binding.updateTimestamp):binding instanceof AsyncTexture?timestamp=binding.texture?Math.max(timestamp,binding.texture.updateTimestamp):1/0:binding instanceof sampler.L||(timestamp=Math.max(timestamp,binding.buffer.updateTimestamp));return timestamp}_setGeometryAttributes(gpuGeometry){const attributes={...gpuGeometry.attributes};for(const[attributeName]of Object.entries(attributes))this.pipeline.shaderLayout.attributes.find((layout=>layout.name===attributeName))||"positions"===attributeName||delete attributes[attributeName];this.vertexCount=gpuGeometry.vertexCount,this.setIndexBuffer(gpuGeometry.indices||null),this.setAttributes(gpuGeometry.attributes,{disableWarnings:!0}),this.setAttributes(attributes,{disableWarnings:this.props.disableWarnings}),this.setNeedsRedraw("geometry attributes")}_setPipelineNeedsUpdate(reason){this._pipelineNeedsUpdate||=reason,this.setNeedsRedraw(reason)}_updatePipeline(){if(this._pipelineNeedsUpdate){let prevShaderVs=null,prevShaderFs=null;this.pipeline&&(log.R.log(1,`Model ${this.id}: Recreating pipeline because "${this._pipelineNeedsUpdate}".`)(),prevShaderVs=this.pipeline.vs,prevShaderFs=this.pipeline.fs),this._pipelineNeedsUpdate=!1;const vs=this.shaderFactory.createShader({id:`${this.id}-vertex`,stage:"vertex",source:this.source||this.vs,debugShaders:this.props.debugShaders});let fs=null;this.source?fs=vs:this.fs&&(fs=this.shaderFactory.createShader({id:`${this.id}-fragment`,stage:"fragment",source:this.source||this.fs,debugShaders:this.props.debugShaders})),this.pipeline=this.pipelineFactory.createRenderPipeline({...this.props,bufferLayout:this.bufferLayout,topology:this.topology,parameters:this.parameters,bindings:this._getBindings(),vs:vs,fs:fs}),this._attributeInfos=(0,get_attribute_from_layouts.P)(this.pipeline.shaderLayout,this.bufferLayout),prevShaderVs&&this.shaderFactory.release(prevShaderVs),prevShaderFs&&this.shaderFactory.release(prevShaderFs)}return this.pipeline}_lastLogTime=0;_logOpen=!1;_logDrawCallStart(){const logDrawTimeout=log.R.level>3?0:1e4;log.R.level<2||Date.now()-this._lastLogTime<logDrawTimeout||(this._lastLogTime=Date.now(),this._logOpen=!0,log.R.group(2,`>>> DRAWING MODEL ${this.id}`,{collapsed:log.R.level<=2})())}_logDrawCallEnd(){if(this._logOpen){const shaderLayoutTable=function getDebugTableForShaderLayout(layout,name){const table={},header="Values";if(0===layout.attributes.length&&!layout.varyings?.length)return{"No attributes or varyings":{[header]:"N/A"}};for(const attributeDeclaration of layout.attributes)attributeDeclaration&&(table[`in ${attributeDeclaration.location} ${attributeDeclaration.name}: ${attributeDeclaration.type}`]={[header]:attributeDeclaration.stepMode||"vertex"});for(const varyingDeclaration of layout.varyings||[])table[`out ${varyingDeclaration.location} ${varyingDeclaration.name}`]={[header]:JSON.stringify(varyingDeclaration)};return table}(this.pipeline.shaderLayout,this.id);log.R.table(2,shaderLayoutTable)();const uniformTable=this.shaderInputs.getDebugTable();for(const[name,value]of Object.entries(this.uniforms))uniformTable[name]={value:value};log.R.table(2,uniformTable)();const attributeTable=this._getAttributeDebugTable();log.R.table(2,this._attributeInfos)(),log.R.table(2,attributeTable)(),log.R.groupEnd(2)(),this._logOpen=!1}}_drawCount=0;_logFramebuffer(renderPass){const debugFramebuffers=this.device.props.debugFramebuffers;if(this._drawCount++,!debugFramebuffers)return;const framebuffer=renderPass.props.framebuffer;framebuffer&&function debugFramebuffer(fbo,{id:id,minimap:minimap,opaque:opaque,top:top="0",left:left="0",rgbaScale:rgbaScale=1}){canvas||(canvas=document.createElement("canvas"),canvas.id=id,canvas.title=id,canvas.style.zIndex="100",canvas.style.position="absolute",canvas.style.top=top,canvas.style.left=left,canvas.style.border="blue 5px solid",canvas.style.transform="scaleY(-1)",document.body.appendChild(canvas),ctx=canvas.getContext("2d")),canvas.width===fbo.width&&canvas.height===fbo.height||(canvas.width=fbo.width/2,canvas.height=fbo.height/2,canvas.style.width="400px",canvas.style.height="400px");const color=fbo.device.readPixelsToArrayWebGL(fbo),imageData=ctx?.createImageData(fbo.width,fbo.height);if(imageData){const offset=0;for(let i=0;i<color.length;i+=4)imageData.data[offset+i+0]=color[i+0]*rgbaScale,imageData.data[offset+i+1]=color[i+1]*rgbaScale,imageData.data[offset+i+2]=color[i+2]*rgbaScale,imageData.data[offset+i+3]=opaque?255:color[i+3]*rgbaScale;ctx?.putImageData(imageData,0,0)}}(framebuffer,{id:framebuffer.id,minimap:!0})}_getAttributeDebugTable(){const table={};for(const[name,attributeInfo]of Object.entries(this._attributeInfos)){const values=this.vertexArray.attributes[attributeInfo.location];table[attributeInfo.location]={name:name,type:attributeInfo.shaderType,values:values?this._getBufferOrConstantValues(values,attributeInfo.bufferDataType):"null"}}if(this.vertexArray.indexBuffer){const{indexBuffer:indexBuffer}=this.vertexArray,values="uint32"===indexBuffer.indexType?new Uint32Array(indexBuffer.debugData):new Uint16Array(indexBuffer.debugData);table.indices={name:"indices",type:indexBuffer.indexType,values:values.toString()}}return table}_getBufferOrConstantValues(attribute,dataType){const TypedArrayConstructor=(0,vertex_format_from_attribute.Y0)(dataType);return(attribute instanceof buffer.h?new TypedArrayConstructor(attribute.debugData):attribute).toString()}}function shaderModuleHasUniforms(module){return Boolean(module.uniformTypes&&!isObjectEmpty(module.uniformTypes))}function isObjectEmpty(obj){for(const key in obj)return!1;return!0}},"./node_modules/@luma.gl/engine/dist/utils/uid.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{L:function(){return uid}});const uidCounters={};function uid(id="id"){uidCounters[id]=uidCounters[id]||1;return`${id}-${uidCounters[id]++}`}},"./node_modules/@luma.gl/shadertools/dist/lib/glsl-utils/shader-utils.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Wk:function(){return getPassthroughFS}});const FS300="#version 300 es\nout vec4 transform_output;\nvoid main() {\n  transform_output = vec4(0);\n}";function getPassthroughFS(options){const{input:input,inputChannels:inputChannels,output:output}=options||{};if(!input)return FS300;if(!inputChannels)throw new Error("inputChannels");return`#version 300 es\nin ${function channelCountToType(channels){switch(channels){case 1:return"float";case 2:return"vec2";case 3:return"vec3";case 4:return"vec4";default:throw new Error(`invalid channels: ${channels}`)}}(inputChannels)} ${input};\nout vec4 ${output};\nvoid main() {\n  ${output} = ${function convertToVec4(variable,channels){switch(channels){case 1:return`vec4(${variable}, 0.0, 0.0, 1.0)`;case 2:return`vec4(${variable}, 0.0, 1.0)`;case 3:return`vec4(${variable}, 1.0)`;case 4:return variable;default:throw new Error(`invalid channels: ${channels}`)}}(input,inputChannels)};\n}`}},"./node_modules/@luma.gl/shadertools/dist/lib/shader-assembler.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{_:function(){return ShaderAssembler}});var shader_module=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/lib/shader-module/shader-module.js"),shader_module_dependencies=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/lib/shader-module/shader-module-dependencies.js");var shader_injections=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/lib/shader-assembly/shader-injections.js");const ES300_REPLACEMENTS=[[/^(#version[ \t]+(100|300[ \t]+es))?[ \t]*\n/,"#version 300 es\n"],[/\btexture(2D|2DProj|Cube)Lod(EXT)?\(/g,"textureLod("],[/\btexture(2D|2DProj|Cube)(EXT)?\(/g,"texture("]],ES300_VERTEX_REPLACEMENTS=[...ES300_REPLACEMENTS,[makeVariableTextRegExp("attribute"),"in $1"],[makeVariableTextRegExp("varying"),"out $1"]],ES300_FRAGMENT_REPLACEMENTS=[...ES300_REPLACEMENTS,[makeVariableTextRegExp("varying"),"in $1"]];function convertShader(source,replacements){for(const[pattern,replacement]of replacements)source=source.replace(pattern,replacement);return source}function makeVariableTextRegExp(qualifier){return new RegExp(`\\b${qualifier}[ \\t]+(\\w+[ \\t]+\\w+(\\[\\w+\\])?;)`,"g")}function getShaderHooks(hookFunctions,hookInjections){let result="";for(const hookName in hookFunctions){const hookFunction=hookFunctions[hookName];if(result+=`void ${hookFunction.signature} {\n`,hookFunction.header&&(result+=`  ${hookFunction.header}`),hookInjections[hookName]){const injections=hookInjections[hookName];injections.sort(((a,b)=>a.order-b.order));for(const injection of injections)result+=`  ${injection.injection}\n`}hookFunction.footer&&(result+=`  ${hookFunction.footer}`),result+="}\n"}return result}function normalizeShaderHooks(hookFunctions){const result={vertex:{},fragment:{}};for(const hookFunction of hookFunctions){let opts,hook;"string"!=typeof hookFunction?(opts=hookFunction,hook=opts.hook):(opts={},hook=hookFunction),hook=hook.trim();const[shaderStage,signature]=hook.split(":"),name=hook.replace(/\(.+/,""),normalizedHook=Object.assign(opts,{signature:signature});switch(shaderStage){case"vs":result.vertex[name]=normalizedHook;break;case"fs":result.fragment[name]=normalizedHook;break;default:throw new Error(shaderStage)}}return result}function assert(condition,message){if(!condition)throw new Error(message||"shadertools: assertion failed.")}function getShaderName(shader,defaultName="unnamed"){const match=/#define[^\S\r\n]*SHADER_NAME[^\S\r\n]*([A-Za-z0-9_-]+)\s*/.exec(shader);return match?match[1]:defaultName}function getShaderVersion(source){let version=100;const words=source.match(/[^\s]+/g);if(words&&words.length>=2&&"#version"===words[0]){const parsedVersion=parseInt(words[1],10);Number.isFinite(parsedVersion)&&(version=parsedVersion)}if(100!==version&&300!==version)throw new Error(`Invalid GLSL version ${version}`);return version}const INJECT_SHADER_DECLARATIONS=`\n\n${shader_injections.O_}\n`;function assembleShaderWGSL(platformInfo,options){const{source:source,stage:stage,modules:modules,hookFunctions:hookFunctions=[],inject:inject={},log:log}=options;assert("string"==typeof source,"shader source must be a string");const coreSource=source;let assembledSource="";const hookFunctionMap=normalizeShaderHooks(hookFunctions),hookInjections={},declInjections={},mainInjections={};for(const key in inject){const injection="string"==typeof inject[key]?{injection:inject[key],order:0}:inject[key],match=/^(v|f)s:(#)?([\w-]+)$/.exec(key);if(match){const hash=match[2],name=match[3];hash?"decl"===name?declInjections[key]=[injection]:mainInjections[key]=[injection]:hookInjections[key]=[injection]}else mainInjections[key]=[injection]}const modulesToInject=modules;for(const module of modulesToInject){log&&(0,shader_module.ZG)(module,coreSource,log);assembledSource+=getShaderModuleSource(module,"wgsl");const injections=module.injections?.[stage]||{};for(const key in injections){const match=/^(v|f)s:#([\w-]+)$/.exec(key);if(match){const injectionType="decl"===match[2]?declInjections:mainInjections;injectionType[key]=injectionType[key]||[],injectionType[key].push(injections[key])}else hookInjections[key]=hookInjections[key]||[],hookInjections[key].push(injections[key])}}return assembledSource+=INJECT_SHADER_DECLARATIONS,assembledSource=(0,shader_injections.bv)(assembledSource,stage,declInjections),assembledSource+=getShaderHooks(hookFunctionMap[stage],hookInjections),assembledSource+=coreSource,assembledSource=(0,shader_injections.bv)(assembledSource,stage,mainInjections),assembledSource}function assembleShaderGLSL(platformInfo,options){const{id:id,source:source,stage:stage,language:language="glsl",modules:modules,defines:defines={},hookFunctions:hookFunctions=[],inject:inject={},prologue:prologue=!0,log:log}=options;assert("string"==typeof source,"shader source must be a string");const sourceVersion="glsl"===language?function getShaderInfo(source,defaultName){return{name:getShaderName(source,defaultName),language:"glsl",version:getShaderVersion(source)}}(source).version:-1,targetVersion=platformInfo.shaderLanguageVersion,sourceVersionDirective=100===sourceVersion?"#version 100":"#version 300 es",coreSource=source.split("\n").slice(1).join("\n"),allDefines={};modules.forEach((module=>{Object.assign(allDefines,module.defines)})),Object.assign(allDefines,defines);let assembledSource="";switch(language){case"wgsl":break;case"glsl":assembledSource=prologue?`${sourceVersionDirective}\n\n// ----- PROLOGUE -------------------------\n${function getShaderNameDefine(options){const{id:id,source:source,stage:stage}=options,injectShaderName=id&&-1===source.indexOf("SHADER_NAME");return injectShaderName?`\n#define SHADER_NAME ${id}_${stage}`:""}({id:id,source:source,stage:stage})}\n#define SHADER_TYPE_${stage.toUpperCase()}\n\n${function getPlatformShaderDefines(platformInfo){switch(platformInfo?.gpu.toLowerCase()){case"apple":return"#define APPLE_GPU\n// Apple optimizes away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n";case"nvidia":return"#define NVIDIA_GPU\n// Nvidia optimizes away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n";case"intel":return"#define INTEL_GPU\n// Intel optimizes away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n// Intel's built-in 'tan' function doesn't have acceptable precision\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n";case"amd":return"#define AMD_GPU\n";default:return"#define DEFAULT_GPU\n// Prevent driver from optimizing away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n// Headless Chrome's software shader 'tan' function doesn't have acceptable precision\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n// If the GPU doesn't have full 32 bits precision, will causes overflow\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n"}}(platformInfo)}\n${"fragment"===stage?"precision highp float;\n":""}\n\n// ----- APPLICATION DEFINES -------------------------\n\n${function getApplicationDefines(defines={}){let sourceText="";for(const define in defines){const value=defines[define];(value||Number.isFinite(value))&&(sourceText+=`#define ${define.toUpperCase()} ${defines[define]}\n`)}return sourceText}(allDefines)}\n\n`:`${sourceVersionDirective}\n`}const hookFunctionMap=normalizeShaderHooks(hookFunctions),hookInjections={},declInjections={},mainInjections={};for(const key in inject){const injection="string"==typeof inject[key]?{injection:inject[key],order:0}:inject[key],match=/^(v|f)s:(#)?([\w-]+)$/.exec(key);if(match){const hash=match[2],name=match[3];hash?"decl"===name?declInjections[key]=[injection]:mainInjections[key]=[injection]:hookInjections[key]=[injection]}else mainInjections[key]=[injection]}for(const module of modules){log&&(0,shader_module.ZG)(module,coreSource,log);assembledSource+=getShaderModuleSource(module,stage);const injections=module.instance?.normalizedInjections[stage]||{};for(const key in injections){const match=/^(v|f)s:#([\w-]+)$/.exec(key);if(match){const injectionType="decl"===match[2]?declInjections:mainInjections;injectionType[key]=injectionType[key]||[],injectionType[key].push(injections[key])}else hookInjections[key]=hookInjections[key]||[],hookInjections[key].push(injections[key])}}return assembledSource+="// ----- MAIN SHADER SOURCE -------------------------",assembledSource+=INJECT_SHADER_DECLARATIONS,assembledSource=(0,shader_injections.bv)(assembledSource,stage,declInjections),assembledSource+=getShaderHooks(hookFunctionMap[stage],hookInjections),assembledSource+=coreSource,assembledSource=(0,shader_injections.bv)(assembledSource,stage,mainInjections),"glsl"===language&&sourceVersion!==targetVersion&&(assembledSource=function transpileGLSLShader(source,stage){if(300!==Number(source.match(/^#version[ \t]+(\d+)/m)?.[1]||100))throw new Error("luma.gl v9 only supports GLSL 3.00 shader sources");switch(stage){case"vertex":return convertShader(source,ES300_VERTEX_REPLACEMENTS);case"fragment":return convertShader(source,ES300_FRAGMENT_REPLACEMENTS);default:throw new Error(stage)}}(assembledSource,stage)),assembledSource.trim()}function assembleGetUniforms(modules){return function getUniforms(opts){const uniforms={};for(const module of modules){const moduleUniforms=module.getUniforms?.(opts,uniforms);Object.assign(uniforms,moduleUniforms)}return uniforms}}function getShaderModuleSource(module,stage){let moduleSource;switch(stage){case"vertex":moduleSource=module.vs||"";break;case"fragment":moduleSource=module.fs||"";break;case"wgsl":moduleSource=module.source||"";break;default:assert(!1)}if(!module.name)throw new Error("Shader module must have a name");const moduleName=module.name.toUpperCase().replace(/[^0-9a-z]/gi,"_");let source=`// ----- MODULE ${module.name} ---------------\n\n`;return"wgsl"!==stage&&(source+=`#define MODULE_${moduleName}\n`),source+=`${moduleSource}\n`,source}const IFDEF_REGEXP=/^\s*\#\s*ifdef\s*([a-zA-Z_]+)\s*$/,ENDIF_REGEXP=/^\s*\#\s*endif\s*$/;class ShaderAssembler{static defaultShaderAssembler;_hookFunctions=[];_defaultModules=[];static getDefaultShaderAssembler(){return ShaderAssembler.defaultShaderAssembler=ShaderAssembler.defaultShaderAssembler||new ShaderAssembler,ShaderAssembler.defaultShaderAssembler}addDefaultModule(module){this._defaultModules.find((m=>m.name===("string"==typeof module?module:module.name)))||this._defaultModules.push(module)}removeDefaultModule(module){const moduleName="string"==typeof module?module:module.name;this._defaultModules=this._defaultModules.filter((m=>m.name!==moduleName))}addShaderHook(hook,opts){opts&&(hook=Object.assign(opts,{hook:hook})),this._hookFunctions.push(hook)}assembleWGSLShader(props){const modules=this._getModuleList(props.modules),hookFunctions=this._hookFunctions,{source:source,getUniforms:getUniforms}=function assembleWGSLShader(options){const modules=(0,shader_module_dependencies.$Q)(options.modules||[]);return{source:assembleShaderWGSL(options.platformInfo,{...options,source:options.source,stage:"vertex",modules:modules}),getUniforms:assembleGetUniforms(modules)}}({...props,source:props.source,modules:modules,hookFunctions:hookFunctions}),preprocessedSource="wgsl"===props.platformInfo.shaderLanguage?function preprocess(source,options){const lines=source.split("\n"),output=[];let conditional=!0,currentDefine=null;for(const line of lines){const matchIf=line.match(IFDEF_REGEXP),matchEnd=line.match(ENDIF_REGEXP);matchIf?(currentDefine=matchIf[1],conditional=Boolean(options?.defines?.[currentDefine])):matchEnd?conditional=!0:conditional&&output.push(line)}return output.join("\n")}(source):source;return{source:preprocessedSource,getUniforms:getUniforms,modules:modules}}assembleGLSLShaderPair(props){const modules=this._getModuleList(props.modules),hookFunctions=this._hookFunctions,assembled=function assembleGLSLShaderPair(options){const{vs:vs,fs:fs}=options,modules=(0,shader_module_dependencies.$Q)(options.modules||[]);return{vs:assembleShaderGLSL(options.platformInfo,{...options,source:vs,stage:"vertex",modules:modules}),fs:assembleShaderGLSL(options.platformInfo,{...options,source:fs,stage:"fragment",modules:modules}),getUniforms:assembleGetUniforms(modules)}}({...props,vs:props.vs,fs:props.fs,modules:modules,hookFunctions:hookFunctions});return{...assembled,modules:modules}}_getModuleList(appModules=[]){const modules=new Array(this._defaultModules.length+appModules.length),seen={};let count=0;for(let i=0,len=this._defaultModules.length;i<len;++i){const module=this._defaultModules[i],name=module.name;modules[count++]=module,seen[name]=!0}for(let i=0,len=appModules.length;i<len;++i){const module=appModules[i],name=module.name;seen[name]||(modules[count++]=module,seen[name]=!0)}return modules.length=count,(0,shader_module.$g)(modules),modules}}},"./node_modules/@luma.gl/shadertools/dist/lib/shader-assembly/shader-injections.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{O_:function(){return DECLARATION_INJECT_MARKER},bv:function(){return injectShader},Uu:function(){return normalizeInjections}});const MODULE_INJECTORS={vertex:"#ifdef MODULE_LOGDEPTH\n  logdepth_adjustPosition(gl_Position);\n#endif\n",fragment:"#ifdef MODULE_MATERIAL\n  fragColor = material_filterColor(fragColor);\n#endif\n\n#ifdef MODULE_LIGHTING\n  fragColor = lighting_filterColor(fragColor);\n#endif\n\n#ifdef MODULE_FOG\n  fragColor = fog_filterColor(fragColor);\n#endif\n\n#ifdef MODULE_PICKING\n  fragColor = picking_filterHighlightColor(fragColor);\n  fragColor = picking_filterPickingColor(fragColor);\n#endif\n\n#ifdef MODULE_LOGDEPTH\n  logdepth_setFragDepth();\n#endif\n"},REGEX_START_OF_MAIN=/void\s+main\s*\([^)]*\)\s*\{\n?/,REGEX_END_OF_MAIN=/}\n?[^{}]*$/,fragments=[],DECLARATION_INJECT_MARKER="__LUMA_INJECT_DECLARATIONS__";function normalizeInjections(injections){const result={vertex:{},fragment:{}};for(const hook in injections){let injection=injections[hook];"string"==typeof injection&&(injection={order:0,injection:injection}),result[getHookStage(hook)][hook]=injection}return result}function getHookStage(hook){const type=hook.slice(0,2);switch(type){case"vs":return"vertex";case"fs":return"fragment";default:throw new Error(type)}}function injectShader(source,stage,inject,injectStandardStubs=!1){const isVertex="vertex"===stage;for(const key in inject){const fragmentData=inject[key];fragmentData.sort(((a,b)=>a.order-b.order)),fragments.length=fragmentData.length;for(let i=0,len=fragmentData.length;i<len;++i)fragments[i]=fragmentData[i].injection;const fragmentString=`${fragments.join("\n")}\n`;switch(key){case"vs:#decl":isVertex&&(source=source.replace(DECLARATION_INJECT_MARKER,fragmentString));break;case"vs:#main-start":isVertex&&(source=source.replace(REGEX_START_OF_MAIN,(match=>match+fragmentString)));break;case"vs:#main-end":isVertex&&(source=source.replace(REGEX_END_OF_MAIN,(match=>fragmentString+match)));break;case"fs:#decl":isVertex||(source=source.replace(DECLARATION_INJECT_MARKER,fragmentString));break;case"fs:#main-start":isVertex||(source=source.replace(REGEX_START_OF_MAIN,(match=>match+fragmentString)));break;case"fs:#main-end":isVertex||(source=source.replace(REGEX_END_OF_MAIN,(match=>fragmentString+match)));break;default:source=source.replace(key,(match=>match+fragmentString))}}return source=source.replace(DECLARATION_INJECT_MARKER,""),injectStandardStubs&&(source=source.replace(/\}\s*$/,(match=>match+MODULE_INJECTORS[stage]))),source}},"./node_modules/@luma.gl/shadertools/dist/lib/shader-module/shader-module-dependencies.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{$Q:function(){return getShaderModuleDependencies}});var _shader_module_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/lib/shader-module/shader-module.js");function getShaderModuleDependencies(modules){(0,_shader_module_js__WEBPACK_IMPORTED_MODULE_0__.$g)(modules);const moduleMap={},moduleDepth={};getDependencyGraph({modules:modules,level:0,moduleMap:moduleMap,moduleDepth:moduleDepth});const dependencies=Object.keys(moduleDepth).sort(((a,b)=>moduleDepth[b]-moduleDepth[a])).map((name=>moduleMap[name]));return(0,_shader_module_js__WEBPACK_IMPORTED_MODULE_0__.$g)(dependencies),dependencies}function getDependencyGraph(options){const{modules:modules,level:level,moduleMap:moduleMap,moduleDepth:moduleDepth}=options;if(level>=5)throw new Error("Possible loop in shader dependency graph");for(const module of modules)moduleMap[module.name]=module,(void 0===moduleDepth[module.name]||moduleDepth[module.name]<level)&&(moduleDepth[module.name]=level);for(const module of modules)module.dependencies&&getDependencyGraph({modules:module.dependencies,level:level+1,moduleMap:moduleMap,moduleDepth:moduleDepth})}},"./node_modules/@luma.gl/shadertools/dist/lib/shader-module/shader-module.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{ZG:function(){return checkShaderModuleDeprecations},$g:function(){return initializeShaderModules}});const DEFAULT_PROP_VALIDATORS={number:{type:"number",validate(value,propType){return Number.isFinite(value)&&"object"==typeof propType&&(void 0===propType.max||value<=propType.max)&&(void 0===propType.min||value>=propType.min)}},array:{type:"array",validate(value,propType){return Array.isArray(value)||ArrayBuffer.isView(value)}}};function makePropValidator(propType){let type=getTypeOf(propType);if("object"!==type)return{value:propType,...DEFAULT_PROP_VALIDATORS[type],type:type};if("object"==typeof propType)return propType?void 0!==propType.type?{...propType,...DEFAULT_PROP_VALIDATORS[propType.type],type:propType.type}:void 0===propType.value?{type:"object",value:propType}:(type=getTypeOf(propType.value),{...propType,...DEFAULT_PROP_VALIDATORS[type],type:type}):{type:"object",value:null};throw new Error("props")}function getTypeOf(value){return Array.isArray(value)||ArrayBuffer.isView(value)?"array":typeof value}var shader_injections=__webpack_require__("./node_modules/@luma.gl/shadertools/dist/lib/shader-assembly/shader-injections.js");function initializeShaderModules(modules){modules.map((module=>initializeShaderModule(module)))}function initializeShaderModule(module){if(module.instance)return;initializeShaderModules(module.dependencies||[]);const{propTypes:propTypes={},deprecations:deprecations=[],inject:inject={}}=module,instance={normalizedInjections:(0,shader_injections.Uu)(inject),parsedDeprecations:parseDeprecationDefinitions(deprecations)};propTypes&&(instance.propValidators=function makePropValidators(propTypes){const propValidators={};for(const[name,propType]of Object.entries(propTypes))propValidators[name]=makePropValidator(propType);return propValidators}(propTypes)),module.instance=instance;let defaultProps={};propTypes&&(defaultProps=Object.entries(propTypes).reduce(((obj,[key,propType])=>{const value=propType?.value;return value&&(obj[key]=value),obj}),{})),module.defaultUniforms={...module.defaultUniforms,...defaultProps}}function checkShaderModuleDeprecations(shaderModule,shaderSource,log){shaderModule.deprecations?.forEach((def=>{def.regex?.test(shaderSource)&&(def.deprecated?log.deprecated(def.old,def.new)():log.removed(def.old,def.new)())}))}function parseDeprecationDefinitions(deprecations){return deprecations.forEach((def=>{if("function"===def.type)def.regex=new RegExp(`\\b${def.old}\\(`);else def.regex=new RegExp(`${def.type} ${def.old};`)})),deprecations}},"./node_modules/@luma.gl/webgl/dist/adapter/webgl-device.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{e:function(){return WebGLDevice}});var adapter_device=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/device.js"),log=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/log.js");const GL_PARAMETER_DEFAULTS={3042:!1,32773:new Float32Array([0,0,0,0]),32777:32774,34877:32774,32969:1,32968:0,32971:1,32970:0,3106:new Float32Array([0,0,0,0]),3107:[!0,!0,!0,!0],2884:!1,2885:1029,2929:!1,2931:1,2932:513,2928:new Float32Array([0,1]),2930:!0,3024:!0,35725:null,36006:null,36007:null,34229:null,34964:null,2886:2305,33170:4352,2849:1,32823:!1,32824:0,10752:0,32926:!1,32928:!1,32938:1,32939:!1,3089:!1,3088:new Int32Array([0,0,1024,1024]),2960:!1,2961:0,2968:4294967295,36005:4294967295,2962:519,2967:0,2963:4294967295,34816:519,36003:0,36004:4294967295,2964:7680,2965:7680,2966:7680,34817:7680,34818:7680,34819:7680,2978:[0,0,1024,1024],36389:null,36662:null,36663:null,35053:null,35055:null,35723:4352,36010:null,35977:!1,3333:4,3317:4,37440:!1,37441:!1,37443:37444,3330:0,3332:0,3331:0,3314:0,32878:0,3316:0,3315:0,32877:0},enable=(gl,value,key)=>value?gl.enable(key):gl.disable(key),hint=(gl,value,key)=>gl.hint(key,value),pixelStorei=(gl,value,key)=>gl.pixelStorei(key,value),bindFramebuffer=(gl,value,key)=>{const target=36006===key?36009:36008;return gl.bindFramebuffer(target,value)},bindBuffer=(gl,value,key)=>{const glTarget={34964:34962,36662:36662,36663:36663,35053:35051,35055:35052}[key];gl.bindBuffer(glTarget,value)};function isArray(array){return Array.isArray(array)||ArrayBuffer.isView(array)&&!(array instanceof DataView)}const GL_PARAMETER_SETTERS={3042:enable,32773:(gl,value)=>gl.blendColor(...value),32777:"blendEquation",34877:"blendEquation",32969:"blendFunc",32968:"blendFunc",32971:"blendFunc",32970:"blendFunc",3106:(gl,value)=>gl.clearColor(...value),3107:(gl,value)=>gl.colorMask(...value),2884:enable,2885:(gl,value)=>gl.cullFace(value),2929:enable,2931:(gl,value)=>gl.clearDepth(value),2932:(gl,value)=>gl.depthFunc(value),2928:(gl,value)=>gl.depthRange(...value),2930:(gl,value)=>gl.depthMask(value),3024:enable,35723:hint,35725:(gl,value)=>gl.useProgram(value),36007:(gl,value)=>gl.bindRenderbuffer(36161,value),36389:(gl,value)=>gl.bindTransformFeedback?.(36386,value),34229:(gl,value)=>gl.bindVertexArray(value),36006:bindFramebuffer,36010:bindFramebuffer,34964:bindBuffer,36662:bindBuffer,36663:bindBuffer,35053:bindBuffer,35055:bindBuffer,2886:(gl,value)=>gl.frontFace(value),33170:hint,2849:(gl,value)=>gl.lineWidth(value),32823:enable,32824:"polygonOffset",10752:"polygonOffset",35977:enable,32926:enable,32928:enable,32938:"sampleCoverage",32939:"sampleCoverage",3089:enable,3088:(gl,value)=>gl.scissor(...value),2960:enable,2961:(gl,value)=>gl.clearStencil(value),2968:(gl,value)=>gl.stencilMaskSeparate(1028,value),36005:(gl,value)=>gl.stencilMaskSeparate(1029,value),2962:"stencilFuncFront",2967:"stencilFuncFront",2963:"stencilFuncFront",34816:"stencilFuncBack",36003:"stencilFuncBack",36004:"stencilFuncBack",2964:"stencilOpFront",2965:"stencilOpFront",2966:"stencilOpFront",34817:"stencilOpBack",34818:"stencilOpBack",34819:"stencilOpBack",2978:(gl,value)=>gl.viewport(...value),34383:enable,10754:enable,12288:enable,12289:enable,12290:enable,12291:enable,12292:enable,12293:enable,12294:enable,12295:enable,3333:pixelStorei,3317:pixelStorei,37440:pixelStorei,37441:pixelStorei,37443:pixelStorei,3330:pixelStorei,3332:pixelStorei,3331:pixelStorei,3314:pixelStorei,32878:pixelStorei,3316:pixelStorei,3315:pixelStorei,32877:pixelStorei,framebuffer:(gl,framebuffer)=>{const handle=framebuffer&&"handle"in framebuffer?framebuffer.handle:framebuffer;return gl.bindFramebuffer(36160,handle)},blend:(gl,value)=>value?gl.enable(3042):gl.disable(3042),blendColor:(gl,value)=>gl.blendColor(...value),blendEquation:(gl,args)=>{const separateModes="number"==typeof args?[args,args]:args;gl.blendEquationSeparate(...separateModes)},blendFunc:(gl,args)=>{const separateFuncs=2===args?.length?[...args,...args]:args;gl.blendFuncSeparate(...separateFuncs)},clearColor:(gl,value)=>gl.clearColor(...value),clearDepth:(gl,value)=>gl.clearDepth(value),clearStencil:(gl,value)=>gl.clearStencil(value),colorMask:(gl,value)=>gl.colorMask(...value),cull:(gl,value)=>value?gl.enable(2884):gl.disable(2884),cullFace:(gl,value)=>gl.cullFace(value),depthTest:(gl,value)=>value?gl.enable(2929):gl.disable(2929),depthFunc:(gl,value)=>gl.depthFunc(value),depthMask:(gl,value)=>gl.depthMask(value),depthRange:(gl,value)=>gl.depthRange(...value),dither:(gl,value)=>value?gl.enable(3024):gl.disable(3024),derivativeHint:(gl,value)=>{gl.hint(35723,value)},frontFace:(gl,value)=>gl.frontFace(value),mipmapHint:(gl,value)=>gl.hint(33170,value),lineWidth:(gl,value)=>gl.lineWidth(value),polygonOffsetFill:(gl,value)=>value?gl.enable(32823):gl.disable(32823),polygonOffset:(gl,value)=>gl.polygonOffset(...value),sampleCoverage:(gl,value)=>gl.sampleCoverage(value[0],value[1]||!1),scissorTest:(gl,value)=>value?gl.enable(3089):gl.disable(3089),scissor:(gl,value)=>gl.scissor(...value),stencilTest:(gl,value)=>value?gl.enable(2960):gl.disable(2960),stencilMask:(gl,value)=>{value=isArray(value)?value:[value,value];const[mask,backMask]=value;gl.stencilMaskSeparate(1028,mask),gl.stencilMaskSeparate(1029,backMask)},stencilFunc:(gl,args)=>{args=isArray(args)&&3===args.length?[...args,...args]:args;const[func,ref,mask,backFunc,backRef,backMask]=args;gl.stencilFuncSeparate(1028,func,ref,mask),gl.stencilFuncSeparate(1029,backFunc,backRef,backMask)},stencilOp:(gl,args)=>{args=isArray(args)&&3===args.length?[...args,...args]:args;const[sfail,dpfail,dppass,backSfail,backDpfail,backDppass]=args;gl.stencilOpSeparate(1028,sfail,dpfail,dppass),gl.stencilOpSeparate(1029,backSfail,backDpfail,backDppass)},viewport:(gl,value)=>gl.viewport(...value)};function getValue(glEnum,values,cache){return void 0!==values[glEnum]?values[glEnum]:cache[glEnum]}const GL_COMPOSITE_PARAMETER_SETTERS={blendEquation:(gl,values,cache)=>gl.blendEquationSeparate(getValue(32777,values,cache),getValue(34877,values,cache)),blendFunc:(gl,values,cache)=>gl.blendFuncSeparate(getValue(32969,values,cache),getValue(32968,values,cache),getValue(32971,values,cache),getValue(32970,values,cache)),polygonOffset:(gl,values,cache)=>gl.polygonOffset(getValue(32824,values,cache),getValue(10752,values,cache)),sampleCoverage:(gl,values,cache)=>gl.sampleCoverage(getValue(32938,values,cache),getValue(32939,values,cache)),stencilFuncFront:(gl,values,cache)=>gl.stencilFuncSeparate(1028,getValue(2962,values,cache),getValue(2967,values,cache),getValue(2963,values,cache)),stencilFuncBack:(gl,values,cache)=>gl.stencilFuncSeparate(1029,getValue(34816,values,cache),getValue(36003,values,cache),getValue(36004,values,cache)),stencilOpFront:(gl,values,cache)=>gl.stencilOpSeparate(1028,getValue(2964,values,cache),getValue(2965,values,cache),getValue(2966,values,cache)),stencilOpBack:(gl,values,cache)=>gl.stencilOpSeparate(1029,getValue(34817,values,cache),getValue(34818,values,cache),getValue(34819,values,cache))},GL_HOOKED_SETTERS={enable:(update,capability)=>update({[capability]:!0}),disable:(update,capability)=>update({[capability]:!1}),pixelStorei:(update,pname,value)=>update({[pname]:value}),hint:(update,pname,value)=>update({[pname]:value}),useProgram:(update,value)=>update({35725:value}),bindRenderbuffer:(update,target,value)=>update({36007:value}),bindTransformFeedback:(update,target,value)=>update({36389:value}),bindVertexArray:(update,value)=>update({34229:value}),bindFramebuffer:(update,target,framebuffer)=>{switch(target){case 36160:return update({36006:framebuffer,36010:framebuffer});case 36009:return update({36006:framebuffer});case 36008:return update({36010:framebuffer});default:return null}},bindBuffer:(update,target,buffer)=>{const pname={34962:[34964],36662:[36662],36663:[36663],35051:[35053],35052:[35055]}[target];return pname?update({[pname]:buffer}):{valueChanged:!0}},blendColor:(update,r,g,b,a)=>update({32773:new Float32Array([r,g,b,a])}),blendEquation:(update,mode)=>update({32777:mode,34877:mode}),blendEquationSeparate:(update,modeRGB,modeAlpha)=>update({32777:modeRGB,34877:modeAlpha}),blendFunc:(update,src,dst)=>update({32969:src,32968:dst,32971:src,32970:dst}),blendFuncSeparate:(update,srcRGB,dstRGB,srcAlpha,dstAlpha)=>update({32969:srcRGB,32968:dstRGB,32971:srcAlpha,32970:dstAlpha}),clearColor:(update,r,g,b,a)=>update({3106:new Float32Array([r,g,b,a])}),clearDepth:(update,depth)=>update({2931:depth}),clearStencil:(update,s)=>update({2961:s}),colorMask:(update,r,g,b,a)=>update({3107:[r,g,b,a]}),cullFace:(update,mode)=>update({2885:mode}),depthFunc:(update,func)=>update({2932:func}),depthRange:(update,zNear,zFar)=>update({2928:new Float32Array([zNear,zFar])}),depthMask:(update,mask)=>update({2930:mask}),frontFace:(update,face)=>update({2886:face}),lineWidth:(update,width)=>update({2849:width}),polygonOffset:(update,factor,units)=>update({32824:factor,10752:units}),sampleCoverage:(update,value,invert)=>update({32938:value,32939:invert}),scissor:(update,x,y,width,height)=>update({3088:new Int32Array([x,y,width,height])}),stencilMask:(update,mask)=>update({2968:mask,36005:mask}),stencilMaskSeparate:(update,face,mask)=>update({[1028===face?2968:36005]:mask}),stencilFunc:(update,func,ref,mask)=>update({2962:func,2967:ref,2963:mask,34816:func,36003:ref,36004:mask}),stencilFuncSeparate:(update,face,func,ref,mask)=>update({[1028===face?2962:34816]:func,[1028===face?2967:36003]:ref,[1028===face?2963:36004]:mask}),stencilOp:(update,fail,zfail,zpass)=>update({2964:fail,2965:zfail,2966:zpass,34817:fail,34818:zfail,34819:zpass}),stencilOpSeparate:(update,face,fail,zfail,zpass)=>update({[1028===face?2964:34817]:fail,[1028===face?2965:34818]:zfail,[1028===face?2966:34819]:zpass}),viewport:(update,x,y,width,height)=>update({2978:[x,y,width,height]})},isEnabled=(gl,key)=>gl.isEnabled(key),GL_PARAMETER_GETTERS={3042:isEnabled,2884:isEnabled,2929:isEnabled,3024:isEnabled,32823:isEnabled,32926:isEnabled,32928:isEnabled,3089:isEnabled,2960:isEnabled,35977:isEnabled},NON_CACHE_PARAMETERS=new Set([34016,36388,36387,35983,35368,34965,35739,35738,3074,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34866,34867,34868,35097,32873,35869,32874,34068]);function unified_parameter_api_setGLParameters(gl,parameters){if(function isObjectEmpty(object){for(const key in object)return!1;return!0}(parameters))return;const compositeSetters={};for(const key in parameters){const glConstant=Number(key),setter=GL_PARAMETER_SETTERS[key];setter&&("string"==typeof setter?compositeSetters[setter]=!0:setter(gl,parameters[key],glConstant))}const cache=gl.state&&gl.state.cache;if(cache)for(const key in compositeSetters){(0,GL_COMPOSITE_PARAMETER_SETTERS[key])(gl,parameters,cache)}}function getGLParameters(gl,parameters=GL_PARAMETER_DEFAULTS){if("number"==typeof parameters){const key=parameters,getter=GL_PARAMETER_GETTERS[key];return getter?getter(gl,key):gl.getParameter(key)}const parameterKeys=Array.isArray(parameters)?parameters:Object.keys(parameters),state={};for(const key of parameterKeys){const getter=GL_PARAMETER_GETTERS[key];state[key]=getter?getter(gl,Number(key)):gl.getParameter(Number(key))}return state}function deepArrayEqual(x,y){if(x===y)return!0;const isArrayX=Array.isArray(x)||ArrayBuffer.isView(x),isArrayY=Array.isArray(y)||ArrayBuffer.isView(y);if(isArrayX&&isArrayY&&x.length===y.length){for(let i=0;i<x.length;++i)if(x[i]!==y[i])return!1;return!0}return!1}class WebGLStateTracker{static get(gl){return gl.state}gl;program=null;stateStack=[];enable=!0;cache=null;log;initialized=!1;constructor(gl,props){this.gl=gl,this.log=props?.log||(()=>{}),this._updateCache=this._updateCache.bind(this),Object.seal(this)}push(values={}){this.stateStack.push({})}pop(){const oldValues=this.stateStack[this.stateStack.length-1];unified_parameter_api_setGLParameters(this.gl,oldValues),this.stateStack.pop()}trackState(gl,options){if(this.cache=options.copyState?getGLParameters(gl):Object.assign({},GL_PARAMETER_DEFAULTS),this.initialized)throw new Error("WebGLStateTracker");this.initialized=!0,this.gl.state=this,function installProgramSpy(gl){const originalUseProgram=gl.useProgram.bind(gl);gl.useProgram=function useProgramLuma(handle){const glState=WebGLStateTracker.get(gl);glState.program!==handle&&(originalUseProgram(handle),glState.program=handle)}}(gl);for(const key in GL_HOOKED_SETTERS){installSetterSpy(gl,key,GL_HOOKED_SETTERS[key])}installGetterOverride(gl,"getParameter"),installGetterOverride(gl,"isEnabled")}_updateCache(values){let oldValue,valueChanged=!1;const oldValues=this.stateStack.length>0?this.stateStack[this.stateStack.length-1]:null;for(const key in values){const value=values[key],cached=this.cache[key];deepArrayEqual(value,cached)||(valueChanged=!0,oldValue=cached,oldValues&&!(key in oldValues)&&(oldValues[key]=cached),this.cache[key]=value)}return{valueChanged:valueChanged,oldValue:oldValue}}}function installGetterOverride(gl,functionName){const originalGetterFunc=gl[functionName].bind(gl);gl[functionName]=function get(pname){if(void 0===pname||NON_CACHE_PARAMETERS.has(pname))return originalGetterFunc(pname);const glState=WebGLStateTracker.get(gl);return pname in glState.cache||(glState.cache[pname]=originalGetterFunc(pname)),glState.enable?glState.cache[pname]:originalGetterFunc(pname)},Object.defineProperty(gl[functionName],"name",{value:`${functionName}-from-cache`,configurable:!1})}function installSetterSpy(gl,functionName,setter){if(!gl[functionName])return;const originalSetterFunc=gl[functionName].bind(gl);gl[functionName]=function set(...params){const glState=WebGLStateTracker.get(gl),{valueChanged:valueChanged,oldValue:oldValue}=setter(glState._updateCache,...params);return valueChanged&&originalSetterFunc(...params),oldValue},Object.defineProperty(gl[functionName],"name",{value:`${functionName}-to-cache`,configurable:!1})}function webgl_extensions_getWebGLExtension(gl,name,extensions){return void 0===extensions[name]&&(extensions[name]=gl.getExtension(name)||null),extensions[name]}function getDeviceInfo(gl,extensions){const vendorMasked=gl.getParameter(7936),rendererMasked=gl.getParameter(7937);webgl_extensions_getWebGLExtension(gl,"WEBGL_debug_renderer_info",extensions);const ext=extensions.WEBGL_debug_renderer_info,vendor=gl.getParameter(ext?ext.UNMASKED_VENDOR_WEBGL:7936)||vendorMasked,renderer=gl.getParameter(ext?ext.UNMASKED_RENDERER_WEBGL:7937)||rendererMasked,version=gl.getParameter(7938),gpu=identifyGPUVendor(vendor,renderer),gpuBackend=function identifyGPUBackend(vendor,renderer){if(/Metal/i.exec(vendor)||/Metal/i.exec(renderer))return"metal";if(/ANGLE/i.exec(vendor)||/ANGLE/i.exec(renderer))return"opengl";return"unknown"}(vendor,renderer),gpuType=function identifyGPUType(vendor,renderer){if(/SwiftShader/i.exec(vendor)||/SwiftShader/i.exec(renderer))return"cpu";switch(identifyGPUVendor(vendor,renderer)){case"intel":return"integrated";case"software":return"cpu";case"unknown":return"unknown";default:return"discrete"}}(vendor,renderer);return{type:"webgl",gpu:gpu,gpuType:gpuType,gpuBackend:gpuBackend,vendor:vendor,renderer:renderer,version:version,shadingLanguage:"glsl",shadingLanguageVersion:300}}function identifyGPUVendor(vendor,renderer){return/NVIDIA/i.exec(vendor)||/NVIDIA/i.exec(renderer)?"nvidia":/INTEL/i.exec(vendor)||/INTEL/i.exec(renderer)?"intel":/Apple/i.exec(vendor)||/Apple/i.exec(renderer)?"apple":/AMD/i.exec(vendor)||/AMD/i.exec(renderer)||/ATI/i.exec(vendor)||/ATI/i.exec(renderer)?"amd":/SwiftShader/i.exec(vendor)||/SwiftShader/i.exec(renderer)?"software":"unknown"}var decode_texture_format=__webpack_require__("./node_modules/@luma.gl/core/dist/gpu-type-utils/decode-texture-format.js");function getGLFromVertexType(dataType){switch(dataType){case"uint8":case"unorm8":return 5121;case"sint8":case"snorm8":return 5120;case"uint16":case"unorm16":return 5123;case"sint16":case"snorm16":return 5122;case"uint32":return 5125;case"sint32":return 5124;case"float16":return 5131;case"float32":return 5126}throw new Error(String(dataType))}const X_S3TC="WEBGL_compressed_texture_s3tc",X_S3TC_SRGB="WEBGL_compressed_texture_s3tc_srgb",X_RGTC="EXT_texture_compression_rgtc",X_BPTC="EXT_texture_compression_bptc",TEXTURE_FEATURES={"float32-renderable-webgl":["EXT_color_buffer_float"],"float16-renderable-webgl":["EXT_color_buffer_half_float"],"rgb9e5ufloat-renderable-webgl":["WEBGL_render_shared_exponent"],"snorm8-renderable-webgl":["EXT_render_snorm"],"norm16-renderable-webgl":["EXT_texture_norm16"],"snorm16-renderable-webgl":["EXT_texture_norm16","EXT_render_snorm"],"float32-filterable":["OES_texture_float_linear"],"float16-filterable-webgl":["OES_texture_half_float_linear"],"texture-filterable-anisotropic-webgl":["EXT_texture_filter_anisotropic"],"texture-blend-float-webgl":["EXT_float_blend"],"texture-compression-bc":[X_S3TC,X_S3TC_SRGB,X_RGTC,X_BPTC],"texture-compression-bc5-webgl":[X_RGTC],"texture-compression-bc7-webgl":[X_BPTC],"texture-compression-etc2":["WEBGL_compressed_texture_etc"],"texture-compression-astc":["WEBGL_compressed_texture_astc"],"texture-compression-etc1-webgl":["WEBGL_compressed_texture_etc1"],"texture-compression-pvrtc-webgl":["WEBGL_compressed_texture_pvrtc"],"texture-compression-atc-webgl":["WEBGL_compressed_texture_atc"]};const WEBGL_TEXTURE_FORMATS={r8unorm:{gl:33321,rb:!0},r8snorm:{gl:36756},r8uint:{gl:33330,rb:!0},r8sint:{gl:33329,rb:!0},rg8unorm:{gl:33323,rb:!0},rg8snorm:{gl:36757},rg8uint:{gl:33336,rb:!0},rg8sint:{gl:33335,rb:!0},r16uint:{gl:33332,rb:!0},r16sint:{gl:33331,rb:!0},r16float:{gl:33325,rb:!0},"r16unorm-webgl":{gl:33322,rb:!0},"r16snorm-webgl":{gl:36760},"rgba4unorm-webgl":{gl:32854,rb:!0},"rgb565unorm-webgl":{gl:36194,rb:!0},"rgb5a1unorm-webgl":{gl:32855,rb:!0},"rgb8unorm-webgl":{gl:32849},"rgb8snorm-webgl":{gl:36758},rgba8unorm:{gl:32856},"rgba8unorm-srgb":{gl:35907},rgba8snorm:{gl:36759},rgba8uint:{gl:36220},rgba8sint:{gl:36238},bgra8unorm:{},"bgra8unorm-srgb":{},rg16uint:{gl:33338},rg16sint:{gl:33337},rg16float:{gl:33327,rb:!0},"rg16unorm-webgl":{gl:33324},"rg16snorm-webgl":{gl:36761},r32uint:{gl:33334,rb:!0},r32sint:{gl:33333,rb:!0},r32float:{gl:33326},rgb9e5ufloat:{gl:35901},rg11b10ufloat:{gl:35898,rb:!0},rgb10a2unorm:{gl:32857,rb:!0},"rgb10a2uint-webgl":{gl:36975,rb:!0},"rgb16unorm-webgl":{gl:32852},"rgb16snorm-webgl":{gl:36762},rg32uint:{gl:33340,rb:!0},rg32sint:{gl:33339,rb:!0},rg32float:{gl:33328,rb:!0},rgba16uint:{gl:36214,rb:!0},rgba16sint:{gl:36232,rb:!0},rgba16float:{gl:34842},"rgba16unorm-webgl":{gl:32859,rb:!0},"rgba16snorm-webgl":{gl:36763},"rgb32float-webgl":{gl:34837,x:"EXT_color_buffer_float",dataFormat:6407,types:[5126]},rgba32uint:{gl:36208,rb:!0},rgba32sint:{gl:36226,rb:!0},rgba32float:{gl:34836,rb:!0},stencil8:{gl:36168,rb:!0},depth16unorm:{gl:33189,dataFormat:6402,types:[5123],rb:!0},depth24plus:{gl:33190,dataFormat:6402,types:[5125]},depth32float:{gl:36012,dataFormat:6402,types:[5126],rb:!0},"depth24plus-stencil8":{gl:35056,rb:!0,depthTexture:!0,dataFormat:34041,types:[34042]},"depth32float-stencil8":{gl:36013,dataFormat:34041,types:[36269],rb:!0},"bc1-rgb-unorm-webgl":{gl:33776,x:X_S3TC},"bc1-rgb-unorm-srgb-webgl":{gl:35916,x:X_S3TC_SRGB},"bc1-rgba-unorm":{gl:33777,x:X_S3TC},"bc1-rgba-unorm-srgb":{gl:35916,x:X_S3TC_SRGB},"bc2-rgba-unorm":{gl:33778,x:X_S3TC},"bc2-rgba-unorm-srgb":{gl:35918,x:X_S3TC_SRGB},"bc3-rgba-unorm":{gl:33779,x:X_S3TC},"bc3-rgba-unorm-srgb":{gl:35919,x:X_S3TC_SRGB},"bc4-r-unorm":{gl:36283,x:X_RGTC},"bc4-r-snorm":{gl:36284,x:X_RGTC},"bc5-rg-unorm":{gl:36285,x:X_RGTC},"bc5-rg-snorm":{gl:36286,x:X_RGTC},"bc6h-rgb-ufloat":{gl:36495,x:X_BPTC},"bc6h-rgb-float":{gl:36494,x:X_BPTC},"bc7-rgba-unorm":{gl:36492,x:X_BPTC},"bc7-rgba-unorm-srgb":{gl:36493,x:X_BPTC},"etc2-rgb8unorm":{gl:37492},"etc2-rgb8unorm-srgb":{gl:37494},"etc2-rgb8a1unorm":{gl:37496},"etc2-rgb8a1unorm-srgb":{gl:37497},"etc2-rgba8unorm":{gl:37493},"etc2-rgba8unorm-srgb":{gl:37495},"eac-r11unorm":{gl:37488},"eac-r11snorm":{gl:37489},"eac-rg11unorm":{gl:37490},"eac-rg11snorm":{gl:37491},"astc-4x4-unorm":{gl:37808},"astc-4x4-unorm-srgb":{gl:37840},"astc-5x4-unorm":{gl:37809},"astc-5x4-unorm-srgb":{gl:37841},"astc-5x5-unorm":{gl:37810},"astc-5x5-unorm-srgb":{gl:37842},"astc-6x5-unorm":{gl:37811},"astc-6x5-unorm-srgb":{gl:37843},"astc-6x6-unorm":{gl:37812},"astc-6x6-unorm-srgb":{gl:37844},"astc-8x5-unorm":{gl:37813},"astc-8x5-unorm-srgb":{gl:37845},"astc-8x6-unorm":{gl:37814},"astc-8x6-unorm-srgb":{gl:37846},"astc-8x8-unorm":{gl:37815},"astc-8x8-unorm-srgb":{gl:37847},"astc-10x5-unorm":{gl:37819},"astc-10x5-unorm-srgb":{gl:37851},"astc-10x6-unorm":{gl:37817},"astc-10x6-unorm-srgb":{gl:37849},"astc-10x8-unorm":{gl:37818},"astc-10x8-unorm-srgb":{gl:37850},"astc-10x10-unorm":{gl:37819},"astc-10x10-unorm-srgb":{gl:37851},"astc-12x10-unorm":{gl:37820},"astc-12x10-unorm-srgb":{gl:37852},"astc-12x12-unorm":{gl:37821},"astc-12x12-unorm-srgb":{gl:37853},"pvrtc-rgb4unorm-webgl":{gl:35840},"pvrtc-rgba4unorm-webgl":{gl:35842},"pvrtc-rbg2unorm-webgl":{gl:35841},"pvrtc-rgba2unorm-webgl":{gl:35843},"etc1-rbg-unorm-webgl":{gl:36196},"atc-rgb-unorm-webgl":{gl:35986},"atc-rgba-unorm-webgl":{gl:35986},"atc-rgbai-unorm-webgl":{gl:34798}};function getTextureFormatWebGL(format){const formatData=WEBGL_TEXTURE_FORMATS[format],webglFormat=function convertTextureFormatToGL(format){const formatInfo=WEBGL_TEXTURE_FORMATS[format],webglFormat=formatInfo?.gl;if(void 0===webglFormat)throw new Error(`Unsupported texture format ${format}`);return webglFormat}(format),decoded=(0,decode_texture_format.z)(format);return{internalFormat:webglFormat,format:formatData?.dataFormat||getWebGLPixelDataFormat(decoded.channels,decoded.integer,decoded.normalized,webglFormat),type:decoded.dataType?getGLFromVertexType(decoded.dataType):formatData?.types?.[0]||5121,compressed:decoded.compressed||!1}}function getWebGLPixelDataFormat(channels,integer,normalized,format){if(6408===format||6407===format)return format;switch(channels){case"r":return integer&&!normalized?36244:6403;case"rg":return integer&&!normalized?33320:33319;case"rgb":return integer&&!normalized?36248:6407;case"rgba":return integer&&!normalized?36249:6408;case"bgra":throw new Error("bgra pixels not supported by WebGL");default:return 6408}}const WEBGL_FEATURES={"depth-clip-control":"EXT_depth_clamp","timer-query-webgl":"EXT_disjoint_timer_query_webgl2","compilation-status-async-webgl":"KHR_parallel_shader_compile","polygon-mode-webgl":"WEBGL_polygon_mode","provoking-vertex-webgl":"WEBGL_provoking_vertex","shader-clip-cull-distance-webgl":"WEBGL_clip_cull_distance","shader-noperspective-interpolation-webgl":"NV_shader_noperspective_interpolation","shader-conservative-depth-webgl":"EXT_conservative_depth"};class WebGLDeviceFeatures extends adapter_device.I7{gl;extensions;testedFeatures=new Set;constructor(gl,extensions,disabledFeatures){super([],disabledFeatures),this.gl=gl,this.extensions=extensions,webgl_extensions_getWebGLExtension(gl,"EXT_color_buffer_float",extensions)}*[Symbol.iterator](){const features=this.getFeatures();for(const feature of features)this.has(feature)&&(yield feature);return[]}has(feature){return!this.disabledFeatures?.[feature]&&(this.testedFeatures.has(feature)||(this.testedFeatures.add(feature),function isTextureFeature(feature){return feature in TEXTURE_FEATURES}(feature)&&function checkTextureFeature(gl,feature,extensions){return(TEXTURE_FEATURES[feature]||[]).every((extension=>webgl_extensions_getWebGLExtension(gl,extension,extensions)))}(this.gl,feature,this.extensions)&&this.features.add(feature),this.getWebGLFeature(feature)&&this.features.add(feature)),this.features.has(feature))}initializeFeatures(){const features=this.getFeatures().filter((feature=>"polygon-mode-webgl"!==feature));for(const feature of features)this.has(feature)}getFeatures(){return[...Object.keys(WEBGL_FEATURES),...Object.keys(TEXTURE_FEATURES)]}getWebGLFeature(feature){const featureInfo=WEBGL_FEATURES[feature];return"string"==typeof featureInfo?Boolean(webgl_extensions_getWebGLExtension(this.gl,featureInfo,this.extensions)):Boolean(featureInfo)}}class WebGLDeviceLimits extends adapter_device.PI{get maxTextureDimension1D(){return 0}get maxTextureDimension2D(){return this.getParameter(3379)}get maxTextureDimension3D(){return this.getParameter(32883)}get maxTextureArrayLayers(){return this.getParameter(35071)}get maxBindGroups(){return 0}get maxDynamicUniformBuffersPerPipelineLayout(){return 0}get maxDynamicStorageBuffersPerPipelineLayout(){return 0}get maxSampledTexturesPerShaderStage(){return this.getParameter(35660)}get maxSamplersPerShaderStage(){return this.getParameter(35661)}get maxStorageBuffersPerShaderStage(){return 0}get maxStorageTexturesPerShaderStage(){return 0}get maxUniformBuffersPerShaderStage(){return this.getParameter(35375)}get maxUniformBufferBindingSize(){return this.getParameter(35376)}get maxStorageBufferBindingSize(){return 0}get minUniformBufferOffsetAlignment(){return this.getParameter(35380)}get minStorageBufferOffsetAlignment(){return 0}get maxVertexBuffers(){return 16}get maxVertexAttributes(){return this.getParameter(34921)}get maxVertexBufferArrayStride(){return 2048}get maxInterStageShaderComponents(){return this.getParameter(35659)}get maxComputeWorkgroupStorageSize(){return 0}get maxComputeInvocationsPerWorkgroup(){return 0}get maxComputeWorkgroupSizeX(){return 0}get maxComputeWorkgroupSizeY(){return 0}get maxComputeWorkgroupSizeZ(){return 0}get maxComputeWorkgroupsPerDimension(){return 0}gl;limits={};constructor(gl){super(),this.gl=gl}getParameter(parameter){return void 0===this.limits[parameter]&&(this.limits[parameter]=this.gl.getParameter(parameter)),this.limits[parameter]||0}}var is_browser=__webpack_require__("./node_modules/@probe.gl/env/dist/lib/is-browser.js"),uid=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/uid.js");class CanvasContext{static defaultProps={canvas:null,width:800,height:600,useDevicePixels:!0,autoResize:!0,container:null,visible:!0,alphaMode:"opaque",colorSpace:"srgb"};id;props;canvas;htmlCanvas;offscreenCanvas;type;width=1;height=1;resizeObserver;_canvasSizeInfo={clientWidth:0,clientHeight:0,devicePixelRatio:1};toString(){return`${this[Symbol.toStringTag]}(${this.id})`}constructor(props){if(this.props={...CanvasContext.defaultProps,...props},props=this.props,!(0,is_browser.B)())return this.id="node-canvas-context",this.type="node",this.width=this.props.width,this.height=this.props.height,void(this.canvas=null);if(props.canvas)"string"==typeof props.canvas?this.canvas=function getCanvasFromDOM(canvasId){const canvas=document.getElementById(canvasId);if(!(canvas instanceof HTMLCanvasElement))throw new Error("Object is not a canvas element");return canvas}(props.canvas):this.canvas=props.canvas;else{const canvas=function createCanvas(props){const{width:width,height:height}=props,targetCanvas=document.createElement("canvas");return targetCanvas.id=(0,uid.L)("lumagl-auto-created-canvas"),targetCanvas.width=width||1,targetCanvas.height=height||1,targetCanvas.style.width=Number.isFinite(width)?`${width}px`:"100%",targetCanvas.style.height=Number.isFinite(height)?`${height}px`:"100%",targetCanvas}(props),container=function getContainer(container){if("string"==typeof container){const element=document.getElementById(container);if(!element)throw new Error(`${container} is not an HTML element`);return element}if(container)return container;return document.body}(props?.container||null);container.insertBefore(canvas,container.firstChild),this.canvas=canvas,props?.visible||(this.canvas.style.visibility="hidden")}this.canvas instanceof HTMLCanvasElement?(this.id=this.canvas.id,this.type="html-canvas",this.htmlCanvas=this.canvas):(this.id="offscreen-canvas",this.type="offscreen-canvas",this.offscreenCanvas=this.canvas),this.canvas instanceof HTMLCanvasElement&&props.autoResize&&(this.resizeObserver=new ResizeObserver((entries=>{for(const entry of entries)entry.target===this.canvas&&this.update()})),this.resizeObserver.observe(this.canvas))}getDevicePixelRatio(useDevicePixels){if("undefined"!=typeof OffscreenCanvas&&this.canvas instanceof OffscreenCanvas)return 1;if(!(useDevicePixels=void 0===useDevicePixels?this.props.useDevicePixels:useDevicePixels)||useDevicePixels<=0)return 1;if(!0===useDevicePixels){return"undefined"!=typeof window&&window.devicePixelRatio||1}return useDevicePixels}getPixelSize(){switch(this.type){case"node":return[this.width,this.height];case"offscreen-canvas":return[this.canvas.width,this.canvas.height];case"html-canvas":const dpr=this.getDevicePixelRatio(),canvas=this.canvas;return canvas.parentElement?[canvas.clientWidth*dpr,canvas.clientHeight*dpr]:[this.canvas.width,this.canvas.height];default:throw new Error(this.type)}}getAspect(){const[width,height]=this.getPixelSize();return width/height}cssToDeviceRatio(){try{const[drawingBufferWidth]=this.getDrawingBufferSize(),clientWidth=this._canvasSizeInfo.clientWidth||this.htmlCanvas?.clientWidth;return clientWidth?drawingBufferWidth/clientWidth:1}catch{return 1}}cssToDevicePixels(cssPixel,yInvert=!0){const ratio=this.cssToDeviceRatio(),[width,height]=this.getDrawingBufferSize();return function scalePixels(pixel,ratio,width,height,yInvert){const point=pixel,x=scaleX(point[0],ratio,width);let y=scaleY(point[1],ratio,height,yInvert),t=scaleX(point[0]+1,ratio,width);const xHigh=t===width-1?t:t-1;let yHigh;t=scaleY(point[1]+1,ratio,height,yInvert),yInvert?(t=0===t?t:t+1,yHigh=y,y=t):yHigh=t===height-1?t:t-1;return{x:x,y:y,width:Math.max(xHigh-x+1,1),height:Math.max(yHigh-y+1,1)}}(cssPixel,ratio,width,height,yInvert)}setDevicePixelRatio(devicePixelRatio,options={}){if(!this.htmlCanvas)return;let clientWidth="width"in options?options.width:this.htmlCanvas.clientWidth,clientHeight="height"in options?options.height:this.htmlCanvas.clientHeight;clientWidth&&clientHeight||(log.R.log(1,"Canvas clientWidth/clientHeight is 0")(),devicePixelRatio=1,clientWidth=this.htmlCanvas.width||1,clientHeight=this.htmlCanvas.height||1);const cachedSize=this._canvasSizeInfo;if(cachedSize.clientWidth!==clientWidth||cachedSize.clientHeight!==clientHeight||cachedSize.devicePixelRatio!==devicePixelRatio){let clampedPixelRatio=devicePixelRatio;const canvasWidth=Math.floor(clientWidth*clampedPixelRatio),canvasHeight=Math.floor(clientHeight*clampedPixelRatio);this.htmlCanvas.width=canvasWidth,this.htmlCanvas.height=canvasHeight;if(this.device.gl){const[drawingBufferWidth,drawingBufferHeight]=this.getDrawingBufferSize();drawingBufferWidth===canvasWidth&&drawingBufferHeight===canvasHeight||(clampedPixelRatio=Math.min(drawingBufferWidth/clientWidth,drawingBufferHeight/clientHeight),this.htmlCanvas.width=Math.floor(clientWidth*clampedPixelRatio),this.htmlCanvas.height=Math.floor(clientHeight*clampedPixelRatio),log.R.warn("Device pixel ratio clamped")()),this._canvasSizeInfo.clientWidth=clientWidth,this._canvasSizeInfo.clientHeight=clientHeight,this._canvasSizeInfo.devicePixelRatio=devicePixelRatio}}}getDrawingBufferSize(){const gl=this.device.gl;return gl?[gl.drawingBufferWidth,gl.drawingBufferHeight]:this.getPixelSize()}_setAutoCreatedCanvasId(id){"lumagl-auto-created-canvas"===this.htmlCanvas?.id&&(this.htmlCanvas.id=id)}}function scaleX(x,ratio,width){return Math.min(Math.round(x*ratio),width-1)}function scaleY(y,ratio,height,yInvert){return yInvert?Math.max(0,height-1-Math.round(y*ratio)):Math.min(Math.round(y*ratio),height-1)}var resource=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/resource.js"),texture=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/texture.js");class Framebuffer extends resource.F{static defaultProps={...resource.F.defaultProps,width:1,height:1,colorAttachments:[],depthStencilAttachment:null};get[Symbol.toStringTag](){return"Framebuffer"}width;height;constructor(device,props={}){super(device,props,Framebuffer.defaultProps),this.width=this.props.width,this.height=this.props.height}clone(size){const colorAttachments=this.colorAttachments.map((colorAttachment=>colorAttachment.texture.clone(size))),depthStencilAttachment=this.depthStencilAttachment&&this.depthStencilAttachment.texture.clone(size);return this.device.createFramebuffer({...this.props,colorAttachments:colorAttachments,depthStencilAttachment:depthStencilAttachment})}resize(size){let updateSize=!size;if(size){const[width,height]=Array.isArray(size)?size:[size.width,size.height];updateSize=updateSize||height!==this.height||width!==this.width,this.width=width,this.height=height}updateSize&&(log.R.log(2,`Resizing framebuffer ${this.id} to ${this.width}x${this.height}`)(),this.resizeAttachments(this.width,this.height))}autoCreateAttachmentTextures(){if(0===this.props.colorAttachments.length&&!this.props.depthStencilAttachment)throw new Error("Framebuffer has noattachments");this.colorAttachments=this.props.colorAttachments.map(((attachment,index)=>{if("string"==typeof attachment){const texture=this.createColorTexture(attachment,index);return this.attachResource(texture),texture.view}return attachment instanceof texture.g?attachment.view:attachment}));const attachment=this.props.depthStencilAttachment;if(attachment)if("string"==typeof attachment){const texture=this.createDepthStencilTexture(attachment);this.attachResource(texture),this.depthStencilAttachment=texture.view}else attachment instanceof texture.g?this.depthStencilAttachment=attachment.view:this.depthStencilAttachment=attachment}createColorTexture(format,index){return this.device.createTexture({id:`${this.id}-color-attachment-${index}`,usage:texture.g.RENDER_ATTACHMENT,format:format,width:this.width,height:this.height,sampler:{magFilter:"linear",minFilter:"linear"}})}createDepthStencilTexture(format){return this.device.createTexture({id:`${this.id}-depth-stencil-attachment`,usage:texture.g.RENDER_ATTACHMENT,format:format,width:this.width,height:this.height,mipmaps:!1})}resizeAttachments(width,height){for(let i=0;i<this.colorAttachments.length;++i)if(this.colorAttachments[i]){const resizedTexture=this.colorAttachments[i].texture.clone({width:width,height:height});this.destroyAttachedResource(this.colorAttachments[i]),this.colorAttachments[i]=resizedTexture.view,this.attachResource(resizedTexture.view)}if(this.depthStencilAttachment){const resizedTexture=this.depthStencilAttachment.texture.clone({width:width,height:height});this.destroyAttachedResource(this.depthStencilAttachment),this.depthStencilAttachment=resizedTexture.view,this.attachResource(resizedTexture)}this.updateAttachments()}}class WEBGLFramebuffer extends Framebuffer{device;gl;handle;colorAttachments=[];depthStencilAttachment=null;constructor(device,props){super(device,props);const isDefaultFramebuffer=null===props.handle;this.device=device,this.gl=device.gl,this.handle=this.props.handle||isDefaultFramebuffer?this.props.handle:this.gl.createFramebuffer(),isDefaultFramebuffer||(device.setSpectorMetadata(this.handle,{id:this.props.id,props:this.props}),this.autoCreateAttachmentTextures(),this.updateAttachments())}destroy(){super.destroy(),this.destroyed||null===this.handle||this.gl.deleteFramebuffer(this.handle)}updateAttachments(){const prevHandle=this.gl.bindFramebuffer(36160,this.handle);for(let i=0;i<this.colorAttachments.length;++i){const attachment=this.colorAttachments[i];if(attachment){const attachmentPoint=36064+i;this._attachTextureView(attachmentPoint,attachment)}}if(this.depthStencilAttachment){const attachmentPoint=function getDepthStencilAttachmentWebGL(format){switch((0,decode_texture_format.z)(format).attachment){case"depth":return 36096;case"stencil":return 36128;case"depth-stencil":return 33306;default:throw new Error(`Not a depth stencil format: ${format}`)}}(this.depthStencilAttachment.props.format);this._attachTextureView(attachmentPoint,this.depthStencilAttachment)}if(this.device.props.debug){const status=this.gl.checkFramebufferStatus(36160);if(36053!==status)throw new Error(`Framebuffer ${function _getFrameBufferStatus(status){switch(status){case 36053:return"success";case 36054:return"Mismatched attachments";case 36055:return"No attachments";case 36057:return"Height/width mismatch";case 36061:return"Unsupported or split attachments";case 36182:return"Samples mismatch";default:return`${status}`}}(status)}`)}this.gl.bindFramebuffer(36160,prevHandle)}_attachTextureView(attachment,textureView){const{gl:gl}=this.device,{texture:texture}=textureView,level=textureView.props.baseMipLevel,layer=textureView.props.baseArrayLayer;switch(gl.bindTexture(texture.glTarget,texture.handle),texture.glTarget){case 35866:case 32879:gl.framebufferTextureLayer(36160,attachment,texture.handle,level,layer);break;case 34067:const face=function mapIndexToCubeMapFace(layer){return layer<34069?layer+34069:layer}(layer);gl.framebufferTexture2D(36160,attachment,face,texture.handle,level);break;case 3553:gl.framebufferTexture2D(36160,attachment,3553,texture.handle,level);break;default:throw new Error("Illegal texture type")}gl.bindTexture(texture.glTarget,null)}}class WebGLCanvasContext extends CanvasContext{device;format="rgba8unorm";depthStencilFormat="depth24plus";presentationSize;_framebuffer=null;get[Symbol.toStringTag](){return"WebGLCanvasContext"}constructor(device,props){super(props),this.device=device,this.presentationSize=[-1,-1],this._setAutoCreatedCanvasId(`${this.device.id}-canvas`),this.update()}getCurrentFramebuffer(){return this.update(),this._framebuffer=this._framebuffer||new WEBGLFramebuffer(this.device,{handle:null}),this._framebuffer}update(){const size=this.getPixelSize();(size[0]!==this.presentationSize[0]||size[1]!==this.presentationSize[1])&&(this.presentationSize=size,this.resize())}resize(options){if(this.device.gl)if(this.canvas){const devicePixelRatio=this.getDevicePixelRatio(options?.useDevicePixels);this.setDevicePixelRatio(devicePixelRatio,options)}else;}commit(){}}var spector=__webpack_require__("./node_modules/@luma.gl/webgl/dist/context/debug/spector.js"),webgl_developer_tools=__webpack_require__("./node_modules/@luma.gl/webgl/dist/context/debug/webgl-developer-tools.js");const uidCounters={};function uid_uid(id="id"){uidCounters[id]=uidCounters[id]||1;return`${id}-${uidCounters[id]++}`}var buffer=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/buffer.js");class WEBGLBuffer extends buffer.h{device;gl;handle;glTarget;glUsage;glIndexType=5123;byteLength;bytesUsed;constructor(device,props={}){super(device,props),this.device=device,this.gl=this.device.gl;const handle="object"==typeof props?props.handle:void 0;this.handle=handle||this.gl.createBuffer(),device.setSpectorMetadata(this.handle,{...this.props,data:typeof this.props.data}),this.glTarget=function getWebGLTarget(usage){if(usage&buffer.h.INDEX)return 34963;if(usage&buffer.h.VERTEX)return 34962;if(usage&buffer.h.UNIFORM)return 35345;return 34962}(this.props.usage),this.glUsage=function getWebGLUsage(usage){if(usage&buffer.h.INDEX)return 35044;if(usage&buffer.h.VERTEX)return 35044;if(usage&buffer.h.UNIFORM)return 35048;return 35044}(this.props.usage),this.glIndexType="uint32"===this.props.indexType?5125:5123,props.data?this._initWithData(props.data,props.byteOffset,props.byteLength):this._initWithByteLength(props.byteLength||0)}_initWithData(data,byteOffset=0,byteLength=data.byteLength+byteOffset){const glTarget=this.glTarget;this.gl.bindBuffer(glTarget,this.handle),this.gl.bufferData(glTarget,byteLength,this.glUsage),this.gl.bufferSubData(glTarget,byteOffset,data),this.gl.bindBuffer(glTarget,null),this.bytesUsed=byteLength,this.byteLength=byteLength,this._setDebugData(data,byteOffset,byteLength),this.trackAllocatedMemory(byteLength)}_initWithByteLength(byteLength){let data=byteLength;0===byteLength&&(data=new Float32Array(0));const glTarget=this.glTarget;return this.gl.bindBuffer(glTarget,this.handle),this.gl.bufferData(glTarget,data,this.glUsage),this.gl.bindBuffer(glTarget,null),this.bytesUsed=byteLength,this.byteLength=byteLength,this._setDebugData(null,0,byteLength),this.trackAllocatedMemory(byteLength),this}destroy(){!this.destroyed&&this.handle&&(this.removeStats(),this.trackDeallocatedMemory(),this.gl.deleteBuffer(this.handle),this.destroyed=!0,this.handle=null)}write(data,byteOffset=0){this.gl.bindBuffer(36663,this.handle),this.gl.bufferSubData(36663,byteOffset,data),this.gl.bindBuffer(36663,null),this._setDebugData(data,byteOffset,data.byteLength)}async readAsync(byteOffset=0,byteLength){return this.readSyncWebGL(byteOffset,byteLength)}readSyncWebGL(byteOffset=0,byteLength){byteLength=byteLength??this.byteLength-byteOffset;const data=new Uint8Array(byteLength);return this.gl.bindBuffer(36662,this.handle),this.gl.getBufferSubData(36662,byteOffset,data,0,byteLength),this.gl.bindBuffer(36662,null),this._setDebugData(data,byteOffset,byteLength),data}}var shader=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/shader.js");function getMessageType(messageType){const lowerCaseType=messageType.toLowerCase();return["warning","error","info"].includes(lowerCaseType)?lowerCaseType:"info"}class WEBGLShader extends shader.M{device;handle;constructor(device,props){switch(super(device,props),this.device=device,this.props.stage){case"vertex":this.handle=this.props.handle||this.device.gl.createShader(35633);break;case"fragment":this.handle=this.props.handle||this.device.gl.createShader(35632);break;default:throw new Error(this.props.stage)}this._compile(this.source)}destroy(){this.handle&&(this.removeStats(),this.device.gl.deleteShader(this.handle),this.destroyed=!0)}get asyncCompilationStatus(){return this._waitForCompilationComplete().then((()=>this.compilationStatus))}async getCompilationInfo(){return await this._waitForCompilationComplete(),this.getCompilationInfoSync()}getCompilationInfoSync(){const shaderLog=this.device.gl.getShaderInfoLog(this.handle);return shaderLog?function parseShaderCompilerLog(errLog){const lines=errLog.split(/\r?\n/),messages=[];for(const line of lines){if(line.length<=1)continue;const segments=line.split(":");if(2===segments.length){const[messageType,message]=segments;messages.push({message:message.trim(),type:getMessageType(messageType),lineNum:0,linePos:0});continue}const[messageType,linePosition,lineNumber,...rest]=segments;let lineNum=parseInt(lineNumber,10);isNaN(lineNum)&&(lineNum=0);let linePos=parseInt(linePosition,10);isNaN(linePos)&&(linePos=0),messages.push({message:rest.join(":").trim(),type:getMessageType(messageType),lineNum:lineNum,linePos:linePos})}return messages}(shaderLog):[]}getTranslatedSource(){const ext=this.device.getExtension("WEBGL_debug_shaders").WEBGL_debug_shaders;return ext?.getTranslatedShaderSource(this.handle)||null}async _compile(source){source=source.startsWith("#version ")?source:`#version 300 es\n${source}`;const{gl:gl}=this.device;if(gl.shaderSource(this.handle,source),gl.compileShader(this.handle),this.device.props.debug){if(this.device.features.has("compilation-status-async-webgl"))log.R.once(1,"Shader compilation is asynchronous")(),await this._waitForCompilationComplete(),log.R.info(2,`Shader ${this.id} - async compilation complete: ${this.compilationStatus}`)(),this._getCompilationStatus(),this.debugShader();else if(this._getCompilationStatus(),this.debugShader(),"error"===this.compilationStatus)throw new Error(`GLSL compilation errors in ${this.props.stage} shader ${this.props.id}`)}else this.compilationStatus="pending"}async _waitForCompilationComplete(){const waitMs=async ms=>await new Promise((resolve=>setTimeout(resolve,ms)));if(!this.device.features.has("compilation-status-async-webgl"))return void await waitMs(10);const{gl:gl}=this.device;for(;;){if(gl.getShaderParameter(this.handle,37297))return;await waitMs(10)}}_getCompilationStatus(){this.compilationStatus=this.device.gl.getShaderParameter(this.handle,35713)?"success":"error"}}var sampler=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/sampler.js");function setDeviceParameters(device,parameters){const webglDevice=device,{gl:gl}=webglDevice;if(parameters.cullMode)switch(parameters.cullMode){case"none":gl.disable(2884);break;case"front":gl.enable(2884),gl.cullFace(1028);break;case"back":gl.enable(2884),gl.cullFace(1029)}if(parameters.frontFace&&gl.frontFace(map("frontFace",parameters.frontFace,{ccw:2305,cw:2304})),parameters.unclippedDepth&&device.features.has("depth-clip-control")&&gl.enable(34383),void 0!==parameters.depthBias&&(gl.enable(32823),gl.polygonOffset(parameters.depthBias,parameters.depthBiasSlopeScale||0)),parameters.provokingVertex&&device.features.has("provoking-vertex-webgl")){const ext=webglDevice.getExtension("WEBGL_provoking_vertex").WEBGL_provoking_vertex,vertex=map("provokingVertex",parameters.provokingVertex,{first:36429,last:36430});ext?.provokingVertexWEBGL(vertex)}if((parameters.polygonMode||parameters.polygonOffsetLine)&&device.features.has("polygon-mode-webgl")){if(parameters.polygonMode){const ext=webglDevice.getExtension("WEBGL_polygon_mode").WEBGL_polygon_mode,mode=map("polygonMode",parameters.polygonMode,{fill:6914,line:6913});ext?.polygonModeWEBGL(1028,mode),ext?.polygonModeWEBGL(1029,mode)}parameters.polygonOffsetLine&&gl.enable(10754)}if(device.features.has("shader-clip-cull-distance-webgl")&&(parameters.clipDistance0&&gl.enable(12288),parameters.clipDistance1&&gl.enable(12289),parameters.clipDistance2&&gl.enable(12290),parameters.clipDistance3&&gl.enable(12291),parameters.clipDistance4&&gl.enable(12292),parameters.clipDistance5&&gl.enable(12293),parameters.clipDistance6&&gl.enable(12294),parameters.clipDistance7&&gl.enable(12295)),void 0!==parameters.depthWriteEnabled&&gl.depthMask(function mapBoolean(parameter,value){return value}(0,parameters.depthWriteEnabled)),parameters.depthCompare&&("always"!==parameters.depthCompare?gl.enable(2929):gl.disable(2929),gl.depthFunc(convertCompareFunction("depthCompare",parameters.depthCompare))),parameters.stencilWriteMask){const mask=parameters.stencilWriteMask;gl.stencilMaskSeparate(1028,mask),gl.stencilMaskSeparate(1029,mask)}if(parameters.stencilReadMask&&log.R.warn("stencilReadMask not supported under WebGL"),parameters.stencilCompare){const mask=parameters.stencilReadMask||4294967295,glValue=convertCompareFunction("depthCompare",parameters.stencilCompare);"always"!==parameters.stencilCompare?gl.enable(2960):gl.disable(2960),gl.stencilFuncSeparate(1028,glValue,0,mask),gl.stencilFuncSeparate(1029,glValue,0,mask)}if(parameters.stencilPassOperation&&parameters.stencilFailOperation&&parameters.stencilDepthFailOperation){const dppass=convertStencilOperation("stencilPassOperation",parameters.stencilPassOperation),sfail=convertStencilOperation("stencilFailOperation",parameters.stencilFailOperation),dpfail=convertStencilOperation("stencilDepthFailOperation",parameters.stencilDepthFailOperation);gl.stencilOpSeparate(1028,sfail,dpfail,dppass),gl.stencilOpSeparate(1029,sfail,dpfail,dppass)}switch(parameters.blend){case!0:gl.enable(3042);break;case!1:gl.disable(3042)}if(parameters.blendColorOperation||parameters.blendAlphaOperation){const colorEquation=convertBlendOperationToEquation("blendColorOperation",parameters.blendColorOperation||"add"),alphaEquation=convertBlendOperationToEquation("blendAlphaOperation",parameters.blendAlphaOperation||"add");gl.blendEquationSeparate(colorEquation,alphaEquation);const colorSrcFactor=convertBlendFactorToFunction("blendColorSrcFactor",parameters.blendColorSrcFactor||"one"),colorDstFactor=convertBlendFactorToFunction("blendColorDstFactor",parameters.blendColorDstFactor||"zero"),alphaSrcFactor=convertBlendFactorToFunction("blendAlphaSrcFactor",parameters.blendAlphaSrcFactor||"one"),alphaDstFactor=convertBlendFactorToFunction("blendAlphaDstFactor",parameters.blendAlphaDstFactor||"zero");gl.blendFuncSeparate(colorSrcFactor,colorDstFactor,alphaSrcFactor,alphaDstFactor)}}function convertCompareFunction(parameter,value){return map(parameter,value,{never:512,less:513,equal:514,"less-equal":515,greater:516,"not-equal":517,"greater-equal":518,always:519})}function convertStencilOperation(parameter,value){return map(parameter,value,{keep:7680,zero:0,replace:7681,invert:5386,"increment-clamp":7682,"decrement-clamp":7683,"increment-wrap":34055,"decrement-wrap":34056})}function convertBlendOperationToEquation(parameter,value){return map(parameter,value,{add:32774,subtract:32778,"reverse-subtract":32779,min:32775,max:32776})}function convertBlendFactorToFunction(parameter,value){return map(parameter,value,{one:1,zero:0,"src-color":768,"one-minus-src-color":769,"dst-color":774,"one-minus-dst-color":775,"src-alpha":770,"one-minus-src-alpha":771,"dst-alpha":772,"one-minus-dst-alpha":773,"src-alpha-saturated":776,"constant-color":32769,"one-minus-constant-color":32770,"constant-alpha":32771,"one-minus-constant-alpha":32772})}function map(parameter,value,valueMap){if(!(value in valueMap))throw new Error(function message(parameter,value){return`Illegal parameter ${value} for ${parameter}`}(parameter,value));return valueMap[value]}function device_parameters_isObjectEmpty(obj){let isEmpty=!0;for(const key in obj){isEmpty=!1;break}return isEmpty}function convertSamplerParametersToWebGL(props){const params={};return props.addressModeU&&(params[10242]=convertAddressMode(props.addressModeU)),props.addressModeV&&(params[10243]=convertAddressMode(props.addressModeV)),props.addressModeW&&(params[32882]=convertAddressMode(props.addressModeW)),props.magFilter&&(params[10240]=convertMaxFilterMode(props.magFilter)),(props.minFilter||props.mipmapFilter)&&(params[10241]=function convertMinFilterMode(minFilter,mipmapFilter="none"){if(!mipmapFilter)return convertMaxFilterMode(minFilter);switch(mipmapFilter){case"none":return convertMaxFilterMode(minFilter);case"nearest":return"nearest"===minFilter?9984:9986;case"linear":return"nearest"===minFilter?9985:9987}}(props.minFilter||"linear",props.mipmapFilter)),void 0!==props.lodMinClamp&&(params[33082]=props.lodMinClamp),void 0!==props.lodMaxClamp&&(params[33083]=props.lodMaxClamp),"comparison-sampler"===props.type&&(params[34892]=34894),props.compare&&(params[34893]=convertCompareFunction("compare",props.compare)),props.maxAnisotropy&&(params[34046]=props.maxAnisotropy),params}function convertAddressMode(addressMode){switch(addressMode){case"clamp-to-edge":return 33071;case"repeat":return 10497;case"mirror-repeat":return 33648}}function convertMaxFilterMode(maxFilter){switch(maxFilter){case"nearest":return 9728;case"linear":return 9729}}class WEBGLSampler extends sampler.L{device;handle;parameters;constructor(device,props){super(device,props),this.device=device,this.parameters=convertSamplerParametersToWebGL(props),this.handle=this.handle||this.device.gl.createSampler(),this._setSamplerParameters(this.parameters)}destroy(){this.handle&&(this.device.gl.deleteSampler(this.handle),this.handle=void 0)}toString(){return`Sampler(${this.id},${JSON.stringify(this.props)})`}_setSamplerParameters(parameters){for(const[pname,value]of Object.entries(parameters)){const param=Number(pname);switch(param){case 33082:case 33083:this.device.gl.samplerParameterf(this.handle,param,value);break;default:this.device.gl.samplerParameteri(this.handle,param,value)}}}}var texture_view=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/texture-view.js");class WEBGLTextureView extends texture_view.X{device;gl;handle;texture;constructor(device,props){super(device,{...texture.g.defaultProps,...props}),this.device=device,this.gl=this.device.gl,this.handle=null,this.texture=props.texture}}function glFormatToComponents(format){switch(format){case 6406:case 33326:case 6403:case 36244:return 1;case 33339:case 33340:case 33328:case 33320:case 33319:return 2;case 6407:case 36248:case 34837:return 3;case 6408:case 36249:case 34836:return 4;default:return 0}}function with_parameters_withGLParameters(gl,parameters,func){if(function with_parameters_isObjectEmpty(object){for(const key in object)return!1;return!0}(parameters))return func(gl);const{nocatch:nocatch=!0}=parameters,webglState=WebGLStateTracker.get(gl);let value;if(webglState.push(),unified_parameter_api_setGLParameters(gl,parameters),nocatch)value=func(gl),webglState.pop();else try{value=func(gl)}finally{webglState.pop()}return value}function copyExternalImageToMipLevel(gl,handle,image,options){const{width:width,height:height}=options,{dimension:dimension,depth:depth=0,mipLevel:mipLevel=0}=options,{x:x=0,y:y=0,z:z=0}=options,{glFormat:glFormat,glType:glType}=options,glTarget=getWebGLCubeFaceTarget(options.glTarget,dimension,depth),glParameters=options.flipY?{37440:!0}:{};with_parameters_withGLParameters(gl,glParameters,(()=>{switch(dimension){case"2d-array":case"3d":gl.bindTexture(glTarget,handle),gl.texSubImage3D(glTarget,mipLevel,x,y,z,width,height,depth,glFormat,glType,image),gl.bindTexture(glTarget,null);break;case"2d":case"cube":gl.bindTexture(glTarget,handle),gl.texSubImage2D(glTarget,mipLevel,x,y,width,height,glFormat,glType,image),gl.bindTexture(glTarget,null);break;default:throw new Error(dimension)}}))}function copyCPUDataToMipLevel(gl,typedArray,options){const{dimension:dimension,width:width,height:height,depth:depth=0,mipLevel:mipLevel=0,byteOffset:byteOffset=0}=options,{x:x=0,y:y=0,z:z=0}=options,{glFormat:glFormat,glType:glType,compressed:compressed}=options,glTarget=getWebGLCubeFaceTarget(options.glTarget,dimension,depth);switch(dimension){case"2d-array":case"3d":compressed?gl.compressedTexSubImage3D(glTarget,mipLevel,x,y,z,width,height,depth,glFormat,typedArray,byteOffset):gl.texSubImage3D(glTarget,mipLevel,x,y,z,width,height,depth,glFormat,glType,typedArray,byteOffset);break;case"2d":case"cube":compressed?gl.compressedTexSubImage2D(glTarget,mipLevel,x,y,width,height,glFormat,typedArray,byteOffset):gl.texSubImage2D(glTarget,mipLevel,x,y,width,height,glFormat,glType,typedArray,byteOffset);break;default:throw new Error(dimension)}}function getWebGLCubeFaceTarget(glTarget,dimension,level){return"cube"===dimension?34069+level:glTarget}function readPixelsToArray(source,options){const{sourceX:sourceX=0,sourceY:sourceY=0,sourceAttachment:sourceAttachment=0}=options||{};let{target:target=null,sourceWidth:sourceWidth,sourceHeight:sourceHeight,sourceDepth:sourceDepth,sourceFormat:sourceFormat,sourceType:sourceType}=options||{};const{framebuffer:framebuffer,deleteFramebuffer:deleteFramebuffer}=getFramebuffer(source),{gl:gl,handle:handle}=framebuffer;sourceWidth||=framebuffer.width,sourceHeight||=framebuffer.height;const texture=framebuffer.colorAttachments[sourceAttachment]?.texture;if(!texture)throw new Error(`Invalid framebuffer attachment ${sourceAttachment}`);sourceDepth=texture?.depth||1,sourceFormat||=texture?.glFormat||6408,sourceType||=texture?.glType||5121,target=function getPixelArray(pixelArray,glType,glFormat,width,height,depth){if(pixelArray)return pixelArray;glType||=5121;const ArrayType=function getTypedArrayFromGLType(glType,options){const{clamped:clamped=!0}=options||{};switch(glType){case 5126:return Float32Array;case 5123:case 33635:case 32819:case 32820:return Uint16Array;case 5125:return Uint32Array;case 5121:return clamped?Uint8ClampedArray:Uint8Array;case 5120:return Int8Array;case 5122:return Int16Array;case 5124:return Int32Array;default:throw new Error("Failed to deduce typed array type from GL constant")}}(glType,{clamped:!1}),components=glFormatToComponents(glFormat);return new ArrayType(width*height*components)}(target,sourceType,sourceFormat,sourceWidth,sourceHeight),sourceType=sourceType||function getGLTypeFromTypedArray(arrayOrType){switch(ArrayBuffer.isView(arrayOrType)?arrayOrType.constructor:arrayOrType){case Float32Array:return 5126;case Uint16Array:return 5123;case Uint32Array:return 5125;case Uint8Array:case Uint8ClampedArray:return 5121;case Int8Array:return 5120;case Int16Array:return 5122;case Int32Array:return 5124;default:throw new Error("Failed to deduce GL constant from typed array")}}(target);const prevHandle=gl.bindFramebuffer(36160,handle);return gl.readBuffer(36064+sourceAttachment),gl.readPixels(sourceX,sourceY,sourceWidth,sourceHeight,sourceFormat,sourceType,target),gl.readBuffer(36064),gl.bindFramebuffer(36160,prevHandle||null),deleteFramebuffer&&framebuffer.destroy(),target}function getFramebuffer(source){return source instanceof Framebuffer?{framebuffer:source,deleteFramebuffer:!1}:{framebuffer:toFramebuffer(source),deleteFramebuffer:!0}}function toFramebuffer(texture,props){const{device:device,width:width,height:height,id:id}=texture;return device.createFramebuffer({...props,id:`framebuffer-for-${id}`,width:width,height:height,colorAttachments:[texture]})}class webgl_texture_WEBGLTexture extends texture.g{device;gl;handle;sampler=void 0;view=void 0;mipmaps;compressed;glTarget;glFormat;glType;glInternalFormat;textureUnit=0;constructor(device,props){super(device,props);const propsWithData={...this.props};propsWithData.data=props.data,this.device=device,this.gl=this.device.gl,this.glTarget=function getWebGLTextureTarget(dimension){switch(dimension){case"1d":case"cube-array":break;case"2d":return 3553;case"3d":return 32879;case"cube":return 34067;case"2d-array":return 35866}throw new Error(dimension)}(this.props.dimension);const formatInfo=getTextureFormatWebGL(this.props.format);this.glInternalFormat=formatInfo.internalFormat,this.glFormat=formatInfo.format,this.glType=formatInfo.type,this.compressed=formatInfo.compressed,this.mipmaps=Boolean(this.props.mipmaps),this._initialize(propsWithData),Object.seal(this)}_initialize(propsWithData){this.handle=this.props.handle||this.gl.createTexture(),this.device.setSpectorMetadata(this.handle,{...this.props,data:propsWithData.data});let{width:width,height:height}=propsWithData;if(!width||!height){const textureSize=texture.g.getTextureDataSize(propsWithData.data);width=textureSize?.width||1,height=textureSize?.height||1}if(this.width=width,this.height=height,this.depth=propsWithData.depth,this.setSampler(propsWithData.sampler),this.view=new WEBGLTextureView(this.device,{...this.props,texture:this}),this.bind(),function initializeTextureStorage(gl,levels,options){const{dimension:dimension,width:width,height:height,depth:depth=0}=options,{glInternalFormat:glInternalFormat}=options,glTarget=options.glTarget;switch(dimension){case"2d-array":case"3d":gl.texStorage3D(glTarget,levels,glInternalFormat,width,height,depth);break;default:gl.texStorage2D(glTarget,levels,glInternalFormat,width,height)}}(this.gl,this.mipLevels,this),propsWithData.data)switch(propsWithData.dimension){case"1d":this.setTexture1DData(propsWithData.data);break;case"2d":this.setTexture2DData(propsWithData.data);break;case"3d":this.setTexture3DData(propsWithData.data);break;case"cube":this.setTextureCubeData(propsWithData.data);break;case"2d-array":this.setTextureArrayData(propsWithData.data);break;case"cube-array":this.setTextureCubeArrayData(propsWithData.data);break;default:throw new Error(propsWithData.dimension)}this.mipmaps&&this.generateMipmap()}destroy(){this.handle&&(this.gl.deleteTexture(this.handle),this.removeStats(),this.trackDeallocatedMemory("Texture"),this.destroyed=!0)}createView(props){return new WEBGLTextureView(this.device,{...props,texture:this})}setSampler(sampler={}){let samplerProps;sampler instanceof WEBGLSampler?(this.sampler=sampler,samplerProps=sampler.props):(this.sampler=new WEBGLSampler(this.device,sampler),samplerProps=sampler);const parameters=convertSamplerParametersToWebGL(samplerProps);this._setSamplerParameters(parameters)}generateMipmap(options){if(this.device.isTextureFormatRenderable(this.props.format)&&this.device.isTextureFormatFilterable(this.props.format)||(log.R.warn(`${this} is not renderable or filterable, may not be able to generate mipmaps`)(),options?.force))try{this.gl.bindTexture(this.glTarget,this.handle),this.gl.generateMipmap(this.glTarget)}catch(error){log.R.warn(`Error generating mipmap for ${this}: ${error.message}`)()}finally{this.gl.bindTexture(this.glTarget,null)}}copyExternalImage(options){const size=texture.g.getExternalImageSize(options.image),opts={...texture.g.defaultCopyExternalImageOptions,...size,...options},{image:image,depth:depth,mipLevel:mipLevel,x:x,y:y,z:z,flipY:flipY}=opts;let{width:width,height:height}=opts;const{dimension:dimension,glTarget:glTarget,glFormat:glFormat,glInternalFormat:glInternalFormat,glType:glType}=this;if(width=Math.min(width,this.width-x),height=Math.min(height,this.height-y),options.sourceX||options.sourceY)throw new Error("WebGL does not support sourceX/sourceY)");return copyExternalImageToMipLevel(this.device.gl,this.handle,image,{dimension:dimension,mipLevel:mipLevel,x:x,y:y,z:z,width:width,height:height,depth:depth,glFormat:glFormat,glInternalFormat:glInternalFormat,glType:glType,glTarget:glTarget,flipY:flipY}),{width:opts.width,height:opts.height}}setTexture1DData(data){throw new Error("setTexture1DData not supported in WebGL.")}setTexture2DData(lodData,depth=0){this.bind();const lodArray=texture.g.normalizeTextureData(lodData,this);lodArray.length>1&&!1!==this.props.mipmaps&&log.R.warn(`Texture ${this.id} mipmap and multiple LODs.`)();for(let lodLevel=0;lodLevel<lodArray.length;lodLevel++){const imageData=lodArray[lodLevel];this._setMipLevel(depth,lodLevel,imageData)}this.unbind()}setTexture3DData(data){if("3d"!==this.props.dimension)throw new Error(this.id);ArrayBuffer.isView(data)&&(this.bind(),copyCPUDataToMipLevel(this.device.gl,data,this),this.unbind())}setTextureCubeData(data,depth=0){if("cube"!==this.props.dimension)throw new Error(this.id);for(const face of texture.g.CubeFaces)this.setTextureCubeFaceData(data[face],face)}setTextureArrayData(data){if("2d-array"!==this.props.dimension)throw new Error(this.id);throw new Error("setTextureArrayData not implemented.")}setTextureCubeArrayData(data){throw new Error("setTextureCubeArrayData not supported in WebGL2.")}setTextureCubeFaceData(lodData,face,depth=0){Array.isArray(lodData)&&lodData.length>1&&!1!==this.props.mipmaps&&log.R.warn(`${this.id} has mipmap and multiple LODs.`)();const faceDepth=texture.g.CubeFaces.indexOf(face);this.setTexture2DData(lodData,faceDepth)}update(){throw new Error("Texture.update() not implemented. Use ExternalTexture")}setImageDataForFace(options){const{face:face,width:width,height:height,pixels:pixels,data:data,format:format=6408,type:type=5121}=options,{gl:gl}=this,imageData=pixels||data;this.bind(),imageData instanceof Promise?imageData.then((resolvedImageData=>this.setImageDataForFace(Object.assign({},options,{face:face,data:resolvedImageData,pixels:resolvedImageData})))):this.width||this.height?gl.texImage2D(face,0,format,width,height,0,format,type,imageData):gl.texImage2D(face,0,format,format,type,imageData)}_getImageDataMap(faceData){for(let i=0;i<texture.g.CubeFaces.length;++i){const faceName=texture.g.CubeFaces[i];faceData[faceName]&&(faceData[34069+i]=faceData[faceName],delete faceData[faceName])}return faceData}_setSamplerParameters(parameters){log.R.log(1,`${this.id} sampler parameters`,this.device.getGLKeys(parameters))(),this.gl.bindTexture(this.glTarget,this.handle);for(const[pname,pvalue]of Object.entries(parameters)){const param=Number(pname),value=pvalue;switch(param){case 33082:case 33083:this.gl.texParameterf(this.glTarget,param,value);break;case 10241:case 10242:case 10243:default:this.gl.texParameteri(this.glTarget,param,value);break;case 34046:this.device.features.has("texture-filterable-anisotropic-webgl")&&this.gl.texParameteri(this.glTarget,param,value)}}this.gl.bindTexture(this.glTarget,null)}_setMipLevel(depth,mipLevel,textureData,glTarget=this.glTarget){if(texture.g.isExternalImage(textureData))copyExternalImageToMipLevel(this.device.gl,this.handle,textureData,{...this,depth:depth,mipLevel:mipLevel,glTarget:glTarget,flipY:this.props.flipY});else{if(!texture.g.isTextureLevelData(textureData))throw new Error("Texture: invalid image data");copyCPUDataToMipLevel(this.device.gl,textureData.data,{...this,depth:depth,mipLevel:mipLevel,glTarget:glTarget})}}getActiveUnit(){return this.gl.getParameter(34016)-33984}bind(textureUnit){const{gl:gl}=this;return void 0!==textureUnit&&(this.textureUnit=textureUnit,gl.activeTexture(33984+textureUnit)),gl.bindTexture(this.glTarget,this.handle),textureUnit}unbind(textureUnit){const{gl:gl}=this;return void 0!==textureUnit&&(this.textureUnit=textureUnit,gl.activeTexture(33984+textureUnit)),gl.bindTexture(this.glTarget,null),textureUnit}}class RenderPass extends resource.F{static defaultClearColor=[0,0,0,1];static defaultClearDepth=1;static defaultClearStencil=0;static defaultProps={...resource.F.defaultProps,framebuffer:null,parameters:void 0,clearColor:RenderPass.defaultClearColor,clearColors:void 0,clearDepth:RenderPass.defaultClearDepth,clearStencil:RenderPass.defaultClearStencil,depthReadOnly:!1,stencilReadOnly:!1,discard:!1,occlusionQuerySet:void 0,timestampQuerySet:void 0,beginTimestampIndex:void 0,endTimestampIndex:void 0};get[Symbol.toStringTag](){return"RenderPass"}constructor(device,props){super(device,props=RenderPass.normalizeProps(device,props),RenderPass.defaultProps)}static normalizeProps(device,props){const overriddenDefaultProps=device.props._resourceDefaults?.renderPass;return{...overriddenDefaultProps,...props}}}const COLOR_CHANNELS=[1,2,4,8];class WEBGLRenderPass extends RenderPass{device;glParameters;constructor(device,props){let viewport;if(super(device,props),this.device=device,!props?.parameters?.viewport)if(props?.framebuffer){const{width:width,height:height}=props.framebuffer;viewport=[0,0,width,height]}else{const[width,height]=device.getCanvasContext().getDrawingBufferSize();viewport=[0,0,width,height]}this.device.pushState(),this.setParameters({viewport:viewport,...this.props.parameters});const webglFramebuffer=this.props.framebuffer;if(webglFramebuffer?.handle)if(this.props.framebuffer){const drawBuffers=this.props.framebuffer.colorAttachments.map(((_,i)=>36064+i));this.device.gl.drawBuffers(drawBuffers)}else this.device.gl.drawBuffers([1029]);this.clear()}end(){this.device.popState()}pushDebugGroup(groupLabel){}popDebugGroup(){}insertDebugMarker(markerLabel){}setParameters(parameters={}){const glParameters={...this.glParameters};glParameters.framebuffer=this.props.framebuffer||null,this.props.depthReadOnly&&(glParameters.depthMask=!this.props.depthReadOnly),glParameters.stencilMask=this.props.stencilReadOnly?0:1,glParameters[35977]=this.props.discard,parameters.viewport&&(parameters.viewport.length>=6?(glParameters.viewport=parameters.viewport.slice(0,4),glParameters.depthRange=[parameters.viewport[4],parameters.viewport[5]]):glParameters.viewport=parameters.viewport),parameters.scissorRect&&(glParameters.scissorTest=!0,glParameters.scissor=parameters.scissorRect),parameters.blendConstant&&(glParameters.blendColor=parameters.blendConstant),parameters.stencilReference&&(console.warn("RenderPassParameters.stencilReference not yet implemented in WebGL"),parameters[2967]=parameters.stencilReference),parameters.colorMask&&(glParameters.colorMask=COLOR_CHANNELS.map((channel=>Boolean(channel&parameters.colorMask)))),this.glParameters=glParameters,unified_parameter_api_setGLParameters(this.device.gl,glParameters)}beginOcclusionQuery(queryIndex){const webglQuerySet=this.props.occlusionQuerySet;webglQuerySet?.beginOcclusionQuery()}endOcclusionQuery(){const webglQuerySet=this.props.occlusionQuerySet;webglQuerySet?.endOcclusionQuery()}clear(){const glParameters={...this.glParameters};let clearMask=0;this.props.clearColors&&this.props.clearColors.forEach(((color,drawBufferIndex)=>{color&&this.clearColorBuffer(drawBufferIndex,color)})),!1!==this.props.clearColor&&void 0===this.props.clearColors&&(clearMask|=16384,glParameters.clearColor=this.props.clearColor),!1!==this.props.clearDepth&&(clearMask|=256,glParameters.clearDepth=this.props.clearDepth),!1!==this.props.clearStencil&&(clearMask|=1024,glParameters.clearStencil=this.props.clearStencil),0!==clearMask&&with_parameters_withGLParameters(this.device.gl,glParameters,(()=>{this.device.gl.clear(clearMask)}))}clearColorBuffer(drawBuffer=0,value=[0,0,0,0]){with_parameters_withGLParameters(this.device.gl,{framebuffer:this.props.framebuffer},(()=>{switch(value.constructor){case Int8Array:case Int16Array:case Int32Array:this.device.gl.clearBufferiv(6144,drawBuffer,value);break;case Uint8Array:case Uint8ClampedArray:case Uint16Array:case Uint32Array:this.device.gl.clearBufferuiv(6144,drawBuffer,value);break;case Float32Array:this.device.gl.clearBufferfv(6144,drawBuffer,value);break;default:throw new Error("clearColorBuffer: color must be typed array")}}))}}var render_pipeline=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter/resources/render-pipeline.js");const SAMPLER_TYPES=[35678,35680,35679,35682,36289,36292,36293,36298,36299,36300,36303,36306,36307,36308,36311],COMPOSITE_GL_TYPES={5126:[5126,1,"float","f32","float32"],35664:[5126,2,"vec2","vec2<f32>","float32x2"],35665:[5126,3,"vec3","vec3<f32>","float32x3"],35666:[5126,4,"vec4","vec4<f32>","float32x4"],5124:[5124,1,"int","i32","sint32"],35667:[5124,2,"ivec2","vec2<i32>","sint32x2"],35668:[5124,3,"ivec3","vec3<i32>","sint32x3"],35669:[5124,4,"ivec4","vec4<i32>","sint32x4"],5125:[5125,1,"uint","u32","uint32"],36294:[5125,2,"uvec2","vec2<u32>","uint32x2"],36295:[5125,3,"uvec3","vec3<u32>","uint32x3"],36296:[5125,4,"uvec4","vec4<u32>","uint32x4"],35670:[5126,1,"bool","f32","float32"],35671:[5126,2,"bvec2","vec2<f32>","float32x2"],35672:[5126,3,"bvec3","vec3<f32>","float32x3"],35673:[5126,4,"bvec4","vec4<f32>","float32x4"],35674:[5126,8,"mat2","mat2x2<f32>"],35685:[5126,8,"mat2x3","mat2x3<f32>"],35686:[5126,8,"mat2x4","mat2x4<f32>"],35687:[5126,12,"mat3x2","mat3x2<f32>"],35675:[5126,12,"mat3","mat3x3<f32>"],35688:[5126,12,"mat3x4","mat3x4<f32>"],35689:[5126,16,"mat4x2","mat4x2<f32>"],35690:[5126,16,"mat4x3","mat4x3<f32>"],35676:[5126,16,"mat4","mat4x4<f32>"]};function decodeGLUniformType(glUniformType){const typeAndSize=COMPOSITE_GL_TYPES[glUniformType];if(!typeAndSize)throw new Error("uniform");const[glType,components,,format]=typeAndSize;return{format:format,components:components,glType:glType}}function decodeGLAttributeType(glAttributeType){const typeAndSize=COMPOSITE_GL_TYPES[glAttributeType];if(!typeAndSize)throw new Error("attribute");const[,components,,shaderType,vertexFormat]=typeAndSize;return{attributeType:shaderType,vertexFormat:vertexFormat,components:components}}function getShaderLayoutFromGLSL(gl,program){const shaderLayout={attributes:[],bindings:[]};shaderLayout.attributes=function readAttributeDeclarations(gl,program){const attributes=[],count=gl.getProgramParameter(program,35721);for(let index=0;index<count;index++){const activeInfo=gl.getActiveAttrib(program,index);if(!activeInfo)throw new Error("activeInfo");const{name:name,type:compositeType}=activeInfo,location=gl.getAttribLocation(program,name);if(location>=0){const{attributeType:attributeType}=decodeGLAttributeType(compositeType),stepMode=/instance/i.test(name)?"instance":"vertex";attributes.push({name:name,location:location,stepMode:stepMode,type:attributeType})}}return attributes.sort(((a,b)=>a.location-b.location)),attributes}(gl,program);const uniformBlocks=function readUniformBlocks(gl,program){const getBlockParameter=(blockIndex,pname)=>gl.getActiveUniformBlockParameter(program,blockIndex,pname),uniformBlocks=[],blockCount=gl.getProgramParameter(program,35382);for(let blockIndex=0;blockIndex<blockCount;blockIndex++){const blockInfo={name:gl.getActiveUniformBlockName(program,blockIndex)||"",location:getBlockParameter(blockIndex,35391),byteLength:getBlockParameter(blockIndex,35392),vertex:getBlockParameter(blockIndex,35396),fragment:getBlockParameter(blockIndex,35398),uniformCount:getBlockParameter(blockIndex,35394),uniforms:[]},uniformIndices=getBlockParameter(blockIndex,35395)||[],uniformType=gl.getActiveUniforms(program,uniformIndices,35383),uniformArrayLength=gl.getActiveUniforms(program,uniformIndices,35384),uniformOffset=gl.getActiveUniforms(program,uniformIndices,35387),uniformStride=gl.getActiveUniforms(program,uniformIndices,35388);for(let i=0;i<blockInfo.uniformCount;++i){const activeInfo=gl.getActiveUniform(program,uniformIndices[i]);if(!activeInfo)throw new Error("activeInfo");blockInfo.uniforms.push({name:activeInfo.name,format:decodeGLUniformType(uniformType[i]).format,type:uniformType[i],arrayLength:uniformArrayLength[i],byteOffset:uniformOffset[i],byteStride:uniformStride[i]})}uniformBlocks.push(blockInfo)}return uniformBlocks.sort(((a,b)=>a.location-b.location)),uniformBlocks}(gl,program);for(const uniformBlock of uniformBlocks){const uniforms=uniformBlock.uniforms.map((uniform=>({name:uniform.name,format:uniform.format,byteOffset:uniform.byteOffset,byteStride:uniform.byteStride,arrayLength:uniform.arrayLength})));shaderLayout.bindings.push({type:"uniform",name:uniformBlock.name,group:0,location:uniformBlock.location,visibility:(uniformBlock.vertex?1:0)&(uniformBlock.fragment?2:0),minBindingSize:uniformBlock.byteLength,uniforms:uniforms})}const uniforms=function readUniformBindings(gl,program){const uniforms=[],uniformCount=gl.getProgramParameter(program,35718);for(let i=0;i<uniformCount;i++){const activeInfo=gl.getActiveUniform(program,i);if(!activeInfo)throw new Error("activeInfo");const{name:rawName,size:size,type:type}=activeInfo,{name:name,isArray:isArray}=parseUniformName(rawName);let webglLocation=gl.getUniformLocation(program,name);const uniformInfo={location:webglLocation,name:name,size:size,type:type,isArray:isArray};if(uniforms.push(uniformInfo),uniformInfo.size>1)for(let j=0;j<uniformInfo.size;j++){const elementName=`${name}[${j}]`;webglLocation=gl.getUniformLocation(program,elementName);const arrayElementUniformInfo={...uniformInfo,name:elementName,location:webglLocation};uniforms.push(arrayElementUniformInfo)}}return uniforms}(gl,program);let textureUnit=0;for(const uniform of uniforms)if(type=uniform.type,SAMPLER_TYPES.includes(type)){const{viewDimension:viewDimension,sampleType:sampleType}=getSamplerInfo(uniform.type);shaderLayout.bindings.push({type:"texture",name:uniform.name,group:0,location:textureUnit,viewDimension:viewDimension,sampleType:sampleType}),uniform.textureUnit=textureUnit,textureUnit+=1}var type;uniforms.length&&(shaderLayout.uniforms=uniforms);const varyings=function readVaryings(gl,program){const varyings=[],count=gl.getProgramParameter(program,35971);for(let location=0;location<count;location++){const activeInfo=gl.getTransformFeedbackVarying(program,location);if(!activeInfo)throw new Error("activeInfo");const{name:name,type:compositeType,size:size}=activeInfo,{glType:glType,components:components}=decodeGLUniformType(compositeType),varying={location:location,name:name,type:glType,size:size*components};varyings.push(varying)}return varyings.sort(((a,b)=>a.location-b.location)),varyings}(gl,program);return varyings?.length&&(shaderLayout.varyings=varyings),shaderLayout}const SAMPLER_UNIFORMS_GL_TO_GPU={35678:["2d","float"],35680:["cube","float"],35679:["3d","float"],35682:["3d","depth"],36289:["2d-array","float"],36292:["2d-array","depth"],36293:["cube","float"],36298:["2d","sint"],36299:["3d","sint"],36300:["cube","sint"],36303:["2d-array","uint"],36306:["2d","uint"],36307:["3d","uint"],36308:["cube","uint"],36311:["2d-array","uint"]};function getSamplerInfo(type){const sampler=SAMPLER_UNIFORMS_GL_TO_GPU[type];if(!sampler)throw new Error("sampler");const[viewDimension,sampleType]=sampler;return{viewDimension:viewDimension,sampleType:sampleType}}function parseUniformName(name){if("]"!==name[name.length-1])return{name:name,length:1,isArray:!1};const matches=/([^[]*)(\[[0-9]+\])?/.exec(name);if(!matches||matches.length<2)throw new Error(`Failed to parse GLSL uniform name ${name}`);return{name:matches[1],length:matches[2]?1:0,isArray:Boolean(matches[2])}}function setUniform(gl,location,type,value){const gl2=gl;let uniformValue=value;!0===uniformValue&&(uniformValue=1),!1===uniformValue&&(uniformValue=0);const arrayValue="number"==typeof uniformValue?[uniformValue]:uniformValue;switch(type){case 35678:case 35680:case 35679:case 35682:case 36289:case 36292:case 36293:case 36298:case 36299:case 36300:case 36303:case 36306:case 36307:case 36308:case 36311:if("number"!=typeof value)throw new Error("samplers must be set to integers");return gl.uniform1i(location,value);case 5126:return gl.uniform1fv(location,arrayValue);case 35664:return gl.uniform2fv(location,arrayValue);case 35665:return gl.uniform3fv(location,arrayValue);case 35666:return gl.uniform4fv(location,arrayValue);case 5124:case 35670:return gl.uniform1iv(location,arrayValue);case 35667:case 35671:return gl.uniform2iv(location,arrayValue);case 35668:case 35672:return gl.uniform3iv(location,arrayValue);case 35669:case 35673:return gl.uniform4iv(location,arrayValue);case 5125:return gl2.uniform1uiv(location,arrayValue,1);case 36294:return gl2.uniform2uiv(location,arrayValue,2);case 36295:return gl2.uniform3uiv(location,arrayValue,3);case 36296:return gl2.uniform4uiv(location,arrayValue,4);case 35674:return gl.uniformMatrix2fv(location,!1,arrayValue);case 35675:return gl.uniformMatrix3fv(location,!1,arrayValue);case 35676:return gl.uniformMatrix4fv(location,!1,arrayValue);case 35685:return gl2.uniformMatrix2x3fv(location,!1,arrayValue);case 35686:return gl2.uniformMatrix2x4fv(location,!1,arrayValue);case 35687:return gl2.uniformMatrix3x2fv(location,!1,arrayValue);case 35688:return gl2.uniformMatrix3x4fv(location,!1,arrayValue);case 35689:return gl2.uniformMatrix4x2fv(location,!1,arrayValue);case 35690:return gl2.uniformMatrix4x3fv(location,!1,arrayValue)}throw new Error("Illegal uniform")}var is_array=__webpack_require__("./node_modules/@math.gl/types/dist/is-array.js");function splitUniformsAndBindings(uniforms){const result={bindings:{},uniforms:{}};return Object.keys(uniforms).forEach((name=>{const uniform=uniforms[name];!function isUniformValue(value){return null!==(0,is_array.H9)(value)||"number"==typeof value||"boolean"==typeof value}(uniform)?result.bindings[name]=uniform:result.uniforms[name]=uniform})),result}class WEBGLRenderPipeline extends render_pipeline.r{device;handle;vs;fs;introspectedLayout;uniforms={};bindings={};varyings=null;_uniformCount=0;_uniformSetters={};constructor(device,props){super(device,props),this.device=device,this.handle=this.props.handle||this.device.gl.createProgram(),this.device.setSpectorMetadata(this.handle,{id:this.props.id}),this.vs=props.vs,this.fs=props.fs;const{varyings:varyings,bufferMode:bufferMode=35981}=props;varyings&&varyings.length>0&&(this.varyings=varyings,this.device.gl.transformFeedbackVaryings(this.handle,varyings,bufferMode)),this._linkShaders(),log.R.time(1,`RenderPipeline ${this.id} - shaderLayout introspection`)(),this.introspectedLayout=getShaderLayoutFromGLSL(this.device.gl,this.handle),log.R.timeEnd(1,`RenderPipeline ${this.id} - shaderLayout introspection`)(),this.shaderLayout=function mergeShaderLayout(baseLayout,overrideLayout){const mergedLayout={...baseLayout,attributes:baseLayout.attributes.map((attribute=>({...attribute})))};for(const attribute of overrideLayout?.attributes||[]){const baseAttribute=mergedLayout.attributes.find((attr=>attr.name===attribute.name));baseAttribute?(baseAttribute.type=attribute.type||baseAttribute.type,baseAttribute.stepMode=attribute.stepMode||baseAttribute.stepMode):log.R.warn(`shader layout attribute ${attribute.name} not present in shader`)}return mergedLayout}(this.introspectedLayout,props.shaderLayout)}destroy(){this.handle&&(this.device.gl.deleteProgram(this.handle),this.destroyed=!0)}setBindings(bindings,options){for(const[name,value]of Object.entries(bindings)){const binding=this.shaderLayout.bindings.find((binding_=>binding_.name===name))||this.shaderLayout.bindings.find((binding_=>binding_.name===`${name}Uniforms`));if(binding){switch(value||log.R.warn(`Unsetting binding "${name}" in render pipeline "${this.id}"`)(),binding.type){case"uniform":if(!(value instanceof WEBGLBuffer||value.buffer instanceof WEBGLBuffer))throw new Error("buffer value");break;case"texture":if(!(value instanceof WEBGLTextureView||value instanceof webgl_texture_WEBGLTexture||value instanceof WEBGLFramebuffer))throw new Error("texture value");break;case"sampler":log.R.warn(`Ignoring sampler ${name}`)();break;default:throw new Error(binding.type)}this.bindings[name]=value}else{const validBindings=this.shaderLayout.bindings.map((binding_=>`"${binding_.name}"`)).join(", ");options?.disableWarnings||log.R.warn(`No binding "${name}" in render pipeline "${this.id}", expected one of ${validBindings}`,value)()}}}draw(options){const{renderPass:renderPass,parameters:parameters=this.props.parameters,topology:topology=this.props.topology,vertexArray:vertexArray,vertexCount:vertexCount,instanceCount:instanceCount,isInstanced:isInstanced=!1,firstVertex:firstVertex=0,transformFeedback:transformFeedback}=options,glDrawMode=function getGLDrawMode(topology){switch(topology){case"point-list":return 0;case"line-list":return 1;case"line-strip":return 3;case"triangle-list":return 4;case"triangle-strip":return 5;default:throw new Error(topology)}}(topology),isIndexed=Boolean(vertexArray.indexBuffer),glIndexType=vertexArray.indexBuffer?.glIndexType;if("success"!==this.linkStatus)return log.R.info(2,`RenderPipeline:${this.id}.draw() aborted - waiting for shader linking`)(),!1;if(!this._areTexturesRenderable())return log.R.info(2,`RenderPipeline:${this.id}.draw() aborted - textures not yet loaded`)(),!1;this.device.gl.useProgram(this.handle),vertexArray.bindBeforeRender(renderPass),transformFeedback&&transformFeedback.begin(this.props.topology),this._applyBindings(),this._applyUniforms();const webglRenderPass=renderPass;return function withDeviceAndGLParameters(device,parameters,glParameters,func){if(device_parameters_isObjectEmpty(parameters))return func(device);const webglDevice=device;webglDevice.pushState();try{return setDeviceParameters(device,parameters),unified_parameter_api_setGLParameters(webglDevice.gl,glParameters),func(device)}finally{webglDevice.popState()}}(this.device,parameters,webglRenderPass.glParameters,(()=>{isIndexed&&isInstanced?this.device.gl.drawElementsInstanced(glDrawMode,vertexCount||0,glIndexType,firstVertex,instanceCount||0):isIndexed?this.device.gl.drawElements(glDrawMode,vertexCount||0,glIndexType,firstVertex):isInstanced?this.device.gl.drawArraysInstanced(glDrawMode,firstVertex,vertexCount||0,instanceCount||0):this.device.gl.drawArrays(glDrawMode,firstVertex,vertexCount||0),transformFeedback&&transformFeedback.end()})),vertexArray.unbindAfterRender(renderPass),!0}setUniformsWebGL(uniforms){const{bindings:bindings}=splitUniformsAndBindings(uniforms);Object.keys(bindings).forEach((name=>{log.R.warn(`Unsupported value "${JSON.stringify(bindings[name])}" used in setUniforms() for key ${name}. Use setBindings() instead?`)()})),Object.assign(this.uniforms,uniforms)}async _linkShaders(){const{gl:gl}=this.device;if(gl.attachShader(this.handle,this.vs.handle),gl.attachShader(this.handle,this.fs.handle),log.R.time(4,`linkProgram for ${this.id}`)(),gl.linkProgram(this.handle),log.R.timeEnd(4,`linkProgram for ${this.id}`)(),log.R.level,!this.device.features.has("compilation-status-async-webgl")){const status=this._getLinkStatus();return void this._reportLinkStatus(status)}log.R.once(1,"RenderPipeline linking is asynchronous")(),await this._waitForLinkComplete(),log.R.info(2,`RenderPipeline ${this.id} - async linking complete: ${this.linkStatus}`)();const status=this._getLinkStatus();this._reportLinkStatus(status)}async _reportLinkStatus(status){if("success"!==status){switch(this.vs.compilationStatus){case"error":throw this.vs.debugShader(),new Error(`Error during compilation of shader ${this.vs.id}`);case"pending":this.vs.asyncCompilationStatus.then((()=>this.vs.debugShader()))}switch(this.fs?.compilationStatus){case"error":throw this.fs.debugShader(),new Error(`Error during compilation of shader ${this.fs.id}`);case"pending":this.fs.asyncCompilationStatus.then((()=>this.fs.debugShader()))}const linkErrorLog=this.device.gl.getProgramInfoLog(this.handle);throw new Error(`Error during ${status}: ${linkErrorLog}`)}}_getLinkStatus(){const{gl:gl}=this.device;if(!gl.getProgramParameter(this.handle,35714))return this.linkStatus="error","linking";gl.validateProgram(this.handle);return gl.getProgramParameter(this.handle,35715)?(this.linkStatus="success","success"):(this.linkStatus="error","validation")}async _waitForLinkComplete(){const waitMs=async ms=>await new Promise((resolve=>setTimeout(resolve,ms)));if(!this.device.features.has("compilation-status-async-webgl"))return void await waitMs(10);const{gl:gl}=this.device;for(;;){if(gl.getProgramParameter(this.handle,37297))return;await waitMs(10)}}_areTexturesRenderable(){let texturesRenderable=!0;for(const bindingInfo of this.shaderLayout.bindings)this.bindings[bindingInfo.name]||this.bindings[bindingInfo.name.replace(/Uniforms$/,"")]||(log.R.warn(`Binding ${bindingInfo.name} not found in ${this.id}`)(),texturesRenderable=!1);return texturesRenderable}_applyBindings(){if("success"!==this.linkStatus)return;const{gl:gl}=this.device;gl.useProgram(this.handle);let textureUnit=0,uniformBufferIndex=0;for(const binding of this.shaderLayout.bindings){const value=this.bindings[binding.name]||this.bindings[binding.name.replace(/Uniforms$/,"")];if(!value)throw new Error(`No value for binding ${binding.name} in ${this.id}`);switch(binding.type){case"uniform":const{name:name}=binding,location=gl.getUniformBlockIndex(this.handle,name);if(4294967295===location)throw new Error(`Invalid uniform block name ${name}`);gl.uniformBlockBinding(this.handle,uniformBufferIndex,location),value instanceof WEBGLBuffer?gl.bindBufferBase(35345,uniformBufferIndex,value.handle):gl.bindBufferRange(35345,uniformBufferIndex,value.buffer.handle,value.offset||0,value.size||value.buffer.byteLength-value.offset),uniformBufferIndex+=1;break;case"texture":if(!(value instanceof WEBGLTextureView||value instanceof webgl_texture_WEBGLTexture||value instanceof WEBGLFramebuffer))throw new Error("texture");let texture;if(value instanceof WEBGLTextureView)texture=value.texture;else if(value instanceof webgl_texture_WEBGLTexture)texture=value;else{if(!(value instanceof WEBGLFramebuffer&&value.colorAttachments[0]instanceof WEBGLTextureView))throw new Error("No texture");log.R.warn("Passing framebuffer in texture binding may be deprecated. Use fbo.colorAttachments[0] instead")(),texture=value.colorAttachments[0].texture}gl.activeTexture(33984+textureUnit),gl.bindTexture(texture.glTarget,texture.handle),textureUnit+=1;break;case"sampler":break;case"storage":case"read-only-storage":throw new Error(`binding type '${binding.type}' not supported in WebGL`)}}}_applyUniforms(){for(const uniformLayout of this.shaderLayout.uniforms||[]){const{name:name,location:location,type:type,textureUnit:textureUnit}=uniformLayout,value=this.uniforms[name]??textureUnit;void 0!==value&&setUniform(this.device.gl,location,type,value)}}}class CommandEncoder extends resource.F{static defaultProps={...resource.F.defaultProps,measureExecutionTime:void 0};get[Symbol.toStringTag](){return"CommandEncoder"}constructor(device,props){super(device,props,CommandEncoder.defaultProps)}}class CommandBuffer extends resource.F{static defaultProps={...resource.F.defaultProps};get[Symbol.toStringTag](){return"CommandBuffer"}constructor(device,props){super(device,props,CommandBuffer.defaultProps)}}class WEBGLCommandBuffer extends CommandBuffer{device;commands=[];constructor(device){super(device,{}),this.device=device}submitCommands(commands=this.commands){for(const command of commands)switch(command.name){case"copy-buffer-to-buffer":_copyBufferToBuffer(this.device,command.options);break;case"copy-buffer-to-texture":_copyBufferToTexture(this.device,command.options);break;case"copy-texture-to-buffer":_copyTextureToBuffer(this.device,command.options);break;case"copy-texture-to-texture":_copyTextureToTexture(this.device,command.options);break;default:throw new Error(command.name)}}}function _copyBufferToBuffer(device,options){const source=options.sourceBuffer,destination=options.destinationBuffer;device.gl.bindBuffer(36662,source.handle),device.gl.bindBuffer(36663,destination.handle),device.gl.copyBufferSubData(36662,36663,options.sourceOffset??0,options.destinationOffset??0,options.size),device.gl.bindBuffer(36662,null),device.gl.bindBuffer(36663,null)}function _copyBufferToTexture(device,options){throw new Error("Not implemented")}function _copyTextureToBuffer(device,options){const{sourceTexture:sourceTexture,mipLevel:mipLevel=0,aspect:aspect="all",width:width=options.sourceTexture.width,height:height=options.sourceTexture.height,depthOrArrayLayers:depthOrArrayLayers=0,origin:origin=[0,0],destinationBuffer:destinationBuffer,byteOffset:byteOffset=0,bytesPerRow:bytesPerRow,rowsPerImage:rowsPerImage}=options;if("all"!==aspect)throw new Error("aspect not supported in WebGL");if(0!==mipLevel||0!==depthOrArrayLayers||bytesPerRow||rowsPerImage)throw new Error("not implemented");const{framebuffer:framebuffer,destroyFramebuffer:destroyFramebuffer}=webgl_command_buffer_getFramebuffer(sourceTexture);let prevHandle;try{const webglBuffer=destinationBuffer,sourceWidth=width||framebuffer.width,sourceHeight=height||framebuffer.height,sourceParams=getTextureFormatWebGL(framebuffer.colorAttachments[0].texture.props.format),sourceFormat=sourceParams.format,sourceType=sourceParams.type;device.gl.bindBuffer(35051,webglBuffer.handle),prevHandle=device.gl.bindFramebuffer(36160,framebuffer.handle),device.gl.readPixels(origin[0],origin[1],sourceWidth,sourceHeight,sourceFormat,sourceType,byteOffset)}finally{device.gl.bindBuffer(35051,null),void 0!==prevHandle&&device.gl.bindFramebuffer(36160,prevHandle),destroyFramebuffer&&framebuffer.destroy()}}function _copyTextureToTexture(device,options){const{sourceTexture:sourceTexture,destinationMipLevel:destinationMipLevel=0,origin:origin=[0,0],destinationOrigin:destinationOrigin=[0,0],destinationTexture:destinationTexture}=options;let{width:width=options.destinationTexture.width,height:height=options.destinationTexture.height}=options;const{framebuffer:framebuffer,destroyFramebuffer:destroyFramebuffer}=webgl_command_buffer_getFramebuffer(sourceTexture),[sourceX,sourceY]=origin,[destinationX,destinationY,destinationZ]=destinationOrigin,prevHandle=device.gl.bindFramebuffer(36160,framebuffer.handle);let textureTarget,texture=null;if(!(destinationTexture instanceof webgl_texture_WEBGLTexture))throw new Error("invalid destination");switch(texture=destinationTexture,width=Number.isFinite(width)?width:texture.width,height=Number.isFinite(height)?height:texture.height,texture.bind(0),textureTarget=texture.glTarget,textureTarget){case 3553:case 34067:device.gl.copyTexSubImage2D(textureTarget,destinationMipLevel,destinationX,destinationY,sourceX,sourceY,width,height);break;case 35866:case 32879:device.gl.copyTexSubImage3D(textureTarget,destinationMipLevel,destinationX,destinationY,destinationZ,sourceX,sourceY,width,height)}texture&&texture.unbind(),device.gl.bindFramebuffer(36160,prevHandle),destroyFramebuffer&&framebuffer.destroy()}function webgl_command_buffer_getFramebuffer(source){if(source instanceof texture.g){const{width:width,height:height,id:id}=source;return{framebuffer:source.device.createFramebuffer({id:`framebuffer-for-${id}`,width:width,height:height,colorAttachments:[source]}),destroyFramebuffer:!0}}return{framebuffer:source,destroyFramebuffer:!1}}class WEBGLCommandEncoder extends CommandEncoder{device;commandBuffer;constructor(device,props){super(device,props),this.device=device,this.commandBuffer=new WEBGLCommandBuffer(device)}destroy(){}finish(){this.commandBuffer.submitCommands()}copyBufferToBuffer(options){this.commandBuffer.commands.push({name:"copy-buffer-to-buffer",options:options})}copyBufferToTexture(options){this.commandBuffer.commands.push({name:"copy-buffer-to-texture",options:options})}copyTextureToBuffer(options){this.commandBuffer.commands.push({name:"copy-texture-to-buffer",options:options})}copyTextureToTexture(options){this.commandBuffer.commands.push({name:"copy-texture-to-texture",options:options})}pushDebugGroup(groupLabel){}popDebugGroup(){}insertDebugMarker(markerLabel){}resolveQuerySet(querySet,destination,options){}}var get_attribute_from_layouts=__webpack_require__("./node_modules/@luma.gl/core/dist/adapter-utils/get-attribute-from-layouts.js");class VertexArray extends resource.F{static defaultProps={...resource.F.defaultProps,renderPipeline:null};get[Symbol.toStringTag](){return"VertexArray"}maxVertexAttributes;attributeInfos;indexBuffer=null;attributes;constructor(device,props){super(device,props,VertexArray.defaultProps),this.maxVertexAttributes=device.limits.maxVertexAttributes,this.attributes=new Array(this.maxVertexAttributes).fill(null);const{shaderLayout:shaderLayout,bufferLayout:bufferLayout}=props.renderPipeline||{};if(!shaderLayout||!bufferLayout)throw new Error("VertexArray");this.attributeInfos=(0,get_attribute_from_layouts.M)(shaderLayout,bufferLayout,this.maxVertexAttributes)}setConstantWebGL(location,value){this.device.reportError(new Error("constant attributes not supported"))}}var array_utils_flat=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/array-utils-flat.js"),is_electron=__webpack_require__("./node_modules/@probe.gl/env/dist/lib/is-electron.js"),globals=__webpack_require__("./node_modules/@probe.gl/env/dist/lib/globals.js");class WEBGLVertexArray extends VertexArray{get[Symbol.toStringTag](){return"VertexArray"}device;handle;buffer=null;bufferValue=null;static isConstantAttributeZeroSupported(device){return"Chrome"===function getBrowser(mockUserAgent){return mockUserAgent||(0,is_browser.B)()?(0,is_electron.b)(mockUserAgent)?"Electron":(mockUserAgent||globals.gM.userAgent||"").indexOf("Edge")>-1?"Edge":globalThis.chrome?"Chrome":globalThis.safari?"Safari":globalThis.mozInnerScreenX?"Firefox":"Unknown":"Node"}()}constructor(device,props){super(device,props),this.device=device,this.handle=this.device.gl.createVertexArray()}destroy(){super.destroy(),this.buffer&&this.buffer?.destroy(),this.handle&&(this.device.gl.deleteVertexArray(this.handle),this.handle=void 0)}setIndexBuffer(indexBuffer){const buffer=indexBuffer;if(buffer&&34963!==buffer.glTarget)throw new Error("Use .setBuffer()");this.device.gl.bindVertexArray(this.handle),this.device.gl.bindBuffer(34963,buffer?buffer.handle:null),this.indexBuffer=buffer,this.device.gl.bindVertexArray(null)}setBuffer(location,attributeBuffer){const buffer=attributeBuffer;if(34963===buffer.glTarget)throw new Error("Use .setIndexBuffer()");const{size:size,type:type,stride:stride,offset:offset,normalized:normalized,integer:integer,divisor:divisor}=this._getAccessor(location);this.device.gl.bindVertexArray(this.handle),this.device.gl.bindBuffer(34962,buffer.handle),integer?this.device.gl.vertexAttribIPointer(location,size,type,stride,offset):this.device.gl.vertexAttribPointer(location,size,type,normalized,stride,offset),this.device.gl.bindBuffer(34962,null),this.device.gl.enableVertexAttribArray(location),this.device.gl.vertexAttribDivisor(location,divisor||0),this.attributes[location]=buffer,this.device.gl.bindVertexArray(null)}setConstantWebGL(location,value){this._enable(location,!1),this.attributes[location]=value}bindBeforeRender(){this.device.gl.bindVertexArray(this.handle),this._applyConstantAttributes()}unbindAfterRender(){this.device.gl.bindVertexArray(null)}_applyConstantAttributes(){for(let location=0;location<this.maxVertexAttributes;++location){const constant=this.attributes[location];ArrayBuffer.isView(constant)&&this.device.setConstantAttributeWebGL(location,constant)}}_getAccessor(location){const attributeInfo=this.attributeInfos[location];if(!attributeInfo)throw new Error(`Unknown attribute location ${location}`);const glType=getGLFromVertexType(attributeInfo.bufferDataType);return{size:attributeInfo.bufferComponents,type:glType,stride:attributeInfo.byteStride,offset:attributeInfo.byteOffset,normalized:attributeInfo.normalized,integer:attributeInfo.integer,divisor:"instance"===attributeInfo.stepMode?1:0}}_enable(location,enable=!0){const canDisableAttributeZero=WEBGLVertexArray.isConstantAttributeZeroSupported(this.device);(enable||(canDisableAttributeZero||0!==location))&&(location=Number(location),this.device.gl.bindVertexArray(this.handle),enable?this.device.gl.enableVertexAttribArray(location):this.device.gl.disableVertexAttribArray(location),this.device.gl.bindVertexArray(null))}getConstantBuffer(elementCount,value){const constantValue=function normalizeConstantArrayValue(arrayValue){if(Array.isArray(arrayValue))return new Float32Array(arrayValue);return arrayValue}(value),byteLength=constantValue.byteLength*elementCount,length=constantValue.length*elementCount;if(this.buffer&&byteLength!==this.buffer.byteLength)throw new Error(`Buffer size is immutable, byte length ${byteLength} !== ${this.buffer.byteLength}.`);let updateNeeded=!this.buffer;if(this.buffer=this.buffer||this.device.createBuffer({byteLength:byteLength}),updateNeeded=updateNeeded||!function compareConstantArrayValues(v1,v2){if(!v1||!v2||v1.length!==v2.length||v1.constructor!==v2.constructor)return!1;for(let i=0;i<v1.length;++i)if(v1[i]!==v2[i])return!1;return!0}(constantValue,this.bufferValue),updateNeeded){const typedArray=(0,array_utils_flat.X)(value.constructor,length);!function fillArray(options){const{target:target,source:source,start:start=0,count:count=1}=options,length=source.length,total=count*length;let copied=0;for(let i=start;copied<length;copied++)target[i++]=source[copied];for(;copied<total;)copied<total-copied?(target.copyWithin(start+copied,start,start+copied),copied*=2):(target.copyWithin(start+copied,start,start+total-copied),copied=total);return options.target}({target:typedArray,source:constantValue,start:0,count:length}),this.buffer.write(typedArray),this.bufferValue=value}return this.buffer}}class TransformFeedback extends resource.F{static defaultProps={...resource.F.defaultProps,layout:void 0,buffers:{}};get[Symbol.toStringTag](){return"TransformFeedback"}constructor(device,props){super(device,props,TransformFeedback.defaultProps)}}class WEBGLTransformFeedback extends TransformFeedback{device;gl;handle;layout;buffers={};unusedBuffers={};bindOnUse=!0;_bound=!1;constructor(device,props){super(device,props),this.device=device,this.gl=device.gl,this.handle=this.props.handle||this.gl.createTransformFeedback(),this.layout=this.props.layout,props.buffers&&this.setBuffers(props.buffers),Object.seal(this)}destroy(){this.gl.deleteTransformFeedback(this.handle),super.destroy()}begin(topology="point-list"){this.gl.bindTransformFeedback(36386,this.handle),this.bindOnUse&&this._bindBuffers(),this.gl.beginTransformFeedback(function getGLPrimitive(topology){switch(topology){case"point-list":return 0;case"line-list":case"line-strip":return 1;case"triangle-list":case"triangle-strip":return 4;default:throw new Error(topology)}}(topology))}end(){this.gl.endTransformFeedback(),this.bindOnUse&&this._unbindBuffers(),this.gl.bindTransformFeedback(36386,null)}setBuffers(buffers){this.buffers={},this.unusedBuffers={},this.bind((()=>{for(const bufferName in buffers)this.setBuffer(bufferName,buffers[bufferName])}))}setBuffer(locationOrName,bufferOrRange){const location=this._getVaryingIndex(locationOrName),{buffer:buffer,byteLength:byteLength,byteOffset:byteOffset}=this._getBufferRange(bufferOrRange);if(location<0)return this.unusedBuffers[locationOrName]=buffer,void log.R.warn(`${this.id} unusedBuffers varying buffer ${locationOrName}`)();this.buffers[location]={buffer:buffer,byteLength:byteLength,byteOffset:byteOffset},this.bindOnUse||this._bindBuffer(location,buffer,byteOffset,byteLength)}getBuffer(locationOrName){if(isIndex(locationOrName))return this.buffers[locationOrName]||null;const location=this._getVaryingIndex(locationOrName);return location>=0?this.buffers[location]:null}bind(funcOrHandle=this.handle){if("function"!=typeof funcOrHandle)return this.gl.bindTransformFeedback(36386,funcOrHandle),this;let value;return this._bound?value=funcOrHandle():(this.gl.bindTransformFeedback(36386,this.handle),this._bound=!0,value=funcOrHandle(),this._bound=!1,this.gl.bindTransformFeedback(36386,null)),value}unbind(){this.bind(null)}_getBufferRange(bufferOrRange){if(bufferOrRange instanceof WEBGLBuffer)return{buffer:bufferOrRange,byteOffset:0,byteLength:bufferOrRange.byteLength};const{buffer:buffer,byteOffset:byteOffset=0,byteLength:byteLength=bufferOrRange.buffer.byteLength}=bufferOrRange;return{buffer:buffer,byteOffset:byteOffset,byteLength:byteLength}}_getVaryingIndex(locationOrName){if(isIndex(locationOrName))return Number(locationOrName);for(const varying of this.layout.varyings)if(locationOrName===varying.name)return varying.location;return-1}_bindBuffers(){for(const bufferIndex in this.buffers){const{buffer:buffer,byteLength:byteLength,byteOffset:byteOffset}=this._getBufferRange(this.buffers[bufferIndex]);this._bindBuffer(Number(bufferIndex),buffer,byteOffset,byteLength)}}_unbindBuffers(){for(const bufferIndex in this.buffers)this.gl.bindBufferBase(35982,Number(bufferIndex),null)}_bindBuffer(index,buffer,byteOffset=0,byteLength){const handle=buffer&&buffer.handle;handle&&void 0!==byteLength?this.gl.bindBufferRange(35982,index,handle,byteOffset,byteLength):this.gl.bindBufferBase(35982,index,handle)}}function isIndex(value){return"number"==typeof value?Number.isInteger(value):/^\d+$/.test(value)}class QuerySet extends resource.F{static defaultProps={...resource.F.defaultProps,type:void 0,count:void 0};get[Symbol.toStringTag](){return"QuerySet"}constructor(device,props){super(device,props,QuerySet.defaultProps)}}class WEBGLQuerySet extends QuerySet{device;handle;target=null;_queryPending=!1;_pollingPromise=null;get[Symbol.toStringTag](){return"Query"}constructor(device,props){if(super(device,props),this.device=device,props.count>1)throw new Error("WebGL QuerySet can only have one value");this.handle=this.device.gl.createQuery(),Object.seal(this)}destroy(){this.device.gl.deleteQuery(this.handle)}beginTimestampQuery(){return this._begin(35007)}endTimestampQuery(){this._end()}beginOcclusionQuery(options){return this._begin(options?.conservative?36202:35887)}endOcclusionQuery(){this._end()}beginTransformFeedbackQuery(){return this._begin(35976)}endTransformFeedbackQuery(){this._end()}async resolveQuery(){return[await this.pollQuery()]}_begin(target){this._queryPending||(this.target=target,this.device.gl.beginQuery(this.target,this.handle))}_end(){this._queryPending||this.target&&(this.device.gl.endQuery(this.target),this.target=null,this._queryPending=!0)}isResultAvailable(){if(!this._queryPending)return!1;const resultAvailable=this.device.gl.getQueryParameter(this.handle,34919);return resultAvailable&&(this._queryPending=!1),resultAvailable}isTimerDisjoint(){return this.device.gl.getParameter(36795)}getResult(){return this.device.gl.getQueryParameter(this.handle,34918)}getTimerMilliseconds(){return this.getResult()/1e6}pollQuery(limit=Number.POSITIVE_INFINITY){if(this._pollingPromise)return this._pollingPromise;let counter=0;return this._pollingPromise=new Promise(((resolve,reject)=>{const poll=()=>{this.isResultAvailable()?(resolve(this.getResult()),this._pollingPromise=null):counter++>limit?(reject("Timed out"),this._pollingPromise=null):requestAnimationFrame(poll)};requestAnimationFrame(poll)})),this._pollingPromise}}class WebGLDevice extends adapter_device.pF{type="webgl";handle;features;limits;info;canvasContext;lost;_resolveContextLost;gl;debug=!1;_canvasSizeInfo={clientWidth:0,clientHeight:0,devicePixelRatio:1};_extensions={};_polyfilled=!1;spectorJS;constructor(props){super({...props,id:props.id||uid_uid("webgl-device")});const canvasContextProps=adapter_device.pF._getCanvasContextProps(props);if(!canvasContextProps)throw new Error("WebGLDevice requires props.createCanvasContext to be set");let device=canvasContextProps.canvas?.gl?.device;if(device)throw new Error(`WebGL context already attached to device ${device.id}`);this.canvasContext=new WebGLCanvasContext(this,canvasContextProps),this.lost=new Promise((resolve=>{this._resolveContextLost=resolve}));const webglContextAttributes={...props.webgl};"premultiplied"===canvasContextProps.alphaMode&&(webglContextAttributes.premultipliedAlpha=!0),void 0!==props.powerPreference&&(webglContextAttributes.powerPreference=props.powerPreference);const gl=this.props._handle||function createBrowserContext(canvas,props,webglContextAttributes){let errorMessage="";const webglProps={preserveDrawingBuffer:!0,...webglContextAttributes};let gl=null;if(gl||=canvas.getContext("webgl2",webglProps),webglProps.failIfMajorPerformanceCaveat&&(errorMessage||="Only software GPU is available. Set `failIfMajorPerformanceCaveat: false` to allow."),gl||webglContextAttributes.failIfMajorPerformanceCaveat||(webglProps.failIfMajorPerformanceCaveat=!1,gl=canvas.getContext("webgl2",webglProps),gl.luma||={},gl.luma.softwareRenderer=!0),gl||(gl=canvas.getContext("webgl",{}),gl&&(gl=null,errorMessage||="Your browser only supports WebGL1")),!gl)throw errorMessage||="Your browser does not support WebGL",new Error(`Failed to create WebGL context: ${errorMessage}`);const{onContextLost:onContextLost,onContextRestored:onContextRestored}=props;return canvas.addEventListener("webglcontextlost",(event=>onContextLost(event)),!1),canvas.addEventListener("webglcontextrestored",(event=>onContextRestored(event)),!1),gl.luma||={},gl}(this.canvasContext.canvas,{onContextLost:event=>this._resolveContextLost?.({reason:"destroyed",message:"Entered sleep mode, or too many apps or browser tabs are using the GPU."}),onContextRestored:event=>console.log("WebGL context restored")},webglContextAttributes);if(!gl)throw new Error("WebGL context creation failed");if(device=gl.device,device){if(props._reuseDevices)return log.R.log(1,`Not creating a new Device, instead returning a reference to Device ${device.id} already attached to WebGL context`,device)(),device._reused=!0,device;throw new Error(`WebGL context already attached to device ${device.id}`)}this.handle=gl,this.gl=gl,this.spectorJS=(0,spector.k2)({...this.props,gl:this.handle}),this.gl.device=this,this.gl._version=2,this.info=getDeviceInfo(this.gl,this._extensions),this.limits=new WebGLDeviceLimits(this.gl),this.features=new WebGLDeviceFeatures(this.gl,this._extensions,this.props._disabledFeatures),this.props._initializeFeatures&&this.features.initializeFeatures(),!1!==canvasContextProps.autoResize&&this.canvasContext.resize();new WebGLStateTracker(this.gl,{log:(...args)=>log.R.log(1,...args)()}).trackState(this.gl,{copyState:!1});const debugWebGL=props.debugWebGL||props.debug,traceWebGL=props.debugWebGL;debugWebGL&&(this.gl=(0,webgl_developer_tools.l)(this.gl,{debugWebGL:debugWebGL,traceWebGL:traceWebGL}),log.R.warn("WebGL debug mode activated. Performance reduced.")(),props.debugWebGL&&(log.R.level=Math.max(log.R.level,1)))}destroy(){this.props._reuseDevices||this._reused||delete this.gl.device}get isLost(){return this.gl.isContextLost()}createCanvasContext(props){throw new Error("WebGL only supports a single canvas")}createBuffer(props){const newProps=this._normalizeBufferProps(props);return new WEBGLBuffer(this,newProps)}createTexture(props){return new webgl_texture_WEBGLTexture(this,props)}createExternalTexture(props){throw new Error("createExternalTexture() not implemented")}createSampler(props){return new WEBGLSampler(this,props)}createShader(props){return new WEBGLShader(this,props)}createFramebuffer(props){return new WEBGLFramebuffer(this,props)}createVertexArray(props){return new WEBGLVertexArray(this,props)}createTransformFeedback(props){return new WEBGLTransformFeedback(this,props)}createQuerySet(props){return new WEBGLQuerySet(this,props)}createRenderPipeline(props){return new WEBGLRenderPipeline(this,props)}beginRenderPass(props){return new WEBGLRenderPass(this,props)}createComputePipeline(props){throw new Error("ComputePipeline not supported in WebGL")}beginComputePass(props){throw new Error("ComputePass not supported in WebGL")}renderPass=null;createCommandEncoder(props={}){return new WEBGLCommandEncoder(this,props)}submit(){this.renderPass?.end(),this.renderPass=null}readPixelsToArrayWebGL(source,options){return readPixelsToArray(source,options)}readPixelsToBufferWebGL(source,options){return function readPixelsToBuffer(source,options){const{target:target,sourceX:sourceX=0,sourceY:sourceY=0,sourceFormat:sourceFormat=6408,targetByteOffset:targetByteOffset=0}=options||{};let{sourceWidth:sourceWidth,sourceHeight:sourceHeight,sourceType:sourceType}=options||{};const{framebuffer:framebuffer,deleteFramebuffer:deleteFramebuffer}=getFramebuffer(source);sourceWidth=sourceWidth||framebuffer.width,sourceHeight=sourceHeight||framebuffer.height;const webglFramebuffer=framebuffer;sourceType=sourceType||5121;let webglBufferTarget=target;if(!webglBufferTarget){const byteLength=targetByteOffset+sourceWidth*sourceHeight*glFormatToComponents(sourceFormat)*function glTypeToBytes(type){switch(type){case 5121:return 1;case 33635:case 32819:case 32820:return 2;case 5126:return 4;default:return 0}}(sourceType);webglBufferTarget=webglFramebuffer.device.createBuffer({byteLength:byteLength})}const commandEncoder=source.device.createCommandEncoder();return commandEncoder.copyTextureToBuffer({sourceTexture:source,width:sourceWidth,height:sourceHeight,origin:[sourceX,sourceY],destinationBuffer:webglBufferTarget,byteOffset:targetByteOffset}),commandEncoder.destroy(),deleteFramebuffer&&framebuffer.destroy(),webglBufferTarget}(source,options)}setParametersWebGL(parameters){unified_parameter_api_setGLParameters(this.gl,parameters)}getParametersWebGL(parameters){return getGLParameters(this.gl,parameters)}withParametersWebGL(parameters,func){return with_parameters_withGLParameters(this.gl,parameters,func)}resetWebGL(){log.R.warn("WebGLDevice.resetWebGL is deprecated, use only for debugging")(),function resetGLParameters(gl){unified_parameter_api_setGLParameters(gl,GL_PARAMETER_DEFAULTS)}(this.gl)}_getDeviceSpecificTextureFormatCapabilities(capabilities){return function getTextureFormatCapabilitiesWebGL(gl,formatSupport,extensions){let supported=formatSupport.create;const webglFormatInfo=WEBGL_TEXTURE_FORMATS[formatSupport.format];return void 0===webglFormatInfo?.gl&&(supported=!1),webglFormatInfo?.x&&(supported=supported&&Boolean(webgl_extensions_getWebGLExtension(gl,webglFormatInfo.x,extensions))),{format:formatSupport.format,create:supported&&formatSupport.create,render:supported&&formatSupport.render,filter:supported&&formatSupport.filter,blend:supported&&formatSupport.blend,store:supported&&formatSupport.store}}(this.gl,capabilities,this._extensions)}loseDevice(){let deviceLossTriggered=!1;const ext=this.getExtension("WEBGL_lose_context").WEBGL_lose_context;return ext&&(deviceLossTriggered=!0,ext.loseContext()),this._resolveContextLost?.({reason:"destroyed",message:"Application triggered context loss"}),deviceLossTriggered}pushState(){WebGLStateTracker.get(this.gl).push()}popState(){WebGLStateTracker.get(this.gl).pop()}setSpectorMetadata(handle,props){handle.__SPECTOR_Metadata=props}getGLKey(value,options){const number=Number(value);for(const key in this.gl)if(this.gl[key]===number)return`GL.${key}`;return options?.emptyIfUnknown?"":String(value)}getGLKeys(glParameters){const opts={emptyIfUnknown:!0};return Object.entries(glParameters).reduce(((keys,[key,value])=>(keys[`${key}:${this.getGLKey(key,opts)}`]=`${value}:${this.getGLKey(value,opts)}`,keys)),{})}_constants;setConstantAttributeWebGL(location,constant){const maxVertexAttributes=this.limits.maxVertexAttributes;this._constants=this._constants||new Array(maxVertexAttributes).fill(null);const currentConstant=this._constants[location];switch(currentConstant&&function webgl_device_compareConstantArrayValues(v1,v2){if(!v1||!v2||v1.length!==v2.length||v1.constructor!==v2.constructor)return!1;for(let i=0;i<v1.length;++i)if(v1[i]!==v2[i])return!1;return!0}(currentConstant,constant)&&log.R.info(1,`setConstantAttributeWebGL(${location}) could have been skipped, value unchanged`)(),this._constants[location]=constant,constant.constructor){case Float32Array:!function setConstantFloatArray(device,location,array){switch(array.length){case 1:device.gl.vertexAttrib1fv(location,array);break;case 2:device.gl.vertexAttrib2fv(location,array);break;case 3:device.gl.vertexAttrib3fv(location,array);break;case 4:device.gl.vertexAttrib4fv(location,array)}}(this,location,constant);break;case Int32Array:!function setConstantIntArray(device,location,array){device.gl.vertexAttribI4iv(location,array)}(this,location,constant);break;case Uint32Array:!function setConstantUintArray(device,location,array){device.gl.vertexAttribI4uiv(location,array)}(this,location,constant);break;default:throw new Error("constant")}}getExtension(name){return webgl_extensions_getWebGLExtension(this.gl,name,this._extensions),this._extensions}}},"./node_modules/@luma.gl/webgl/dist/context/debug/spector.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{_G:function(){return loadSpectorJS},ic:function(){return DEFAULT_SPECTOR_PROPS},k2:function(){return initializeSpectorJS}});var _luma_gl_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/log.js"),_utils_load_script_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@luma.gl/webgl/dist/utils/load-script.js");const LOG_LEVEL=1;let spector=null,initialized=!1;const DEFAULT_SPECTOR_PROPS={debugSpectorJS:_luma_gl_core__WEBPACK_IMPORTED_MODULE_0__.R.get("debug-spectorjs"),debugSpectorJSUrl:"https://cdn.jsdelivr.net/npm/spectorjs@0.9.30/dist/spector.bundle.js",gl:void 0};async function loadSpectorJS(props){if(!globalThis.SPECTOR)try{await(0,_utils_load_script_js__WEBPACK_IMPORTED_MODULE_1__.k)(props.debugSpectorJSUrl||DEFAULT_SPECTOR_PROPS.debugSpectorJSUrl)}catch(error){_luma_gl_core__WEBPACK_IMPORTED_MODULE_0__.R.warn(String(error))}}function initializeSpectorJS(props){if(!(props={...DEFAULT_SPECTOR_PROPS,...props}).debugSpectorJS)return null;if(!spector&&globalThis.SPECTOR&&!globalThis.luma?.spector){_luma_gl_core__WEBPACK_IMPORTED_MODULE_0__.R.probe(LOG_LEVEL,"SPECTOR found and initialized. Start with `luma.spector.displayUI()`")();const{Spector:SpectorJS}=globalThis.SPECTOR;spector=new SpectorJS,globalThis.luma&&(globalThis.luma.spector=spector)}if(!spector)return null;if(initialized||(initialized=!0,spector.spyCanvases(),spector?.onCaptureStarted.add((capture=>_luma_gl_core__WEBPACK_IMPORTED_MODULE_0__.R.info("Spector capture started:",capture)())),spector?.onCapture.add((capture=>{_luma_gl_core__WEBPACK_IMPORTED_MODULE_0__.R.info("Spector capture complete:",capture)(),spector?.getResultUI(),spector?.resultView.display(),spector?.resultView.addCapture(capture)}))),props.gl){const gl=props.gl,device=gl.device;spector?.startCapture(props.gl,500),gl.device=device,new Promise((resolve=>setTimeout(resolve,2e3))).then((_=>{_luma_gl_core__WEBPACK_IMPORTED_MODULE_0__.R.info("Spector capture stopped after 2 seconds")(),spector?.stopCapture()}))}return spector}},"./node_modules/@luma.gl/webgl/dist/context/debug/webgl-developer-tools.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{$:function(){return loadWebGLDeveloperTools},l:function(){return makeDebugContext}});var _luma_gl_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/log.js"),_luma_gl_constants__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@luma.gl/constants/dist/webgl-constants.js"),_probe_gl_env__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@probe.gl/env/dist/lib/is-browser.js"),_utils_load_script_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@luma.gl/webgl/dist/utils/load-script.js");const WEBGL_DEBUG_CDN_URL="https://unpkg.com/webgl-debug@2.0.1/index.js";function getWebGLContextData(gl){return gl.luma=gl.luma||{},gl.luma}async function loadWebGLDeveloperTools(){(0,_probe_gl_env__WEBPACK_IMPORTED_MODULE_0__.B)()&&!globalThis.WebGLDebugUtils&&(globalThis.global=globalThis.global||globalThis,globalThis.global.module={},await(0,_utils_load_script_js__WEBPACK_IMPORTED_MODULE_1__.k)(WEBGL_DEBUG_CDN_URL))}function makeDebugContext(gl,props={}){return props.debugWebGL||props.traceWebGL?function getDebugContext(gl,props){if(!globalThis.WebGLDebugUtils)return _luma_gl_core__WEBPACK_IMPORTED_MODULE_2__.R.warn("webgl-debug not loaded")(),gl;const data=getWebGLContextData(gl);if(data.debugContext)return data.debugContext;globalThis.WebGLDebugUtils.init({..._luma_gl_constants__WEBPACK_IMPORTED_MODULE_3__.GL,...gl});const glDebug=globalThis.WebGLDebugUtils.makeDebugContext(gl,onGLError.bind(null,props),onValidateGLFunc.bind(null,props));for(const key in _luma_gl_constants__WEBPACK_IMPORTED_MODULE_3__.GL)key in glDebug||"number"!=typeof _luma_gl_constants__WEBPACK_IMPORTED_MODULE_3__.GL[key]||(glDebug[key]=_luma_gl_constants__WEBPACK_IMPORTED_MODULE_3__.GL[key]);class WebGLDebugContext{}Object.setPrototypeOf(glDebug,Object.getPrototypeOf(gl)),Object.setPrototypeOf(WebGLDebugContext,glDebug);const debugContext=Object.create(WebGLDebugContext);return data.realContext=gl,data.debugContext=debugContext,debugContext.debug=!0,debugContext}(gl,props):function getRealContext(gl){const data=getWebGLContextData(gl);return data.realContext?data.realContext:gl}(gl)}function getFunctionString(functionName,functionArgs){functionArgs=Array.from(functionArgs).map((arg=>void 0===arg?"undefined":arg));let args=globalThis.WebGLDebugUtils.glFunctionArgsToString(functionName,functionArgs);return args=`${args.slice(0,100)}${args.length>100?"...":""}`,`gl.${functionName}(${args})`}function onGLError(props,err,functionName,args){args=Array.from(args).map((arg=>void 0===arg?"undefined":arg));const message=`${globalThis.WebGLDebugUtils.glEnumToString(err)} in gl.${functionName}(${globalThis.WebGLDebugUtils.glFunctionArgsToString(functionName,args)})`;_luma_gl_core__WEBPACK_IMPORTED_MODULE_2__.R.error(message)()}function onValidateGLFunc(props,functionName,functionArgs){let functionString="";_luma_gl_core__WEBPACK_IMPORTED_MODULE_2__.R.level>=1&&(functionString=getFunctionString(functionName,functionArgs),props.traceWebGL&&_luma_gl_core__WEBPACK_IMPORTED_MODULE_2__.R.log(1,functionString)());for(const arg of functionArgs)void 0===arg&&(functionString=functionString||getFunctionString(functionName,functionArgs))}},"./node_modules/@luma.gl/webgl/dist/utils/load-script.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){async function loadScript(scriptUrl,scriptId){const head=document.getElementsByTagName("head")[0];if(!head)throw new Error("loadScript");const script=document.createElement("script");return script.setAttribute("type","text/javascript"),script.setAttribute("src",scriptUrl),scriptId&&(script.id=scriptId),new Promise(((resolve,reject)=>{script.onload=resolve,script.onerror=error=>reject(new Error(`Unable to load script '${scriptUrl}': ${error}`)),head.appendChild(script)}))}__webpack_require__.d(__webpack_exports__,{k:function(){return loadScript}})},"./node_modules/@math.gl/core/dist/classes/base/math-array.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{a:function(){return MathArray}});var _lib_common_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js");class MathArray extends Array{clone(){return(new this.constructor).copy(this)}fromArray(array,offset=0){for(let i=0;i<this.ELEMENTS;++i)this[i]=array[i+offset];return this.check()}toArray(targetArray=[],offset=0){for(let i=0;i<this.ELEMENTS;++i)targetArray[offset+i]=this[i];return targetArray}toObject(targetObject){return targetObject}from(arrayOrObject){return Array.isArray(arrayOrObject)?this.copy(arrayOrObject):this.fromObject(arrayOrObject)}to(arrayOrObject){return arrayOrObject===this?this:(0,_lib_common_js__WEBPACK_IMPORTED_MODULE_0__.cy)(arrayOrObject)?this.toArray(arrayOrObject):this.toObject(arrayOrObject)}toTarget(target){return target?this.to(target):this}toFloat32Array(){return new Float32Array(this)}toString(){return this.formatString(_lib_common_js__WEBPACK_IMPORTED_MODULE_0__.$W)}formatString(opts){let string="";for(let i=0;i<this.ELEMENTS;++i)string+=(i>0?", ":"")+(0,_lib_common_js__WEBPACK_IMPORTED_MODULE_0__.Fl)(this[i],opts);return`${opts.printTypes?this.constructor.name:""}[${string}]`}equals(array){if(!array||this.length!==array.length)return!1;for(let i=0;i<this.ELEMENTS;++i)if(!(0,_lib_common_js__WEBPACK_IMPORTED_MODULE_0__.aI)(this[i],array[i]))return!1;return!0}exactEquals(array){if(!array||this.length!==array.length)return!1;for(let i=0;i<this.ELEMENTS;++i)if(this[i]!==array[i])return!1;return!0}negate(){for(let i=0;i<this.ELEMENTS;++i)this[i]=-this[i];return this.check()}lerp(a,b,t){if(void 0===t)return this.lerp(this,a,b);for(let i=0;i<this.ELEMENTS;++i){const ai=a[i],endValue="number"==typeof b?b:b[i];this[i]=ai+t*(endValue-ai)}return this.check()}min(vector){for(let i=0;i<this.ELEMENTS;++i)this[i]=Math.min(vector[i],this[i]);return this.check()}max(vector){for(let i=0;i<this.ELEMENTS;++i)this[i]=Math.max(vector[i],this[i]);return this.check()}clamp(minVector,maxVector){for(let i=0;i<this.ELEMENTS;++i)this[i]=Math.min(Math.max(this[i],minVector[i]),maxVector[i]);return this.check()}add(...vectors){for(const vector of vectors)for(let i=0;i<this.ELEMENTS;++i)this[i]+=vector[i];return this.check()}subtract(...vectors){for(const vector of vectors)for(let i=0;i<this.ELEMENTS;++i)this[i]-=vector[i];return this.check()}scale(scale){if("number"==typeof scale)for(let i=0;i<this.ELEMENTS;++i)this[i]*=scale;else for(let i=0;i<this.ELEMENTS&&i<scale.length;++i)this[i]*=scale[i];return this.check()}multiplyByScalar(scalar){for(let i=0;i<this.ELEMENTS;++i)this[i]*=scalar;return this.check()}check(){if(_lib_common_js__WEBPACK_IMPORTED_MODULE_0__.$W.debug&&!this.validate())throw new Error(`math.gl: ${this.constructor.name} some fields set to invalid numbers'`);return this}validate(){let valid=this.length===this.ELEMENTS;for(let i=0;i<this.ELEMENTS;++i)valid=valid&&Number.isFinite(this[i]);return valid}sub(a){return this.subtract(a)}setScalar(a){for(let i=0;i<this.ELEMENTS;++i)this[i]=a;return this.check()}addScalar(a){for(let i=0;i<this.ELEMENTS;++i)this[i]+=a;return this.check()}subScalar(a){return this.addScalar(-a)}multiplyScalar(scalar){for(let i=0;i<this.ELEMENTS;++i)this[i]*=scalar;return this.check()}divideScalar(a){return this.multiplyByScalar(1/a)}clampScalar(min,max){for(let i=0;i<this.ELEMENTS;++i)this[i]=Math.min(Math.max(this[i],min),max);return this.check()}get elements(){return this}}},"./node_modules/@math.gl/core/dist/classes/base/matrix.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{u:function(){return Matrix}});var _math_array_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/classes/base/math-array.js"),_lib_validators_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/validators.js"),_lib_common_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js");class Matrix extends _math_array_js__WEBPACK_IMPORTED_MODULE_0__.a{toString(){let string="[";if(_lib_common_js__WEBPACK_IMPORTED_MODULE_1__.$W.printRowMajor){string+="row-major:";for(let row=0;row<this.RANK;++row)for(let col=0;col<this.RANK;++col)string+=` ${this[col*this.RANK+row]}`}else{string+="column-major:";for(let i=0;i<this.ELEMENTS;++i)string+=` ${this[i]}`}return string+="]",string}getElementIndex(row,col){return col*this.RANK+row}getElement(row,col){return this[col*this.RANK+row]}setElement(row,col,value){return this[col*this.RANK+row]=(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_2__.ws)(value),this}getColumn(columnIndex,result=new Array(this.RANK).fill(-0)){const firstIndex=columnIndex*this.RANK;for(let i=0;i<this.RANK;++i)result[i]=this[firstIndex+i];return result}setColumn(columnIndex,columnVector){const firstIndex=columnIndex*this.RANK;for(let i=0;i<this.RANK;++i)this[firstIndex+i]=columnVector[i];return this}}},"./node_modules/@math.gl/core/dist/classes/base/vector.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{M:function(){return Vector}});var _math_array_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/classes/base/math-array.js"),_lib_validators_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/validators.js"),_lib_assert_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/assert.js");class Vector extends _math_array_js__WEBPACK_IMPORTED_MODULE_0__.a{get x(){return this[0]}set x(value){this[0]=(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_1__.ws)(value)}get y(){return this[1]}set y(value){this[1]=(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_1__.ws)(value)}len(){return Math.sqrt(this.lengthSquared())}magnitude(){return this.len()}lengthSquared(){let length=0;for(let i=0;i<this.ELEMENTS;++i)length+=this[i]*this[i];return length}magnitudeSquared(){return this.lengthSquared()}distance(mathArray){return Math.sqrt(this.distanceSquared(mathArray))}distanceSquared(mathArray){let length=0;for(let i=0;i<this.ELEMENTS;++i){const dist=this[i]-mathArray[i];length+=dist*dist}return(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_1__.ws)(length)}dot(mathArray){let product=0;for(let i=0;i<this.ELEMENTS;++i)product+=this[i]*mathArray[i];return(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_1__.ws)(product)}normalize(){const length=this.magnitude();if(0!==length)for(let i=0;i<this.ELEMENTS;++i)this[i]/=length;return this.check()}multiply(...vectors){for(const vector of vectors)for(let i=0;i<this.ELEMENTS;++i)this[i]*=vector[i];return this.check()}divide(...vectors){for(const vector of vectors)for(let i=0;i<this.ELEMENTS;++i)this[i]/=vector[i];return this.check()}lengthSq(){return this.lengthSquared()}distanceTo(vector){return this.distance(vector)}distanceToSquared(vector){return this.distanceSquared(vector)}getComponent(i){return(0,_lib_assert_js__WEBPACK_IMPORTED_MODULE_2__.v)(i>=0&&i<this.ELEMENTS,"index is out of range"),(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_1__.ws)(this[i])}setComponent(i,value){return(0,_lib_assert_js__WEBPACK_IMPORTED_MODULE_2__.v)(i>=0&&i<this.ELEMENTS,"index is out of range"),this[i]=value,this.check()}addVectors(a,b){return this.copy(a).add(b)}subVectors(a,b){return this.copy(a).subtract(b)}multiplyVectors(a,b){return this.copy(a).multiply(b)}addScaledVector(a,b){return this.add(new this.constructor(a).multiplyScalar(b))}}},"./node_modules/@math.gl/core/dist/classes/matrix4.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{k:function(){return Matrix4}});var INDICES,_base_matrix_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/classes/base/matrix.js"),_lib_validators_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/validators.js"),_lib_gl_matrix_extras_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/gl-matrix-extras.js"),_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/mat4.js"),_gl_matrix_vec2_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec2.js"),_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec3.js"),_gl_matrix_vec4_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec4.js");!function(INDICES){INDICES[INDICES.COL0ROW0=0]="COL0ROW0",INDICES[INDICES.COL0ROW1=1]="COL0ROW1",INDICES[INDICES.COL0ROW2=2]="COL0ROW2",INDICES[INDICES.COL0ROW3=3]="COL0ROW3",INDICES[INDICES.COL1ROW0=4]="COL1ROW0",INDICES[INDICES.COL1ROW1=5]="COL1ROW1",INDICES[INDICES.COL1ROW2=6]="COL1ROW2",INDICES[INDICES.COL1ROW3=7]="COL1ROW3",INDICES[INDICES.COL2ROW0=8]="COL2ROW0",INDICES[INDICES.COL2ROW1=9]="COL2ROW1",INDICES[INDICES.COL2ROW2=10]="COL2ROW2",INDICES[INDICES.COL2ROW3=11]="COL2ROW3",INDICES[INDICES.COL3ROW0=12]="COL3ROW0",INDICES[INDICES.COL3ROW1=13]="COL3ROW1",INDICES[INDICES.COL3ROW2=14]="COL3ROW2",INDICES[INDICES.COL3ROW3=15]="COL3ROW3"}(INDICES||(INDICES={}));const DEFAULT_FOVY=45*Math.PI/180,DEFAULT_ASPECT=1,DEFAULT_NEAR=.1,DEFAULT_FAR=500,IDENTITY_MATRIX=Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);class Matrix4 extends _base_matrix_js__WEBPACK_IMPORTED_MODULE_0__.u{static get IDENTITY(){return function getIdentityMatrix(){IDENTITY||(IDENTITY=new Matrix4,Object.freeze(IDENTITY));return IDENTITY}()}static get ZERO(){return function getZeroMatrix(){ZERO||(ZERO=new Matrix4([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Object.freeze(ZERO));return ZERO}()}get ELEMENTS(){return 16}get RANK(){return 4}get INDICES(){return INDICES}constructor(array){super(-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0),1===arguments.length&&Array.isArray(array)?this.copy(array):this.identity()}copy(array){return this[0]=array[0],this[1]=array[1],this[2]=array[2],this[3]=array[3],this[4]=array[4],this[5]=array[5],this[6]=array[6],this[7]=array[7],this[8]=array[8],this[9]=array[9],this[10]=array[10],this[11]=array[11],this[12]=array[12],this[13]=array[13],this[14]=array[14],this[15]=array[15],this.check()}set(m00,m10,m20,m30,m01,m11,m21,m31,m02,m12,m22,m32,m03,m13,m23,m33){return this[0]=m00,this[1]=m10,this[2]=m20,this[3]=m30,this[4]=m01,this[5]=m11,this[6]=m21,this[7]=m31,this[8]=m02,this[9]=m12,this[10]=m22,this[11]=m32,this[12]=m03,this[13]=m13,this[14]=m23,this[15]=m33,this.check()}setRowMajor(m00,m01,m02,m03,m10,m11,m12,m13,m20,m21,m22,m23,m30,m31,m32,m33){return this[0]=m00,this[1]=m10,this[2]=m20,this[3]=m30,this[4]=m01,this[5]=m11,this[6]=m21,this[7]=m31,this[8]=m02,this[9]=m12,this[10]=m22,this[11]=m32,this[12]=m03,this[13]=m13,this[14]=m23,this[15]=m33,this.check()}toRowMajor(result){return result[0]=this[0],result[1]=this[4],result[2]=this[8],result[3]=this[12],result[4]=this[1],result[5]=this[5],result[6]=this[9],result[7]=this[13],result[8]=this[2],result[9]=this[6],result[10]=this[10],result[11]=this[14],result[12]=this[3],result[13]=this[7],result[14]=this[11],result[15]=this[15],result}identity(){return this.copy(IDENTITY_MATRIX)}fromObject(object){return this.check()}fromQuaternion(quaternion){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.I0)(this,quaternion),this.check()}frustum(view){const{left:left,right:right,bottom:bottom,top:top,near:near=DEFAULT_NEAR,far:far=DEFAULT_FAR}=view;return far===1/0?function computeInfinitePerspectiveOffCenter(result,left,right,bottom,top,near){const column0Row0=2*near/(right-left),column1Row1=2*near/(top-bottom),column2Row0=(right+left)/(right-left),column2Row1=(top+bottom)/(top-bottom),column2Row2=-1,column2Row3=-1,column3Row2=-2*near;return result[0]=column0Row0,result[1]=0,result[2]=0,result[3]=0,result[4]=0,result[5]=column1Row1,result[6]=0,result[7]=0,result[8]=column2Row0,result[9]=column2Row1,result[10]=column2Row2,result[11]=column2Row3,result[12]=0,result[13]=0,result[14]=column3Row2,result[15]=0,result}(this,left,right,bottom,top,near):(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.$h)(this,left,right,bottom,top,near,far),this.check()}lookAt(view){const{eye:eye,center:center=[0,0,0],up:up=[0,1,0]}=view;return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.t5)(this,eye,center,up),this.check()}ortho(view){const{left:left,right:right,bottom:bottom,top:top,near:near=DEFAULT_NEAR,far:far=DEFAULT_FAR}=view;return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.v3)(this,left,right,bottom,top,near,far),this.check()}orthographic(view){const{fovy:fovy=DEFAULT_FOVY,aspect:aspect=DEFAULT_ASPECT,focalDistance:focalDistance=1,near:near=DEFAULT_NEAR,far:far=DEFAULT_FAR}=view;checkRadians(fovy);const halfY=fovy/2,top=focalDistance*Math.tan(halfY),right=top*aspect;return this.ortho({left:-right,right:right,bottom:-top,top:top,near:near,far:far})}perspective(view){const{fovy:fovy=45*Math.PI/180,aspect:aspect=1,near:near=.1,far:far=500}=view;return checkRadians(fovy),(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.fN)(this,fovy,aspect,near,far),this.check()}determinant(){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.a4)(this)}getScale(result=[-0,-0,-0]){return result[0]=Math.sqrt(this[0]*this[0]+this[1]*this[1]+this[2]*this[2]),result[1]=Math.sqrt(this[4]*this[4]+this[5]*this[5]+this[6]*this[6]),result[2]=Math.sqrt(this[8]*this[8]+this[9]*this[9]+this[10]*this[10]),result}getTranslation(result=[-0,-0,-0]){return result[0]=this[12],result[1]=this[13],result[2]=this[14],result}getRotation(result,scaleResult){result=result||[-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0],scaleResult=scaleResult||[-0,-0,-0];const scale=this.getScale(scaleResult),inverseScale0=1/scale[0],inverseScale1=1/scale[1],inverseScale2=1/scale[2];return result[0]=this[0]*inverseScale0,result[1]=this[1]*inverseScale1,result[2]=this[2]*inverseScale2,result[3]=0,result[4]=this[4]*inverseScale0,result[5]=this[5]*inverseScale1,result[6]=this[6]*inverseScale2,result[7]=0,result[8]=this[8]*inverseScale0,result[9]=this[9]*inverseScale1,result[10]=this[10]*inverseScale2,result[11]=0,result[12]=0,result[13]=0,result[14]=0,result[15]=1,result}getRotationMatrix3(result,scaleResult){result=result||[-0,-0,-0,-0,-0,-0,-0,-0,-0],scaleResult=scaleResult||[-0,-0,-0];const scale=this.getScale(scaleResult),inverseScale0=1/scale[0],inverseScale1=1/scale[1],inverseScale2=1/scale[2];return result[0]=this[0]*inverseScale0,result[1]=this[1]*inverseScale1,result[2]=this[2]*inverseScale2,result[3]=this[4]*inverseScale0,result[4]=this[5]*inverseScale1,result[5]=this[6]*inverseScale2,result[6]=this[8]*inverseScale0,result[7]=this[9]*inverseScale1,result[8]=this[10]*inverseScale2,result}transpose(){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.mg)(this,this),this.check()}invert(){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.B8)(this,this),this.check()}multiplyLeft(a){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.lw)(this,a,this),this.check()}multiplyRight(a){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.lw)(this,this,a),this.check()}rotateX(radians){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.eL)(this,this,radians),this.check()}rotateY(radians){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.Z8)(this,this,radians),this.check()}rotateZ(radians){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.Qr)(this,this,radians),this.check()}rotateXYZ(angleXYZ){return this.rotateX(angleXYZ[0]).rotateY(angleXYZ[1]).rotateZ(angleXYZ[2])}rotateAxis(radians,axis){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.e$)(this,this,radians,axis),this.check()}scale(factor){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.hs)(this,this,Array.isArray(factor)?factor:[factor,factor,factor]),this.check()}translate(vector){return(0,_gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_1__.Tl)(this,this,vector),this.check()}transform(vector,result){return 4===vector.length?(result=(0,_gl_matrix_vec4_js__WEBPACK_IMPORTED_MODULE_2__.Z0)(result||[-0,-0,-0,-0],vector,this),(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_3__.qk)(result,4),result):this.transformAsPoint(vector,result)}transformAsPoint(vector,result){const{length:length}=vector;let out;switch(length){case 2:out=(0,_gl_matrix_vec2_js__WEBPACK_IMPORTED_MODULE_4__.Z0)(result||[-0,-0],vector,this);break;case 3:out=(0,_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_5__.Z0)(result||[-0,-0,-0],vector,this);break;default:throw new Error("Illegal vector")}return(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_3__.qk)(out,vector.length),out}transformAsVector(vector,result){let out;switch(vector.length){case 2:out=(0,_lib_gl_matrix_extras_js__WEBPACK_IMPORTED_MODULE_6__.B$)(result||[-0,-0],vector,this);break;case 3:out=(0,_lib_gl_matrix_extras_js__WEBPACK_IMPORTED_MODULE_6__.cL)(result||[-0,-0,-0],vector,this);break;default:throw new Error("Illegal vector")}return(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_3__.qk)(out,vector.length),out}transformPoint(vector,result){return this.transformAsPoint(vector,result)}transformVector(vector,result){return this.transformAsPoint(vector,result)}transformDirection(vector,result){return this.transformAsVector(vector,result)}makeRotationX(radians){return this.identity().rotateX(radians)}makeTranslation(x,y,z){return this.identity().translate([x,y,z])}}let ZERO,IDENTITY;function checkRadians(possiblyDegrees){if(possiblyDegrees>2*Math.PI)throw Error("expected radians")}},"./node_modules/@math.gl/core/dist/classes/vector3.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{P:function(){return Vector3}});var _base_vector_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/classes/base/vector.js"),_lib_common_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js"),_lib_validators_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/validators.js"),_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec3.js"),_lib_gl_matrix_extras_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/gl-matrix-extras.js");const ORIGIN=[0,0,0];let ZERO;class Vector3 extends _base_vector_js__WEBPACK_IMPORTED_MODULE_0__.M{static get ZERO(){return ZERO||(ZERO=new Vector3(0,0,0),Object.freeze(ZERO)),ZERO}constructor(x=0,y=0,z=0){super(-0,-0,-0),1===arguments.length&&(0,_lib_common_js__WEBPACK_IMPORTED_MODULE_1__.cy)(x)?this.copy(x):(_lib_common_js__WEBPACK_IMPORTED_MODULE_1__.$W.debug&&((0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_2__.ws)(x),(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_2__.ws)(y),(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_2__.ws)(z)),this[0]=x,this[1]=y,this[2]=z)}set(x,y,z){return this[0]=x,this[1]=y,this[2]=z,this.check()}copy(array){return this[0]=array[0],this[1]=array[1],this[2]=array[2],this.check()}fromObject(object){return _lib_common_js__WEBPACK_IMPORTED_MODULE_1__.$W.debug&&((0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_2__.ws)(object.x),(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_2__.ws)(object.y),(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_2__.ws)(object.z)),this[0]=object.x,this[1]=object.y,this[2]=object.z,this.check()}toObject(object){return object.x=this[0],object.y=this[1],object.z=this[2],object}get ELEMENTS(){return 3}get z(){return this[2]}set z(value){this[2]=(0,_lib_validators_js__WEBPACK_IMPORTED_MODULE_2__.ws)(value)}angle(vector){return(0,_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_3__.g7)(this,vector)}cross(vector){return(0,_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_3__.$A)(this,this,vector),this.check()}rotateX({radians:radians,origin:origin=ORIGIN}){return(0,_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_3__.eL)(this,this,origin,radians),this.check()}rotateY({radians:radians,origin:origin=ORIGIN}){return(0,_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_3__.Z8)(this,this,origin,radians),this.check()}rotateZ({radians:radians,origin:origin=ORIGIN}){return(0,_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_3__.x6)(this,this,origin,radians),this.check()}transform(matrix4){return this.transformAsPoint(matrix4)}transformAsPoint(matrix4){return(0,_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_3__.Z0)(this,this,matrix4),this.check()}transformAsVector(matrix4){return(0,_lib_gl_matrix_extras_js__WEBPACK_IMPORTED_MODULE_4__.cL)(this,this,matrix4),this.check()}transformByMatrix3(matrix3){return(0,_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_3__.ei)(this,this,matrix3),this.check()}transformByMatrix2(matrix2){return(0,_lib_gl_matrix_extras_js__WEBPACK_IMPORTED_MODULE_4__.J4)(this,this,matrix2),this.check()}transformByQuaternion(quaternion){return(0,_gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_3__.gL)(this,this,quaternion),this.check()}}},"./node_modules/@math.gl/core/dist/gl-matrix/common.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{p8:function(){return EPSILON},tb:function(){return ARRAY_TYPE}});const EPSILON=1e-6;let ARRAY_TYPE="undefined"!=typeof Float32Array?Float32Array:Array;Math.random;Math.PI},"./node_modules/@math.gl/core/dist/gl-matrix/mat4.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{$h:function(){return frustum},B8:function(){return invert},I0:function(){return fromQuat},IL:function(){return getScaling},Qr:function(){return rotateZ},Tl:function(){return translate},Z8:function(){return rotateY},a4:function(){return determinant},e$:function(){return rotate},eL:function(){return rotateX},fN:function(){return perspective},hs:function(){return scale},lw:function(){return multiply},mg:function(){return transpose},t5:function(){return lookAt},v3:function(){return ortho}});var _common_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/common.js");function transpose(out,a){if(out===a){const a01=a[1],a02=a[2],a03=a[3],a12=a[6],a13=a[7],a23=a[11];out[1]=a[4],out[2]=a[8],out[3]=a[12],out[4]=a01,out[6]=a[9],out[7]=a[13],out[8]=a02,out[9]=a12,out[11]=a[14],out[12]=a03,out[13]=a13,out[14]=a23}else out[0]=a[0],out[1]=a[4],out[2]=a[8],out[3]=a[12],out[4]=a[1],out[5]=a[5],out[6]=a[9],out[7]=a[13],out[8]=a[2],out[9]=a[6],out[10]=a[10],out[11]=a[14],out[12]=a[3],out[13]=a[7],out[14]=a[11],out[15]=a[15];return out}function invert(out,a){const a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],a30=a[12],a31=a[13],a32=a[14],a33=a[15],b00=a00*a11-a01*a10,b01=a00*a12-a02*a10,b02=a00*a13-a03*a10,b03=a01*a12-a02*a11,b04=a01*a13-a03*a11,b05=a02*a13-a03*a12,b06=a20*a31-a21*a30,b07=a20*a32-a22*a30,b08=a20*a33-a23*a30,b09=a21*a32-a22*a31,b10=a21*a33-a23*a31,b11=a22*a33-a23*a32;let det=b00*b11-b01*b10+b02*b09+b03*b08-b04*b07+b05*b06;return det?(det=1/det,out[0]=(a11*b11-a12*b10+a13*b09)*det,out[1]=(a02*b10-a01*b11-a03*b09)*det,out[2]=(a31*b05-a32*b04+a33*b03)*det,out[3]=(a22*b04-a21*b05-a23*b03)*det,out[4]=(a12*b08-a10*b11-a13*b07)*det,out[5]=(a00*b11-a02*b08+a03*b07)*det,out[6]=(a32*b02-a30*b05-a33*b01)*det,out[7]=(a20*b05-a22*b02+a23*b01)*det,out[8]=(a10*b10-a11*b08+a13*b06)*det,out[9]=(a01*b08-a00*b10-a03*b06)*det,out[10]=(a30*b04-a31*b02+a33*b00)*det,out[11]=(a21*b02-a20*b04-a23*b00)*det,out[12]=(a11*b07-a10*b09-a12*b06)*det,out[13]=(a00*b09-a01*b07+a02*b06)*det,out[14]=(a31*b01-a30*b03-a32*b00)*det,out[15]=(a20*b03-a21*b01+a22*b00)*det,out):null}function determinant(a){const a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],a30=a[12],a31=a[13],a32=a[14],b0=a00*a11-a01*a10,b1=a00*a12-a02*a10,b2=a01*a12-a02*a11,b3=a20*a31-a21*a30,b4=a20*a32-a22*a30,b5=a21*a32-a22*a31;return a13*(a00*b5-a01*b4+a02*b3)-a03*(a10*b5-a11*b4+a12*b3)+a[15]*(a20*b2-a21*b1+a22*b0)-a23*(a30*b2-a31*b1+a32*b0)}function multiply(out,a,b){const a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],a30=a[12],a31=a[13],a32=a[14],a33=a[15];let b0=b[0],b1=b[1],b2=b[2],b3=b[3];return out[0]=b0*a00+b1*a10+b2*a20+b3*a30,out[1]=b0*a01+b1*a11+b2*a21+b3*a31,out[2]=b0*a02+b1*a12+b2*a22+b3*a32,out[3]=b0*a03+b1*a13+b2*a23+b3*a33,b0=b[4],b1=b[5],b2=b[6],b3=b[7],out[4]=b0*a00+b1*a10+b2*a20+b3*a30,out[5]=b0*a01+b1*a11+b2*a21+b3*a31,out[6]=b0*a02+b1*a12+b2*a22+b3*a32,out[7]=b0*a03+b1*a13+b2*a23+b3*a33,b0=b[8],b1=b[9],b2=b[10],b3=b[11],out[8]=b0*a00+b1*a10+b2*a20+b3*a30,out[9]=b0*a01+b1*a11+b2*a21+b3*a31,out[10]=b0*a02+b1*a12+b2*a22+b3*a32,out[11]=b0*a03+b1*a13+b2*a23+b3*a33,b0=b[12],b1=b[13],b2=b[14],b3=b[15],out[12]=b0*a00+b1*a10+b2*a20+b3*a30,out[13]=b0*a01+b1*a11+b2*a21+b3*a31,out[14]=b0*a02+b1*a12+b2*a22+b3*a32,out[15]=b0*a03+b1*a13+b2*a23+b3*a33,out}function translate(out,a,v){const x=v[0],y=v[1],z=v[2];let a00,a01,a02,a03,a10,a11,a12,a13,a20,a21,a22,a23;return a===out?(out[12]=a[0]*x+a[4]*y+a[8]*z+a[12],out[13]=a[1]*x+a[5]*y+a[9]*z+a[13],out[14]=a[2]*x+a[6]*y+a[10]*z+a[14],out[15]=a[3]*x+a[7]*y+a[11]*z+a[15]):(a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],out[0]=a00,out[1]=a01,out[2]=a02,out[3]=a03,out[4]=a10,out[5]=a11,out[6]=a12,out[7]=a13,out[8]=a20,out[9]=a21,out[10]=a22,out[11]=a23,out[12]=a00*x+a10*y+a20*z+a[12],out[13]=a01*x+a11*y+a21*z+a[13],out[14]=a02*x+a12*y+a22*z+a[14],out[15]=a03*x+a13*y+a23*z+a[15]),out}function scale(out,a,v){const x=v[0],y=v[1],z=v[2];return out[0]=a[0]*x,out[1]=a[1]*x,out[2]=a[2]*x,out[3]=a[3]*x,out[4]=a[4]*y,out[5]=a[5]*y,out[6]=a[6]*y,out[7]=a[7]*y,out[8]=a[8]*z,out[9]=a[9]*z,out[10]=a[10]*z,out[11]=a[11]*z,out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15],out}function rotate(out,a,rad,axis){let c,s,t,a00,a01,a02,a03,a10,a11,a12,a13,a20,a21,a22,a23,b00,b01,b02,b10,b11,b12,b20,b21,b22,x=axis[0],y=axis[1],z=axis[2],len=Math.sqrt(x*x+y*y+z*z);return len<_common_js__WEBPACK_IMPORTED_MODULE_0__.p8?null:(len=1/len,x*=len,y*=len,z*=len,s=Math.sin(rad),c=Math.cos(rad),t=1-c,a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],b00=x*x*t+c,b01=y*x*t+z*s,b02=z*x*t-y*s,b10=x*y*t-z*s,b11=y*y*t+c,b12=z*y*t+x*s,b20=x*z*t+y*s,b21=y*z*t-x*s,b22=z*z*t+c,out[0]=a00*b00+a10*b01+a20*b02,out[1]=a01*b00+a11*b01+a21*b02,out[2]=a02*b00+a12*b01+a22*b02,out[3]=a03*b00+a13*b01+a23*b02,out[4]=a00*b10+a10*b11+a20*b12,out[5]=a01*b10+a11*b11+a21*b12,out[6]=a02*b10+a12*b11+a22*b12,out[7]=a03*b10+a13*b11+a23*b12,out[8]=a00*b20+a10*b21+a20*b22,out[9]=a01*b20+a11*b21+a21*b22,out[10]=a02*b20+a12*b21+a22*b22,out[11]=a03*b20+a13*b21+a23*b22,a!==out&&(out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15]),out)}function rotateX(out,a,rad){const s=Math.sin(rad),c=Math.cos(rad),a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11];return a!==out&&(out[0]=a[0],out[1]=a[1],out[2]=a[2],out[3]=a[3],out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15]),out[4]=a10*c+a20*s,out[5]=a11*c+a21*s,out[6]=a12*c+a22*s,out[7]=a13*c+a23*s,out[8]=a20*c-a10*s,out[9]=a21*c-a11*s,out[10]=a22*c-a12*s,out[11]=a23*c-a13*s,out}function rotateY(out,a,rad){const s=Math.sin(rad),c=Math.cos(rad),a00=a[0],a01=a[1],a02=a[2],a03=a[3],a20=a[8],a21=a[9],a22=a[10],a23=a[11];return a!==out&&(out[4]=a[4],out[5]=a[5],out[6]=a[6],out[7]=a[7],out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15]),out[0]=a00*c-a20*s,out[1]=a01*c-a21*s,out[2]=a02*c-a22*s,out[3]=a03*c-a23*s,out[8]=a00*s+a20*c,out[9]=a01*s+a21*c,out[10]=a02*s+a22*c,out[11]=a03*s+a23*c,out}function rotateZ(out,a,rad){const s=Math.sin(rad),c=Math.cos(rad),a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7];return a!==out&&(out[8]=a[8],out[9]=a[9],out[10]=a[10],out[11]=a[11],out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15]),out[0]=a00*c+a10*s,out[1]=a01*c+a11*s,out[2]=a02*c+a12*s,out[3]=a03*c+a13*s,out[4]=a10*c-a00*s,out[5]=a11*c-a01*s,out[6]=a12*c-a02*s,out[7]=a13*c-a03*s,out}function getScaling(out,mat){const m11=mat[0],m12=mat[1],m13=mat[2],m21=mat[4],m22=mat[5],m23=mat[6],m31=mat[8],m32=mat[9],m33=mat[10];return out[0]=Math.sqrt(m11*m11+m12*m12+m13*m13),out[1]=Math.sqrt(m21*m21+m22*m22+m23*m23),out[2]=Math.sqrt(m31*m31+m32*m32+m33*m33),out}function fromQuat(out,q){const x=q[0],y=q[1],z=q[2],w=q[3],x2=x+x,y2=y+y,z2=z+z,xx=x*x2,yx=y*x2,yy=y*y2,zx=z*x2,zy=z*y2,zz=z*z2,wx=w*x2,wy=w*y2,wz=w*z2;return out[0]=1-yy-zz,out[1]=yx+wz,out[2]=zx-wy,out[3]=0,out[4]=yx-wz,out[5]=1-xx-zz,out[6]=zy+wx,out[7]=0,out[8]=zx+wy,out[9]=zy-wx,out[10]=1-xx-yy,out[11]=0,out[12]=0,out[13]=0,out[14]=0,out[15]=1,out}function frustum(out,left,right,bottom,top,near,far){const rl=1/(right-left),tb=1/(top-bottom),nf=1/(near-far);return out[0]=2*near*rl,out[1]=0,out[2]=0,out[3]=0,out[4]=0,out[5]=2*near*tb,out[6]=0,out[7]=0,out[8]=(right+left)*rl,out[9]=(top+bottom)*tb,out[10]=(far+near)*nf,out[11]=-1,out[12]=0,out[13]=0,out[14]=far*near*2*nf,out[15]=0,out}const perspective=function perspectiveNO(out,fovy,aspect,near,far){const f=1/Math.tan(fovy/2);if(out[0]=f/aspect,out[1]=0,out[2]=0,out[3]=0,out[4]=0,out[5]=f,out[6]=0,out[7]=0,out[8]=0,out[9]=0,out[11]=-1,out[12]=0,out[13]=0,out[15]=0,null!=far&&far!==1/0){const nf=1/(near-far);out[10]=(far+near)*nf,out[14]=2*far*near*nf}else out[10]=-1,out[14]=-2*near;return out};const ortho=function orthoNO(out,left,right,bottom,top,near,far){const lr=1/(left-right),bt=1/(bottom-top),nf=1/(near-far);return out[0]=-2*lr,out[1]=0,out[2]=0,out[3]=0,out[4]=0,out[5]=-2*bt,out[6]=0,out[7]=0,out[8]=0,out[9]=0,out[10]=2*nf,out[11]=0,out[12]=(left+right)*lr,out[13]=(top+bottom)*bt,out[14]=(far+near)*nf,out[15]=1,out};function lookAt(out,eye,center,up){let len,x0,x1,x2,y0,y1,y2,z0,z1,z2;const eyex=eye[0],eyey=eye[1],eyez=eye[2],upx=up[0],upy=up[1],upz=up[2],centerx=center[0],centery=center[1],centerz=center[2];return Math.abs(eyex-centerx)<_common_js__WEBPACK_IMPORTED_MODULE_0__.p8&&Math.abs(eyey-centery)<_common_js__WEBPACK_IMPORTED_MODULE_0__.p8&&Math.abs(eyez-centerz)<_common_js__WEBPACK_IMPORTED_MODULE_0__.p8?function identity(out){return out[0]=1,out[1]=0,out[2]=0,out[3]=0,out[4]=0,out[5]=1,out[6]=0,out[7]=0,out[8]=0,out[9]=0,out[10]=1,out[11]=0,out[12]=0,out[13]=0,out[14]=0,out[15]=1,out}(out):(z0=eyex-centerx,z1=eyey-centery,z2=eyez-centerz,len=1/Math.sqrt(z0*z0+z1*z1+z2*z2),z0*=len,z1*=len,z2*=len,x0=upy*z2-upz*z1,x1=upz*z0-upx*z2,x2=upx*z1-upy*z0,len=Math.sqrt(x0*x0+x1*x1+x2*x2),len?(len=1/len,x0*=len,x1*=len,x2*=len):(x0=0,x1=0,x2=0),y0=z1*x2-z2*x1,y1=z2*x0-z0*x2,y2=z0*x1-z1*x0,len=Math.sqrt(y0*y0+y1*y1+y2*y2),len?(len=1/len,y0*=len,y1*=len,y2*=len):(y0=0,y1=0,y2=0),out[0]=x0,out[1]=y0,out[2]=z0,out[3]=0,out[4]=x1,out[5]=y1,out[6]=z1,out[7]=0,out[8]=x2,out[9]=y2,out[10]=z2,out[11]=0,out[12]=-(x0*eyex+x1*eyey+x2*eyez),out[13]=-(y0*eyex+y1*eyey+y2*eyez),out[14]=-(z0*eyex+z1*eyey+z2*eyez),out[15]=1,out)}},"./node_modules/@math.gl/core/dist/gl-matrix/vec2.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Cc:function(){return lerp},WQ:function(){return add},Z0:function(){return transformMat4},ZF:function(){return transformMat2},ei:function(){return transformMat3},l0:function(){return transformMat2d},ze:function(){return negate}});var _common_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/common.js");function add(out,a,b){return out[0]=a[0]+b[0],out[1]=a[1]+b[1],out}function negate(out,a){return out[0]=-a[0],out[1]=-a[1],out}function lerp(out,a,b,t){const ax=a[0],ay=a[1];return out[0]=ax+t*(b[0]-ax),out[1]=ay+t*(b[1]-ay),out}function transformMat2(out,a,m){const x=a[0],y=a[1];return out[0]=m[0]*x+m[2]*y,out[1]=m[1]*x+m[3]*y,out}function transformMat2d(out,a,m){const x=a[0],y=a[1];return out[0]=m[0]*x+m[2]*y+m[4],out[1]=m[1]*x+m[3]*y+m[5],out}function transformMat3(out,a,m){const x=a[0],y=a[1];return out[0]=m[0]*x+m[3]*y+m[6],out[1]=m[1]*x+m[4]*y+m[7],out}function transformMat4(out,a,m){const x=a[0],y=a[1];return out[0]=m[0]*x+m[4]*y+m[12],out[1]=m[1]*x+m[5]*y+m[13],out}!function(){const vec=function create(){const out=new _common_js__WEBPACK_IMPORTED_MODULE_0__.tb(2);return _common_js__WEBPACK_IMPORTED_MODULE_0__.tb!=Float32Array&&(out[0]=0,out[1]=0),out}()}()},"./node_modules/@math.gl/core/dist/gl-matrix/vec3.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{$A:function(){return cross},Bw:function(){return length},Cc:function(){return lerp},Il:function(){return len},Om:function(){return dot},S8:function(){return normalize},Z0:function(){return transformMat4},Z8:function(){return rotateY},eL:function(){return rotateX},ei:function(){return transformMat3},fA:function(){return fromValues},g7:function(){return angle},gL:function(){return transformQuat},jb:function(){return sub},uE:function(){return sqrLen},vt:function(){return create},x6:function(){return rotateZ},xg:function(){return dist},ze:function(){return negate}});var _common_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/common.js");function create(){const out=new _common_js__WEBPACK_IMPORTED_MODULE_0__.tb(3);return _common_js__WEBPACK_IMPORTED_MODULE_0__.tb!=Float32Array&&(out[0]=0,out[1]=0,out[2]=0),out}function length(a){const x=a[0],y=a[1],z=a[2];return Math.sqrt(x*x+y*y+z*z)}function fromValues(x,y,z){const out=new _common_js__WEBPACK_IMPORTED_MODULE_0__.tb(3);return out[0]=x,out[1]=y,out[2]=z,out}function negate(out,a){return out[0]=-a[0],out[1]=-a[1],out[2]=-a[2],out}function normalize(out,a){const x=a[0],y=a[1],z=a[2];let len=x*x+y*y+z*z;return len>0&&(len=1/Math.sqrt(len)),out[0]=a[0]*len,out[1]=a[1]*len,out[2]=a[2]*len,out}function dot(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]}function cross(out,a,b){const ax=a[0],ay=a[1],az=a[2],bx=b[0],by=b[1],bz=b[2];return out[0]=ay*bz-az*by,out[1]=az*bx-ax*bz,out[2]=ax*by-ay*bx,out}function lerp(out,a,b,t){const ax=a[0],ay=a[1],az=a[2];return out[0]=ax+t*(b[0]-ax),out[1]=ay+t*(b[1]-ay),out[2]=az+t*(b[2]-az),out}function transformMat4(out,a,m){const x=a[0],y=a[1],z=a[2];let w=m[3]*x+m[7]*y+m[11]*z+m[15];return w=w||1,out[0]=(m[0]*x+m[4]*y+m[8]*z+m[12])/w,out[1]=(m[1]*x+m[5]*y+m[9]*z+m[13])/w,out[2]=(m[2]*x+m[6]*y+m[10]*z+m[14])/w,out}function transformMat3(out,a,m){const x=a[0],y=a[1],z=a[2];return out[0]=x*m[0]+y*m[3]+z*m[6],out[1]=x*m[1]+y*m[4]+z*m[7],out[2]=x*m[2]+y*m[5]+z*m[8],out}function transformQuat(out,a,q){const qx=q[0],qy=q[1],qz=q[2],qw=q[3],x=a[0],y=a[1],z=a[2];let uvx=qy*z-qz*y,uvy=qz*x-qx*z,uvz=qx*y-qy*x,uuvx=qy*uvz-qz*uvy,uuvy=qz*uvx-qx*uvz,uuvz=qx*uvy-qy*uvx;const w2=2*qw;return uvx*=w2,uvy*=w2,uvz*=w2,uuvx*=2,uuvy*=2,uuvz*=2,out[0]=x+uvx+uuvx,out[1]=y+uvy+uuvy,out[2]=z+uvz+uuvz,out}function rotateX(out,a,b,rad){const p=[],r=[];return p[0]=a[0]-b[0],p[1]=a[1]-b[1],p[2]=a[2]-b[2],r[0]=p[0],r[1]=p[1]*Math.cos(rad)-p[2]*Math.sin(rad),r[2]=p[1]*Math.sin(rad)+p[2]*Math.cos(rad),out[0]=r[0]+b[0],out[1]=r[1]+b[1],out[2]=r[2]+b[2],out}function rotateY(out,a,b,rad){const p=[],r=[];return p[0]=a[0]-b[0],p[1]=a[1]-b[1],p[2]=a[2]-b[2],r[0]=p[2]*Math.sin(rad)+p[0]*Math.cos(rad),r[1]=p[1],r[2]=p[2]*Math.cos(rad)-p[0]*Math.sin(rad),out[0]=r[0]+b[0],out[1]=r[1]+b[1],out[2]=r[2]+b[2],out}function rotateZ(out,a,b,rad){const p=[],r=[];return p[0]=a[0]-b[0],p[1]=a[1]-b[1],p[2]=a[2]-b[2],r[0]=p[0]*Math.cos(rad)-p[1]*Math.sin(rad),r[1]=p[0]*Math.sin(rad)+p[1]*Math.cos(rad),r[2]=p[2],out[0]=r[0]+b[0],out[1]=r[1]+b[1],out[2]=r[2]+b[2],out}function angle(a,b){const ax=a[0],ay=a[1],az=a[2],bx=b[0],by=b[1],bz=b[2],mag=Math.sqrt((ax*ax+ay*ay+az*az)*(bx*bx+by*by+bz*bz)),cosine=mag&&dot(a,b)/mag;return Math.acos(Math.min(Math.max(cosine,-1),1))}const sub=function subtract(out,a,b){return out[0]=a[0]-b[0],out[1]=a[1]-b[1],out[2]=a[2]-b[2],out},dist=function distance(a,b){const x=b[0]-a[0],y=b[1]-a[1],z=b[2]-a[2];return Math.sqrt(x*x+y*y+z*z)},len=length,sqrLen=function squaredLength(a){const x=a[0],y=a[1],z=a[2];return x*x+y*y+z*z};!function(){const vec=create()}()},"./node_modules/@math.gl/core/dist/gl-matrix/vec4.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Bw:function(){return length},C:function(){return copy},Cc:function(){return lerp},Om:function(){return dot},S8:function(){return normalize},WQ:function(){return add},Z0:function(){return transformMat4},fA:function(){return fromValues},gL:function(){return transformQuat},hZ:function(){return set},hs:function(){return scale},m3:function(){return squaredLength},o8:function(){return clone},t2:function(){return exactEquals}});var _common_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/common.js");function clone(a){const out=new _common_js__WEBPACK_IMPORTED_MODULE_0__.tb(4);return out[0]=a[0],out[1]=a[1],out[2]=a[2],out[3]=a[3],out}function fromValues(x,y,z,w){const out=new _common_js__WEBPACK_IMPORTED_MODULE_0__.tb(4);return out[0]=x,out[1]=y,out[2]=z,out[3]=w,out}function copy(out,a){return out[0]=a[0],out[1]=a[1],out[2]=a[2],out[3]=a[3],out}function set(out,x,y,z,w){return out[0]=x,out[1]=y,out[2]=z,out[3]=w,out}function add(out,a,b){return out[0]=a[0]+b[0],out[1]=a[1]+b[1],out[2]=a[2]+b[2],out[3]=a[3]+b[3],out}function scale(out,a,b){return out[0]=a[0]*b,out[1]=a[1]*b,out[2]=a[2]*b,out[3]=a[3]*b,out}function length(a){const x=a[0],y=a[1],z=a[2],w=a[3];return Math.sqrt(x*x+y*y+z*z+w*w)}function squaredLength(a){const x=a[0],y=a[1],z=a[2],w=a[3];return x*x+y*y+z*z+w*w}function normalize(out,a){const x=a[0],y=a[1],z=a[2],w=a[3];let len=x*x+y*y+z*z+w*w;return len>0&&(len=1/Math.sqrt(len)),out[0]=x*len,out[1]=y*len,out[2]=z*len,out[3]=w*len,out}function dot(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]+a[3]*b[3]}function lerp(out,a,b,t){const ax=a[0],ay=a[1],az=a[2],aw=a[3];return out[0]=ax+t*(b[0]-ax),out[1]=ay+t*(b[1]-ay),out[2]=az+t*(b[2]-az),out[3]=aw+t*(b[3]-aw),out}function transformMat4(out,a,m){const x=a[0],y=a[1],z=a[2],w=a[3];return out[0]=m[0]*x+m[4]*y+m[8]*z+m[12]*w,out[1]=m[1]*x+m[5]*y+m[9]*z+m[13]*w,out[2]=m[2]*x+m[6]*y+m[10]*z+m[14]*w,out[3]=m[3]*x+m[7]*y+m[11]*z+m[15]*w,out}function transformQuat(out,a,q){const x=a[0],y=a[1],z=a[2],qx=q[0],qy=q[1],qz=q[2],qw=q[3],ix=qw*x+qy*z-qz*y,iy=qw*y+qz*x-qx*z,iz=qw*z+qx*y-qy*x,iw=-qx*x-qy*y-qz*z;return out[0]=ix*qw+iw*-qx+iy*-qz-iz*-qy,out[1]=iy*qw+iw*-qy+iz*-qx-ix*-qz,out[2]=iz*qw+iw*-qz+ix*-qy-iy*-qx,out[3]=a[3],out}function exactEquals(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]&&a[3]===b[3]}!function(){const vec=function create(){const out=new _common_js__WEBPACK_IMPORTED_MODULE_0__.tb(4);return _common_js__WEBPACK_IMPORTED_MODULE_0__.tb!=Float32Array&&(out[0]=0,out[1]=0,out[2]=0,out[3]=0),out}()}()},"./node_modules/@math.gl/core/dist/lib/assert.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function assert(condition,message){if(!condition)throw new Error(`math.gl assertion ${message}`)}__webpack_require__.d(__webpack_exports__,{v:function(){return assert}})},"./node_modules/@math.gl/core/dist/lib/common.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{$W:function(){return config},Cc:function(){return lerp},F2:function(){return radians},Fl:function(){return formatValue},aI:function(){return equals},cy:function(){return isArray},eh:function(){return toRadians},qE:function(){return clamp},uj:function(){return degrees},xW:function(){return toDegrees}});const RADIANS_TO_DEGREES=1/Math.PI*180,DEGREES_TO_RADIANS=1/180*Math.PI;globalThis.mathgl=globalThis.mathgl||{config:{EPSILON:1e-12,debug:!1,precision:4,printTypes:!1,printDegrees:!1,printRowMajor:!0,_cartographicRadians:!1}};const config=globalThis.mathgl.config;function formatValue(value,{precision:precision=config.precision}={}){return value=function round(value){return Math.round(value/config.EPSILON)*config.EPSILON}(value),`${parseFloat(value.toPrecision(precision))}`}function isArray(value){return Array.isArray(value)||ArrayBuffer.isView(value)&&!(value instanceof DataView)}function toRadians(degrees){return radians(degrees)}function toDegrees(radians){return degrees(radians)}function radians(degrees,result){return map(degrees,(degrees=>degrees*DEGREES_TO_RADIANS),result)}function degrees(radians,result){return map(radians,(radians=>radians*RADIANS_TO_DEGREES),result)}function clamp(value,min,max){return map(value,(value=>Math.max(min,Math.min(max,value))))}function lerp(a,b,t){return isArray(a)?a.map(((ai,i)=>lerp(ai,b[i],t))):t*b+(1-t)*a}function equals(a,b,epsilon){const oldEpsilon=config.EPSILON;epsilon&&(config.EPSILON=epsilon);try{if(a===b)return!0;if(isArray(a)&&isArray(b)){if(a.length!==b.length)return!1;for(let i=0;i<a.length;++i)if(!equals(a[i],b[i]))return!1;return!0}return a&&a.equals?a.equals(b):b&&b.equals?b.equals(a):"number"==typeof a&&"number"==typeof b&&Math.abs(a-b)<=config.EPSILON*Math.max(1,Math.abs(a),Math.abs(b))}finally{config.EPSILON=oldEpsilon}}function map(value,func,result){if(isArray(value)){const array=value;result=result||function duplicateArray(array){return array.clone?array.clone():new Array(array.length)}(array);for(let i=0;i<result.length&&i<array.length;++i){const val="number"==typeof value?value:value[i];result[i]=func(val,i,result)}return result}return func(value)}},"./node_modules/@math.gl/core/dist/lib/gl-matrix-extras.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function vec2_transformMat4AsVector(out,a,m){const x=a[0],y=a[1],w=m[3]*x+m[7]*y||1;return out[0]=(m[0]*x+m[4]*y)/w,out[1]=(m[1]*x+m[5]*y)/w,out}function vec3_transformMat4AsVector(out,a,m){const x=a[0],y=a[1],z=a[2],w=m[3]*x+m[7]*y+m[11]*z||1;return out[0]=(m[0]*x+m[4]*y+m[8]*z)/w,out[1]=(m[1]*x+m[5]*y+m[9]*z)/w,out[2]=(m[2]*x+m[6]*y+m[10]*z)/w,out}function vec3_transformMat2(out,a,m){const x=a[0],y=a[1];return out[0]=m[0]*x+m[2]*y,out[1]=m[1]*x+m[3]*y,out[2]=a[2],out}function vec4_transformMat2(out,a,m){const x=a[0],y=a[1];return out[0]=m[0]*x+m[2]*y,out[1]=m[1]*x+m[3]*y,out[2]=a[2],out[3]=a[3],out}function vec4_transformMat3(out,a,m){const x=a[0],y=a[1],z=a[2];return out[0]=m[0]*x+m[3]*y+m[6]*z,out[1]=m[1]*x+m[4]*y+m[7]*z,out[2]=m[2]*x+m[5]*y+m[8]*z,out[3]=a[3],out}__webpack_require__.d(__webpack_exports__,{B$:function(){return vec2_transformMat4AsVector},Cg:function(){return vec4_transformMat2},J4:function(){return vec3_transformMat2},cL:function(){return vec3_transformMat4AsVector},vE:function(){return vec4_transformMat3}})},"./node_modules/@math.gl/core/dist/lib/validators.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{qk:function(){return checkVector},ws:function(){return checkNumber}});var _common_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@math.gl/core/dist/lib/common.js");function checkNumber(value){if(!Number.isFinite(value))throw new Error(`Invalid number ${JSON.stringify(value)}`);return value}function checkVector(v,length,callerName=""){if(_common_js__WEBPACK_IMPORTED_MODULE_0__.$W.debug&&!function validateVector(v,length){if(v.length!==length)return!1;for(let i=0;i<v.length;++i)if(!Number.isFinite(v[i]))return!1;return!0}(v,length))throw new Error(`math.gl: ${callerName} some fields set to invalid numbers'`);return v}},"./node_modules/@math.gl/types/dist/is-array.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function isNumericArray(value){return function isTypedArray(value){return ArrayBuffer.isView(value)&&!(value instanceof DataView)}(value)||function isNumberArray(value){return!!Array.isArray(value)&&(0===value.length||"number"==typeof value[0])}(value)}__webpack_require__.d(__webpack_exports__,{H9:function(){return isNumericArray}})},"./node_modules/@math.gl/web-mercator/dist/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{aH:function(){return MAX_LATITUDE},dT:function(){return addMetersToLngLat},Os:function(){return web_mercator_utils_altitudeToFovy},Fe:function(){return fit_bounds_fitBounds},wZ:function(){return web_mercator_utils_fovyToAltitude},gW:function(){return get_bounds_getBounds},nI:function(){return web_mercator_utils_getDistanceScales},fO:function(){return getMeterZoom},om:function(){return getProjectionParameters},rY:function(){return web_mercator_utils_getViewMatrix},Gw:function(){return web_mercator_utils_lngLatToWorld},CK:function(){return normalizeViewportProps},xJ:function(){return web_mercator_utils_pixelsToWorld},mY:function(){return unitsPerMeter},iV:function(){return web_mercator_utils_worldToLngLat},VJ:function(){return web_mercator_utils_worldToPixels}});var vec4=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec4.js");function transformVector(matrix,vector){const result=vec4.Z0([],vector,matrix);return vec4.hs(result,result,1/result[3]),result}function mod(value,divisor){const modulus=value%divisor;return modulus<0?divisor+modulus:modulus}function clamp(x,min,max){return x<min?min:x>max?max:x}const log2=Math.log2||function ieLog2(x){return Math.log(x)*Math.LOG2E};var gl_matrix_mat4=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/mat4.js"),gl_matrix_vec3=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec3.js"),gl_matrix_vec2=__webpack_require__("./node_modules/@math.gl/core/dist/gl-matrix/vec2.js");function assert(condition,message){if(!condition)throw new Error(message||"@math.gl/web-mercator: assertion failed.")}const PI=Math.PI,PI_4=PI/4,DEGREES_TO_RADIANS=PI/180,RADIANS_TO_DEGREES=180/PI,TILE_SIZE=512,EARTH_CIRCUMFERENCE=4003e4,MAX_LATITUDE=85.051129,web_mercator_utils_DEFAULT_ALTITUDE=1.5;function web_mercator_utils_lngLatToWorld(lngLat){const[lng,lat]=lngLat;assert(Number.isFinite(lng)),assert(Number.isFinite(lat)&&lat>=-90&&lat<=90,"invalid latitude");const phi2=lat*DEGREES_TO_RADIANS;return[TILE_SIZE*(lng*DEGREES_TO_RADIANS+PI)/(2*PI),TILE_SIZE*(PI+Math.log(Math.tan(PI_4+.5*phi2)))/(2*PI)]}function web_mercator_utils_worldToLngLat(xy){const[x,y]=xy,lambda2=x/TILE_SIZE*(2*PI)-PI,phi2=2*(Math.atan(Math.exp(y/TILE_SIZE*(2*PI)-PI))-PI_4);return[lambda2*RADIANS_TO_DEGREES,phi2*RADIANS_TO_DEGREES]}function getMeterZoom(options){const{latitude:latitude}=options;assert(Number.isFinite(latitude));const latCosine=Math.cos(latitude*DEGREES_TO_RADIANS);return function web_mercator_utils_scaleToZoom(scale){return log2(scale)}(EARTH_CIRCUMFERENCE*latCosine)-9}function unitsPerMeter(latitude){const latCosine=Math.cos(latitude*DEGREES_TO_RADIANS);return TILE_SIZE/EARTH_CIRCUMFERENCE/latCosine}function web_mercator_utils_getDistanceScales(options){const{latitude:latitude,longitude:longitude,highPrecision:highPrecision=!1}=options;assert(Number.isFinite(latitude)&&Number.isFinite(longitude));const worldSize=TILE_SIZE,latCosine=Math.cos(latitude*DEGREES_TO_RADIANS),unitsPerDegreeX=worldSize/360,unitsPerDegreeY=unitsPerDegreeX/latCosine,altUnitsPerMeter=worldSize/EARTH_CIRCUMFERENCE/latCosine,result={unitsPerMeter:[altUnitsPerMeter,altUnitsPerMeter,altUnitsPerMeter],metersPerUnit:[1/altUnitsPerMeter,1/altUnitsPerMeter,1/altUnitsPerMeter],unitsPerDegree:[unitsPerDegreeX,unitsPerDegreeY,altUnitsPerMeter],degreesPerUnit:[1/unitsPerDegreeX,1/unitsPerDegreeY,1/altUnitsPerMeter]};if(highPrecision){const latCosine2=DEGREES_TO_RADIANS*Math.tan(latitude*DEGREES_TO_RADIANS)/latCosine,unitsPerDegreeY2=unitsPerDegreeX*latCosine2/2,altUnitsPerDegree2=worldSize/EARTH_CIRCUMFERENCE*latCosine2,altUnitsPerMeter2=altUnitsPerDegree2/unitsPerDegreeY*altUnitsPerMeter;result.unitsPerDegree2=[0,unitsPerDegreeY2,altUnitsPerDegree2],result.unitsPerMeter2=[altUnitsPerMeter2,0,altUnitsPerMeter2]}return result}function addMetersToLngLat(lngLatZ,xyz){const[longitude,latitude,z0]=lngLatZ,[x,y,z]=xyz,{unitsPerMeter:unitsPerMeter,unitsPerMeter2:unitsPerMeter2}=web_mercator_utils_getDistanceScales({longitude:longitude,latitude:latitude,highPrecision:!0}),worldspace=web_mercator_utils_lngLatToWorld(lngLatZ);worldspace[0]+=x*(unitsPerMeter[0]+unitsPerMeter2[0]*y),worldspace[1]+=y*(unitsPerMeter[1]+unitsPerMeter2[1]*y);const newLngLat=web_mercator_utils_worldToLngLat(worldspace),newZ=(z0||0)+(z||0);return Number.isFinite(z0)||Number.isFinite(z)?[newLngLat[0],newLngLat[1],newZ]:newLngLat}function web_mercator_utils_getViewMatrix(options){const{height:height,pitch:pitch,bearing:bearing,altitude:altitude,scale:scale,center:center}=options,vm=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];gl_matrix_mat4.Tl(vm,vm,[0,0,-altitude]),gl_matrix_mat4.eL(vm,vm,-pitch*DEGREES_TO_RADIANS),gl_matrix_mat4.Qr(vm,vm,bearing*DEGREES_TO_RADIANS);const relativeScale=scale/height;return gl_matrix_mat4.hs(vm,vm,[relativeScale,relativeScale,relativeScale]),center&&gl_matrix_mat4.Tl(vm,vm,gl_matrix_vec3.ze([],center)),vm}function getProjectionParameters(options){const{width:width,height:height,altitude:altitude,pitch:pitch=0,offset:offset,center:center,scale:scale,nearZMultiplier:nearZMultiplier=1,farZMultiplier:farZMultiplier=1}=options;let{fovy:fovy=web_mercator_utils_altitudeToFovy(web_mercator_utils_DEFAULT_ALTITUDE)}=options;void 0!==altitude&&(fovy=web_mercator_utils_altitudeToFovy(altitude));const fovRadians=fovy*DEGREES_TO_RADIANS,pitchRadians=pitch*DEGREES_TO_RADIANS,focalDistance=web_mercator_utils_fovyToAltitude(fovy);let cameraToSeaLevelDistance=focalDistance;center&&(cameraToSeaLevelDistance+=center[2]*scale/Math.cos(pitchRadians)/height);const fovAboveCenter=fovRadians*(.5+(offset?offset[1]:0)/height),topHalfSurfaceDistance=Math.sin(fovAboveCenter)*cameraToSeaLevelDistance/Math.sin(clamp(Math.PI/2-pitchRadians-fovAboveCenter,.01,Math.PI-.01)),furthestDistance=Math.sin(pitchRadians)*topHalfSurfaceDistance+cameraToSeaLevelDistance,horizonDistance=10*cameraToSeaLevelDistance;return{fov:fovRadians,aspect:width/height,focalDistance:focalDistance,near:nearZMultiplier,far:Math.min(furthestDistance*farZMultiplier,horizonDistance)}}function web_mercator_utils_altitudeToFovy(altitude){return 2*Math.atan(.5/altitude)*RADIANS_TO_DEGREES}function web_mercator_utils_fovyToAltitude(fovy){return.5/Math.tan(.5*fovy*DEGREES_TO_RADIANS)}function web_mercator_utils_worldToPixels(xyz,pixelProjectionMatrix){const[x,y,z=0]=xyz;return assert(Number.isFinite(x)&&Number.isFinite(y)&&Number.isFinite(z)),transformVector(pixelProjectionMatrix,[x,y,z,1])}function web_mercator_utils_pixelsToWorld(xyz,pixelUnprojectionMatrix,targetZ=0){const[x,y,z]=xyz;if(assert(Number.isFinite(x)&&Number.isFinite(y),"invalid pixel coordinate"),Number.isFinite(z)){return transformVector(pixelUnprojectionMatrix,[x,y,z,1])}const coord0=transformVector(pixelUnprojectionMatrix,[x,y,0,1]),coord1=transformVector(pixelUnprojectionMatrix,[x,y,1,1]),z0=coord0[2],z1=coord1[2],t=z0===z1?0:((targetZ||0)-z0)/(z1-z0);return gl_matrix_vec2.Cc([],coord0,coord1,t)}function fit_bounds_fitBounds(options){const{width:width,height:height,bounds:bounds,minExtent:minExtent=0,maxZoom:maxZoom=24,offset:offset=[0,0]}=options,[[west,south],[east,north]]=bounds,padding=function getPaddingObject(padding=0){if("number"==typeof padding)return{top:padding,bottom:padding,left:padding,right:padding};return assert(Number.isFinite(padding.top)&&Number.isFinite(padding.bottom)&&Number.isFinite(padding.left)&&Number.isFinite(padding.right)),padding}(options.padding),nw=web_mercator_utils_lngLatToWorld([west,clamp(north,-MAX_LATITUDE,MAX_LATITUDE)]),se=web_mercator_utils_lngLatToWorld([east,clamp(south,-MAX_LATITUDE,MAX_LATITUDE)]),size=[Math.max(Math.abs(se[0]-nw[0]),minExtent),Math.max(Math.abs(se[1]-nw[1]),minExtent)],targetSize=[width-padding.left-padding.right-2*Math.abs(offset[0]),height-padding.top-padding.bottom-2*Math.abs(offset[1])];assert(targetSize[0]>0&&targetSize[1]>0);const scaleX=targetSize[0]/size[0],scaleY=targetSize[1]/size[1],offsetX=(padding.right-padding.left)/2/scaleX,offsetY=(padding.top-padding.bottom)/2/scaleY,centerLngLat=web_mercator_utils_worldToLngLat([(se[0]+nw[0])/2+offsetX,(se[1]+nw[1])/2+offsetY]),zoom=Math.min(maxZoom,log2(Math.abs(Math.min(scaleX,scaleY))));return assert(Number.isFinite(zoom)),{longitude:centerLngLat[0],latitude:centerLngLat[1],zoom:zoom}}const get_bounds_DEGREES_TO_RADIANS=Math.PI/180;function get_bounds_getBounds(viewport,z=0){const{width:width,height:height,unproject:unproject}=viewport,unprojectOps={targetZ:z},bottomLeft=unproject([0,height],unprojectOps),bottomRight=unproject([width,height],unprojectOps);let topLeft,topRight;return(viewport.fovy?.5*viewport.fovy*get_bounds_DEGREES_TO_RADIANS:Math.atan(.5/viewport.altitude))>(90-viewport.pitch)*get_bounds_DEGREES_TO_RADIANS-.01?(topLeft=unprojectOnFarPlane(viewport,0,z),topRight=unprojectOnFarPlane(viewport,width,z)):(topLeft=unproject([0,0],unprojectOps),topRight=unproject([width,0],unprojectOps)),[bottomLeft,bottomRight,topRight,topLeft]}function unprojectOnFarPlane(viewport,x,targetZ){const{pixelUnprojectionMatrix:pixelUnprojectionMatrix}=viewport,coord0=transformVector(pixelUnprojectionMatrix,[x,0,1,1]),coord1=transformVector(pixelUnprojectionMatrix,[x,viewport.height,1,1]),t=(targetZ*viewport.distanceScales.unitsPerMeter[2]-coord0[2])/(coord1[2]-coord0[2]),result=web_mercator_utils_worldToLngLat(gl_matrix_vec2.Cc([],coord0,coord1,t));return result.push(targetZ),result}const normalize_viewport_props_TILE_SIZE=512;function normalizeViewportProps(props){const{width:width,height:height,pitch:pitch=0}=props;let{longitude:longitude,latitude:latitude,zoom:zoom,bearing:bearing=0}=props;(longitude<-180||longitude>180)&&(longitude=mod(longitude+180,360)-180),(bearing<-180||bearing>180)&&(bearing=mod(bearing+180,360)-180);const minZoom=log2(height/normalize_viewport_props_TILE_SIZE);if(zoom<=minZoom)zoom=minZoom,latitude=0;else{const halfHeightPixels=height/2/Math.pow(2,zoom),minLatitude=web_mercator_utils_worldToLngLat([0,halfHeightPixels])[1];if(latitude<minLatitude)latitude=minLatitude;else{const maxLatitude=web_mercator_utils_worldToLngLat([0,normalize_viewport_props_TILE_SIZE-halfHeightPixels])[1];latitude>maxLatitude&&(latitude=maxLatitude)}}return{width:width,height:height,longitude:longitude,latitude:latitude,zoom:zoom,pitch:pitch,bearing:bearing}}},"./node_modules/@probe.gl/env/dist/lib/globals.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{eh:function(){return process_},gM:function(){return navigator_},x:function(){return window_}});const window_=globalThis,process_=(globalThis.document,globalThis.process||{}),navigator_=(globalThis.console,globalThis.navigator||{})},"./node_modules/@probe.gl/env/dist/lib/is-browser.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{B:function(){return isBrowser}});var _is_electron_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@probe.gl/env/dist/lib/is-electron.js"),process=__webpack_require__("./node_modules/process/browser.js");function isBrowser(){return!("object"==typeof process&&"[object process]"===String(process)&&!process?.browser)||(0,_is_electron_js__WEBPACK_IMPORTED_MODULE_0__.b)()}},"./node_modules/@probe.gl/env/dist/lib/is-electron.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{b:function(){return isElectron}});var process=__webpack_require__("./node_modules/process/browser.js");function isElectron(mockUserAgent){if("undefined"!=typeof window&&"renderer"===window.process?.type)return!0;if(void 0!==process&&Boolean(process.versions?.electron))return!0;const realUserAgent="undefined"!=typeof navigator&&navigator.userAgent,userAgent=mockUserAgent||realUserAgent;return Boolean(userAgent&&userAgent.indexOf("Electron")>=0)}},"./node_modules/@probe.gl/log/dist/log.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{t:function(){return Log}});var is_browser=__webpack_require__("./node_modules/@probe.gl/env/dist/lib/is-browser.js");class LocalStorage{constructor(id,defaultConfig,type="sessionStorage"){this.storage=function getStorage(type){try{const storage=window[type],x="__storage_test__";return storage.setItem(x,x),storage.removeItem(x),storage}catch(e){return null}}(type),this.id=id,this.config=defaultConfig,this._loadConfiguration()}getConfiguration(){return this.config}setConfiguration(configuration){if(Object.assign(this.config,configuration),this.storage){const serialized=JSON.stringify(this.config);this.storage.setItem(this.id,serialized)}}_loadConfiguration(){let configuration={};if(this.storage){const serializedConfiguration=this.storage.getItem(this.id);configuration=serializedConfiguration?JSON.parse(serializedConfiguration):{}}return Object.assign(this.config,configuration),this}}var COLOR;!function(COLOR){COLOR[COLOR.BLACK=30]="BLACK",COLOR[COLOR.RED=31]="RED",COLOR[COLOR.GREEN=32]="GREEN",COLOR[COLOR.YELLOW=33]="YELLOW",COLOR[COLOR.BLUE=34]="BLUE",COLOR[COLOR.MAGENTA=35]="MAGENTA",COLOR[COLOR.CYAN=36]="CYAN",COLOR[COLOR.WHITE=37]="WHITE",COLOR[COLOR.BRIGHT_BLACK=90]="BRIGHT_BLACK",COLOR[COLOR.BRIGHT_RED=91]="BRIGHT_RED",COLOR[COLOR.BRIGHT_GREEN=92]="BRIGHT_GREEN",COLOR[COLOR.BRIGHT_YELLOW=93]="BRIGHT_YELLOW",COLOR[COLOR.BRIGHT_BLUE=94]="BRIGHT_BLUE",COLOR[COLOR.BRIGHT_MAGENTA=95]="BRIGHT_MAGENTA",COLOR[COLOR.BRIGHT_CYAN=96]="BRIGHT_CYAN",COLOR[COLOR.BRIGHT_WHITE=97]="BRIGHT_WHITE"}(COLOR||(COLOR={}));function getColor(color){return"string"!=typeof color?color:(color=color.toUpperCase(),COLOR[color]||COLOR.WHITE)}function assert(condition,message){if(!condition)throw new Error(message||"Assertion failed")}var globals=__webpack_require__("./node_modules/@probe.gl/env/dist/lib/globals.js");function getHiResTimestamp(){let timestamp;if((0,is_browser.B)()&&globals.x.performance)timestamp=globals.x?.performance?.now?.();else if("hrtime"in globals.eh){const timeParts=globals.eh?.hrtime?.();timestamp=1e3*timeParts[0]+timeParts[1]/1e6}else timestamp=Date.now();return timestamp}const originalConsole={debug:(0,is_browser.B)()&&console.debug||console.log,log:console.log,info:console.info,warn:console.warn,error:console.error},DEFAULT_LOG_CONFIGURATION={enabled:!0,level:0};function noop(){}const cache={},ONCE={once:!0};class Log{constructor({id:id}={id:""}){this.VERSION="4.1.0",this._startTs=getHiResTimestamp(),this._deltaTs=getHiResTimestamp(),this.userData={},this.LOG_THROTTLE_TIMEOUT=0,this.id=id,this.userData={},this._storage=new LocalStorage(`__probe-${this.id}__`,DEFAULT_LOG_CONFIGURATION),this.timeStamp(`${this.id} started`),function autobind(obj,predefined=["constructor"]){const proto=Object.getPrototypeOf(obj),propNames=Object.getOwnPropertyNames(proto),object=obj;for(const key of propNames){const value=object[key];"function"==typeof value&&(predefined.find((name=>key===name))||(object[key]=value.bind(obj)))}}(this),Object.seal(this)}set level(newLevel){this.setLevel(newLevel)}get level(){return this.getLevel()}isEnabled(){return this._storage.config.enabled}getLevel(){return this._storage.config.level}getTotal(){return Number((getHiResTimestamp()-this._startTs).toPrecision(10))}getDelta(){return Number((getHiResTimestamp()-this._deltaTs).toPrecision(10))}set priority(newPriority){this.level=newPriority}get priority(){return this.level}getPriority(){return this.level}enable(enabled=!0){return this._storage.setConfiguration({enabled:enabled}),this}setLevel(level){return this._storage.setConfiguration({level:level}),this}get(setting){return this._storage.config[setting]}set(setting,value){this._storage.setConfiguration({[setting]:value})}settings(){console.table?console.table(this._storage.config):console.log(this._storage.config)}assert(condition,message){if(!condition)throw new Error(message||"Assertion failed")}warn(message){return this._getLogFunction(0,message,originalConsole.warn,arguments,ONCE)}error(message){return this._getLogFunction(0,message,originalConsole.error,arguments)}deprecated(oldUsage,newUsage){return this.warn(`\`${oldUsage}\` is deprecated and will be removed in a later version. Use \`${newUsage}\` instead`)}removed(oldUsage,newUsage){return this.error(`\`${oldUsage}\` has been removed. Use \`${newUsage}\` instead`)}probe(logLevel,message){return this._getLogFunction(logLevel,message,originalConsole.log,arguments,{time:!0,once:!0})}log(logLevel,message){return this._getLogFunction(logLevel,message,originalConsole.debug,arguments)}info(logLevel,message){return this._getLogFunction(logLevel,message,console.info,arguments)}once(logLevel,message){return this._getLogFunction(logLevel,message,originalConsole.debug||originalConsole.info,arguments,ONCE)}table(logLevel,table,columns){return table?this._getLogFunction(logLevel,table,console.table||noop,columns&&[columns],{tag:getTableHeader(table)}):noop}time(logLevel,message){return this._getLogFunction(logLevel,message,console.time?console.time:console.info)}timeEnd(logLevel,message){return this._getLogFunction(logLevel,message,console.timeEnd?console.timeEnd:console.info)}timeStamp(logLevel,message){return this._getLogFunction(logLevel,message,console.timeStamp||noop)}group(logLevel,message,opts={collapsed:!1}){const options=normalizeArguments({logLevel:logLevel,message:message,opts:opts}),{collapsed:collapsed}=opts;return options.method=(collapsed?console.groupCollapsed:console.group)||console.info,this._getLogFunction(options)}groupCollapsed(logLevel,message,opts={}){return this.group(logLevel,message,Object.assign({},opts,{collapsed:!0}))}groupEnd(logLevel){return this._getLogFunction(logLevel,"",console.groupEnd||noop)}withGroup(logLevel,message,func){this.group(logLevel,message)();try{func()}finally{this.groupEnd(logLevel)()}}trace(){console.trace&&console.trace()}_shouldLog(logLevel){return this.isEnabled()&&this.getLevel()>=normalizeLogLevel(logLevel)}_getLogFunction(logLevel,message,method,args,opts){if(this._shouldLog(logLevel)){opts=normalizeArguments({logLevel:logLevel,message:message,args:args,opts:opts}),assert(method=method||opts.method),opts.total=this.getTotal(),opts.delta=this.getDelta(),this._deltaTs=getHiResTimestamp();const tag=opts.tag||opts.message;if(opts.once&&tag){if(cache[tag])return noop;cache[tag]=getHiResTimestamp()}return message=function decorateMessage(id,message,opts){if("string"==typeof message){const time=opts.time?function leftPad(string,length=8){const padLength=Math.max(length-string.length,0);return`${" ".repeat(padLength)}${string}`}(function formatTime(ms){let formatted;return formatted=ms<10?`${ms.toFixed(2)}ms`:ms<100?`${ms.toFixed(1)}ms`:ms<1e3?`${ms.toFixed(0)}ms`:`${(ms/1e3).toFixed(2)}s`,formatted}(opts.total)):"";message=function addColor(string,color,background){is_browser.B||"string"!=typeof string||(color&&(string=`[${getColor(color)}m${string}[39m`),background&&(string=`[${getColor(background)+10}m${string}[49m`));return string}(message=opts.time?`${id}: ${time}  ${message}`:`${id}: ${message}`,opts.color,opts.background)}return message}(this.id,opts.message,opts),method.bind(console,message,...opts.args)}return noop}}function normalizeLogLevel(logLevel){if(!logLevel)return 0;let resolvedLevel;switch(typeof logLevel){case"number":resolvedLevel=logLevel;break;case"object":resolvedLevel=logLevel.logLevel||logLevel.priority||0;break;default:return 0}return assert(Number.isFinite(resolvedLevel)&&resolvedLevel>=0),resolvedLevel}function normalizeArguments(opts){const{logLevel:logLevel,message:message}=opts;opts.logLevel=normalizeLogLevel(logLevel);const args=opts.args?Array.from(opts.args):[];for(;args.length&&args.shift()!==message;);switch(typeof logLevel){case"string":case"function":void 0!==message&&args.unshift(message),opts.message=logLevel;break;case"object":Object.assign(opts,logLevel)}"function"==typeof opts.message&&(opts.message=opts.message());const messageType=typeof opts.message;return assert("string"===messageType||"object"===messageType),Object.assign(opts,{args:args},opts.opts)}function getTableHeader(table){for(const key in table)for(const title in table[key])return title||"untitled";return"empty"}Log.VERSION="4.1.0"},"./node_modules/@probe.gl/stats/dist/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Uz:function(){return Stats}});var process=__webpack_require__("./node_modules/process/browser.js");function getHiResTimestamp(){let timestamp;if("undefined"!=typeof window&&window.performance)timestamp=window.performance.now();else if(void 0!==process&&process.hrtime){const timeParts=process.hrtime();timestamp=1e3*timeParts[0]+timeParts[1]/1e6}else timestamp=Date.now();return timestamp}class Stat{constructor(name,type){this.sampleSize=1,this.time=0,this.count=0,this.samples=0,this.lastTiming=0,this.lastSampleTime=0,this.lastSampleCount=0,this._count=0,this._time=0,this._samples=0,this._startTime=0,this._timerPending=!1,this.name=name,this.type=type,this.reset()}reset(){return this.time=0,this.count=0,this.samples=0,this.lastTiming=0,this.lastSampleTime=0,this.lastSampleCount=0,this._count=0,this._time=0,this._samples=0,this._startTime=0,this._timerPending=!1,this}setSampleSize(samples){return this.sampleSize=samples,this}incrementCount(){return this.addCount(1),this}decrementCount(){return this.subtractCount(1),this}addCount(value){return this._count+=value,this._samples++,this._checkSampling(),this}subtractCount(value){return this._count-=value,this._samples++,this._checkSampling(),this}addTime(time){return this._time+=time,this.lastTiming=time,this._samples++,this._checkSampling(),this}timeStart(){return this._startTime=getHiResTimestamp(),this._timerPending=!0,this}timeEnd(){return this._timerPending?(this.addTime(getHiResTimestamp()-this._startTime),this._timerPending=!1,this._checkSampling(),this):this}getSampleAverageCount(){return this.sampleSize>0?this.lastSampleCount/this.sampleSize:0}getSampleAverageTime(){return this.sampleSize>0?this.lastSampleTime/this.sampleSize:0}getSampleHz(){return this.lastSampleTime>0?this.sampleSize/(this.lastSampleTime/1e3):0}getAverageCount(){return this.samples>0?this.count/this.samples:0}getAverageTime(){return this.samples>0?this.time/this.samples:0}getHz(){return this.time>0?this.samples/(this.time/1e3):0}_checkSampling(){this._samples===this.sampleSize&&(this.lastSampleTime=this._time,this.lastSampleCount=this._count,this.count+=this._count,this.time+=this._time,this.samples+=this._samples,this._time=0,this._count=0,this._samples=0)}}class Stats{constructor(options){this.stats={},this.id=options.id,this.stats={},this._initializeStats(options.stats),Object.seal(this)}get(name,type="count"){return this._getOrCreate({name:name,type:type})}get size(){return Object.keys(this.stats).length}reset(){for(const stat of Object.values(this.stats))stat.reset();return this}forEach(fn){for(const stat of Object.values(this.stats))fn(stat)}getTable(){const table={};return this.forEach((stat=>{table[stat.name]={time:stat.time||0,count:stat.count||0,average:stat.getAverageTime()||0,hz:stat.getHz()||0}})),table}_initializeStats(stats=[]){stats.forEach((stat=>this._getOrCreate(stat)))}_getOrCreate(stat){const{name:name,type:type}=stat;let result=this.stats[name];return result||(result=stat instanceof Stat?stat:new Stat(name,type),this.stats[name]=result),result}}},"./node_modules/mjolnir.js/dist/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{EU:function(){return EventManager},e8:function(){return InputDirection},uq:function(){return PanRecognizer},h1:function(){return PinchRecognizer},Cx:function(){return TapRecognizer}});var InputEvent,InputDirection,RecognizerState;!function(InputEvent){InputEvent[InputEvent.Start=1]="Start",InputEvent[InputEvent.Move=2]="Move",InputEvent[InputEvent.End=4]="End",InputEvent[InputEvent.Cancel=8]="Cancel"}(InputEvent||(InputEvent={})),function(InputDirection){InputDirection[InputDirection.None=0]="None",InputDirection[InputDirection.Left=1]="Left",InputDirection[InputDirection.Right=2]="Right",InputDirection[InputDirection.Up=4]="Up",InputDirection[InputDirection.Down=8]="Down",InputDirection[InputDirection.Horizontal=3]="Horizontal",InputDirection[InputDirection.Vertical=12]="Vertical",InputDirection[InputDirection.All=15]="All"}(InputDirection||(InputDirection={})),function(RecognizerState){RecognizerState[RecognizerState.Possible=1]="Possible",RecognizerState[RecognizerState.Began=2]="Began",RecognizerState[RecognizerState.Changed=4]="Changed",RecognizerState[RecognizerState.Ended=8]="Ended",RecognizerState[RecognizerState.Recognized=8]="Recognized",RecognizerState[RecognizerState.Cancelled=16]="Cancelled",RecognizerState[RecognizerState.Failed=32]="Failed"}(RecognizerState||(RecognizerState={}));class TouchAction{constructor(manager,value){this.actions="",this.manager=manager,this.set(value)}set(value){"compute"===value&&(value=this.compute()),this.manager.element&&(this.manager.element.style.touchAction=value,this.actions=value)}update(){this.set(this.manager.options.touchAction)}compute(){let actions=[];for(const recognizer of this.manager.recognizers)recognizer.options.enable&&(actions=actions.concat(recognizer.getTouchAction()));return function cleanTouchActions(actions){if(actions.includes("none"))return"none";const hasPanX=actions.includes("pan-x"),hasPanY=actions.includes("pan-y");return hasPanX&&hasPanY?"none":hasPanX||hasPanY?hasPanX?"pan-x":"pan-y":actions.includes("manipulation")?"manipulation":"auto"}(actions.join(" "))}}function splitStr(str){return str.trim().split(/\s+/g)}function addEventListeners(target,types,handler){if(target)for(const type of splitStr(types))target.addEventListener(type,handler,!1)}function removeEventListeners(target,types,handler){if(target)for(const type of splitStr(types))target.removeEventListener(type,handler,!1)}function getWindowForElement(element){return(element.ownerDocument||element).defaultView}function getCenter(pointers){const pointersLength=pointers.length;if(1===pointersLength)return{x:Math.round(pointers[0].clientX),y:Math.round(pointers[0].clientY)};let x=0,y=0,i=0;for(;i<pointersLength;)x+=pointers[i].clientX,y+=pointers[i].clientY,i++;return{x:Math.round(x/pointersLength),y:Math.round(y/pointersLength)}}function simpleCloneInputData(input){const pointers=[];let i=0;for(;i<input.pointers.length;)pointers[i]={clientX:Math.round(input.pointers[i].clientX),clientY:Math.round(input.pointers[i].clientY)},i++;return{timeStamp:Date.now(),pointers:pointers,center:getCenter(pointers),deltaX:input.deltaX,deltaY:input.deltaY}}function getPointDistance(p1,p2){const x=p2.x-p1.x,y=p2.y-p1.y;return Math.sqrt(x*x+y*y)}function getEventDistance(p1,p2){const x=p2.clientX-p1.clientX,y=p2.clientY-p1.clientY;return Math.sqrt(x*x+y*y)}function getEventAngle(p1,p2){const x=p2.clientX-p1.clientX,y=p2.clientY-p1.clientY;return 180*Math.atan2(y,x)/Math.PI}function getDirection(dx,dy){return dx===dy?InputDirection.None:Math.abs(dx)>=Math.abs(dy)?dx<0?InputDirection.Left:InputDirection.Right:dy<0?InputDirection.Up:InputDirection.Down}function getVelocity(deltaTime,x,y){return{x:x/deltaTime||0,y:y/deltaTime||0}}function computeInputData(manager,input){const{session:session}=manager,{pointers:pointers}=input,{length:pointersLength}=pointers;session.firstInput||(session.firstInput=simpleCloneInputData(input)),pointersLength>1&&!session.firstMultiple?session.firstMultiple=simpleCloneInputData(input):1===pointersLength&&(session.firstMultiple=!1);const{firstInput:firstInput,firstMultiple:firstMultiple}=session,offsetCenter=firstMultiple?firstMultiple.center:firstInput.center,center=input.center=getCenter(pointers);input.timeStamp=Date.now(),input.deltaTime=input.timeStamp-firstInput.timeStamp,input.angle=function getPointAngle(p1,p2){const x=p2.x-p1.x,y=p2.y-p1.y;return 180*Math.atan2(y,x)/Math.PI}(offsetCenter,center),input.distance=getPointDistance(offsetCenter,center);const{deltaX:deltaX,deltaY:deltaY}=function computeDeltaXY(session,input){const center=input.center;let offset=session.offsetDelta,prevDelta=session.prevDelta;const prevInput=session.prevInput;return input.eventType!==InputEvent.Start&&prevInput?.eventType!==InputEvent.End||(prevDelta=session.prevDelta={x:prevInput?.deltaX||0,y:prevInput?.deltaY||0},offset=session.offsetDelta={x:center.x,y:center.y}),{deltaX:prevDelta.x+(center.x-offset.x),deltaY:prevDelta.y+(center.y-offset.y)}}(session,input);input.deltaX=deltaX,input.deltaY=deltaY,input.offsetDirection=getDirection(input.deltaX,input.deltaY);const overallVelocity=getVelocity(input.deltaTime,input.deltaX,input.deltaY);input.overallVelocityX=overallVelocity.x,input.overallVelocityY=overallVelocity.y,input.overallVelocity=Math.abs(overallVelocity.x)>Math.abs(overallVelocity.y)?overallVelocity.x:overallVelocity.y,input.scale=firstMultiple?function getScale(start,end){return getEventDistance(end[0],end[1])/getEventDistance(start[0],start[1])}(firstMultiple.pointers,pointers):1,input.rotation=firstMultiple?function getRotation(start,end){return getEventAngle(end[1],end[0])-getEventAngle(start[1],start[0])}(firstMultiple.pointers,pointers):0,input.maxPointers=session.prevInput?input.pointers.length>session.prevInput.maxPointers?input.pointers.length:session.prevInput.maxPointers:input.pointers.length;let target=manager.element;return function hasParent(node,parent){let ancestor=node;for(;ancestor;){if(ancestor===parent)return!0;ancestor=ancestor.parentNode}return!1}(input.srcEvent.target,target)&&(target=input.srcEvent.target),input.target=target,function computeIntervalInputData(session,input){const last=session.lastInterval||input,deltaTime=input.timeStamp-last.timeStamp;let velocity,velocityX,velocityY,direction;if(input.eventType!==InputEvent.Cancel&&(deltaTime>25||void 0===last.velocity)){const deltaX=input.deltaX-last.deltaX,deltaY=input.deltaY-last.deltaY,v=getVelocity(deltaTime,deltaX,deltaY);velocityX=v.x,velocityY=v.y,velocity=Math.abs(v.x)>Math.abs(v.y)?v.x:v.y,direction=getDirection(deltaX,deltaY),session.lastInterval=input}else velocity=last.velocity,velocityX=last.velocityX,velocityY=last.velocityY,direction=last.direction;input.velocity=velocity,input.velocityX=velocityX,input.velocityY=velocityY,input.direction=direction}(session,input),input}class Input{constructor(manager){this.evEl="",this.evWin="",this.evTarget="",this.domHandler=ev=>{this.manager.options.enable&&this.handler(ev)},this.manager=manager,this.element=manager.element,this.target=manager.options.inputTarget||manager.element}callback(eventType,input){!function inputHandler(manager,eventType,input){const pointersLen=input.pointers.length,changedPointersLen=input.changedPointers.length,isFirst=eventType&InputEvent.Start&&pointersLen-changedPointersLen==0,isFinal=eventType&(InputEvent.End|InputEvent.Cancel)&&pointersLen-changedPointersLen==0;input.isFirst=Boolean(isFirst),input.isFinal=Boolean(isFinal),isFirst&&(manager.session={}),input.eventType=eventType;const processedInput=computeInputData(manager,input);manager.emit("hammer.input",processedInput),manager.recognize(processedInput),manager.session.prevInput=processedInput}(this.manager,eventType,input)}init(){addEventListeners(this.element,this.evEl,this.domHandler),addEventListeners(this.target,this.evTarget,this.domHandler),addEventListeners(getWindowForElement(this.element),this.evWin,this.domHandler)}destroy(){removeEventListeners(this.element,this.evEl,this.domHandler),removeEventListeners(this.target,this.evTarget,this.domHandler),removeEventListeners(getWindowForElement(this.element),this.evWin,this.domHandler)}}const POINTER_INPUT_MAP={pointerdown:InputEvent.Start,pointermove:InputEvent.Move,pointerup:InputEvent.End,pointercancel:InputEvent.Cancel,pointerout:InputEvent.Cancel};class PointerEventInput extends Input{constructor(manager){super(manager),this.evEl="pointerdown",this.evWin="pointermove pointerup pointercancel",this.store=this.manager.session.pointerEvents=[],this.init()}handler(ev){const{store:store}=this;let removePointer=!1;const eventType=POINTER_INPUT_MAP[ev.type],pointerType=ev.pointerType,isTouch="touch"===pointerType;let storeIndex=store.findIndex((e=>e.pointerId===ev.pointerId));eventType&InputEvent.Start&&(ev.buttons||isTouch)?storeIndex<0&&(store.push(ev),storeIndex=store.length-1):eventType&(InputEvent.End|InputEvent.Cancel)&&(removePointer=!0),storeIndex<0||(store[storeIndex]=ev,this.callback(eventType,{pointers:store,changedPointers:[ev],eventType:eventType,pointerType:pointerType,srcEvent:ev}),removePointer&&store.splice(storeIndex,1))}}const VENDOR_PREFIXES=["","webkit","Moz","MS","ms","o"];function prefixed(obj,property){const camelProp=property[0].toUpperCase()+property.slice(1);for(const prefix of VENDOR_PREFIXES){const prop=prefix?prefix+camelProp:property;if(prop in obj)return prop}}const defaultOptions={touchAction:"compute",enable:!0,inputTarget:null,cssProps:{userSelect:"none",userDrag:"none",touchCallout:"none",tapHighlightColor:"rgba(0,0,0,0)"}};class Manager{constructor(element,options){this.options={...defaultOptions,...options,cssProps:{...defaultOptions.cssProps,...options.cssProps},inputTarget:options.inputTarget||element},this.handlers={},this.session={},this.recognizers=[],this.oldCssProps={},this.element=element,this.input=new PointerEventInput(this),this.touchAction=new TouchAction(this,this.options.touchAction),this.toggleCssProps(!0)}set(options){return Object.assign(this.options,options),options.touchAction&&this.touchAction.update(),options.inputTarget&&(this.input.destroy(),this.input.target=options.inputTarget,this.input.init()),this}stop(force){this.session.stopped=force?2:1}recognize(inputData){const{session:session}=this;if(session.stopped)return;let recognizer;this.session.prevented&&inputData.srcEvent.preventDefault();const{recognizers:recognizers}=this;let{curRecognizer:curRecognizer}=session;(!curRecognizer||curRecognizer&&curRecognizer.state&RecognizerState.Recognized)&&(curRecognizer=session.curRecognizer=null);let i=0;for(;i<recognizers.length;)recognizer=recognizers[i],2===session.stopped||curRecognizer&&recognizer!==curRecognizer&&!recognizer.canRecognizeWith(curRecognizer)?recognizer.reset():recognizer.recognize(inputData),!curRecognizer&&recognizer.state&(RecognizerState.Began|RecognizerState.Changed|RecognizerState.Ended)&&(curRecognizer=session.curRecognizer=recognizer),i++}get(recognizerName){const{recognizers:recognizers}=this;for(let i=0;i<recognizers.length;i++)if(recognizers[i].options.event===recognizerName)return recognizers[i];return null}add(recognizer){if(Array.isArray(recognizer)){for(const item of recognizer)this.add(item);return this}const existing=this.get(recognizer.options.event);return existing&&this.remove(existing),this.recognizers.push(recognizer),recognizer.manager=this,this.touchAction.update(),recognizer}remove(recognizerOrName){if(Array.isArray(recognizerOrName)){for(const item of recognizerOrName)this.remove(item);return this}const recognizer="string"==typeof recognizerOrName?this.get(recognizerOrName):recognizerOrName;if(recognizer){const{recognizers:recognizers}=this,index=recognizers.indexOf(recognizer);-1!==index&&(recognizers.splice(index,1),this.touchAction.update())}return this}on(events,handler){if(!events||!handler)return;const{handlers:handlers}=this;for(const event of splitStr(events))handlers[event]=handlers[event]||[],handlers[event].push(handler)}off(events,handler){if(!events)return;const{handlers:handlers}=this;for(const event of splitStr(events))handler?handlers[event]&&handlers[event].splice(handlers[event].indexOf(handler),1):delete handlers[event]}emit(event,data){const handlers=this.handlers[event]&&this.handlers[event].slice();if(!handlers||!handlers.length)return;const evt=data;evt.type=event,evt.preventDefault=function(){data.srcEvent.preventDefault()};let i=0;for(;i<handlers.length;)handlers[i](evt),i++}destroy(){this.toggleCssProps(!1),this.handlers={},this.session={},this.input.destroy(),this.element=null}toggleCssProps(add){const{element:element}=this;if(element){for(const[name,value]of Object.entries(this.options.cssProps)){const prop=prefixed(element.style,name);add?(this.oldCssProps[prop]=element.style[prop],element.style[prop]=value):element.style[prop]=this.oldCssProps[prop]||""}add||(this.oldCssProps={})}}}let _uniqueId=1;function stateStr(state){return state&RecognizerState.Cancelled?"cancel":state&RecognizerState.Ended?"end":state&RecognizerState.Changed?"move":state&RecognizerState.Began?"start":""}class Recognizer{constructor(options){this.options=options,this.id=function uniqueId(){return _uniqueId++}(),this.state=RecognizerState.Possible,this.simultaneous={},this.requireFail=[]}set(options){return Object.assign(this.options,options),this.manager.touchAction.update(),this}recognizeWith(recognizerOrName){if(Array.isArray(recognizerOrName)){for(const item of recognizerOrName)this.recognizeWith(item);return this}let otherRecognizer;if("string"==typeof recognizerOrName){if(otherRecognizer=this.manager.get(recognizerOrName),!otherRecognizer)throw new Error(`Cannot find recognizer ${recognizerOrName}`)}else otherRecognizer=recognizerOrName;const{simultaneous:simultaneous}=this;return simultaneous[otherRecognizer.id]||(simultaneous[otherRecognizer.id]=otherRecognizer,otherRecognizer.recognizeWith(this)),this}dropRecognizeWith(recognizerOrName){if(Array.isArray(recognizerOrName)){for(const item of recognizerOrName)this.dropRecognizeWith(item);return this}let otherRecognizer;return otherRecognizer="string"==typeof recognizerOrName?this.manager.get(recognizerOrName):recognizerOrName,otherRecognizer&&delete this.simultaneous[otherRecognizer.id],this}requireFailure(recognizerOrName){if(Array.isArray(recognizerOrName)){for(const item of recognizerOrName)this.requireFailure(item);return this}let otherRecognizer;if("string"==typeof recognizerOrName){if(otherRecognizer=this.manager.get(recognizerOrName),!otherRecognizer)throw new Error(`Cannot find recognizer ${recognizerOrName}`)}else otherRecognizer=recognizerOrName;const{requireFail:requireFail}=this;return-1===requireFail.indexOf(otherRecognizer)&&(requireFail.push(otherRecognizer),otherRecognizer.requireFailure(this)),this}dropRequireFailure(recognizerOrName){if(Array.isArray(recognizerOrName)){for(const item of recognizerOrName)this.dropRequireFailure(item);return this}let otherRecognizer;if(otherRecognizer="string"==typeof recognizerOrName?this.manager.get(recognizerOrName):recognizerOrName,otherRecognizer){const index=this.requireFail.indexOf(otherRecognizer);index>-1&&this.requireFail.splice(index,1)}return this}hasRequireFailures(){return Boolean(this.requireFail.find((recognier=>recognier.options.enable)))}canRecognizeWith(otherRecognizer){return Boolean(this.simultaneous[otherRecognizer.id])}emit(input){if(!input)return;const{state:state}=this;state<RecognizerState.Ended&&this.manager.emit(this.options.event+stateStr(state),input),this.manager.emit(this.options.event,input),input.additionalEvent&&this.manager.emit(input.additionalEvent,input),state>=RecognizerState.Ended&&this.manager.emit(this.options.event+stateStr(state),input)}tryEmit(input){this.canEmit()?this.emit(input):this.state=RecognizerState.Failed}canEmit(){let i=0;for(;i<this.requireFail.length;){if(!(this.requireFail[i].state&(RecognizerState.Failed|RecognizerState.Possible)))return!1;i++}return!0}recognize(inputData){const inputDataClone={...inputData};if(!this.options.enable)return this.reset(),void(this.state=RecognizerState.Failed);this.state&(RecognizerState.Recognized|RecognizerState.Cancelled|RecognizerState.Failed)&&(this.state=RecognizerState.Possible),this.state=this.process(inputDataClone),this.state&(RecognizerState.Began|RecognizerState.Changed|RecognizerState.Ended|RecognizerState.Cancelled)&&this.tryEmit(inputDataClone)}getEventNames(){return[this.options.event]}reset(){}}class AttrRecognizer extends Recognizer{attrTest(input){const optionPointers=this.options.pointers;return 0===optionPointers||input.pointers.length===optionPointers}process(input){const{state:state}=this,{eventType:eventType}=input,isRecognized=state&(RecognizerState.Began|RecognizerState.Changed),isValid=this.attrTest(input);return isRecognized&&(eventType&InputEvent.Cancel||!isValid)?state|RecognizerState.Cancelled:isRecognized||isValid?eventType&InputEvent.End?state|RecognizerState.Ended:state&RecognizerState.Began?state|RecognizerState.Changed:RecognizerState.Began:RecognizerState.Failed}}class TapRecognizer extends Recognizer{constructor(options={}){super({enable:!0,event:"tap",pointers:1,taps:1,interval:300,time:250,threshold:9,posThreshold:10,...options}),this.pTime=null,this.pCenter=null,this._timer=null,this._input=null,this.count=0}getTouchAction(){return["manipulation"]}process(input){const{options:options}=this,validPointers=input.pointers.length===options.pointers,validMovement=input.distance<options.threshold,validTouchTime=input.deltaTime<options.time;if(this.reset(),input.eventType&InputEvent.Start&&0===this.count)return this.failTimeout();if(validMovement&&validTouchTime&&validPointers){if(input.eventType!==InputEvent.End)return this.failTimeout();const validInterval=!this.pTime||input.timeStamp-this.pTime<options.interval,validMultiTap=!this.pCenter||getPointDistance(this.pCenter,input.center)<options.posThreshold;this.pTime=input.timeStamp,this.pCenter=input.center,validMultiTap&&validInterval?this.count+=1:this.count=1,this._input=input;if(0===this.count%options.taps)return this.hasRequireFailures()?(this._timer=setTimeout((()=>{this.state=RecognizerState.Recognized,this.tryEmit(this._input)}),options.interval),RecognizerState.Began):RecognizerState.Recognized}return RecognizerState.Failed}failTimeout(){return this._timer=setTimeout((()=>{this.state=RecognizerState.Failed}),this.options.interval),RecognizerState.Failed}reset(){clearTimeout(this._timer)}emit(input){this.state===RecognizerState.Recognized&&(input.tapCount=this.count,this.manager.emit(this.options.event,input))}}const EVENT_NAMES=["","start","move","end","cancel","up","down","left","right"];class PanRecognizer extends AttrRecognizer{constructor(options={}){super({enable:!0,pointers:1,event:"pan",threshold:10,direction:InputDirection.All,...options}),this.pX=null,this.pY=null}getTouchAction(){const{options:{direction:direction}}=this,actions=[];return direction&InputDirection.Horizontal&&actions.push("pan-y"),direction&InputDirection.Vertical&&actions.push("pan-x"),actions}getEventNames(){return EVENT_NAMES.map((suffix=>this.options.event+suffix))}directionTest(input){const{options:options}=this;let hasMoved=!0,{distance:distance}=input,{direction:direction}=input;const x=input.deltaX,y=input.deltaY;return direction&options.direction||(options.direction&InputDirection.Horizontal?(direction=0===x?InputDirection.None:x<0?InputDirection.Left:InputDirection.Right,hasMoved=x!==this.pX,distance=Math.abs(input.deltaX)):(direction=0===y?InputDirection.None:y<0?InputDirection.Up:InputDirection.Down,hasMoved=y!==this.pY,distance=Math.abs(input.deltaY))),input.direction=direction,hasMoved&&distance>options.threshold&&Boolean(direction&options.direction)}attrTest(input){return super.attrTest(input)&&(Boolean(this.state&RecognizerState.Began)||!(this.state&RecognizerState.Began)&&this.directionTest(input))}emit(input){this.pX=input.deltaX,this.pY=input.deltaY;const direction=InputDirection[input.direction].toLowerCase();direction&&(input.additionalEvent=this.options.event+direction),super.emit(input)}}const pinch_EVENT_NAMES=["","start","move","end","cancel","in","out"];class PinchRecognizer extends AttrRecognizer{constructor(options={}){super({enable:!0,event:"pinch",threshold:0,pointers:2,...options})}getTouchAction(){return["none"]}getEventNames(){return pinch_EVENT_NAMES.map((suffix=>this.options.event+suffix))}attrTest(input){return super.attrTest(input)&&(Math.abs(input.scale-1)>this.options.threshold||Boolean(this.state&RecognizerState.Began))}emit(input){if(1!==input.scale){const inOut=input.scale<1?"in":"out";input.additionalEvent=this.options.event+inOut}super.emit(input)}}class input_Input{constructor(element,callback,options){this.element=element,this.callback=callback,this.options=options}}const userAgent="undefined"!=typeof navigator&&navigator.userAgent?navigator.userAgent.toLowerCase():"",firefox=("undefined"!=typeof window?window:__webpack_require__.g,void 0!==__webpack_require__.g?__webpack_require__.g:window,"undefined"!=typeof document&&document,-1!==userAgent.indexOf("firefox"));class WheelInput extends input_Input{constructor(element,callback,options){super(element,callback,{enable:!0,...options}),this.handleEvent=event=>{if(!this.options.enable)return;let value=event.deltaY;globalThis.WheelEvent&&(firefox&&event.deltaMode===globalThis.WheelEvent.DOM_DELTA_PIXEL&&(value/=globalThis.devicePixelRatio),event.deltaMode===globalThis.WheelEvent.DOM_DELTA_LINE&&(value*=40)),0!==value&&value%4.000244140625==0&&(value=Math.floor(value/4.000244140625)),event.shiftKey&&value&&(value*=.25),this.callback({type:"wheel",center:{x:event.clientX,y:event.clientY},delta:-value,srcEvent:event,pointerType:"mouse",target:event.target})},element.addEventListener("wheel",this.handleEvent,{passive:!1})}destroy(){this.element.removeEventListener("wheel",this.handleEvent)}enableEventType(eventType,enabled){"wheel"===eventType&&(this.options.enable=enabled)}}const MOUSE_EVENTS=["mousedown","mousemove","mouseup","mouseover","mouseout","mouseleave"];class MoveInput extends input_Input{constructor(element,callback,options){super(element,callback,{enable:!0,...options}),this.handleEvent=event=>{this.handleOverEvent(event),this.handleOutEvent(event),this.handleEnterEvent(event),this.handleLeaveEvent(event),this.handleMoveEvent(event)},this.pressed=!1;const{enable:enable}=this.options;this.enableMoveEvent=enable,this.enableLeaveEvent=enable,this.enableEnterEvent=enable,this.enableOutEvent=enable,this.enableOverEvent=enable,MOUSE_EVENTS.forEach((event=>element.addEventListener(event,this.handleEvent)))}destroy(){MOUSE_EVENTS.forEach((event=>this.element.removeEventListener(event,this.handleEvent)))}enableEventType(eventType,enabled){switch(eventType){case"pointermove":this.enableMoveEvent=enabled;break;case"pointerover":this.enableOverEvent=enabled;break;case"pointerout":this.enableOutEvent=enabled;break;case"pointerenter":this.enableEnterEvent=enabled;break;case"pointerleave":this.enableLeaveEvent=enabled}}handleOverEvent(event){this.enableOverEvent&&"mouseover"===event.type&&this._emit("pointerover",event)}handleOutEvent(event){this.enableOutEvent&&"mouseout"===event.type&&this._emit("pointerout",event)}handleEnterEvent(event){this.enableEnterEvent&&"mouseenter"===event.type&&this._emit("pointerenter",event)}handleLeaveEvent(event){this.enableLeaveEvent&&"mouseleave"===event.type&&this._emit("pointerleave",event)}handleMoveEvent(event){if(this.enableMoveEvent)switch(event.type){case"mousedown":event.button>=0&&(this.pressed=!0);break;case"mousemove":0===event.buttons&&(this.pressed=!1),this.pressed||this._emit("pointermove",event);break;case"mouseup":this.pressed=!1}}_emit(type,event){this.callback({type:type,center:{x:event.clientX,y:event.clientY},srcEvent:event,pointerType:"mouse",target:event.target})}}const KEY_EVENTS=["keydown","keyup"];class KeyInput extends input_Input{constructor(element,callback,options){super(element,callback,{enable:!0,tabIndex:0,...options}),this.handleEvent=event=>{const targetElement=event.target||event.srcElement;"INPUT"===targetElement.tagName&&"text"===targetElement.type||"TEXTAREA"===targetElement.tagName||(this.enableDownEvent&&"keydown"===event.type&&this.callback({type:"keydown",srcEvent:event,key:event.key,target:event.target}),this.enableUpEvent&&"keyup"===event.type&&this.callback({type:"keyup",srcEvent:event,key:event.key,target:event.target}))},this.enableDownEvent=this.options.enable,this.enableUpEvent=this.options.enable,element.tabIndex=this.options.tabIndex,element.style.outline="none",KEY_EVENTS.forEach((event=>element.addEventListener(event,this.handleEvent)))}destroy(){KEY_EVENTS.forEach((event=>this.element.removeEventListener(event,this.handleEvent)))}enableEventType(eventType,enabled){"keydown"===eventType&&(this.enableDownEvent=enabled),"keyup"===eventType&&(this.enableUpEvent=enabled)}}class ContextmenuInput extends input_Input{constructor(element,callback,options){super(element,callback,options),this.handleEvent=event=>{this.options.enable&&this.callback({type:"contextmenu",center:{x:event.clientX,y:event.clientY},srcEvent:event,pointerType:"mouse",target:event.target})},element.addEventListener("contextmenu",this.handleEvent)}destroy(){this.element.removeEventListener("contextmenu",this.handleEvent)}enableEventType(eventType,enabled){"contextmenu"===eventType&&(this.options.enable=enabled)}}const event_utils_MOUSE_EVENTS={pointerdown:1,pointermove:2,pointerup:4,mousedown:1,mousemove:2,mouseup:4};function whichButtons(event){const eventType=event_utils_MOUSE_EVENTS[event.srcEvent.type];if(!eventType)return null;const{buttons:buttons,button:button}=event.srcEvent;let leftButton=!1,middleButton=!1,rightButton=!1;return 2===eventType?(leftButton=Boolean(1&buttons),middleButton=Boolean(4&buttons),rightButton=Boolean(2&buttons)):(leftButton=0===button,middleButton=1===button,rightButton=2===button),{leftButton:leftButton,middleButton:middleButton,rightButton:rightButton}}function getOffsetPosition(event,rootElement){const center=event.center;if(!center)return null;const rect=rootElement.getBoundingClientRect(),scaleX=rect.width/rootElement.offsetWidth||1,scaleY=rect.height/rootElement.offsetHeight||1;return{center:center,offsetCenter:{x:(center.x-rect.left-rootElement.clientLeft)/scaleX,y:(center.y-rect.top-rootElement.clientTop)/scaleY}}}const DEFAULT_OPTIONS={srcElement:"root",priority:0};class EventRegistrar{constructor(eventManager,recognizerName){this.handleEvent=event=>{if(this.isEmpty())return;const mjolnirEvent=this._normalizeEvent(event);let target=event.srcEvent.target;for(;target&&target!==mjolnirEvent.rootElement;){if(this._emit(mjolnirEvent,target),mjolnirEvent.handled)return;target=target.parentNode}this._emit(mjolnirEvent,"root")},this.eventManager=eventManager,this.recognizerName=recognizerName,this.handlers=[],this.handlersByElement=new Map,this._active=!1}isEmpty(){return!this._active}add(type,handler,options,once=!1,passive=!1){const{handlers:handlers,handlersByElement:handlersByElement}=this,opts={...DEFAULT_OPTIONS,...options};let entries=handlersByElement.get(opts.srcElement);entries||(entries=[],handlersByElement.set(opts.srcElement,entries));const entry={type:type,handler:handler,srcElement:opts.srcElement,priority:opts.priority};once&&(entry.once=!0),passive&&(entry.passive=!0),handlers.push(entry),this._active=this._active||!entry.passive;let insertPosition=entries.length-1;for(;insertPosition>=0&&!(entries[insertPosition].priority>=entry.priority);)insertPosition--;entries.splice(insertPosition+1,0,entry)}remove(type,handler){const{handlers:handlers,handlersByElement:handlersByElement}=this;for(let i=handlers.length-1;i>=0;i--){const entry=handlers[i];if(entry.type===type&&entry.handler===handler){handlers.splice(i,1);const entries=handlersByElement.get(entry.srcElement);entries.splice(entries.indexOf(entry),1),0===entries.length&&handlersByElement.delete(entry.srcElement)}}this._active=handlers.some((entry=>!entry.passive))}_emit(event,srcElement){const entries=this.handlersByElement.get(srcElement);if(entries){let immediatePropagationStopped=!1;const stopPropagation=()=>{event.handled=!0},stopImmediatePropagation=()=>{event.handled=!0,immediatePropagationStopped=!0},entriesToRemove=[];for(let i=0;i<entries.length;i++){const{type:type,handler:handler,once:once}=entries[i];if(handler({...event,type:type,stopPropagation:stopPropagation,stopImmediatePropagation:stopImmediatePropagation}),once&&entriesToRemove.push(entries[i]),immediatePropagationStopped)break}for(let i=0;i<entriesToRemove.length;i++){const{type:type,handler:handler}=entriesToRemove[i];this.remove(type,handler)}}}_normalizeEvent(event){const rootElement=this.eventManager.getElement();return{...event,...whichButtons(event),...getOffsetPosition(event,rootElement),preventDefault:()=>{event.srcEvent.preventDefault()},stopImmediatePropagation:null,stopPropagation:null,handled:!1,rootElement:rootElement}}}function normalizeRecognizer(item){if("recognizer"in item)return item;let recognizer;const itemArray=Array.isArray(item)?[...item]:[item];if("function"==typeof itemArray[0]){recognizer=new(itemArray.shift())(itemArray.shift()||{})}else recognizer=itemArray.shift();return{recognizer:recognizer,recognizeWith:"string"==typeof itemArray[0]?[itemArray[0]]:itemArray[0],requireFailure:"string"==typeof itemArray[1]?[itemArray[1]]:itemArray[1]}}class EventManager{constructor(element=null,options={}){if(this._onBasicInput=event=>{this.manager.emit(event.srcEvent.type,event)},this._onOtherEvent=event=>{this.manager.emit(event.type,event)},this.options={recognizers:[],events:{},touchAction:"compute",tabIndex:0,cssProps:{},...options},this.events=new Map,this.element=element,element){this.manager=new Manager(element,this.options);for(const item of this.options.recognizers){const{recognizer:recognizer,recognizeWith:recognizeWith,requireFailure:requireFailure}=normalizeRecognizer(item);this.manager.add(recognizer),recognizeWith&&recognizer.recognizeWith(recognizeWith),requireFailure&&recognizer.requireFailure(requireFailure)}this.manager.on("hammer.input",this._onBasicInput),this.wheelInput=new WheelInput(element,this._onOtherEvent,{enable:!1}),this.moveInput=new MoveInput(element,this._onOtherEvent,{enable:!1}),this.keyInput=new KeyInput(element,this._onOtherEvent,{enable:!1,tabIndex:options.tabIndex}),this.contextmenuInput=new ContextmenuInput(element,this._onOtherEvent,{enable:!1}),this.on(this.options.events)}}getElement(){return this.element}destroy(){this.element&&(this.wheelInput.destroy(),this.moveInput.destroy(),this.keyInput.destroy(),this.contextmenuInput.destroy(),this.manager.destroy())}on(event,handler,opts){this._addEventHandler(event,handler,opts,!1)}once(event,handler,opts){this._addEventHandler(event,handler,opts,!0)}watch(event,handler,opts){this._addEventHandler(event,handler,opts,!1,!0)}off(event,handler){this._removeEventHandler(event,handler)}_toggleRecognizer(name,enabled){const{manager:manager}=this;if(!manager)return;const recognizer=manager.get(name);recognizer&&(recognizer.set({enable:enabled}),manager.touchAction.update()),this.wheelInput?.enableEventType(name,enabled),this.moveInput?.enableEventType(name,enabled),this.keyInput?.enableEventType(name,enabled),this.contextmenuInput?.enableEventType(name,enabled)}_addEventHandler(event,handler,opts,once,passive){if("string"!=typeof event){opts=handler;for(const[eventName,eventHandler]of Object.entries(event))this._addEventHandler(eventName,eventHandler,opts,once,passive);return}const{manager:manager,events:events}=this;if(!manager)return;let eventRegistrar=events.get(event);if(!eventRegistrar){const recognizerName=this._getRecognizerName(event)||event;eventRegistrar=new EventRegistrar(this,recognizerName),events.set(event,eventRegistrar),manager&&manager.on(event,eventRegistrar.handleEvent)}eventRegistrar.add(event,handler,opts,once,passive),eventRegistrar.isEmpty()||this._toggleRecognizer(eventRegistrar.recognizerName,!0)}_removeEventHandler(event,handler){if("string"!=typeof event){for(const[eventName,eventHandler]of Object.entries(event))this._removeEventHandler(eventName,eventHandler);return}const{events:events}=this,eventRegistrar=events.get(event);if(eventRegistrar&&(eventRegistrar.remove(event,handler),eventRegistrar.isEmpty())){const{recognizerName:recognizerName}=eventRegistrar;let isRecognizerUsed=!1;for(const eh of events.values())if(eh.recognizerName===recognizerName&&!eh.isEmpty()){isRecognizerUsed=!0;break}isRecognizerUsed||this._toggleRecognizer(recognizerName,!1)}}_getRecognizerName(event){return this.manager.recognizers.find((recognizer=>recognizer.getEventNames().includes(event)))?.options.event}}}}]);