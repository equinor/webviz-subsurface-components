"use strict";(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[2578],{"./packages/subsurface-viewer/src/storybook/examples/CameraControlExamples.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AddLayer:function(){return AddLayer},AutoZoomToBoxStory:function(){return AutoZoomToBoxStory},DisplayCameraState:function(){return DisplayCameraState},ResetCameraStory:function(){return ResetCameraStory},ScaleY:function(){return ScaleY},ScaleZ:function(){return ScaleZ},SyncedMultiView:function(){return SyncedMultiView},SyncedSubsurfaceViewers:function(){return SyncedSubsurfaceViewers},__namedExportsOrder:function(){return __namedExportsOrder}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_deck_gl_mesh_layers_typed__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@deck.gl/mesh-layers/dist/esm/simple-mesh-layer/simple-mesh-layer.js"),_luma_gl_engine__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@luma.gl/engine/dist/esm/geometries/sphere-geometry.js"),_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),_mui_material_Slider__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@mui/material/Slider/Slider.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/subsurface-viewer/src/SubsurfaceViewer.tsx"),_layers__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/subsurface-viewer/src/layers/index.ts"),_sharedSettings__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/subsurface-viewer/src/storybook/sharedSettings.tsx"),_deck_gl_layers_typed__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const stories={parameters:{storySource:{source:'function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from "react";\nimport { SimpleMeshLayer } from "@deck.gl/mesh-layers/typed";\nimport { SphereGeometry } from "@luma.gl/engine";\nimport Box from "@mui/material/Box";\nimport Slider from "@mui/material/Slider";\nimport { styled } from "@mui/material/styles";\nimport SubsurfaceViewer from "../../SubsurfaceViewer";\nimport { Axes2DLayer, AxesLayer } from "../../layers";\nimport { customLayerWithPolygonDataProps, default2DViews, default3DViews, defaultStoryParameters, hugin25mDepthMapLayer, hugin25mKhNetmapMapLayer, hugin25mKhNetmapMapLayerPng, hugin3DBounds, huginAxes3DLayer, mainStyle, northArrowLayer, volveWellsBounds, volveWellsLayer, volveWellsWithLogsLayer } from "../sharedSettings";\nimport { GeoJsonLayer } from "@deck.gl/layers/typed";\nconst stories = {\n  component: SubsurfaceViewer,\n  title: "SubsurfaceViewer/Examples/Camera",\n  args: {\n    // Add a reset button for all the stories.\n    // Somehow, I do not manage to add the triggerHome to the general "unset" controls :/\n    triggerHome: 0\n  }\n};\nexport default stories;\nconst classes = {\n  main: "default-main",\n  mainWithButton: "mian-with-button"\n};\nconst Root = styled("div")({\n  ...mainStyle,\n  [`& .${classes.mainWithButton}`]: {\n    height: 500,\n    border: "1px solid black",\n    background: "azure",\n    position: "relative"\n  }\n});\nconst SQUARE = {\n  type: "Feature",\n  geometry: {\n    type: "Polygon",\n    coordinates: [[[5, 5], [5, 1500], [1500, 1500], [1500, 5], [5, 5]]]\n  }\n};\nconst DisplayCameraPositionComponent = args => {\n  const [cameraState, setCameraState] = React.useState(args.cameraPosition);\n  const getCameraPosition = React.useCallback(input => {\n    setCameraState(input);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SubsurfaceViewer, _extends({}, args, {\n    cameraPosition: args.cameraPosition,\n    getCameraPosition: getCameraPosition\n  })), /*#__PURE__*/React.createElement("div", {\n    style: {\n      position: "absolute",\n      marginLeft: 200\n    }\n  }, /*#__PURE__*/React.createElement("div", null, "zoom: ", cameraState?.zoom), /*#__PURE__*/React.createElement("div", null, "rotationX: ", cameraState?.rotationX), /*#__PURE__*/React.createElement("div", null, "rotationOrbit: ", cameraState?.rotationOrbit), /*#__PURE__*/React.createElement("div", null, "targetX: ", cameraState?.target[0]), /*#__PURE__*/React.createElement("div", null, "targetY: ", cameraState?.target[1])));\n};\nconst cameraPosition = {\n  target: [435800, 6478000, -2000],\n  zoom: -3.5,\n  rotationX: 90,\n  rotationOrbit: 0\n};\nexport const DisplayCameraState = {\n  args: {\n    id: "volve-wells",\n    bounds: volveWellsBounds,\n    layers: [volveWellsLayer],\n    cameraPosition\n  },\n  render: args => /*#__PURE__*/React.createElement(DisplayCameraPositionComponent, args)\n};\nconst SyncedMultiViewComponent = args => {\n  const subsurfaceViewerArgs = {\n    id: "view_state_synchronization",\n    layers: [hugin25mKhNetmapMapLayer, hugin25mDepthMapLayer, volveWellsLayer],\n    views: {\n      layout: [2, 2],\n      viewports: [{\n        id: "view_1",\n        layerIds: [hugin25mDepthMapLayer.id],\n        show3D: args.show3d,\n        isSync: args.sync.includes("view_1")\n      }, {\n        id: "view_2",\n        layerIds: [hugin25mKhNetmapMapLayer.id],\n        show3D: args.show3d,\n        isSync: args.sync.includes("view_2")\n      }, {\n        id: "view_3",\n        layerIds: [volveWellsLayer.id],\n        show3D: args.show3d,\n        isSync: args.sync.includes("view_3")\n      }, {\n        id: "view_4",\n        layerIds: [volveWellsLayer.id, hugin25mDepthMapLayer.id],\n        show3D: args.show3d,\n        isSync: args.sync.includes("view_4")\n      }]\n    }\n  };\n  return /*#__PURE__*/React.createElement(SubsurfaceViewer, subsurfaceViewerArgs);\n};\nexport const SyncedMultiView = {\n  args: {\n    show3d: false,\n    sync: ["view_1", "view_2", "view_3", "view_4"]\n  },\n  argTypes: {\n    sync: {\n      options: ["view_1", "view_2", "view_3", "view_4"],\n      control: "check"\n    }\n  },\n  render: args => /*#__PURE__*/React.createElement(SyncedMultiViewComponent, args)\n};\nconst SyncedCameraSettingsComponent = args => {\n  const [cameraPosition, setCameraPosition] = React.useState(args.cameraPosition);\n  const updateCamera = React.useCallback(camera => {\n    if (args.syncViewers) {\n      setCameraPosition(camera);\n    }\n  }, [args.syncViewers]);\n  React.useEffect(() => {\n    if (args.cameraPosition) {\n      setCameraPosition({\n        ...args.cameraPosition\n      });\n    }\n  }, [args.cameraPosition]);\n  const props = {\n    ...args,\n    cameraPosition,\n    getCameraPosition: updateCamera\n  };\n  return /*#__PURE__*/React.createElement("div", {\n    style: {\n      height: "96vh",\n      display: "grid",\n      gridTemplateColumns: "1fr 1fr"\n    }\n  }, /*#__PURE__*/React.createElement("div", {\n    style: {\n      position: "relative"\n    }\n  }, /*#__PURE__*/React.createElement(SubsurfaceViewer, _extends({}, props, {\n    id: "left"\n  }))), /*#__PURE__*/React.createElement("div", {\n    style: {\n      position: "relative"\n    }\n  }, /*#__PURE__*/React.createElement(SubsurfaceViewer, _extends({}, props, {\n    id: "right"\n  }))));\n};\nexport const SyncedSubsurfaceViewers = {\n  args: {\n    syncViewers: true,\n    id: "volve-wells",\n    bounds: volveWellsBounds,\n    layers: [volveWellsLayer],\n    cameraPosition,\n    views: default2DViews\n  },\n  render: args => /*#__PURE__*/React.createElement(SyncedCameraSettingsComponent, args)\n};\nconst zoomBox3D = [-325, -450, -25, 125, 150, 125];\nconst AutoZoomToBox = args => {\n  const [rotX, setRotX] = React.useState(0);\n  const [rotZ, setRotZ] = React.useState(0);\n  const cameraPosition = {\n    rotationX: rotX,\n    rotationOrbit: rotZ,\n    zoom: zoomBox3D,\n    target: [0, 0, 0]\n  };\n  const props = {\n    ...args,\n    layers: [new AxesLayer({\n      id: "axes",\n      bounds: zoomBox3D,\n      ZIncreasingDownwards: false\n    }), new SimpleMeshLayer({\n      id: "sphere",\n      data: [{}],\n      mesh: new SphereGeometry({\n        nlat: 100,\n        nlong: 100,\n        radius: 30\n      }),\n      wireframe: false,\n      getPosition: [0, 0, 0],\n      getColor: [255, 255, 255],\n      material: true\n    })],\n    cameraPosition\n  };\n  return /*#__PURE__*/React.createElement(Root, null, /*#__PURE__*/React.createElement("div", {\n    className: classes.mainWithButton\n  }, /*#__PURE__*/React.createElement(SubsurfaceViewer, props)), /*#__PURE__*/React.createElement(Box, {\n    flexDirection: "column"\n  }, /*#__PURE__*/React.createElement("label", null, "Rotation X Axis "), /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: 50,\n    valueLabelDisplay: "auto",\n    onChange: (_event, value) => {\n      const angle = 2 * (value / 100 - 0.5) * 90;\n      setRotX(angle);\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    flexDirection: "column"\n  }, /*#__PURE__*/React.createElement("label", null, "Rotation Z Axis "), /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: 50,\n    valueLabelDisplay: "auto",\n    onChange: (_event, value) => {\n      const angle = 2 * (value / 100 - 0.5) * 180;\n      setRotZ(angle);\n    }\n  })));\n};\nexport const AutoZoomToBoxStory = {\n  args: {\n    views: default3DViews\n  },\n  parameters: {\n    docs: {\n      ...defaultStoryParameters.docs,\n      description: {\n        story: ""\n      }\n    }\n  },\n  render: args => /*#__PURE__*/React.createElement(AutoZoomToBox, args)\n};\nconst ScaleZComponent = args => {\n  const [layers, setLayers] = React.useState([huginAxes3DLayer, hugin25mKhNetmapMapLayerPng, northArrowLayer]);\n  const handleChange = () => {\n    setLayers([huginAxes3DLayer, hugin25mKhNetmapMapLayerPng, volveWellsWithLogsLayer, northArrowLayer]);\n  };\n  const props = {\n    ...args,\n    layers\n  };\n  return /*#__PURE__*/React.createElement(Root, null, /*#__PURE__*/React.createElement("div", {\n    className: classes.mainWithButton\n  }, /*#__PURE__*/React.createElement(SubsurfaceViewer, props)), /*#__PURE__*/React.createElement("button", {\n    onClick: handleChange\n  }, "Add layer"));\n};\nexport const ScaleZ = {\n  args: {\n    id: "ScaleZ",\n    layers: [huginAxes3DLayer, hugin25mKhNetmapMapLayerPng, volveWellsWithLogsLayer, northArrowLayer],\n    bounds: volveWellsBounds,\n    views: {\n      layout: [1, 2],\n      viewports: [{\n        id: "view_1",\n        layerIds: [huginAxes3DLayer.id, hugin25mKhNetmapMapLayerPng.id, northArrowLayer.id],\n        show3D: true,\n        isSync: true\n      }, {\n        id: "view_2",\n        layerIds: [huginAxes3DLayer.id, volveWellsWithLogsLayer.id, northArrowLayer.id],\n        show3D: true,\n        isSync: true\n      }]\n    }\n  },\n  parameters: {\n    docs: {\n      ...defaultStoryParameters.docs,\n      description: {\n        story: "Example scaling in z direction using arrow up/down buttons."\n      }\n    }\n  },\n  render: args => /*#__PURE__*/React.createElement(ScaleZComponent, args)\n};\nconst ResetCameraPropertyDefaultCameraPosition = {\n  rotationOrbit: 0,\n  rotationX: 45,\n  target: [435775, 6478650, -2750],\n  zoom: -3.8\n};\nconst ResetCameraComponent = args => {\n  const [camera, setCamera] = React.useState(() => args.cameraPosition ?? ResetCameraPropertyDefaultCameraPosition);\n  const handleChange = () => {\n    setCamera({\n      ...camera,\n      rotationOrbit: camera.rotationOrbit + 5\n    });\n  };\n  const props = {\n    ...args,\n    cameraPosition: camera\n  };\n  return /*#__PURE__*/React.createElement(Root, null, /*#__PURE__*/React.createElement("div", {\n    className: classes.mainWithButton\n  }, /*#__PURE__*/React.createElement(SubsurfaceViewer, props)), /*#__PURE__*/React.createElement("button", {\n    onClick: handleChange\n  }, " Change Camera "));\n};\nexport const ResetCameraStory = {\n  args: {\n    id: "ResetCameraProperty",\n    layers: [huginAxes3DLayer, hugin25mKhNetmapMapLayerPng, northArrowLayer],\n    bounds: volveWellsBounds,\n    cameraPosition: ResetCameraPropertyDefaultCameraPosition,\n    views: default3DViews\n  },\n  parameters: {\n    docs: {\n      ...defaultStoryParameters.docs,\n      description: {\n        story: `Pressing the button \'Change Camera\' does rotate it.`\n      }\n    }\n  },\n  render: args => /*#__PURE__*/React.createElement(ResetCameraComponent, args)\n};\nconst AddLayerComponent = args => {\n  const [layers, setLayers] = React.useState([huginAxes3DLayer, hugin25mKhNetmapMapLayerPng, northArrowLayer]);\n  const handleChange = () => {\n    setLayers([hugin25mKhNetmapMapLayerPng, huginAxes3DLayer, volveWellsWithLogsLayer, northArrowLayer]);\n  };\n  const props = {\n    ...args,\n    layers\n  };\n  return /*#__PURE__*/React.createElement(Root, null, /*#__PURE__*/React.createElement("div", {\n    className: classes.mainWithButton\n  }, /*#__PURE__*/React.createElement(SubsurfaceViewer, props)), /*#__PURE__*/React.createElement("button", {\n    onClick: handleChange\n  }, " Add layer "));\n};\nexport const AddLayer = {\n  args: {\n    id: "map",\n    //bounds: volveWellsBounds,  // Keep this line for future testing.\n    cameraPosition: {\n      rotationOrbit: 45,\n      rotationX: 45,\n      zoom: hugin3DBounds,\n      target: [0, 0, 0]\n    },\n    views: default3DViews\n  },\n  parameters: {\n    docs: {\n      ...defaultStoryParameters.docs,\n      description: {\n        story: `Example using button to add a layer.`\n      }\n    }\n  },\n  render: args => /*#__PURE__*/React.createElement(AddLayerComponent, args)\n};\nconst ScaleYComponent = ({\n  verticalScale\n}) => {\n  const viewerProps = {\n    id: "ScaleY",\n    bounds: [-1000, -1000, 3000, 3000],\n    layers: [new Axes2DLayer({\n      id: "axes"\n    }), new GeoJsonLayer({\n      ...customLayerWithPolygonDataProps,\n      getLineColor: [0, 0, 0],\n      data: SQUARE\n    })],\n    views: {\n      layout: [1, 1],\n      viewports: [{\n        id: "section",\n        verticalScale\n      }]\n    }\n  };\n  return /*#__PURE__*/React.createElement(SubsurfaceViewer, viewerProps);\n};\nexport const ScaleY = {\n  args: {\n    verticalScale: 1.5\n  },\n  argTypes: {\n    verticalScale: {\n      control: {\n        type: "range",\n        min: -1,\n        max: 10,\n        step: 0.1\n      }\n    }\n  },\n  parameters: {\n    docs: {\n      ...defaultStoryParameters.docs,\n      description: {\n        story: "Vertical scaling example in Orthographic view."\n      }\n    }\n  },\n  render: args => /*#__PURE__*/React.createElement(ScaleYComponent, args)\n};',locationsMap:{"display-camera-state":{startLoc:{col:34,line:63},endLoc:{col:1,line:71},startBody:{col:34,line:63},endBody:{col:1,line:71}},"synced-multi-view":{startLoc:{col:31,line:103},endLoc:{col:1,line:115},startBody:{col:31,line:103},endBody:{col:1,line:115}},"synced-subsurface-viewers":{startLoc:{col:39,line:155},endLoc:{col:1,line:165},startBody:{col:39,line:155},endBody:{col:1,line:165}},"auto-zoom-to-box-story":{startLoc:{col:34,line:219},endLoc:{col:1,line:232},startBody:{col:34,line:219},endBody:{col:1,line:232}},"scale-z":{startLoc:{col:22,line:248},endLoc:{col:1,line:277},startBody:{col:22,line:248},endBody:{col:1,line:277}},"reset-camera-story":{startLoc:{col:32,line:302},endLoc:{col:1,line:319},startBody:{col:32,line:302},endBody:{col:1,line:319}},"add-layer":{startLoc:{col:24,line:335},endLoc:{col:1,line:356},startBody:{col:24,line:335},endBody:{col:1,line:356}},"scale-y":{startLoc:{col:22,line:380},endLoc:{col:1,line:403},startBody:{col:22,line:380},endBody:{col:1,line:403}}}}},component:_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,title:"SubsurfaceViewer/Examples/Camera",args:{triggerHome:0}};__webpack_exports__.default=stories;const classes_mainWithButton="mian-with-button",Root=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_4__.ZP)("div")({..._sharedSettings__WEBPACK_IMPORTED_MODULE_3__.HV,[`& .${classes_mainWithButton}`]:{height:500,border:"1px solid black",background:"azure",position:"relative"}}),SQUARE={type:"Feature",geometry:{type:"Polygon",coordinates:[[[5,5],[5,1500],[1500,1500],[1500,5],[5,5]]]}},DisplayCameraPositionComponent=args=>{const[cameraState,setCameraState]=react__WEBPACK_IMPORTED_MODULE_0__.useState(args.cameraPosition),getCameraPosition=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((input=>{setCameraState(input)}),[]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,_extends({},args,{cameraPosition:args.cameraPosition,getCameraPosition:getCameraPosition})),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{position:"absolute",marginLeft:200}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"zoom: ",cameraState?.zoom),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"rotationX: ",cameraState?.rotationX),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"rotationOrbit: ",cameraState?.rotationOrbit),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"targetX: ",cameraState?.target[0]),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"targetY: ",cameraState?.target[1])))},cameraPosition={target:[435800,6478e3,-2e3],zoom:-3.5,rotationX:90,rotationOrbit:0},DisplayCameraState={args:{id:"volve-wells",bounds:_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.z,layers:[_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.ex],cameraPosition:cameraPosition},render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(DisplayCameraPositionComponent,args)},SyncedMultiViewComponent=args=>{const subsurfaceViewerArgs={id:"view_state_synchronization",layers:[_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.vz,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.as,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.ex],views:{layout:[2,2],viewports:[{id:"view_1",layerIds:[_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.as.id],show3D:args.show3d,isSync:args.sync.includes("view_1")},{id:"view_2",layerIds:[_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.vz.id],show3D:args.show3d,isSync:args.sync.includes("view_2")},{id:"view_3",layerIds:[_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.ex.id],show3D:args.show3d,isSync:args.sync.includes("view_3")},{id:"view_4",layerIds:[_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.ex.id,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.as.id],show3D:args.show3d,isSync:args.sync.includes("view_4")}]}};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,subsurfaceViewerArgs)},SyncedMultiView={args:{show3d:!1,sync:["view_1","view_2","view_3","view_4"]},argTypes:{sync:{options:["view_1","view_2","view_3","view_4"],control:"check"}},render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(SyncedMultiViewComponent,args)},SyncedCameraSettingsComponent=args=>{const[cameraPosition,setCameraPosition]=react__WEBPACK_IMPORTED_MODULE_0__.useState(args.cameraPosition),updateCamera=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((camera=>{args.syncViewers&&setCameraPosition(camera)}),[args.syncViewers]);react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{args.cameraPosition&&setCameraPosition({...args.cameraPosition})}),[args.cameraPosition]);const props={...args,cameraPosition:cameraPosition,getCameraPosition:updateCamera};return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{height:"96vh",display:"grid",gridTemplateColumns:"1fr 1fr"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{position:"relative"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,_extends({},props,{id:"left"}))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{position:"relative"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,_extends({},props,{id:"right"}))))},SyncedSubsurfaceViewers={args:{syncViewers:!0,id:"volve-wells",bounds:_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.z,layers:[_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.ex],cameraPosition:cameraPosition,views:_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.zs},render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(SyncedCameraSettingsComponent,args)},zoomBox3D=[-325,-450,-25,125,150,125],AutoZoomToBox=args=>{const[rotX,setRotX]=react__WEBPACK_IMPORTED_MODULE_0__.useState(0),[rotZ,setRotZ]=react__WEBPACK_IMPORTED_MODULE_0__.useState(0),cameraPosition={rotationX:rotX,rotationOrbit:rotZ,zoom:zoomBox3D,target:[0,0,0]},props={...args,layers:[new _layers__WEBPACK_IMPORTED_MODULE_2__.AxesLayer({id:"axes",bounds:zoomBox3D,ZIncreasingDownwards:!1}),new _deck_gl_mesh_layers_typed__WEBPACK_IMPORTED_MODULE_5__.Z({id:"sphere",data:[{}],mesh:new _luma_gl_engine__WEBPACK_IMPORTED_MODULE_6__.Z({nlat:100,nlong:100,radius:30}),wireframe:!1,getPosition:[0,0,0],getColor:[255,255,255],material:!0})],cameraPosition:cameraPosition};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Root,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:classes_mainWithButton},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,props)),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__.Z,{flexDirection:"column"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",null,"Rotation X Axis "),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Slider__WEBPACK_IMPORTED_MODULE_8__.ZP,{defaultValue:50,valueLabelDisplay:"auto",onChange:(_event,value)=>{setRotX(2*(value/100-.5)*90)}})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__.Z,{flexDirection:"column"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",null,"Rotation Z Axis "),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Slider__WEBPACK_IMPORTED_MODULE_8__.ZP,{defaultValue:50,valueLabelDisplay:"auto",onChange:(_event,value)=>{setRotZ(2*(value/100-.5)*180)}})))},AutoZoomToBoxStory={args:{views:_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.Pl},parameters:{docs:{..._sharedSettings__WEBPACK_IMPORTED_MODULE_3__.R4.docs,description:{story:""}}},render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(AutoZoomToBox,args)},ScaleZComponent=args=>{const[layers,setLayers]=react__WEBPACK_IMPORTED_MODULE_0__.useState([_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.QH,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.e1,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.D$]),props={...args,layers:layers};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Root,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:classes_mainWithButton},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,props)),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{onClick:()=>{setLayers([_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.QH,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.e1,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.On,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.D$])}},"Add layer"))},ScaleZ={args:{id:"ScaleZ",layers:[_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.QH,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.e1,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.On,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.D$],bounds:_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.z,views:{layout:[1,2],viewports:[{id:"view_1",layerIds:[_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.QH.id,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.e1.id,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.D$.id],show3D:!0,isSync:!0},{id:"view_2",layerIds:[_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.QH.id,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.On.id,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.D$.id],show3D:!0,isSync:!0}]}},parameters:{docs:{..._sharedSettings__WEBPACK_IMPORTED_MODULE_3__.R4.docs,description:{story:"Example scaling in z direction using arrow up/down buttons."}}},render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(ScaleZComponent,args)},ResetCameraPropertyDefaultCameraPosition={rotationOrbit:0,rotationX:45,target:[435775,6478650,-2750],zoom:-3.8},ResetCameraComponent=args=>{const[camera,setCamera]=react__WEBPACK_IMPORTED_MODULE_0__.useState((()=>args.cameraPosition??ResetCameraPropertyDefaultCameraPosition)),props={...args,cameraPosition:camera};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Root,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:classes_mainWithButton},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,props)),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{onClick:()=>{setCamera({...camera,rotationOrbit:camera.rotationOrbit+5})}}," Change Camera "))},ResetCameraStory={args:{id:"ResetCameraProperty",layers:[_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.QH,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.e1,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.D$],bounds:_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.z,cameraPosition:ResetCameraPropertyDefaultCameraPosition,views:_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.Pl},parameters:{docs:{..._sharedSettings__WEBPACK_IMPORTED_MODULE_3__.R4.docs,description:{story:"Pressing the button 'Change Camera' does rotate it."}}},render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(ResetCameraComponent,args)},AddLayerComponent=args=>{const[layers,setLayers]=react__WEBPACK_IMPORTED_MODULE_0__.useState([_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.QH,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.e1,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.D$]),props={...args,layers:layers};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Root,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:classes_mainWithButton},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,props)),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{onClick:()=>{setLayers([_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.e1,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.QH,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.On,_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.D$])}}," Add layer "))},AddLayer={args:{id:"map",cameraPosition:{rotationOrbit:45,rotationX:45,zoom:_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.yP,target:[0,0,0]},views:_sharedSettings__WEBPACK_IMPORTED_MODULE_3__.Pl},parameters:{docs:{..._sharedSettings__WEBPACK_IMPORTED_MODULE_3__.R4.docs,description:{story:"Example using button to add a layer."}}},render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(AddLayerComponent,args)},ScaleYComponent=({verticalScale:verticalScale})=>{const viewerProps={id:"ScaleY",bounds:[-1e3,-1e3,3e3,3e3],layers:[new _layers__WEBPACK_IMPORTED_MODULE_2__.Axes2DLayer({id:"axes"}),new _deck_gl_layers_typed__WEBPACK_IMPORTED_MODULE_9__.Z({..._sharedSettings__WEBPACK_IMPORTED_MODULE_3__.DW,getLineColor:[0,0,0],data:SQUARE})],views:{layout:[1,1],viewports:[{id:"section",verticalScale:verticalScale}]}};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,viewerProps)},ScaleY={args:{verticalScale:1.5},argTypes:{verticalScale:{control:{type:"range",min:-1,max:10,step:.1}}},parameters:{docs:{..._sharedSettings__WEBPACK_IMPORTED_MODULE_3__.R4.docs,description:{story:"Vertical scaling example in Orthographic view."}}},render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(ScaleYComponent,args)};DisplayCameraState.parameters={...DisplayCameraState.parameters,docs:{...DisplayCameraState.parameters?.docs,source:{originalSource:'{\n  args: {\n    id: "volve-wells",\n    bounds: volveWellsBounds,\n    layers: [volveWellsLayer],\n    cameraPosition\n  },\n  render: args => <DisplayCameraPositionComponent {...args} />\n}',...DisplayCameraState.parameters?.docs?.source}}},SyncedMultiView.parameters={...SyncedMultiView.parameters,docs:{...SyncedMultiView.parameters?.docs,source:{originalSource:'{\n  args: {\n    show3d: false,\n    sync: ["view_1", "view_2", "view_3", "view_4"]\n  },\n  argTypes: {\n    sync: {\n      options: ["view_1", "view_2", "view_3", "view_4"],\n      control: "check"\n    }\n  },\n  render: args => <SyncedMultiViewComponent {...args} />\n}',...SyncedMultiView.parameters?.docs?.source}}},SyncedSubsurfaceViewers.parameters={...SyncedSubsurfaceViewers.parameters,docs:{...SyncedSubsurfaceViewers.parameters?.docs,source:{originalSource:'{\n  args: {\n    syncViewers: true,\n    id: "volve-wells",\n    bounds: volveWellsBounds,\n    layers: [volveWellsLayer],\n    cameraPosition,\n    views: default2DViews\n  },\n  render: args => <SyncedCameraSettingsComponent {...args} />\n}',...SyncedSubsurfaceViewers.parameters?.docs?.source}}},AutoZoomToBoxStory.parameters={...AutoZoomToBoxStory.parameters,docs:{...AutoZoomToBoxStory.parameters?.docs,source:{originalSource:'{\n  args: {\n    views: default3DViews\n  },\n  parameters: {\n    docs: {\n      ...defaultStoryParameters.docs,\n      description: {\n        story: ""\n      }\n    }\n  },\n  render: args => <AutoZoomToBox {...args} />\n}',...AutoZoomToBoxStory.parameters?.docs?.source}}},ScaleZ.parameters={...ScaleZ.parameters,docs:{...ScaleZ.parameters?.docs,source:{originalSource:'{\n  args: {\n    id: "ScaleZ",\n    layers: [huginAxes3DLayer, hugin25mKhNetmapMapLayerPng, volveWellsWithLogsLayer, northArrowLayer],\n    bounds: volveWellsBounds,\n    views: {\n      layout: [1, 2],\n      viewports: [{\n        id: "view_1",\n        layerIds: [huginAxes3DLayer.id, hugin25mKhNetmapMapLayerPng.id, northArrowLayer.id],\n        show3D: true,\n        isSync: true\n      }, {\n        id: "view_2",\n        layerIds: [huginAxes3DLayer.id, volveWellsWithLogsLayer.id, northArrowLayer.id],\n        show3D: true,\n        isSync: true\n      }]\n    }\n  },\n  parameters: {\n    docs: {\n      ...defaultStoryParameters.docs,\n      description: {\n        story: "Example scaling in z direction using arrow up/down buttons."\n      }\n    }\n  },\n  render: args => <ScaleZComponent {...args} />\n}',...ScaleZ.parameters?.docs?.source}}},ResetCameraStory.parameters={...ResetCameraStory.parameters,docs:{...ResetCameraStory.parameters?.docs,source:{originalSource:"{\n  args: {\n    id: \"ResetCameraProperty\",\n    layers: [huginAxes3DLayer, hugin25mKhNetmapMapLayerPng, northArrowLayer],\n    bounds: volveWellsBounds,\n    cameraPosition: ResetCameraPropertyDefaultCameraPosition,\n    views: default3DViews\n  },\n  parameters: {\n    docs: {\n      ...defaultStoryParameters.docs,\n      description: {\n        story: `Pressing the button 'Change Camera' does rotate it.`\n      }\n    }\n  },\n  render: args => <ResetCameraComponent {...args} />\n}",...ResetCameraStory.parameters?.docs?.source}}},AddLayer.parameters={...AddLayer.parameters,docs:{...AddLayer.parameters?.docs,source:{originalSource:'{\n  args: {\n    id: "map",\n    //bounds: volveWellsBounds,  // Keep this line for future testing.\n    cameraPosition: {\n      rotationOrbit: 45,\n      rotationX: 45,\n      zoom: hugin3DBounds,\n      target: [0, 0, 0]\n    },\n    views: default3DViews\n  },\n  parameters: {\n    docs: {\n      ...defaultStoryParameters.docs,\n      description: {\n        story: `Example using button to add a layer.`\n      }\n    }\n  },\n  render: args => <AddLayerComponent {...args} />\n}',...AddLayer.parameters?.docs?.source}}},ScaleY.parameters={...ScaleY.parameters,docs:{...ScaleY.parameters?.docs,source:{originalSource:'{\n  args: {\n    verticalScale: 1.5\n  },\n  argTypes: {\n    verticalScale: {\n      control: {\n        type: "range",\n        min: -1,\n        max: 10,\n        step: 0.1\n      }\n    }\n  },\n  parameters: {\n    docs: {\n      ...defaultStoryParameters.docs,\n      description: {\n        story: "Vertical scaling example in Orthographic view."\n      }\n    }\n  },\n  render: args => <ScaleYComponent {...args} />\n}',...ScaleY.parameters?.docs?.source}}};const __namedExportsOrder=["DisplayCameraState","SyncedMultiView","SyncedSubsurfaceViewers","AutoZoomToBoxStory","ScaleZ","ResetCameraStory","AddLayer","ScaleY"]},"./packages/subsurface-viewer/src/storybook/sharedSettings.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{BX:function(){return EditedDataTemplate},D$:function(){return northArrowLayer},DW:function(){return customLayerWithPolygonDataProps},Dh:function(){return hillshadingLayer},HV:function(){return mainStyle},Jl:function(){return hugin2DBounds},M1:function(){return customLayerWithPolylineData},M8:function(){return volveWellsResources},Ng:function(){return customLayerWithTextData},On:function(){return volveWellsWithLogsLayer},Pl:function(){return default3DViews},QH:function(){return huginAxes3DLayer},R4:function(){return defaultStoryParameters},Rd:function(){return customLayerWithPolygonData},Sh:function(){return classes},Wj:function(){return colormapLayer},as:function(){return hugin25mDepthMapLayer},cs:function(){return hugin5mKhNetmapMapLayer},e1:function(){return hugin25mKhNetmapMapLayerPng},ex:function(){return volveWellsLayer},fC:function(){return Root},iH:function(){return redAxes2DLayer},vj:function(){return subsufaceProps},vz:function(){return hugin25mKhNetmapMapLayer},y8:function(){return volveWellsFromResourcesLayer},yP:function(){return hugin3DBounds},z:function(){return volveWellsBounds},zs:function(){return default2DViews}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/subsurface-viewer/src/SubsurfaceViewer.tsx"),_example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../example-data/deckgl-map.json");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const defaultStoryParameters={docs:{inlineStories:!1,iframeHeight:500}},classes={main:"default-main"},mainStyle={[`& .${classes.main}`]:{width:750,height:500,top:"50%",left:"50%",transform:"translate(-50%, -50%)",border:"1px solid black",background:"azure",position:"absolute"}},Root=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_3__.ZP)("div")(mainStyle),subsufaceProps=_example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0],colormapLayer={..._example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0].layers[0],id:"colormap-layer"},hillshadingLayer={..._example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0].layers[1],id:"hillshading-layer"},redAxes2DLayer={"@@type":"Axes2DLayer",id:"axes-layer",marginH:80,marginV:30,isLeftRuler:!0,isRightRuler:!1,isBottomRuler:!0,isTopRuler:!1,backgroundColor:[155,0,0,255]},hugin2DOrigin=[432150,6475800],hugin2DBounds=[432150,6475800,439400,6481500],hugin3DBounds=[432150,6475800,-2e3,439400,6481500,-3500],huginAxes3DLayer={"@@type":"AxesLayer",id:"axes-layer2",bounds:[432150,6475800,2e3,439400,6481500,3500]},northArrowLayer={"@@type":"NorthArrow3DLayer",id:"north-arrow-layer"},volveWellsResources={resources:{wellsData:"./volve_wells.json"}},volveWellsFromResourcesLayer={"@@type":"WellsLayer",id:"volve-wells",data:"@@#resources.wellsData",ZIncreasingDownwards:!1},volveWellsLayer={"@@type":"WellsLayer",id:"volve-wells",data:"./volve_wells.json",ZIncreasingDownwards:!1},volveWellsBounds=[432150,6475800,439400,6481500],volveWellsWithLogsLayer={"@@type":"WellsLayer",id:"volve-wells-with-logs",data:"./volve_wells.json",logData:"./volve_logs.json",logrunName:"BLOCKING",logName:"ZONELOG",logColor:"Stratigraphy",ZIncreasingDownwards:!1},hugin25mDepthMapLayer={"@@type":"MapLayer",id:"hugin_depth",meshData:"hugin_depth_25_m.float32",frame:{origin:hugin2DOrigin,count:[291,229],increment:[25,25],rotDeg:0},propertiesData:"hugin_depth_25_m.float32",contours:[0,100],isContoursDepth:!0,gridLines:!1,smoothShading:!0,material:!0},hugin25mKhNetmapMapLayer={...hugin25mDepthMapLayer,id:"hugin_kh_netmap",propertiesData:"kh_netmap_25_m.float32",colorMapName:"Physics"},hugin25mKhNetmapMapLayerPng={...hugin25mDepthMapLayer,meshData:"hugin_depth_25_m.png",propertiesData:"kh_netmap_25_m.png",colorMapName:"Physics"},hugin5mKhNetmapMapLayer={"@@type":"MapLayer",id:"mesh-layer",meshUrl:"hugin_depth_5_m.float32",frame:{origin:hugin2DOrigin,count:[1451,1141],increment:[5,5],rotDeg:0},propertiesUrl:"kh_netmap_5_m.float32",contours:[0,100],colorMapName:"Physics"},default2DViews={layout:[1,1],viewports:[{id:"view_1",show3D:!1}]},default3DViews={layout:[1,1],viewports:[{id:"view_1",show3D:!0}]},customLayerWithPolylineData={"@@type":"GeoJsonLayer",id:"geojson-line-layer",name:"Line",data:{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:{type:"LineString",coordinates:[[434e3,6477500],[435500,6477500]]}}]},getLineWidth:20,lineWidthMinPixels:2},customLayerWithPolygonDataProps={id:"geojson-layer",data:{type:"Feature",properties:{},geometry:{type:"Polygon",coordinates:[[[434562,6477595],[434562,6478595],[435062,6478595],[435062,6477595],[434562,6477595]]]}},getLineWidth:20,lineWidthMinPixels:2,getLineColor:[0,255,255],getFillColor:[0,255,0],opacity:.3},customLayerWithPolygonData={...customLayerWithPolygonDataProps,"@@type":"GeoJsonLayer"},customLayerWithTextData={"@@type":"TextLayer",id:"text-layer",name:"Text",data:[{name:"Custom GeoJson layer",coordinates:[434800,6478695]}],pickable:!0,getPosition:d=>d.coordinates,getText:d=>d.name,getColor:[255,0,0],getSize:16,getAngle:0,getTextAnchor:"middle",getAlignmentBaseline:"center"},EditedDataTemplate=args=>{const[editedData,setEditedData]=react__WEBPACK_IMPORTED_MODULE_0__.useState(args.editedData);return react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{setEditedData(args.editedData)}),[args.editedData]),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,_extends({},args,{editedData:editedData,setProps:updatedProps=>{setEditedData(updatedProps.editedData)}}))};try{Root.displayName="Root",Root.__docgenInfo={description:"",displayName:"Root",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/subsurface-viewer/src/storybook/sharedSettings.tsx#Root"]={docgenInfo:Root.__docgenInfo,name:"Root",path:"packages/subsurface-viewer/src/storybook/sharedSettings.tsx#Root"})}catch(__react_docgen_typescript_loader_error){}try{EditedDataTemplate.displayName="EditedDataTemplate",EditedDataTemplate.__docgenInfo={description:"",displayName:"EditedDataTemplate",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},resources:{defaultValue:null,description:"",name:"resources",required:!1,type:{name:"Record<string, unknown>"}},layers:{defaultValue:null,description:"",name:"layers",required:!1,type:{name:"Record<string, unknown>[] | LayersList"}},bounds:{defaultValue:null,description:"",name:"bounds",required:!1,type:{name:"[number, number, number, number] | BoundsAccessor"}},cameraPosition:{defaultValue:null,description:"",name:"cameraPosition",required:!1,type:{name:"ViewStateType"}},triggerHome:{defaultValue:null,description:"",name:"triggerHome",required:!1,type:{name:"number"}},views:{defaultValue:null,description:"",name:"views",required:!1,type:{name:"ViewsType"}},coords:{defaultValue:null,description:"",name:"coords",required:!1,type:{name:"{ visible?: boolean | null; multiPicking?: boolean | null; pickDepth?: number | null | undefined; } | undefined"}},scale:{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"{ visible?: boolean | null; incrementValue?: number | null; widthPerUnit?: number | null | undefined; cssStyle?: Record<string, unknown> | null | undefined; } | undefined"}},coordinateUnit:{defaultValue:null,description:"",name:"coordinateUnit",required:!1,type:{name:"enum",value:[{value:'"m"'},{value:'"mm"'},{value:'"cm"'},{value:'"km"'},{value:'"in"'},{value:'"ft-us"'},{value:'"ft"'},{value:'"yd"'},{value:'"mi"'},{value:'"mm2"'},{value:'"cm2"'},{value:'"m2"'},{value:'"ha"'},{value:'"km2"'},{value:'"in2"'},{value:'"ft2"'},{value:'"ac"'},{value:'"mi2"'},{value:'"mcg"'},{value:'"mg"'},{value:'"g"'},{value:'"kg"'},{value:'"oz"'},{value:'"lb"'},{value:'"mt"'},{value:'"t"'},{value:'"mm3"'},{value:'"cm3"'},{value:'"ml"'},{value:'"l"'},{value:'"kl"'},{value:'"m3"'},{value:'"km3"'},{value:'"tsp"'},{value:'"Tbs"'},{value:'"in3"'},{value:'"fl-oz"'},{value:'"cup"'},{value:'"pnt"'},{value:'"qt"'},{value:'"gal"'},{value:'"ft3"'},{value:'"yd3"'},{value:'"mm3/s"'},{value:'"cm3/s"'},{value:'"ml/s"'},{value:'"cl/s"'},{value:'"dl/s"'},{value:'"l/s"'},{value:'"l/min"'},{value:'"l/h"'},{value:'"kl/s"'},{value:'"kl/min"'},{value:'"kl/h"'},{value:'"m3/s"'},{value:'"m3/min"'},{value:'"m3/h"'},{value:'"km3/s"'},{value:'"tsp/s"'},{value:'"Tbs/s"'},{value:'"in3/s"'},{value:'"in3/min"'},{value:'"in3/h"'},{value:'"fl-oz/s"'},{value:'"fl-oz/min"'},{value:'"fl-oz/h"'},{value:'"cup/s"'},{value:'"pnt/s"'},{value:'"pnt/min"'},{value:'"pnt/h"'},{value:'"qt/s"'},{value:'"gal/s"'},{value:'"gal/min"'},{value:'"gal/h"'},{value:'"ft3/s"'},{value:'"ft3/min"'},{value:'"ft3/h"'},{value:'"yd3/s"'},{value:'"yd3/min"'},{value:'"yd3/h"'},{value:'"C"'},{value:'"F"'},{value:'"K"'},{value:'"R"'},{value:'"ns"'},{value:'"mu"'},{value:'"ms"'},{value:'"s"'},{value:'"min"'},{value:'"h"'},{value:'"d"'},{value:'"week"'},{value:'"month"'},{value:'"year"'},{value:'"Hz"'},{value:'"mHz"'},{value:'"kHz"'},{value:'"MHz"'},{value:'"GHz"'},{value:'"THz"'},{value:'"rpm"'},{value:'"deg/s"'},{value:'"rad/s"'},{value:'"m/s"'},{value:'"km/h"'},{value:'"m/h"'},{value:'"knot"'},{value:'"ft/s"'},{value:'"s/m"'},{value:'"min/km"'},{value:'"s/ft"'},{value:'"min/mi"'},{value:'"Pa"'},{value:'"hPa"'},{value:'"kPa"'},{value:'"MPa"'},{value:'"bar"'},{value:'"torr"'},{value:'"psi"'},{value:'"ksi"'},{value:'"b"'},{value:'"Kb"'},{value:'"Mb"'},{value:'"Gb"'},{value:'"Tb"'},{value:'"B"'},{value:'"KB"'},{value:'"MB"'},{value:'"GB"'},{value:'"TB"'},{value:'"lx"'},{value:'"ft-cd"'},{value:'"ppm"'},{value:'"ppb"'},{value:'"ppt"'},{value:'"ppq"'},{value:'"V"'},{value:'"mV"'},{value:'"kV"'},{value:'"A"'},{value:'"mA"'},{value:'"kA"'},{value:'"W"'},{value:'"mW"'},{value:'"kW"'},{value:'"MW"'},{value:'"GW"'},{value:'"VA"'},{value:'"mVA"'},{value:'"kVA"'},{value:'"MVA"'},{value:'"GVA"'},{value:'"VAR"'},{value:'"mVAR"'},{value:'"kVAR"'},{value:'"MVAR"'},{value:'"GVAR"'},{value:'"Wh"'},{value:'"mWh"'},{value:'"kWh"'},{value:'"MWh"'},{value:'"GWh"'},{value:'"J"'},{value:'"kJ"'},{value:'"VARh"'},{value:'"mVARh"'},{value:'"kVARh"'},{value:'"MVARh"'},{value:'"GVARH"'},{value:'"deg"'},{value:'"rad"'},{value:'"grad"'},{value:'"arcmin"'},{value:'"arcsec"'}]}},colorTables:{defaultValue:null,description:"",name:"colorTables",required:!1,type:{name:"colorTablesArray"}},editedData:{defaultValue:null,description:"",name:"editedData",required:!1,type:{name:"Record<string, unknown>"}},setProps:{defaultValue:null,description:"",name:"setProps",required:!1,type:{name:"((data: Record<string, unknown>) => void)"}},checkDatafileSchema:{defaultValue:null,description:"Validate JSON datafile against schema",name:"checkDatafileSchema",required:!1,type:{name:"boolean"}},onMouseEvent:{defaultValue:null,description:"For get mouse events",name:"onMouseEvent",required:!1,type:{name:"((event: MapMouseEvent) => void)"}},getCameraPosition:{defaultValue:null,description:"",name:"getCameraPosition",required:!1,type:{name:"((input: ViewStateType) => void)"}},onRenderingProgress:{defaultValue:null,description:"Will be called while layers are processed to rendered data.\n@param progress vlaue between 0 and 100.",name:"onRenderingProgress",required:!1,type:{name:"((progress: number) => void)"}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:"((info: PickingInfo, event: MjolnirGestureEvent) => void)"}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:"((info: PickingInfo, event: MjolnirGestureEvent) => void)"}},triggerResetMultipleWells:{defaultValue:null,description:"",name:"triggerResetMultipleWells",required:!1,type:{name:"number"}},selection:{defaultValue:null,description:"Range selection of the current well",name:"selection",required:!1,type:{name:"{ well: string; selection: [number, number | undefined] | undefined; } | undefined"}},getTooltip:{defaultValue:null,description:"Override default tooltip with a callback.",name:"getTooltip",required:!1,type:{name:"TooltipCallback"}},lights:{defaultValue:null,description:"",name:"lights",required:!1,type:{name:"LightsType"}},typedArraySupport:{defaultValue:null,description:"If set to true allows to use typed arrays in layer description JS objects.",name:"typedArraySupport",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/subsurface-viewer/src/storybook/sharedSettings.tsx#EditedDataTemplate"]={docgenInfo:EditedDataTemplate.__docgenInfo,name:"EditedDataTemplate",path:"packages/subsurface-viewer/src/storybook/sharedSettings.tsx#EditedDataTemplate"})}catch(__react_docgen_typescript_loader_error){}},"../example-data/deckgl-map.json":function(module){module.exports=JSON.parse('[{"id":"DeckGL-Map","coords":{"visible":true,"multiPicking":true,"pickDepth":10},"scale":{"visible":true,"incrementValue":100,"widthPerUnit":100,"cssStyle":{"left":10,"top":10}},"coordinateUnit":"m","resources":{"propertyMap":"propertyMap.png","depthMap":"propertyMap.png","wellsData":"volve_wells.json","logData":"volve_logs.json"},"bounds":[432205,6475078,437720,6481113],"layers":[{"@@type":"ColormapLayer","image":"@@#resources.propertyMap","rotDeg":0,"bounds":[432205,6475078,437720,6481113],"colorMapName":"Rainbow","valueRange":[2782,3513],"colorMapRange":[2782,3513]},{"@@type":"Hillshading2DLayer","bounds":[432205,6475078,437720,6481113],"valueRange":[2782,3513],"rotDeg":0,"image":"@@#resources.depthMap"},{"@@type":"WellsLayer","data":"@@#resources.wellsData","logData":"@@#resources.logData","logrunName":"BLOCKING","logName":"ZONELOG","logColor":"Stratigraphy"},{"@@type":"FaultPolygonsLayer","data":"fault_polygons.geojson"},{"@@type":"PieChartLayer","data":"piechart.json"},{"@@type":"NorthArrow3DLayer","visible":true},{"@@type":"DrawingLayer"}],"editedData":{},"views":{"layout":[1,1],"showLabel":false,"viewports":[{"id":"view_1","show3D":false,"layerIds":[]}]}}]')}}]);