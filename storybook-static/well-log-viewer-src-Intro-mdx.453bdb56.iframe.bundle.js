/*! For license information please see well-log-viewer-src-Intro-mdx.453bdb56.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[7275],{"./node_modules/@mdx-js/react/lib/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{R:function(){return useMDXComponents},x:function(){return MDXProvider}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./packages/well-log-viewer/src/Intro.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:function(){return MDXContent}});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),WellLogViewer_namespaceObject=__webpack_require__.p+"static/media/WellLogViewer.5b0904e7.png",Layout_namespaceObject=__webpack_require__.p+"static/media/Layout.92ee5c4a.png";function _createMdxContent(props){const _components={a:"a",em:"em",h1:"h1",h2:"h2",h4:"h4",li:"li",p:"p",ul:"ul",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{title:"WellLogViewer/Overview"}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"welllogview-examples",children:"WellLogView examples"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"introduction",children:"Introduction"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["These stories contain examples of usage of components for visualization of well log data files.\nThere are two main examples:\n",(0,jsx_runtime.jsx)(_components.a,{href:"#welllogviewer-component",children:"WellLogViewer"})," wich contains essential parts of typical well log viewer\nand ",(0,jsx_runtime.jsx)(_components.a,{href:"#synclogviewer-component",children:"SyncLogViewer"})," wich contains synchronized views for three different log files."]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"welllogview-component",children:"WellLogView component"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.a,{href:"?path=/docs/welllogviewer-components-welllogview--default",children:"WellLogView"})," is a basic react component to wrap ",(0,jsx_runtime.jsx)(_components.a,{href:"https://github.com/equinor/videx-wellog",rel:"nofollow",children:"ViDEx well log"})," library for drawing well log data."]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The component can zoom and pan visible area of tracks by mouse and support selecting of depth interval."}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"As input data it accept data files in following formats:"}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"well-log-data-format",children:"Well Log Data Format"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The JSON Well Log Format is used in WellLogView component for input Well Log data files."}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"It is a modern well log format created in order to overcome the deficiencies of existing formats.\nIt is based on the JavaScript Object Notation open standard (RFC 8259).\nFull description of the format could be found on the site https://jsonwelllogformat.org ."}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The file format could be described with a following\n",(0,jsx_runtime.jsx)(_components.a,{href:"https://github.com/equinor/webviz-subsurface-components/blob/master/typescript/packages/wsc-common/src/inputSchema/WellLogs.json",rel:"nofollow",children:"JSON schema"})]}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"template-format",children:"Template Format"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The JSON file describing content of well log view: what tracks should be displayed and what curves it should contains."}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The file format could be described with a following\n",(0,jsx_runtime.jsx)(_components.a,{href:"https://github.com/equinor/webviz-subsurface-components/blob/master/typescript/packages/wsc-common/src/inputSchema/WellLogTemplate.json",rel:"nofollow",children:"JSON schema"})]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["See also ",(0,jsx_runtime.jsx)(_components.a,{href:"/https://github.com/equinor/webviz-subsurface-components/tree/master/typescript/packages/wsc-common",children:"wsc-common"})," package\nwhich could vaidate data against appropriate schema"]}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"color-table-format",children:"Color Table Format"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The JSON file used as a supplement to template file and describe color tables for visualizing different type of log curves."}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["See also ",(0,jsx_runtime.jsx)(_components.a,{href:"https://github.com/emerson-eps/color-tables",rel:"nofollow",children:"@emerson-eps/color-tables"})," component."]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"welllogviewer-component",children:"WellLogViewer component"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.a,{href:"?path=/story/welllogviewer-demo-welllogviewer--default",children:"A demo component"})," to deal with WellLogView component.\nIt contains WellLogView component surrounded by auxiliary components:\nreadout panel, axis selector and zoom slider."]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The number and properties of tracks and curves could be interactively edited by corresponding content menus and dialog boxes."}),"\n",(0,jsx_runtime.jsx)("img",{src:WellLogViewer_namespaceObject}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:(0,jsx_runtime.jsx)(_components.em,{children:"WellLogViewer component architecture."})}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Auxiliary side panels could be places in six different positions. ",(0,jsx_runtime.jsx)(_components.a,{href:"?path=/story/welllogviewer-demo-synclogviewer--custom-layout",children:"An example."})]}),"\n",(0,jsx_runtime.jsx)("img",{src:Layout_namespaceObject}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:(0,jsx_runtime.jsx)(_components.em,{children:"WellLogViewer component layout."})}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"WebLogViewer (and SyncLogViewer) have a prop “layout” which could contain information about desirable side panels and their position.\nIf the prop is undefined a default panel is generated at the right position."}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"All panels could obtain useful information about current zoom, visible area, readings and so on in the same way is it done in a default implementation.\n(DefaultWellLogViewerLayout.tsx DefaultSyncLogViewerLayout.tsx)\nA class CallbackManager allows side panel and its components to obtain various notifications from WellLogView object."}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"synclogviewer-component",children:"SyncLogViewer component"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.a,{href:"?path=/story/welllogviewer-demo-synclogviewer--default",children:"An example"})," for three linked WellLogView components.\nIt demonstrate how different well log views can be synchronized in such complex programs as well correlation applications."]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The component architecture is similar to WellLogViewer's one but contains three views for well logs an three readout panels."}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"When SyncLogViewer has more than one WellLogView different synchonization modes between them could be applied."}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:"Selections synchronization could be turn on with syncContentSelection prop."}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"Visible areas synchronization could be turn on with syncContentDomain prop."}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"Another way to synchronize visible area is using of wellpicks flatting (wellpickFlatting prop) when some wellpick are aligned to one flat line."}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"implementaion-notes",children:"Implementaion notes"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"welllogview-component-1",children:"WellLogView component"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"In addition to the videx-wellog functionality, drawing wellpicks and filling the areas between them are added.\nIt is implemented with additional overlay for videx-wellog (see function addWellPickOverlay in components\\WellLogView.tsx)"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"synclogviewer-component-1",children:"SyncLogViewer component"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"In addition to WellLogViewer component SyncLogViewer use WellLogSpacer component to fill area between well logs.\nIts appearance is controlled with spacers and wellDistances props of SyncLogViewer"})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./node_modules/@storybook/core/dist/components sync recursive":function(module){function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=function(){return[]},webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/core/dist/components sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/core/dist/theming sync recursive":function(module){function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=function(){return[]},webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/core/dist/theming sync recursive",module.exports=webpackEmptyContext},"./node_modules/memoizerific sync recursive":function(module){function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=function(){return[]},webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/memoizerific sync recursive",module.exports=webpackEmptyContext},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":function(__unused_webpack_module,exports,__webpack_require__){"use strict";var f=__webpack_require__("./node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":function(module,__unused_webpack_exports,__webpack_require__){"use strict";module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")}}]);