"use strict";(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[7405],{"./node_modules/@luma.gl/engine/dist/geometries/sphere-geometry.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{G:function(){return SphereGeometry}});var _luma_gl_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@luma.gl/core/dist/utils/utils.js"),_geometry_geometry_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@luma.gl/engine/dist/geometry/geometry.js");class SphereGeometry extends _geometry_geometry_js__WEBPACK_IMPORTED_MODULE_0__.V{constructor(props={}){const{id:id=(0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_1__.L)("sphere-geometry")}=props,{indices:indices,attributes:attributes}=function tesselateSphere(props){const{nlat:nlat=10,nlong:nlong=10}=props,startLat=0,latRange=Math.PI-startLat,startLong=0,longRange=2*Math.PI-startLong,numVertices=(nlat+1)*(nlong+1),radius=(n1,n2,n3,u,v)=>props.radius||1,positions=new Float32Array(3*numVertices),normals=new Float32Array(3*numVertices),texCoords=new Float32Array(2*numVertices),indices=new(numVertices>65535?Uint32Array:Uint16Array)(nlat*nlong*6);for(let y=0;y<=nlat;y++)for(let x=0;x<=nlong;x++){const u=x/nlong,v=y/nlat,index=x+y*(nlong+1),i2=2*index,i3=3*index,theta=longRange*u,phi=latRange*v,sinTheta=Math.sin(theta),cosTheta=Math.cos(theta),sinPhi=Math.sin(phi),ux=cosTheta*sinPhi,uy=Math.cos(phi),uz=sinTheta*sinPhi,r=radius(ux,uy,uz,u,v);positions[i3+0]=r*ux,positions[i3+1]=r*uy,positions[i3+2]=r*uz,normals[i3+0]=ux,normals[i3+1]=uy,normals[i3+2]=uz,texCoords[i2+0]=u,texCoords[i2+1]=1-v}const numVertsAround=nlong+1;for(let x=0;x<nlong;x++)for(let y=0;y<nlat;y++){const index=6*(x*nlat+y);indices[index+0]=y*numVertsAround+x,indices[index+1]=y*numVertsAround+x+1,indices[index+2]=(y+1)*numVertsAround+x,indices[index+3]=(y+1)*numVertsAround+x,indices[index+4]=y*numVertsAround+x+1,indices[index+5]=(y+1)*numVertsAround+x+1}return{indices:{size:1,value:indices},attributes:{POSITION:{size:3,value:positions},NORMAL:{size:3,value:normals},TEXCOORD_0:{size:2,value:texCoords}}}}(props);super({...props,id:id,topology:"triangle-list",indices:indices,attributes:{...attributes,...props.attributes}})}}},"./packages/subsurface-viewer/src/storybook/examples/CameraControlExamples.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AddLayer:function(){return AddLayer},AutoZoomToBoxStory:function(){return AutoZoomToBoxStory},DisplayCameraState:function(){return DisplayCameraState},RotateCameraStory:function(){return RotateCameraStory},ScaleFactorHook:function(){return ScaleFactorHook},ScaleVertical3d:function(){return ScaleVertical3d},ScaleY:function(){return ScaleY},ScaleYWithCameraPosition:function(){return ScaleYWithCameraPosition},ScaleZ:function(){return ScaleZ},SyncedMultiView:function(){return SyncedMultiView},SyncedSubsurfaceViewers:function(){return SyncedSubsurfaceViewers},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return CameraControlExamples_stories}});var lodash=__webpack_require__("./node_modules/lodash/lodash.js"),dist=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),react=__webpack_require__("./node_modules/react/index.js"),simple_mesh_layer=__webpack_require__("./node_modules/@deck.gl/mesh-layers/dist/simple-mesh-layer/simple-mesh-layer.js"),sphere_geometry=__webpack_require__("./node_modules/@luma.gl/engine/dist/geometries/sphere-geometry.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),Slider=__webpack_require__("./node_modules/@mui/material/Slider/Slider.js"),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),SubsurfaceViewer=__webpack_require__("./packages/subsurface-viewer/src/SubsurfaceViewer.tsx"),src_layers=__webpack_require__("./packages/subsurface-viewer/src/layers/index.ts"),geojson_layer=__webpack_require__("./node_modules/@deck.gl/layers/dist/geojson-layer/geojson-layer.js"),sharedSettings=__webpack_require__("./packages/subsurface-viewer/src/storybook/sharedSettings.tsx"),view=__webpack_require__("./node_modules/@deck.gl/core/dist/views/view.js");const DashSubsurfaceViewer=props=>{const{children:children,...rest}=props;return react.createElement(SubsurfaceViewer.A,rest,function mapAnnotation(annotationContainers){return react.Children.map(annotationContainers,(annotationContainer=>{const viewId=annotationContainer.key;return react.createElement(view.A,{key:viewId,id:viewId},annotationContainer)}))}(children))};DashSubsurfaceViewer.__docgenInfo={description:"",methods:[],displayName:"DashSubsurfaceViewer",props:{layers:{required:!1,tsType:{name:"Array",elements:[{name:"union",raw:"| Record<string, unknown>\n| Layer\n| false\n| null\n| undefined",elements:[{name:"Record",elements:[{name:"string"},{name:"unknown"}],raw:"Record<string, unknown>"},{name:"Layer"},{name:"literal",value:"false"},{name:"null"},{name:"undefined"}]}],raw:"TLayerDefinition[]"},description:"Array of externally created layers or layer definition records or JSON strings.\nAdd '@@typedArraySupport' : true in a layer definition in order to\nuse typed arrays as inputs."},setProps:{required:!1,tsType:{name:"signature",type:"function",raw:"(data: Record<string, unknown>) => void",signature:{arguments:[{type:{name:"Record",elements:[{name:"string"},{name:"unknown"}],raw:"Record<string, unknown>"},name:"data"}],return:{name:"void"}}},description:"@deprecated Used by layers to propagate state to component, eg. selected\nwells from the Wells layer. Use client code to handle layer state\ninstead."}},composes:["Omit"]};var camera=__webpack_require__("./packages/subsurface-viewer/src/utils/camera.ts"),utils_event=__webpack_require__("./packages/subsurface-viewer/src/utils/event.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var CameraControlExamples_stories={component:SubsurfaceViewer.A,title:"SubsurfaceViewer/Examples/Camera",args:{triggerHome:0}};const classes_mainWithButton="mian-with-button",Root=(0,styled.Ay)("div")({...sharedSettings.j1,[`& .${classes_mainWithButton}`]:{height:500,border:"1px solid black",background:"azure",position:"relative"}}),CAMERA_POSITION={target:[435800,6478e3,-2e3],zoom:-3.5,rotationX:90,rotationOrbit:0},SIDE_CAMERA={rotationX:0,target:[435800,6478e3,-3250],rotationOrbit:90,zoom:-3.3},SQUARE_GEOMETRY_LAYER=new geojson_layer.A({...sharedSettings.z6,data:{type:"Feature",geometry:{type:"Polygon",coordinates:[[[-5,-5,0],[-5,5,0],[5,5,0],[5,-5,0],[-5,-5,0]]]}}}),AXES2D=new src_layers.Axes2DLayer({id:"axes",backgroundColor:[0,155,155]}),DEFAULT_PROPS={id:"default",layers:[sharedSettings.vq,sharedSettings.C9],views:sharedSettings.Hf},DisplayCameraPositionComponent=args=>{const[cameraState,setCameraState]=react.useState(args.cameraPosition),getCameraPosition=react.useCallback((input=>{setCameraState(input)}),[]);return react.createElement(react.Fragment,null,react.createElement(SubsurfaceViewer.A,_extends({},args,{cameraPosition:args.cameraPosition,getCameraPosition:getCameraPosition})),react.createElement("div",{style:{position:"absolute",marginLeft:200}},react.createElement("div",null,"zoom: ",cameraState?.zoom),react.createElement("div",null,"rotationX: ",cameraState?.rotationX),react.createElement("div",null,"rotationOrbit: ",cameraState?.rotationOrbit),react.createElement("div",null,"targetX: ",cameraState?.target?.[0]),react.createElement("div",null,"targetY: ",cameraState?.target?.[1])))},DisplayCameraState={args:{id:"volve-wells",bounds:sharedSettings.zJ,layers:[sharedSettings.rz],cameraPosition:CAMERA_POSITION},render:args=>react.createElement(DisplayCameraPositionComponent,args)},SyncedMultiViewComponent=args=>{const subsurfaceViewerArgs={id:"view_state_synchronization",layers:[sharedSettings.HU,sharedSettings.C9,sharedSettings.rz],views:{layout:[2,2],viewports:[{id:"view_1",layerIds:[sharedSettings.C9.id],show3D:args.show3d,isSync:args.sync.includes("view_1")},{id:"view_2",layerIds:[sharedSettings.HU.id],show3D:args.show3d,isSync:args.sync.includes("view_2")},{id:"view_3",layerIds:[sharedSettings.rz.id],show3D:args.show3d,isSync:args.sync.includes("view_3")},{id:"view_4",layerIds:[sharedSettings.rz.id,sharedSettings.C9.id],show3D:args.show3d,isSync:args.sync.includes("view_4")}]}};return react.createElement(SubsurfaceViewer.A,subsurfaceViewerArgs)},SyncedMultiView={args:{show3d:!1,sync:["view_1","view_2","view_3","view_4"]},argTypes:{sync:{options:["view_1","view_2","view_3","view_4"],control:"check"}},render:args=>react.createElement(SyncedMultiViewComponent,args)},SyncedCameraSettingsComponent=args=>{const[cameraPosition,setCameraPosition]=react.useState(args.cameraPosition),updateCamera=react.useCallback((camera=>{args.syncViewers&&setCameraPosition(camera)}),[args.syncViewers]);react.useEffect((()=>{args.cameraPosition&&setCameraPosition({...args.cameraPosition})}),[args.cameraPosition]);const props={...args,cameraPosition:cameraPosition,getCameraPosition:updateCamera};return react.createElement("div",{style:{height:"96vh",display:"grid",gridTemplateColumns:"1fr 1fr"}},react.createElement("div",{style:{position:"relative"}},react.createElement(SubsurfaceViewer.A,_extends({},props,{id:"left"}))),react.createElement("div",{style:{position:"relative"}},react.createElement(SubsurfaceViewer.A,_extends({},props,{id:"right"}))))},SyncedSubsurfaceViewers={args:{syncViewers:!0,id:"volve-wells",bounds:sharedSettings.zJ,layers:[sharedSettings.rz],cameraPosition:CAMERA_POSITION,views:sharedSettings.eD},render:args=>react.createElement(SyncedCameraSettingsComponent,args)},zoomBox3D=[-325,-450,-25,125,150,125],AutoZoomToBox=args=>{const[rotX,setRotX]=react.useState(0),[rotZ,setRotZ]=react.useState(0),cameraPosition={rotationX:rotX,rotationOrbit:rotZ,zoom:zoomBox3D,target:void 0},props={...args,layers:[new src_layers.AxesLayer({id:"axes",bounds:zoomBox3D,ZIncreasingDownwards:!1}),new simple_mesh_layer.A({id:"sphere",data:[{}],mesh:new sphere_geometry.G({nlat:100,nlong:100,radius:30}),wireframe:!1,getPosition:[0,0,0],getColor:[255,255,255],material:!0})],cameraPosition:cameraPosition};return react.createElement(Root,null,react.createElement("div",{className:classes_mainWithButton},react.createElement(SubsurfaceViewer.A,props)),react.createElement(Box.A,{flexDirection:"column"},react.createElement("label",null,"Rotation X Axis "),react.createElement(Slider.Ay,{defaultValue:50,valueLabelDisplay:"auto",onChange:(_event,value)=>{setRotX(2*(value/100-.5)*90)}})),react.createElement(Box.A,{flexDirection:"column"},react.createElement("label",null,"Rotation Z Axis "),react.createElement(Slider.Ay,{defaultValue:50,valueLabelDisplay:"auto",onChange:(_event,value)=>{setRotZ(2*(value/100-.5)*180)}})))},AutoZoomToBoxStory={args:{views:sharedSettings.Hf},parameters:{docs:{...sharedSettings.dr.docs,description:{story:""}}},render:args=>react.createElement(AutoZoomToBox,args)},ScaleZComponent=args=>{const[layers,setLayers]=react.useState([sharedSettings.vq,sharedSettings.wi,sharedSettings.un]),props={...args,layers:layers};return react.createElement(Root,null,react.createElement("div",{className:classes_mainWithButton},react.createElement(SubsurfaceViewer.A,props)),react.createElement("button",{onClick:()=>{setLayers([sharedSettings.vq,sharedSettings.wi,sharedSettings.Uz,sharedSettings.un])}},"Add layer"))},ScaleZ={args:{id:"ScaleZ",layers:[sharedSettings.vq,sharedSettings.wi,sharedSettings.Uz,sharedSettings.un],bounds:sharedSettings.zJ,views:{layout:[1,2],viewports:[{id:"view_1",layerIds:[sharedSettings.vq.id,sharedSettings.wi.id,sharedSettings.un.id],show3D:!0,isSync:!0},{id:"view_2",layerIds:[sharedSettings.vq.id,sharedSettings.Uz.id,sharedSettings.un.id],show3D:!0,isSync:!0}]}},parameters:{docs:{...sharedSettings.dr.docs,description:{story:"Example scaling in z direction using arrow up/down buttons."}}},render:args=>react.createElement(ScaleZComponent,args)},ResetCameraPropertyDefaultCameraPosition={rotationOrbit:0,rotationX:45,target:[435775,6478650,-2750],zoom:-3.8},ResetCameraComponent=args=>{const currentCameraRef=react.useRef(null),initialCamera=react.useMemo((()=>(currentCameraRef.current=(0,lodash.cloneDeep)(args.cameraPosition??ResetCameraPropertyDefaultCameraPosition),currentCameraRef.current)),[args.cameraPosition,args.triggerHome]),[_camera,setCamera]=react.useState((()=>initialCamera)),onCameraChanged=react.useCallback((camera=>{currentCameraRef.current=camera}),[]),rotateCamera=react.useCallback((()=>{currentCameraRef.current=(0,lodash.cloneDeep)(currentCameraRef.current),currentCameraRef.current&&(currentCameraRef.current.rotationOrbit+=5,setCamera(currentCameraRef.current))}),[]),props={...args,getCameraPosition:onCameraChanged,cameraPosition:currentCameraRef.current??void 0};return react.createElement(Root,null,react.createElement("div",{className:classes_mainWithButton},react.createElement(SubsurfaceViewer.A,props)),react.createElement("button",{onClick:rotateCamera}," Rotate Camera "))},RotateCameraStory={args:{id:"RotateCameraProperty",layers:[sharedSettings.vq,sharedSettings.wi,sharedSettings.un],bounds:sharedSettings.zJ,cameraPosition:ResetCameraPropertyDefaultCameraPosition,views:sharedSettings.Hf},parameters:{docs:{...sharedSettings.dr.docs,description:{story:"Pressing the button 'Change Camera' does rotate it."}}},render:args=>react.createElement(ResetCameraComponent,args)},AddLayerComponent=args=>{const[layers,setLayers]=react.useState([sharedSettings.vq,sharedSettings.wi,sharedSettings.un]),props={...args,layers:layers};return react.createElement(Root,null,react.createElement("div",{className:classes_mainWithButton},react.createElement(SubsurfaceViewer.A,props)),react.createElement("button",{onClick:()=>{setLayers([sharedSettings.wi,sharedSettings.vq,sharedSettings.Uz,sharedSettings.un])}}," Add layer "))},AddLayer={args:{id:"map",cameraPosition:{rotationOrbit:45,rotationX:45,zoom:sharedSettings.Cp,target:void 0},views:sharedSettings.Hf},parameters:{docs:{...sharedSettings.dr.docs,description:{story:"Example using button to add a layer."}}},render:args=>react.createElement(AddLayerComponent,args)},ScaleYComponent=({verticalScale:verticalScale})=>{const viewerProps={id:"ScaleY",bounds:[-10,-10,10,10],layers:[AXES2D,SQUARE_GEOMETRY_LAYER],views:{layout:[1,1],viewports:[{id:"section",verticalScale:verticalScale,zoom:2}]}};return react.createElement(SubsurfaceViewer.A,viewerProps)},ScaleY={args:{verticalScale:1.5},argTypes:{verticalScale:{control:{type:"range",min:-1,max:10,step:.1}}},parameters:{docs:{...sharedSettings.dr.docs,description:{story:"Vertical scaling example in Orthographic view."}}},render:args=>react.createElement(ScaleYComponent,args)},ScaleYWithCameraPositionComponent=({verticalScale:verticalScale})=>{const xyZoom=(0,camera.KD)(verticalScale,3),viewerProps={id:"ScaleY",layers:[AXES2D,SQUARE_GEOMETRY_LAYER],cameraPosition:{rotationOrbit:0,rotationX:0,zoom:xyZoom,target:[1,1,1]}};return react.createElement(SubsurfaceViewer.A,viewerProps)},ScaleYWithCameraPosition={args:{verticalScale:2.5},argTypes:{verticalScale:{control:{type:"range",min:-1,max:10,step:.1}}},parameters:{docs:{...sharedSettings.dr.docs,description:{story:"Orthographic vertical scaling with multiple camera definitions."}}},render:args=>react.createElement(ScaleYWithCameraPositionComponent,args)},ScaleVertical3dComponent=props=>{const viewerProps={...DEFAULT_PROPS,cameraPosition:SIDE_CAMERA,...props};return react.createElement(SubsurfaceViewer.A,viewerProps)},ScaleVertical3d={args:{verticalScale:1.5},argTypes:{verticalScale:{control:{type:"range",min:-1,max:10,step:.1}}},parameters:{docs:{...sharedSettings.dr.docs,description:{story:"Vertical scaling example in panoramic view."}}},render:args=>react.createElement(ScaleVertical3dComponent,args)},ScaleFactorHookComponent=props=>{const{factor:scaleFactor,setFactor:setFactor,elementRef:elementRef}=(0,utils_event.f)();react.useEffect((()=>{setFactor(props.verticalScale)}),[setFactor,props.verticalScale]);const viewerProps={...DEFAULT_PROPS,cameraPosition:SIDE_CAMERA,...props,verticalScale:scaleFactor,innerRef:elementRef,coords:{visible:!1}};return react.createElement(SubsurfaceViewer.A,viewerProps)},ScaleFactorHook={args:{verticalScale:1},argTypes:{verticalScale:{control:{type:"range",min:-1,max:10,step:.1}}},parameters:{docs:{...sharedSettings.dr.docs,description:{story:"Using a hook to control vertical scaling either via props or keyboard shortcuts."}}},render:args=>react.createElement(ScaleFactorHookComponent,args),play:async()=>{const canvas=document.querySelector("canvas");canvas&&await dist.Q4.click(canvas),await dist.Q4.keyboard("[ArrowUp]",{delay:500}),await dist.Q4.keyboard("[ArrowDown]",{delay:500}),await dist.Q4.keyboard("[ArrowUp]",{delay:500})}},__namedExportsOrder=["DisplayCameraState","SyncedMultiView","SyncedSubsurfaceViewers","AutoZoomToBoxStory","ScaleZ","RotateCameraStory","AddLayer","ScaleY","ScaleYWithCameraPosition","ScaleVertical3d","ScaleFactorHook"];DisplayCameraState.parameters={...DisplayCameraState.parameters,docs:{...DisplayCameraState.parameters?.docs,source:{originalSource:'{\n  args: {\n    id: "volve-wells",\n    bounds: volveWellsBounds,\n    layers: [volveWellsLayer],\n    cameraPosition: CAMERA_POSITION\n  },\n  render: args => <DisplayCameraPositionComponent {...args} />\n}',...DisplayCameraState.parameters?.docs?.source}}},SyncedMultiView.parameters={...SyncedMultiView.parameters,docs:{...SyncedMultiView.parameters?.docs,source:{originalSource:'{\n  args: {\n    show3d: false,\n    sync: ["view_1", "view_2", "view_3", "view_4"]\n  },\n  argTypes: {\n    sync: {\n      options: ["view_1", "view_2", "view_3", "view_4"],\n      control: "check"\n    }\n  },\n  render: args => <SyncedMultiViewComponent {...args} />\n}',...SyncedMultiView.parameters?.docs?.source}}},SyncedSubsurfaceViewers.parameters={...SyncedSubsurfaceViewers.parameters,docs:{...SyncedSubsurfaceViewers.parameters?.docs,source:{originalSource:'{\n  args: {\n    syncViewers: true,\n    id: "volve-wells",\n    bounds: volveWellsBounds,\n    layers: [volveWellsLayer],\n    cameraPosition: CAMERA_POSITION,\n    views: default2DViews\n  },\n  render: args => <SyncedCameraSettingsComponent {...args} />\n}',...SyncedSubsurfaceViewers.parameters?.docs?.source}}},AutoZoomToBoxStory.parameters={...AutoZoomToBoxStory.parameters,docs:{...AutoZoomToBoxStory.parameters?.docs,source:{originalSource:'{\n  args: {\n    views: default3DViews\n  },\n  parameters: {\n    docs: {\n      ...defaultStoryParameters.docs,\n      description: {\n        story: ""\n      }\n    }\n  },\n  render: args => <AutoZoomToBox {...args} />\n}',...AutoZoomToBoxStory.parameters?.docs?.source}}},ScaleZ.parameters={...ScaleZ.parameters,docs:{...ScaleZ.parameters?.docs,source:{originalSource:'{\n  args: {\n    id: "ScaleZ",\n    layers: [huginAxes3DLayer, hugin25mKhNetmapMapLayerPng, volveWellsWithLogsLayer, northArrowLayer],\n    bounds: volveWellsBounds,\n    views: {\n      layout: [1, 2],\n      viewports: [{\n        id: "view_1",\n        layerIds: [huginAxes3DLayer.id, hugin25mKhNetmapMapLayerPng.id, northArrowLayer.id],\n        show3D: true,\n        isSync: true\n      }, {\n        id: "view_2",\n        layerIds: [huginAxes3DLayer.id, volveWellsWithLogsLayer.id, northArrowLayer.id],\n        show3D: true,\n        isSync: true\n      }]\n    }\n  },\n  parameters: {\n    docs: {\n      ...defaultStoryParameters.docs,\n      description: {\n        story: "Example scaling in z direction using arrow up/down buttons."\n      }\n    }\n  },\n  render: args => <ScaleZComponent {...args} />\n}',...ScaleZ.parameters?.docs?.source}}},RotateCameraStory.parameters={...RotateCameraStory.parameters,docs:{...RotateCameraStory.parameters?.docs,source:{originalSource:"{\n  args: {\n    id: \"RotateCameraProperty\",\n    layers: [huginAxes3DLayer, hugin25mKhNetmapMapLayerPng, northArrowLayer],\n    bounds: volveWellsBounds,\n    cameraPosition: ResetCameraPropertyDefaultCameraPosition,\n    views: default3DViews\n  },\n  parameters: {\n    docs: {\n      ...defaultStoryParameters.docs,\n      description: {\n        story: `Pressing the button 'Change Camera' does rotate it.`\n      }\n    }\n  },\n  render: args => <ResetCameraComponent {...args} />\n}",...RotateCameraStory.parameters?.docs?.source}}},AddLayer.parameters={...AddLayer.parameters,docs:{...AddLayer.parameters?.docs,source:{originalSource:'{\n  args: {\n    id: "map",\n    //bounds: volveWellsBounds,  // Keep this line for future testing.\n    cameraPosition: {\n      rotationOrbit: 45,\n      rotationX: 45,\n      zoom: hugin3DBounds,\n      target: undefined\n    },\n    views: default3DViews\n  },\n  parameters: {\n    docs: {\n      ...defaultStoryParameters.docs,\n      description: {\n        story: `Example using button to add a layer.`\n      }\n    }\n  },\n  render: args => <AddLayerComponent {...args} />\n}',...AddLayer.parameters?.docs?.source}}},ScaleY.parameters={...ScaleY.parameters,docs:{...ScaleY.parameters?.docs,source:{originalSource:'{\n  args: {\n    verticalScale: 1.5\n  },\n  argTypes: {\n    verticalScale: {\n      control: {\n        type: "range",\n        min: -1,\n        max: 10,\n        step: 0.1\n      }\n    }\n  },\n  parameters: {\n    docs: {\n      ...defaultStoryParameters.docs,\n      description: {\n        story: "Vertical scaling example in Orthographic view."\n      }\n    }\n  },\n  render: args => <ScaleYComponent {...args} />\n}',...ScaleY.parameters?.docs?.source}}},ScaleYWithCameraPosition.parameters={...ScaleYWithCameraPosition.parameters,docs:{...ScaleYWithCameraPosition.parameters?.docs,source:{originalSource:'{\n  args: {\n    verticalScale: 2.5\n  },\n  argTypes: {\n    verticalScale: {\n      control: {\n        type: "range",\n        min: -1,\n        max: 10,\n        step: 0.1\n      }\n    }\n  },\n  parameters: {\n    docs: {\n      ...defaultStoryParameters.docs,\n      description: {\n        story: "Orthographic vertical scaling with multiple camera definitions."\n      }\n    }\n  },\n  render: args => <ScaleYWithCameraPositionComponent {...args} />\n}',...ScaleYWithCameraPosition.parameters?.docs?.source}}},ScaleVertical3d.parameters={...ScaleVertical3d.parameters,docs:{...ScaleVertical3d.parameters?.docs,source:{originalSource:'{\n  args: {\n    verticalScale: 1.5\n  },\n  argTypes: {\n    verticalScale: {\n      control: {\n        type: "range",\n        min: -1,\n        max: 10,\n        step: 0.1\n      }\n    }\n  },\n  parameters: {\n    docs: {\n      ...defaultStoryParameters.docs,\n      description: {\n        story: "Vertical scaling example in panoramic view."\n      }\n    }\n  },\n  render: args => <ScaleVertical3dComponent {...args} />\n}',...ScaleVertical3d.parameters?.docs?.source}}},ScaleFactorHook.parameters={...ScaleFactorHook.parameters,docs:{...ScaleFactorHook.parameters?.docs,source:{originalSource:'{\n  args: {\n    verticalScale: 1\n  },\n  argTypes: {\n    verticalScale: {\n      control: {\n        type: "range",\n        min: -1,\n        max: 10,\n        step: 0.1\n      }\n    }\n  },\n  parameters: {\n    docs: {\n      ...defaultStoryParameters.docs,\n      description: {\n        story: "Using a hook to control vertical scaling either via props or keyboard shortcuts."\n      }\n    }\n  },\n  render: args => <ScaleFactorHookComponent {...args} />,\n  play: async () => {\n    const delay = 500;\n    const canvas = document.querySelector("canvas");\n    if (canvas) {\n      await userEvent.click(canvas);\n    }\n    await userEvent.keyboard("[ArrowUp]", {\n      delay\n    });\n    await userEvent.keyboard("[ArrowDown]", {\n      delay\n    });\n    await userEvent.keyboard("[ArrowUp]", {\n      delay\n    });\n  }\n}',...ScaleFactorHook.parameters?.docs?.source}}}},"./packages/subsurface-viewer/src/storybook/sharedSettings.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{C9:function(){return hugin25mDepthMapLayer},Cp:function(){return hugin3DBounds},D8:function(){return hugin2DBounds},FS:function(){return volveWellsResources},HU:function(){return hugin25mKhNetmapMapLayer},Hf:function(){return default3DViews},Ly:function(){return classes},OU:function(){return customLayerWithTextData},Or:function(){return EditedDataTemplate},RT:function(){return colormapLayer},Uz:function(){return volveWellsWithLogsLayer},XC:function(){return customLayerWithPolylineData},bL:function(){return Root},c8:function(){return volveWellsFromResourcesLayer},d6:function(){return hugin5mKhNetmapMapLayer},dr:function(){return defaultStoryParameters},eD:function(){return default2DViews},j1:function(){return mainStyle},kn:function(){return redAxes2DLayer},lC:function(){return hillshadingLayer},oS:function(){return subsufaceProps},rz:function(){return volveWellsLayer},un:function(){return northArrowLayer},vq:function(){return huginAxes3DLayer},wi:function(){return hugin25mKhNetmapMapLayerPng},xR:function(){return customLayerWithPolygonData},z6:function(){return customLayerWithPolygonDataProps},zJ:function(){return volveWellsBounds}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/subsurface-viewer/src/SubsurfaceViewer.tsx"),_example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../example-data/deckgl-map.json");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const defaultStoryParameters={docs:{inlineStories:!1,iframeHeight:500}},classes={main:"default-main"},mainStyle={[`& .${classes.main}`]:{width:750,height:500,top:"50%",left:"50%",transform:"translate(-50%, -50%)",border:"1px solid black",background:"azure",position:"absolute"}},Root=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_3__.Ay)("div")(mainStyle),subsufaceProps=_example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0],colormapLayer={..._example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0].layers[0],id:"colormap-layer"},hillshadingLayer={..._example_data_deckgl_map_json__WEBPACK_IMPORTED_MODULE_2__[0].layers[1],id:"hillshading-layer"},redAxes2DLayer={"@@type":"Axes2DLayer",id:"axes-layer",marginH:80,marginV:30,isLeftRuler:!0,isRightRuler:!1,isBottomRuler:!0,isTopRuler:!1,backgroundColor:[155,0,0,255]},hugin2DOrigin=[432150,6475800],hugin2DBounds=[432150,6475800,439400,6481500],hugin3DBounds=[432150,6475800,-2e3,439400,6481500,-3500],huginAxes3DLayer={"@@type":"AxesLayer",id:"axes-layer2",bounds:[432150,6475800,2e3,439400,6481500,3500]},northArrowLayer={"@@type":"NorthArrow3DLayer",id:"north-arrow-layer"},volveWellsResources={resources:{wellsData:"./volve_wells.json"}},volveWellsFromResourcesLayer={"@@type":"WellsLayer",id:"volve-wells",data:"@@#resources.wellsData",ZIncreasingDownwards:!1},volveWellsLayer={"@@type":"WellsLayer",id:"volve-wells",data:"./volve_wells.json",ZIncreasingDownwards:!1},volveWellsBounds=[432150,6475800,439400,6481500],volveWellsWithLogsLayer={"@@type":"WellsLayer",id:"volve-wells-with-logs",data:"./volve_wells.json",logData:"./volve_logs.json",logrunName:"BLOCKING",logName:"ZONELOG",logColor:"Stratigraphy",ZIncreasingDownwards:!1},hugin25mDepthMapLayer={"@@type":"MapLayer",id:"hugin_depth",meshData:"hugin_depth_25_m.float32",frame:{origin:hugin2DOrigin,count:[291,229],increment:[25,25],rotDeg:0},propertiesData:"hugin_depth_25_m.float32",contours:[0,100],isContoursDepth:!0,gridLines:!1,smoothShading:!0,material:!0},hugin25mKhNetmapMapLayer={...hugin25mDepthMapLayer,id:"hugin_kh_netmap",propertiesData:"kh_netmap_25_m.float32",colorMapName:"Physics"},hugin25mKhNetmapMapLayerPng={...hugin25mDepthMapLayer,meshData:"hugin_depth_25_m.png",propertiesData:"kh_netmap_25_m.png",colorMapName:"Physics"},hugin5mKhNetmapMapLayer={"@@type":"MapLayer",id:"mesh-layer",meshUrl:"hugin_depth_5_m.float32",frame:{origin:hugin2DOrigin,count:[1451,1141],increment:[5,5],rotDeg:0},propertiesUrl:"kh_netmap_5_m.float32",contours:[0,100],colorMapName:"Physics"},default2DViews={layout:[1,1],viewports:[{id:"view_1",show3D:!1}]},default3DViews={layout:[1,1],viewports:[{id:"view_1",show3D:!0}]},customLayerWithPolylineData={"@@type":"GeoJsonLayer",id:"geojson-line-layer",name:"Line",data:{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:{type:"LineString",coordinates:[[434e3,6477500],[435500,6477500]]}}]},getLineWidth:20,lineWidthMinPixels:2},customLayerWithPolygonDataProps={id:"geojson-layer",data:{type:"Feature",properties:{},geometry:{type:"Polygon",coordinates:[[[434562,6477595],[434562,6478595],[435062,6478595],[435062,6477595],[434562,6477595]]]}},getLineWidth:1,lineWidthMinPixels:1,lineWidthMaxPixels:1,getLineColor:[0,0,0],getFillColor:[255,255,0],opacity:1},customLayerWithPolygonData={...customLayerWithPolygonDataProps,"@@type":"GeoJsonLayer"},customLayerWithTextData={"@@type":"TextLayer",id:"text-layer",name:"Text",data:[{name:"Custom GeoJson layer",coordinates:[434800,6478695]}],pickable:!0,getPosition:d=>d.coordinates,getText:d=>d.name,getColor:[255,0,0],getSize:16,getAngle:0,getTextAnchor:"middle",getAlignmentBaseline:"center"},EditedDataTemplate=args=>{const[editedData,setEditedData]=react__WEBPACK_IMPORTED_MODULE_0__.useState(args.editedData);return react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{setEditedData(args.editedData)}),[args.editedData]),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.A,_extends({},args,{editedData:editedData,setProps:updatedProps=>{setEditedData(updatedProps.editedData)}}))};EditedDataTemplate.__docgenInfo={description:"",methods:[],displayName:"EditedDataTemplate",props:{layers:{required:!1,tsType:{name:"Array",elements:[{name:"union",raw:"| Record<string, unknown>\n| Layer\n| false\n| null\n| undefined",elements:[{name:"Record",elements:[{name:"string"},{name:"unknown"}],raw:"Record<string, unknown>"},{name:"Layer"},{name:"literal",value:"false"},{name:"null"},{name:"undefined"}]}],raw:"TLayerDefinition[]"},description:"Array of externally created layers or layer definition records or JSON strings.\nAdd '@@typedArraySupport' : true in a layer definition in order to\nuse typed arrays as inputs."},setProps:{required:!1,tsType:{name:"signature",type:"function",raw:"(data: Record<string, unknown>) => void",signature:{arguments:[{type:{name:"Record",elements:[{name:"string"},{name:"unknown"}],raw:"Record<string, unknown>"},name:"data"}],return:{name:"void"}}},description:"@deprecated Used by layers to propagate state to component, eg. selected\nwells from the Wells layer. Use client code to handle layer state\ninstead."}},composes:["Omit"]}},"../example-data/deckgl-map.json":function(module){module.exports=JSON.parse('[{"id":"DeckGL-Map","coords":{"visible":true,"multiPicking":true,"pickDepth":10},"scale":{"visible":true,"incrementValue":100,"widthPerUnit":100,"cssStyle":{"left":10,"top":10}},"coordinateUnit":"m","resources":{"propertyMap":"propertyMap.png","depthMap":"propertyMap.png","wellsData":"volve_wells.json","logData":"volve_logs.json"},"bounds":[432205,6475078,437720,6481113],"layers":[{"@@type":"ColormapLayer","image":"@@#resources.propertyMap","rotDeg":0,"bounds":[432205,6475078,437720,6481113],"colorMapName":"Rainbow","valueRange":[2782,3513],"colorMapRange":[2782,3513]},{"@@type":"Hillshading2DLayer","bounds":[432205,6475078,437720,6481113],"valueRange":[2782,3513],"rotDeg":0,"image":"@@#resources.depthMap"},{"@@type":"WellsLayer","data":"@@#resources.wellsData","logData":"@@#resources.logData","logrunName":"BLOCKING","logName":"ZONELOG","logColor":"Stratigraphy"},{"@@type":"FaultPolygonsLayer","data":"fault_polygons.geojson"},{"@@type":"PieChartLayer","data":"piechart.json"},{"@@type":"NorthArrow3DLayer","visible":true},{"@@type":"DrawingLayer"}],"editedData":{},"views":{"layout":[1,1],"showLabel":false,"viewports":[{"id":"view_1","show3D":false,"layerIds":[]}]}}]')}}]);