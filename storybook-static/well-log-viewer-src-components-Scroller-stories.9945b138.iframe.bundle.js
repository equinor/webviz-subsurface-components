/*! For license information please see well-log-viewer-src-components-Scroller-stories.9945b138.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[3384],{"./packages/well-log-viewer/src/components/Scroller.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:function(){return Default},__namedExportsOrder:function(){return __namedExportsOrder}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_Scroller__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/well-log-viewer/src/components/Scroller.tsx");const stories={component:_Scroller__WEBPACK_IMPORTED_MODULE_1__.A,title:"WellLogViewer/Components/Scroller",parameters:{docs:{description:{component:"Auxiliary component to create scrolbars."}},componentSource:{code:'const infoRef = React.useRef(); \r\nconst setInfo = function (info) { \r\n    if (infoRef.current) infoRef.current.innerHTML = info; \r\n}; \r\nreturn ( \r\n    <div style={{ height: "92vh" }}> \r\n        <Scroller \r\n            ref={(el) => { \r\n                el?.zoom(10, 10); \r\n                el?.scrollTo(0.2, 0.2); \r\n            }} \r\n            onScroll={(x, y) => { \r\n                setInfo( \r\n                    "Scroll position X=" + \r\n                        x.toFixed(2) + \r\n                        ", Y=" + \r\n                        y.toFixed(2) \r\n                ); \r\n            }} \r\n        > \r\n            <div ref={infoRef}></div> \r\n        </Scroller> \r\n    </div> \r\n); \r\n',language:"javascript"}},argTypes:{onScroll:{description:"Callback with new scroll positions"}}};__webpack_exports__.default=stories;const Template=args=>{const infoRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{height:"92vh"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Scroller__WEBPACK_IMPORTED_MODULE_1__.A,{ref:el=>{el&&(el.zoom(10,10),el.scrollTo(.2,.2))},onScroll:(x,y)=>{var info;info="Scroll position X="+x.toFixed(2)+", Y="+y.toFixed(2),infoRef.current&&(infoRef.current.innerHTML=info),args.onScroll?.(x,y)}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{ref:infoRef})))},Default={args:{},render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(Template,args)},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {},\n  render: args => <Template {...args} />\n}",...Default.parameters?.docs?.source}}}},"./packages/well-log-viewer/src/components/Scroller.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");class Scroller extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.scroller=null,this.scrollable=null,this.content=null,this.resizeObserver=new ResizeObserver((entries=>{const entry=entries[0];if(entry&&entry.target){const Width=entry.target.offsetWidth,Height=entry.target.offsetHeight;if(this.content){const{vertical:vertical,horizontal:horizontal}=function getScrollbarSizes(){const outer=document.createElement("div");outer.style.visibility="hidden",outer.style.overflow="scroll",document.body.appendChild(outer);const vertical=outer.offsetWidth-outer.clientWidth,horizontal=outer.offsetHeight-outer.clientHeight;return document.body.removeChild(outer),{vertical:vertical,horizontal:horizontal}}();this.content.style.width=Width-vertical+"px",this.content.style.height=Height-horizontal+"px"}}})),this.onScroll=this.onScroll.bind(this)}componentDidMount(){this.scroller&&this.resizeObserver.observe(this.scroller)}componentWillUnmount(){this.scroller&&this.resizeObserver.unobserve(this.scroller)}getScrollX(){const elOuter=this.scroller;if(!elOuter)return 0;const scrollWidth=elOuter.scrollWidth-elOuter.clientWidth;return scrollWidth?elOuter.scrollLeft/scrollWidth:0}getScrollY(){const elOuter=this.scroller;if(!elOuter)return 0;const scrollHeight=elOuter.scrollHeight-elOuter.clientHeight;return scrollHeight?elOuter.scrollTop/scrollHeight:0}getScrollPos(vertical){return vertical?this.getScrollY():this.getScrollX()}onScroll(){this.scroller&&this.props.onScroll?.(this.getScrollX(),this.getScrollY())}scrollTo(x,y){x<0?x=0:x>1&&(x=1),y<0?y=0:y>1&&(y=1);const elOuter=this.scroller;if(!elOuter)return!1;const scrollLeft=Math.round(x*(elOuter.scrollWidth-elOuter.clientWidth)),scrollTop=Math.round(y*(elOuter.scrollHeight-elOuter.clientHeight));return(elOuter.scrollLeft!==scrollLeft||elOuter.scrollTop!==scrollTop)&&(elOuter.scrollTo(scrollLeft,scrollTop),!0)}zoom(xZoom,yZoom){const elOuter=this.scroller;if(!elOuter)return!1;const elInner=this.scrollable;if(!elInner)return!1;const widthInner=Math.round(elOuter.clientWidth*xZoom)+"px",heightInner=Math.round(elOuter.clientHeight*yZoom)+"px";return(elInner.style.width!==widthInner||elInner.style.height!==heightInner)&&(elInner.style.width=widthInner,elInner.style.height=heightInner,!0)}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{ref:el=>this.scroller=el,style:{overflow:"scroll",width:"100%",height:"100%"},onScroll:this.onScroll},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{ref:el=>this.scrollable=el},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{ref:el=>this.content=el,style:{position:"absolute"}},this.props.children)))}}__webpack_exports__.A=Scroller,Scroller.__docgenInfo={description:"",methods:[{name:"getScrollX",docblock:null,modifiers:[],params:[],returns:{type:{name:"number"}}},{name:"getScrollY",docblock:null,modifiers:[],params:[],returns:{type:{name:"number"}}},{name:"getScrollPos",docblock:null,modifiers:[],params:[{name:"vertical",optional:!1,type:{name:"union",raw:"boolean | undefined",elements:[{name:"boolean"},{name:"undefined"}]}}],returns:{type:{name:"number"}}},{name:"onScroll",docblock:"callback from HTML element",modifiers:[],params:[],returns:{type:{name:"void"}},description:"callback from HTML element"},{name:"scrollTo",docblock:"@param x value to set the horizontal beginning of visible part of content (fraction)\n@param y value to set the vertical beginning of visible part of content (fraction)\n@returns true if visible part is changed",modifiers:[],params:[{name:"x",description:"value to set the horizontal beginning of visible part of content (fraction)",optional:!1,type:{name:"number"}},{name:"y",description:"value to set the vertical beginning of visible part of content (fraction)",optional:!1,type:{name:"number"}}],returns:{description:"true if visible part is changed",type:{name:"boolean"}},description:null},{name:"zoom",docblock:"@param xZoom set X zoom factor of visible part of content\n@param yZoom set Y zoom factor of visible part of content\n@returns true if visible part is changed",modifiers:[],params:[{name:"xZoom",description:"set X zoom factor of visible part of content",optional:!1,type:{name:"number"}},{name:"yZoom",description:"set Y zoom factor of visible part of content",optional:!1,type:{name:"number"}}],returns:{description:"true if visible part is changed",type:{name:"boolean"}},description:null}],displayName:"Scroller",props:{onScroll:{required:!1,tsType:{name:"signature",type:"function",raw:"(x: number, y: number) => void",signature:{arguments:[{type:{name:"number"},name:"x"},{type:{name:"number"},name:"y"}],return:{name:"void"}}},description:"callback with new scroll positions"},children:{required:!1,tsType:{name:"ReactNode"},description:""}}}}}]);