"use strict";(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[8028],{"./packages/subsurface-viewer/src/layers/axes2d/axes2DLayer.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Base:function(){return Base},ColoredTextAndBackGround:function(){return ColoredTextAndBackGround},Matrix:function(){return Matrix},__namedExportsOrder:function(){return __namedExportsOrder}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/subsurface-viewer/src/SubsurfaceViewer.tsx"),_deck_gl_core_typed__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@deck.gl/core/dist/esm/views/view.js");__webpack_exports__.default={parameters:{storySource:{source:'import React from "react";\nimport SubsurfaceViewer from "../../SubsurfaceViewer";\nimport { View } from "@deck.gl/core/typed";\nexport default {\n  component: SubsurfaceViewer,\n  title: "SubsurfaceViewer / Axes2D"\n};\nconst layerProps = {\n  marginH: 80,\n  // Horizontal margin (in pixels)\n  marginV: 30,\n  // Vertical margin (in pixels)\n  isLeftRuler: true,\n  isRightRuler: false,\n  isBottomRuler: true,\n  isTopRuler: false,\n  backgroundColor: [155, 155, 155, 255]\n};\nconst meshMapLayerPng = {\n  "@@type": "MapLayer",\n  id: "mesh-layer",\n  meshUrl: "hugin_depth_25_m.png",\n  frame: {\n    origin: [432150, 6475800],\n    count: [291, 229],\n    increment: [25, 25],\n    rotDeg: 0\n  },\n  propertiesUrl: "kh_netmap_25_m.png",\n  contours: [0, 100],\n  isContoursDepth: true,\n  gridLines: false,\n  material: true,\n  smoothShading: true,\n  colorMapName: "Physics"\n};\nconst axes2D = {\n  "@@type": "Axes2DLayer",\n  id: "axes-layer2D",\n  ...layerProps\n};\nexport const Base = args => {\n  return /*#__PURE__*/React.createElement(SubsurfaceViewer, args);\n};\nBase.args = {\n  id: "map",\n  layers: [meshMapLayerPng, axes2D],\n  bounds: [432150, 6475800, 439400, 6481500],\n  views: {\n    layout: [1, 1],\n    viewports: [{\n      id: "view_1",\n      show3D: false\n    }]\n  }\n};\nexport const ColoredTextAndBackGround = args => {\n  return /*#__PURE__*/React.createElement(SubsurfaceViewer, args);\n};\nColoredTextAndBackGround.args = {\n  id: "map",\n  layers: [meshMapLayerPng,\n  // Yellow background, blue text.\n  {\n    ...axes2D,\n    axisColor: [100, 100, 255],\n    backgroundColor: [255, 255, 100]\n  }],\n  bounds: [432150, 6475800, 439400, 6481500],\n  views: {\n    layout: [1, 1],\n    viewports: [{\n      id: "view_1",\n      show3D: false\n    }]\n  }\n};\n\n//===========================================================\nconst MatrixStory = () => {\n  const views = {\n    layout: [2, 2],\n    marginPixels: 10,\n    viewports: [{\n      id: "view_1",\n      show3D: false,\n      layerIds: ["mesh-layer", "axes-layer2D"],\n      isSync: false\n    }, {\n      id: "view_2",\n      show3D: false,\n      layerIds: ["mesh-layer", "axes-layer2D"],\n      isSync: false\n    }, {\n      id: "view_3",\n      show3D: false,\n      layerIds: ["mesh-layer", "axes-layer2D"],\n      isSync: false\n    }, {\n      id: "view_4",\n      show3D: false,\n      layerIds: ["mesh-layer", "axes-layer2D"],\n      isSync: false\n    }]\n  };\n  const bounds = [432150, 6475800, 439400, 6481501];\n  return /*#__PURE__*/React.createElement(SubsurfaceViewer, {\n    id: "test",\n    layers: [meshMapLayerPng, axes2D],\n    views: views,\n    bounds: bounds\n  }, /*#__PURE__*/React.createElement(View, {\n    id: "view_1"\n  }), /*#__PURE__*/React.createElement(View, {\n    id: "view_2"\n  }), /*#__PURE__*/React.createElement(View, {\n    id: "view_3"\n  }), /*#__PURE__*/React.createElement(View, {\n    id: "view_4"\n  }));\n};\nexport const Matrix = () => {\n  return /*#__PURE__*/React.createElement(MatrixStory, null);\n};\nBase.parameters = {\n  ...Base.parameters,\n  docs: {\n    ...Base.parameters?.docs,\n    source: {\n      originalSource: "args => {\\n  return <SubsurfaceViewer {...args} />;\\n}",\n      ...Base.parameters?.docs?.source\n    }\n  }\n};\nColoredTextAndBackGround.parameters = {\n  ...ColoredTextAndBackGround.parameters,\n  docs: {\n    ...ColoredTextAndBackGround.parameters?.docs,\n    source: {\n      originalSource: "args => {\\n  return <SubsurfaceViewer {...args} />;\\n}",\n      ...ColoredTextAndBackGround.parameters?.docs?.source\n    }\n  }\n};\nMatrix.parameters = {\n  ...Matrix.parameters,\n  docs: {\n    ...Matrix.parameters?.docs,\n    source: {\n      originalSource: "() => {\\n  return <MatrixStory />;\\n}",\n      ...Matrix.parameters?.docs?.source\n    }\n  }\n};',locationsMap:{base:{startLoc:{col:20,line:42},endLoc:{col:1,line:44},startBody:{col:20,line:42},endBody:{col:1,line:44}},"colored-text-and-back-ground":{startLoc:{col:40,line:57},endLoc:{col:1,line:59},startBody:{col:40,line:57},endBody:{col:1,line:59}},matrix:{startLoc:{col:22,line:122},endLoc:{col:1,line:124},startBody:{col:22,line:122},endBody:{col:1,line:124}}}}},component:_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,title:"SubsurfaceViewer / Axes2D"};const meshMapLayerPng={"@@type":"MapLayer",id:"mesh-layer",meshUrl:"hugin_depth_25_m.png",frame:{origin:[432150,6475800],count:[291,229],increment:[25,25],rotDeg:0},propertiesUrl:"kh_netmap_25_m.png",contours:[0,100],isContoursDepth:!0,gridLines:!1,material:!0,smoothShading:!0,colorMapName:"Physics"},axes2D={"@@type":"Axes2DLayer",id:"axes-layer2D",marginH:80,marginV:30,isLeftRuler:!0,isRightRuler:!1,isBottomRuler:!0,isTopRuler:!1,backgroundColor:[155,155,155,255]},Base=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,args);Base.args={id:"map",layers:[meshMapLayerPng,axes2D],bounds:[432150,6475800,439400,6481500],views:{layout:[1,1],viewports:[{id:"view_1",show3D:!1}]}};const ColoredTextAndBackGround=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,args);ColoredTextAndBackGround.args={id:"map",layers:[meshMapLayerPng,{...axes2D,axisColor:[100,100,255],backgroundColor:[255,255,100]}],bounds:[432150,6475800,439400,6481500],views:{layout:[1,1],viewports:[{id:"view_1",show3D:!1}]}};const MatrixStory=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SubsurfaceViewer__WEBPACK_IMPORTED_MODULE_1__.Z,{id:"test",layers:[meshMapLayerPng,axes2D],views:{layout:[2,2],marginPixels:10,viewports:[{id:"view_1",show3D:!1,layerIds:["mesh-layer","axes-layer2D"],isSync:!1},{id:"view_2",show3D:!1,layerIds:["mesh-layer","axes-layer2D"],isSync:!1},{id:"view_3",show3D:!1,layerIds:["mesh-layer","axes-layer2D"],isSync:!1},{id:"view_4",show3D:!1,layerIds:["mesh-layer","axes-layer2D"],isSync:!1}]},bounds:[432150,6475800,439400,6481501]},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_deck_gl_core_typed__WEBPACK_IMPORTED_MODULE_2__.Z,{id:"view_1"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_deck_gl_core_typed__WEBPACK_IMPORTED_MODULE_2__.Z,{id:"view_2"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_deck_gl_core_typed__WEBPACK_IMPORTED_MODULE_2__.Z,{id:"view_3"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_deck_gl_core_typed__WEBPACK_IMPORTED_MODULE_2__.Z,{id:"view_4"})),Matrix=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(MatrixStory,null);Base.parameters={...Base.parameters,docs:{...Base.parameters?.docs,source:{originalSource:"args => {\n  return <SubsurfaceViewer {...args} />;\n}",...Base.parameters?.docs?.source}}},ColoredTextAndBackGround.parameters={...ColoredTextAndBackGround.parameters,docs:{...ColoredTextAndBackGround.parameters?.docs,source:{originalSource:"args => {\n  return <SubsurfaceViewer {...args} />;\n}",...ColoredTextAndBackGround.parameters?.docs?.source}}},Matrix.parameters={...Matrix.parameters,docs:{...Matrix.parameters?.docs,source:{originalSource:"() => {\n  return <MatrixStory />;\n}",...Matrix.parameters?.docs?.source}}};const __namedExportsOrder=["Base","ColoredTextAndBackGround","Matrix"]}}]);