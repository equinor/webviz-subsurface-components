/*! For license information please see well-log-viewer-src-components-WellLogViewWithScroller-stories.10b2a0f2.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_webviz_subsurface_components=self.webpackChunk_webviz_subsurface_components||[]).push([[3429],{"./packages/well-log-viewer/src/components/WellLogViewWithScroller.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:function(){return Default},__namedExportsOrder:function(){return __namedExportsOrder}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_WellLogViewWithScroller__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/well-log-viewer/src/components/WellLogViewWithScroller.tsx"),_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@emerson-eps/color-tables/dist/index.js"),_utils_axes__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/well-log-viewer/src/utils/axes.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}__webpack_exports__.default={component:_WellLogViewWithScroller__WEBPACK_IMPORTED_MODULE_1__.Z,title:"WellLogViewer/Components/WellLogViewWithScroller",parameters:{storySource:{source:'function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from "react";\nimport WellLogViewWithScroller from "./WellLogViewWithScroller";\nimport { argTypesWellLogViewScrollerProp } from "./WellLogViewWithScroller";\nimport { colorTables } from "@emerson-eps/color-tables";\nconst ComponentCode = \'<WellLogViewWithScroller id="WellLogViewWithScroller" \\r\\n\' + "    horizontal=false \\r\\n" + \'    welllog={require("../../../../../example-data/L898MUD.json")[0]} \\r\\n\' + \'    template={require("../../../../../example-data/welllog_template_1.json")} \\r\\n\' + "    colorTables={colorTables} \\r\\n" + "/>";\nimport { axisTitles, axisMnemos } from "../utils/axes";\nexport default {\n  component: WellLogViewWithScroller,\n  title: "WellLogViewer/Components/WellLogViewWithScroller",\n  parameters: {\n    docs: {\n      description: {\n        component: "The component add scrollbars to WellLogView component to make tracks and plots scrollable by scrollbars."\n      }\n    },\n    componentSource: {\n      code: ComponentCode,\n      language: "javascript"\n    }\n  },\n  argTypes: {\n    ...argTypesWellLogViewScrollerProp,\n    id: {\n      description: "The ID of this component, used to identify dash components in callbacks. The ID needs to be unique across all of the components in an app."\n    }\n  }\n};\nconst Template = args => {\n  return /*#__PURE__*/React.createElement("div", {\n    style: {\n      height: "92vh",\n      display: "flex",\n      flexDirection: "column"\n    }\n  }, /*#__PURE__*/React.createElement("div", {\n    style: {\n      width: "100%",\n      height: "100%"\n    }\n  }, /*#__PURE__*/React.createElement(WellLogViewWithScroller, _extends({\n    id: "WellLogViewWithScroller"\n  }, args))));\n};\nconst wellLog = require("../../../../../example-data/L898MUD.json")[0];\nexport const Default = Template.bind({});\nDefault.args = {\n  id: "Well-Log-Viewer-With-Scroller",\n  horizontal: false,\n  welllog: wellLog,\n  template: require("../../../../../example-data/welllog_template_1.json"),\n  viewTitle: "Well \'" + wellLog.header.well + "\'",\n  colorTables: colorTables,\n  axisTitles: axisTitles,\n  axisMnemos: axisMnemos,\n  options: {\n    checkDatafileSchema: true\n  }\n};\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: "args => {\\n  return <div style={{\\n    height: \\"92vh\\",\\n    display: \\"flex\\",\\n    flexDirection: \\"column\\"\\n  }}>\\n            <div style={{\\n      width: \\"100%\\",\\n      height: \\"100%\\"\\n    }}>\\n                <WellLogViewWithScroller id=\\"WellLogViewWithScroller\\" {...args} />\\n            </div>\\n        </div>;\\n}",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};',locationsMap:{default:{startLoc:{col:17,line:29},endLoc:{col:1,line:44},startBody:{col:17,line:29},endBody:{col:1,line:44}}}},docs:{description:{component:"The component add scrollbars to WellLogView component to make tracks and plots scrollable by scrollbars."}},componentSource:{code:'<WellLogViewWithScroller id="WellLogViewWithScroller" \r\n    horizontal=false \r\n    welllog={require("../../../../../example-data/L898MUD.json")[0]} \r\n    template={require("../../../../../example-data/welllog_template_1.json")} \r\n    colorTables={colorTables} \r\n/>',language:"javascript"}},argTypes:{..._WellLogViewWithScroller__WEBPACK_IMPORTED_MODULE_1__.j,id:{description:"The ID of this component, used to identify dash components in callbacks. The ID needs to be unique across all of the components in an app."}}};const wellLog=__webpack_require__("../example-data/L898MUD.json")[0],Default=(args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{height:"92vh",display:"flex",flexDirection:"column"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"100%",height:"100%"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_WellLogViewWithScroller__WEBPACK_IMPORTED_MODULE_1__.Z,_extends({id:"WellLogViewWithScroller"},args))))).bind({});Default.args={id:"Well-Log-Viewer-With-Scroller",horizontal:!1,welllog:wellLog,template:__webpack_require__("../example-data/welllog_template_1.json"),viewTitle:"Well '"+wellLog.header.well+"'",colorTables:_emerson_eps_color_tables__WEBPACK_IMPORTED_MODULE_2__.Su,axisTitles:_utils_axes__WEBPACK_IMPORTED_MODULE_3__.b,axisMnemos:_utils_axes__WEBPACK_IMPORTED_MODULE_3__.H,options:{checkDatafileSchema:!0}},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => {\n  return <div style={{\n    height: "92vh",\n    display: "flex",\n    flexDirection: "column"\n  }}>\n            <div style={{\n      width: "100%",\n      height: "100%"\n    }}>\n                <WellLogViewWithScroller id="WellLogViewWithScroller" {...args} />\n            </div>\n        </div>;\n}',...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"];try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/well-log-viewer/src/components/WellLogViewWithScroller.stories.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"packages/well-log-viewer/src/components/WellLogViewWithScroller.stories.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}},"./packages/well-log-viewer/src/components/Scroller.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");class Scroller extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.scroller=null,this.scrollable=null,this.content=null,this.resizeObserver=new ResizeObserver((entries=>{const entry=entries[0];if(entry&&entry.target){const Width=entry.target.offsetWidth,Height=entry.target.offsetHeight;if(this.content){const{vertical:vertical,horizontal:horizontal}=function getScrollbarSizes(){const outer=document.createElement("div");outer.style.visibility="hidden",outer.style.overflow="scroll",document.body.appendChild(outer);const vertical=outer.offsetWidth-outer.clientWidth,horizontal=outer.offsetHeight-outer.clientHeight;return document.body.removeChild(outer),{vertical:vertical,horizontal:horizontal}}();this.content.style.width=Width-vertical+"px",this.content.style.height=Height-horizontal+"px"}}})),this.onScroll=this.onScroll.bind(this)}componentDidMount(){this.scroller&&this.resizeObserver.observe(this.scroller)}componentWillUnmount(){this.scroller&&this.resizeObserver.unobserve(this.scroller)}getScrollX(){const elOuter=this.scroller;if(!elOuter)return 0;const scrollWidth=elOuter.scrollWidth-elOuter.clientWidth;return scrollWidth?elOuter.scrollLeft/scrollWidth:0}getScrollY(){const elOuter=this.scroller;if(!elOuter)return 0;const scrollHeight=elOuter.scrollHeight-elOuter.clientHeight;return scrollHeight?elOuter.scrollTop/scrollHeight:0}getScrollPos(vertical){return vertical?this.getScrollY():this.getScrollX()}onScroll(){this.scroller&&this.props.onScroll&&this.props.onScroll(this.getScrollX(),this.getScrollY())}scrollTo(x,y){x<0?x=0:x>1&&(x=1),y<0?y=0:y>1&&(y=1);const elOuter=this.scroller;if(!elOuter)return!1;const scrollLeft=Math.round(x*(elOuter.scrollWidth-elOuter.clientWidth)),scrollTop=Math.round(y*(elOuter.scrollHeight-elOuter.clientHeight));return(elOuter.scrollLeft!==scrollLeft||elOuter.scrollTop!==scrollTop)&&(elOuter.scrollTo(scrollLeft,scrollTop),!0)}zoom(xZoom,yZoom){const elOuter=this.scroller;if(!elOuter)return!1;const elInner=this.scrollable;if(!elInner)return!1;const widthInner=Math.round(elOuter.clientWidth*xZoom)+"px",heightInner=Math.round(elOuter.clientHeight*yZoom)+"px";return(elInner.style.width!==widthInner||elInner.style.height!==heightInner)&&(elInner.style.width=widthInner,elInner.style.height=heightInner,!0)}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{ref:el=>this.scroller=el,style:{overflow:"scroll",width:"100%",height:"100%"},onScroll:this.onScroll},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{ref:el=>this.scrollable=el},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{ref:el=>this.content=el,style:{position:"absolute"}},this.props.children)))}}Scroller.displayName="Scroller",__webpack_exports__.Z=Scroller;try{Scroller.displayName="Scroller",Scroller.__docgenInfo={description:"",displayName:"Scroller",props:{onScroll:{defaultValue:null,description:"callback with new scroll positions",name:"onScroll",required:!1,type:{name:"((x: number, y: number) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/well-log-viewer/src/components/Scroller.tsx#Scroller"]={docgenInfo:Scroller.__docgenInfo,name:"Scroller",path:"packages/well-log-viewer/src/components/Scroller.tsx#Scroller"})}catch(__react_docgen_typescript_loader_error){}},"./packages/well-log-viewer/src/components/WellLogViewWithScroller.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{j:function(){return argTypesWellLogViewScrollerProp}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_WellLogView__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/well-log-viewer/src/components/WellLogView.tsx"),_Scroller__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/well-log-viewer/src/components/Scroller.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const argTypesWellLogViewScrollerProp=_WellLogView__WEBPACK_IMPORTED_MODULE_1__.WH;class WellLogViewWithScroller extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props),this.controller=null,this.scroller=null,this.onCreateController=this.onCreateController.bind(this),this.onScrollerScroll=this.onScrollerScroll.bind(this),this.onTrackScroll=this.onTrackScroll.bind(this),this.onTrackSelection=this.onTrackSelection.bind(this),this.onContentRescale=this.onContentRescale.bind(this),this.onContentSelection=this.onContentSelection.bind(this)}componentDidMount(){this.setScrollerPosAndZoom()}shouldComponentUpdate(nextProps){return!Object.is(this.props,nextProps)}updateReadoutPanel(){const controller=this.controller;controller&&controller.selectContent(controller.getContentSelection())}onCreateController(controller){this.controller=controller,this.props.onCreateController&&this.props.onCreateController(controller)}onTrackScroll(){this.setScrollerPosAndZoom(),this.props.onTrackScroll&&this.props.onTrackScroll()}onTrackSelection(){this.props.onTrackSelection&&this.props.onTrackSelection()}onContentRescale(){this.setScrollerPosAndZoom(),this.props.onContentRescale&&this.props.onContentRescale()}onContentSelection(){this.props.onContentSelection&&this.props.onContentSelection()}onScrollerScroll(x,y){const controller=this.controller;if(!controller)return;const fContent=this.props.horizontal?x:y;controller.scrollContentTo(fContent);const posTrack=this.calcPosTrack(this.props.horizontal?y:x);controller.scrollTrackTo(posTrack)}calcPosTrack(f){const controller=this.controller;if(!controller)return 0;const posTrack=f*controller.getTrackScrollPosMax();return Math.round(posTrack)}getContentPosFraction(){const controller=this.controller;if(!controller)return 0;const baseDomain=controller.getContentBaseDomain(),domain=controller.getContentDomain(),w=baseDomain[1]-baseDomain[0]-(domain[1]-domain[0]);return w?(domain[0]-baseDomain[0])/w:0}getTrackPosFraction(){const controller=this.controller;return controller&&controller.getTrackScrollPosMax()?controller.getTrackScrollPos()/controller.getTrackScrollPosMax():0}setScrollerPosAndZoom(){let x,y,xZoom,yZoom;const scroller=this.scroller;if(!scroller)return;const controller=this.controller;if(controller){const contentZoom=controller.getContentZoom(),trackZoom=controller.getTrackZoom();xZoom=this.props.horizontal?contentZoom:trackZoom,yZoom=this.props.horizontal?trackZoom:contentZoom;const fContent=this.getContentPosFraction(),fTrack=this.getTrackPosFraction();x=this.props.horizontal?fContent:fTrack,y=this.props.horizontal?fTrack:fContent}else x=y=0,xZoom=yZoom=1;scroller.zoom(xZoom,yZoom);let shouldUpdateScroller=2;{const _x=scroller.getScrollX(),_y=scroller.getScrollY(),_posTrack=this.calcPosTrack(this.props.horizontal?_y:_x);this.calcPosTrack(this.props.horizontal?y:x)===_posTrack&&(shouldUpdateScroller--,this.props.horizontal?y=_y:x=_x);const _fContent=this.props.horizontal?_x:_y,fContent=this.props.horizontal?x:y;Math.abs(fContent-_fContent)<.001&&(shouldUpdateScroller--,this.props.horizontal?x=_x:y=_y)}shouldUpdateScroller&&scroller.scrollTo(x,y)}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Scroller__WEBPACK_IMPORTED_MODULE_2__.Z,{ref:el=>this.scroller=el,onScroll:this.onScrollerScroll},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_WellLogView__WEBPACK_IMPORTED_MODULE_1__.ZP,_extends({},this.props,{onCreateController:this.onCreateController,onTrackScroll:this.onTrackScroll,onTrackSelection:this.onTrackSelection,onContentRescale:this.onContentRescale,onContentSelection:this.onContentSelection})))}}WellLogViewWithScroller.displayName="WellLogViewWithScroller",WellLogViewWithScroller.propTypes=(0,_WellLogView__WEBPACK_IMPORTED_MODULE_1__.p0)(),__webpack_exports__.Z=WellLogViewWithScroller;try{WellLogViewWithScroller.displayName="WellLogViewWithScroller",WellLogViewWithScroller.__docgenInfo={description:"",displayName:"WellLogViewWithScroller",props:{welllog:{defaultValue:null,description:"Object from JSON file describing single well log data.",name:"welllog",required:!0,type:{name:"WellLog | undefined"}},template:{defaultValue:null,description:"Prop containing track template data.",name:"template",required:!0,type:{name:"Template"}},colorTables:{defaultValue:null,description:"Prop containing color table data for discrete well logs",name:"colorTables",required:!0,type:{name:"ColorTable[]"}},wellpick:{defaultValue:null,description:"Well Picks data",name:"wellpick",required:!1,type:{name:"WellPickProps"}},patternsTable:{defaultValue:null,description:"Patterns table",name:"patternsTable",required:!1,type:{name:"PatternsTable"}},patterns:{defaultValue:null,description:"Horizon to pattern index map",name:"patterns",required:!1,type:{name:"[string, number][]"}},horizontal:{defaultValue:null,description:"Orientation of the track plots on the screen.",name:"horizontal",required:!1,type:{name:"boolean"}},primaryAxis:{defaultValue:null,description:'Primary axis id: "md", "tvd", "time"... Default is the first available from axisMnemos',name:"primaryAxis",required:!1,type:{name:"string"}},axisTitles:{defaultValue:null,description:"Log mnemonics for axes",name:"axisTitles",required:!0,type:{name:"Record<string, string>"}},axisMnemos:{defaultValue:null,description:"Names for axes",name:"axisMnemos",required:!0,type:{name:"Record<string, string[]>"}},viewTitle:{defaultValue:null,description:"The view title. Set desired string or react element or true for default value from welllog file",name:"viewTitle",required:!1,type:{name:"string | boolean | Element"}},domain:{defaultValue:null,description:"Initial visible range",name:"domain",required:!1,type:{name:"[number, number]"}},selection:{defaultValue:null,description:"Initial selected range",name:"selection",required:!1,type:{name:"[number, number] | undefined"}},options:{defaultValue:null,description:"Additional options",name:"options",required:!1,type:{name:"WellLogViewOptions"}},onCreateController:{defaultValue:null,description:"",name:"onCreateController",required:!1,type:{name:"((controller: WellLogController) => void)"}},onInfo:{defaultValue:null,description:"",name:"onInfo",required:!1,type:{name:"((x: number, logController: LogViewer, iFrom: number, iTo: number) => void)"}},onTrackScroll:{defaultValue:null,description:"called when track scrolling is changed",name:"onTrackScroll",required:!1,type:{name:"(() => void)"}},onTrackSelection:{defaultValue:null,description:"called when track selection is changed",name:"onTrackSelection",required:!1,type:{name:"(() => void)"}},onContentRescale:{defaultValue:null,description:"called when content zoom and scrolling are changed",name:"onContentRescale",required:!1,type:{name:"(() => void)"}},onContentSelection:{defaultValue:null,description:"called when content zoom and scrolling are changed",name:"onContentSelection",required:!1,type:{name:"(() => void)"}},onTrackMouseEvent:{defaultValue:null,description:"called when mouse click on a track",name:"onTrackMouseEvent",required:!1,type:{name:"((wellLogView: WellLogView, ev: TrackMouseEvent) => void)"}},onTemplateChanged:{defaultValue:null,description:"called when template is changed",name:"onTemplateChanged",required:!1,type:{name:"(() => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/well-log-viewer/src/components/WellLogViewWithScroller.tsx#WellLogViewWithScroller"]={docgenInfo:WellLogViewWithScroller.__docgenInfo,name:"WellLogViewWithScroller",path:"packages/well-log-viewer/src/components/WellLogViewWithScroller.tsx#WellLogViewWithScroller"})}catch(__react_docgen_typescript_loader_error){}},"../example-data/welllog_template_1.json":function(module){module.exports=JSON.parse('{"name":"Template 1","scale":{"primary":"md","allowSecondary":true},"tracks":[{"title":"Multiple","plots":[{"name":"MDIA"},{"name":"HKLA","style":"HKL"}]},{"title":"Area","scale":"log","plots":[{"name":"HKLA","style":"HKL","type":"area","color":"blue","fill":"rgb(12,24,233)","inverseColor":"#00ff00"}]},{"title":"Differential","plots":[{"name":"HKLX","name2":"HKLA","type":"differential","scale":"linear","color":"blue","color2":"orange","fill":"green","fill2":"red"}]},{"title":"Gradient Fill & inverse","plots":[{"name":"HKLA","type":"gradientfill","color":"blue","colorTable":"Physics","inverseColorTable":"Physics"}]},{"plots":[{"name":"MFOA"}]},{"plots":[{"name":"DD_VOLUME"}]},{"plots":[{"name":"TEMP"}]},{"required":true,"plots":[{"name":"TQA","type":"dot"}]},{"plots":[{"name":"BITSIZE"}]},{"plots":[{"name":"GRSIM"}]},{"plots":[{"name":"RACESHM"}]},{"plots":[{"name":"SW","type":"line"}]},{"plots":[{"name":"MFIA","type":"dot"}]},{"plots":[{"name":"MDOA","style":"MD"}]},{"plots":[{"name":"MDIA","style":"MD"}]},{"plots":[{"name":"MTOA"}]},{"plots":[{"name":"MTIA"}]},{"plots":[{"name":"ECDT"}]},{"plots":[{"name":"BDTI"}]},{"plots":[{"name":"BDDI"}]},{"plots":[{"name":"BRVC"}]},{"plots":[{"name":"TCTI"}]}],"styles":[{"name":"HKL","type":"gradientfill","colorTable":"Physics","color":"green"},{"name":"MD","scale":"linear","type":"area","color":"blue","fill":"green"}]}')}}]);